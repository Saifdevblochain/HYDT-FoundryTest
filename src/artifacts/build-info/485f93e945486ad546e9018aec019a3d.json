{
	"id": "485f93e945486ad546e9018aec019a3d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/Farm.sol": {
				"content": "// SPDX-License-Identifier: GNU GPLv3\r\n\r\npragma solidity 0.8.19;\r\n\r\nimport \"./interfaces/IHYGT.sol\";\r\n\r\nimport \"./libraries/SafeERC20.sol\";\r\n\r\nimport \"./utils/AccessControl.sol\";\r\n\r\ncontract Farm is AccessControl {\r\n\r\n    /* ========== STATE VARIABLES ========== */\r\n\r\n    bytes32 public constant GOVERNOR_ROLE = keccak256(abi.encodePacked(\"Governor\"));\r\n\r\n    // TODO replace\r\n    uint256 private constant ONE_MONTH_TIME = 1800;\r\n    // uint256 private constant ONE_MONTH_TIME = 2592000;\r\n\r\n    /// @notice The address of the primary governance token.\r\n    IHYGT public HYGT;\r\n\r\n    /// @notice HYGT tokens created per block.\r\n    uint256 public HYGTPerBlock;\r\n    /// @notice The block number when HYGT mining starts.\r\n    uint256 public startBlock;\r\n    /// @notice Total allocation poitns. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint;\r\n\r\n    /// @dev Initialization variables.\r\n    address private immutable _initializer;\r\n    bool private _isInitialized;\r\n\r\n    /* ========== STORAGE ========== */\r\n\r\n    struct UserInfo {\r\n        uint256 amount;\r\n        uint256 rewardDebt;\r\n    }\r\n\r\n    struct PoolInfo {\r\n        IERC20 lpToken;\r\n        uint256 allocPoint;\r\n        uint256 lastRewardBlock;\r\n        /// @notice The accumulated HYGT per share - magnified by 1e12.\r\n        uint256 accHYGTPerShare;\r\n    }\r\n\r\n    /// @notice Pool info.\r\n    PoolInfo[] public poolInfo;\r\n    /// @notice User info for each corresponding pool.\r\n    mapping (uint256 => mapping (address => UserInfo)) public userInfo;\r\n\r\n    /* ========== EVENTS ========== */\r\n\r\n    event AddPool(uint256 indexed pid, address lpToken, string symbol, uint256 allocPoint);\r\n    event UpdateAllocation(uint256 indexed pid, uint256 newAllocPoint, uint256 oldAllocPoint);\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n\r\n    /* ========== CONSTRUCTOR ========== */\r\n\r\n    constructor() {\r\n        _initializer = _msgSender();\r\n    }\r\n\r\n    /* ========== INITIALIZE ========== */\r\n\r\n    /**\r\n     * @notice Initializes external dependencies and state variables.\r\n     * @dev This function can only be called once.\r\n     * @param hygt_ The address of the `HYGT` contract.\r\n     * @param lpTokens_ The addresses of the first 3 `LP Tokens` to add to the farming pool.\r\n     * @param initialMintStartTime_ The unix timestamp at which initial minting will begin.\r\n     */\r\n    function initialize(address hygt_, address[3] memory lpTokens_, uint256 initialMintStartTime_) external {\r\n        require(_msgSender() == _initializer, \"Farm: caller is not the initializer\");\r\n        // TODO uncomment\r\n        // require(!_isInitialized, \"Farm: already initialized\");\r\n\r\n        require(hygt_ != address(0), \"Farm: invalid HYGT address\");\r\n        // TODO uncomment\r\n        // require(pairs_.length == 3, \"Farm: invalid pairs\");\r\n        _grantRole(GOVERNOR_ROLE, _msgSender());\r\n        // TODO future proofing needed?\r\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n\r\n        HYGT = IHYGT(hygt_);\r\n\r\n        HYGTPerBlock = 2 * 1e18;\r\n        // TODO change averageBlockTime\r\n        uint256 averageBlockTime = 12;\r\n        uint256 dBlocks = ((initialMintStartTime_ + ONE_MONTH_TIME) - block.timestamp) / averageBlockTime;\r\n        startBlock = block.number + dBlocks;\r\n        totalAllocPoint = 1000;\r\n\r\n        /// @dev Initial farm pools.\r\n        // TODO remove this check\r\n        if (poolInfo.length == 0) {\r\n            _addPool(IERC20(lpTokens_[0]), 400, \"HYDT-BNB\", startBlock);   // HYDT-BNB Pair\r\n            _addPool(IERC20(lpTokens_[1]), 400, \"HYDT-USDT\", startBlock);  // HYDT-USDT Pair\r\n            _addPool(IERC20(lpTokens_[2]), 200, \"HYDT-HYGT\", startBlock);  // HYDT-HYGT Pair\r\n        }\r\n\r\n        _isInitialized = true;\r\n    }\r\n\r\n    // TODO remove this function\r\n    // function test_startBlock(uint256 initialMintStartTime_) external {\r\n    //     uint256 averageBlockTime = 12;\r\n    //     uint256 dBlocks = ((initialMintStartTime_ + ONE_MONTH_TIME) - block.timestamp) / averageBlockTime;\r\n    //     startBlock = block.number + dBlocks;\r\n    //     poolInfo[0].lastRewardBlock = startBlock;\r\n    //     poolInfo[0].lastRewardBlock = startBlock;\r\n    //     poolInfo[0].lastRewardBlock = startBlock;\r\n    // }\r\n\r\n    // // TODO remove this function\r\n    // function test_addresses(address HYGT_) external {\r\n    //     HYGT = IHYGT(HYGT_);\r\n    // }\r\n\r\n    /* ========== FUNCTIONS ========== */\r\n\r\n    /**\r\n     * @notice Returns the number of pools.\r\n     */\r\n    function poolLength() external view returns (uint256) {\r\n        return poolInfo.length;\r\n    }\r\n\r\n    /**\r\n     * @notice Adds a new `LP Token` to the pool. Caller must have the `Governor` role. Assigns a unique id for the given `LP Token`.\r\n     *\r\n     * NOTE: The same `LP Token` must NOT be added more than once otherwise the reward calculation will be compromised.\r\n     *\r\n     * @param lpToken The address of the `LP Token`.\r\n     * @param allocPoint The value for allocation points.\r\n     * @param symbol The name for the pool.\r\n     * @param withUpdate Whether or not to update reward variables for all pools. May cause high gas spending.\r\n     */\r\n    function addPool(IERC20 lpToken, uint256 allocPoint, string memory symbol, bool withUpdate) external onlyRole(GOVERNOR_ROLE) {\r\n        if (withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\r\n        totalAllocPoint += allocPoint;\r\n        _addPool(lpToken, allocPoint, symbol, lastRewardBlock);\r\n    }\r\n\r\n    function _addPool(IERC20 lpToken, uint256 allocPoint, string memory symbol, uint256 lastRewardBlock) internal {\r\n        PoolInfo memory pool;\r\n        pool.lpToken = IERC20(lpToken);\r\n        pool.allocPoint = allocPoint;\r\n        pool.lastRewardBlock = lastRewardBlock;\r\n        // pool.accHYGTPerShare = 0;\r\n        poolInfo.push(pool);\r\n\r\n        emit AddPool(poolInfo.length - 1, address(lpToken), symbol, allocPoint);\r\n    }\r\n\r\n    /**\r\n     * @notice Updates the given pool's HYGT allocation point. Caller must have the `Governor` role.\r\n     * @param pid The unique id of the pool.\r\n     * @param allocPoint The new value for allocation points.\r\n     * @param withUpdate Whether or not to update reward variables for all pools. May cause high gas spending.\r\n     */\r\n    function updateAllocation(uint256 pid, uint256 allocPoint, bool withUpdate) external onlyRole(GOVERNOR_ROLE) {\r\n        if (withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        totalAllocPoint = (totalAllocPoint - poolInfo[pid].allocPoint) + allocPoint;\r\n        uint256 oldAllocPoint = poolInfo[pid].allocPoint;\r\n        poolInfo[pid].allocPoint = allocPoint;\r\n\r\n        emit UpdateAllocation(pid, allocPoint, oldAllocPoint);\r\n    }\r\n\r\n    /**\r\n     * @notice Updates reward variables for all pools.\r\n     *\r\n     * NOTE: May cause high gas spending.\r\n     */\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    /**\r\n     * @notice Gets all pending `HYGT` for a given user.\r\n     */\r\n    function getPendingBatch(address user) external view returns (uint256) {\r\n        uint256 totalPending;\r\n\r\n        for (uint256 i = 0 ; i < poolInfo.length ; i++) {\r\n            totalPending += getPending(i, user);\r\n        }\r\n        return totalPending;\r\n    }\r\n\r\n    /**\r\n     * @notice Gets all pending `HYGT` in a given pool for a given user.\r\n     */\r\n    function getPending(uint256 pid, address user) public view returns (uint256) {\r\n        PoolInfo memory pool = poolInfo[pid];\r\n        UserInfo memory userData = userInfo[pid][user];\r\n        uint256 accHYGTPerShare = pool.accHYGTPerShare;\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n\r\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r\n            uint256 numberOfBlocks = block.number - pool.lastRewardBlock;\r\n            uint256 HYGTReward = (numberOfBlocks * HYGTPerBlock * pool.allocPoint) / totalAllocPoint;\r\n            accHYGTPerShare += ((HYGTReward * 1e12) / lpSupply);\r\n        }\r\n        uint256 pending = ((userData.amount * accHYGTPerShare) / 1e12) - userData.rewardDebt;\r\n        return pending;\r\n    }\r\n\r\n    /**\r\n     * @notice Deposit `LP Tokens` to recieve rewards in `HYGT`.\r\n     */\r\n\r\n      /**\r\n     * @notice Updates reward variables of the given pool to be up-to-date.\r\n     * @param pid The unique id of the pool.\r\n     */\r\n    function updatePool(uint256 pid) public {\r\n        PoolInfo storage pool = poolInfo[pid];\r\n\r\n        if (block.number <= pool.lastRewardBlock) {\r\n            return;\r\n        }\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n\r\n        if (lpSupply == 0) {\r\n            pool.lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n        uint256 numberOfBlocks = block.number - pool.lastRewardBlock;\r\n        uint256 HYGTReward = (numberOfBlocks * HYGTPerBlock * pool.allocPoint) / totalAllocPoint;\r\n        pool.accHYGTPerShare += ((HYGTReward * 1e12) / lpSupply);\r\n        pool.lastRewardBlock = block.number;\r\n    }\r\n\r\n    function deposit(uint256 pid, uint256 amount) external {\r\n        PoolInfo storage pool = poolInfo[pid];\r\n        UserInfo storage userData = userInfo[pid][_msgSender()];\r\n        updatePool(pid);\r\n\r\n        if (userData.amount > 0) {\r\n            uint256 pending = ((userData.amount * pool.accHYGTPerShare) / 1e12) - userData.rewardDebt;\r\n\r\n            if(pending > 0) {\r\n                HYGT.mint(_msgSender(), pending);\r\n            }\r\n        }\r\n        if (amount > 0) {\r\n            SafeERC20.safeTransferFrom(pool.lpToken, _msgSender(), address(this), amount);\r\n            userData.amount += amount;\r\n        }\r\n        userData.rewardDebt = (userData.amount * pool.accHYGTPerShare) / 1e12;\r\n\r\n        emit Deposit(_msgSender(), pid, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Withdraw a certain amount of `LP Tokens` from the given pool.\r\n     */\r\n    function withdraw(uint256 pid, uint256 amount) external {\r\n        PoolInfo storage pool = poolInfo[pid];\r\n        UserInfo storage userData = userInfo[pid][_msgSender()];\r\n        require(userData.amount >= amount, \"Farm: not good\");\r\n        updatePool(pid);\r\n        uint256 pending = ((userData.amount * pool.accHYGTPerShare) / 1e12) - userData.rewardDebt;\r\n\r\n        if(pending > 0) {\r\n            HYGT.mint(_msgSender(), pending);\r\n        }\r\n        if(amount > 0) {\r\n            userData.amount -= amount;\r\n            SafeERC20.safeTransfer(pool.lpToken, _msgSender(), amount);\r\n        }\r\n        userData.rewardDebt = (userData.amount * pool.accHYGTPerShare) / 1e12;\r\n\r\n        emit Withdraw(_msgSender(), pid, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Withdraw all `LP Tokens` from the given pool without caring about rewards.\r\n     *\r\n     * NOTE: Emergency only.\r\n     */\r\n    function emergencyWithdraw(uint256 pid) public {\r\n        PoolInfo storage pool = poolInfo[pid];\r\n        UserInfo storage userData = userInfo[pid][_msgSender()];\r\n        SafeERC20.safeTransfer(pool.lpToken, _msgSender(), userData.amount);\r\n\r\n        emit EmergencyWithdraw(_msgSender(), pid, userData.amount);\r\n\r\n        userData.amount = 0;\r\n        userData.rewardDebt = 0;\r\n    }\r\n}"
			},
			"src/utils/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../interfaces/IAccessControl.sol\";\r\nimport \"./Context.sol\";\r\nimport \"../libraries/Strings.sol\";\r\nimport \"./ERC165.sol\";\r\n\r\n/**\r\n * @dev Contract module that allows children to implement role-based access\r\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\r\n * members except through off-chain means by accessing the contract event logs. Some\r\n * applications may benefit from on-chain enumerability, for those cases see\r\n * {AccessControlEnumerable}.\r\n *\r\n * Roles are referred to by their `bytes32` identifier. These should be exposed\r\n * in the external API and be unique. The best way to achieve this is by\r\n * using `public constant` hash digests:\r\n *\r\n * ```solidity\r\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\r\n * ```\r\n *\r\n * Roles can be used to represent a set of permissions. To restrict access to a\r\n * function call, use {hasRole}:\r\n *\r\n * ```solidity\r\n * function foo() public {\r\n *     require(hasRole(MY_ROLE, msg.sender));\r\n *     ...\r\n * }\r\n * ```\r\n *\r\n * Roles can be granted and revoked dynamically via the {grantRole} and\r\n * {revokeRole} functions. Each role has an associated admin role, and only\r\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\r\n *\r\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\r\n * that only accounts with this role will be able to grant or revoke other\r\n * roles. More complex role relationships can be created by using\r\n * {_setRoleAdmin}.\r\n *\r\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\r\n * grant and revoke this role. Extra precautions should be taken to secure\r\n * accounts that have been granted it.\r\n */\r\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\r\n    struct RoleData {\r\n        mapping(address => bool) members;\r\n        bytes32 adminRole;\r\n    }\r\n\r\n    mapping(bytes32 => RoleData) private _roles;\r\n\r\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\r\n\r\n    /**\r\n     * @dev Modifier that checks that an account has a specific role. Reverts\r\n     * with a standardized message including the required role.\r\n     *\r\n     * The format of the revert reason is given by the following regular expression:\r\n     *\r\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\r\n     *\r\n     * _Available since v4.1._\r\n     */\r\n    modifier onlyRole(bytes32 role) {\r\n        _checkRole(role);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns `true` if `account` has been granted `role`.\r\n     */\r\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\r\n        return _roles[role].members[account];\r\n    }\r\n\r\n    /**\r\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\r\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\r\n     *\r\n     * Format of the revert message is described in {_checkRole}.\r\n     *\r\n     * _Available since v4.6._\r\n     */\r\n    function _checkRole(bytes32 role) internal view virtual {\r\n        _checkRole(role, _msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Revert with a standard message if `account` is missing `role`.\r\n     *\r\n     * The format of the revert reason is given by the following regular expression:\r\n     *\r\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\r\n     */\r\n    function _checkRole(bytes32 role, address account) internal view virtual {\r\n        if (!hasRole(role, account)) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        \"AccessControl: account \",\r\n                        Strings.toHexString(account),\r\n                        \" is missing role \",\r\n                        Strings.toHexString(uint256(role), 32)\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\r\n     * {revokeRole}.\r\n     *\r\n     * To change a role's admin, use {_setRoleAdmin}.\r\n     */\r\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\r\n        return _roles[role].adminRole;\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     *\r\n     * May emit a {RoleGranted} event.\r\n     */\r\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\r\n        _grantRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\r\n        _revokeRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from the calling account.\r\n     *\r\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\r\n     * purpose is to provide a mechanism for accounts to lose their privileges\r\n     * if they are compromised (such as when a trusted device is misplaced).\r\n     *\r\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be `account`.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function renounceRole(bytes32 role, address account) public virtual override {\r\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\r\n\r\n        _revokeRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event. Note that unlike {grantRole}, this function doesn't perform any\r\n     * checks on the calling account.\r\n     *\r\n     * May emit a {RoleGranted} event.\r\n     *\r\n     * [WARNING]\r\n     * ====\r\n     * This function should only be called from the constructor when setting\r\n     * up the initial roles for the system.\r\n     *\r\n     * Using this function in any other way is effectively circumventing the admin\r\n     * system imposed by {AccessControl}.\r\n     * ====\r\n     *\r\n     * NOTE: This function is deprecated in favor of {_grantRole}.\r\n     */\r\n    function _setupRole(bytes32 role, address account) internal virtual {\r\n        _grantRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `adminRole` as ``role``'s admin role.\r\n     *\r\n     * Emits a {RoleAdminChanged} event.\r\n     */\r\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\r\n        bytes32 previousAdminRole = getRoleAdmin(role);\r\n        _roles[role].adminRole = adminRole;\r\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * Internal function without access restriction.\r\n     *\r\n     * May emit a {RoleGranted} event.\r\n     */\r\n    function _grantRole(bytes32 role, address account) internal virtual {\r\n        if (!hasRole(role, account)) {\r\n            _roles[role].members[account] = true;\r\n            emit RoleGranted(role, account, _msgSender());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * Internal function without access restriction.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function _revokeRole(bytes32 role, address account) internal virtual {\r\n        if (hasRole(role, account)) {\r\n            _roles[role].members[account] = false;\r\n            emit RoleRevoked(role, account, _msgSender());\r\n        }\r\n    }\r\n}"
			},
			"src/libraries/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../interfaces/IERC20.sol\";\r\nimport \"../interfaces/IERC20Permit.sol\";\r\nimport \"./Address.sol\";\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    function safePermit(\r\n        IERC20Permit token,\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal {\r\n        uint256 nonceBefore = token.nonces(owner);\r\n        token.permit(owner, spender, value, deadline, v, r, s);\r\n        uint256 nonceAfter = token.nonces(owner);\r\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n"
			},
			"src/interfaces/IHYGT.sol": {
				"content": "// SPDX-License-Identifier: GNU GPLv3\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\ninterface IHYGT is IERC20 {\r\n\r\n    function maxSupply() external view returns (uint256);\r\n\r\n    function mint(address to, uint256 amount) external returns (bool);\r\n\r\n    function burn(uint256 amount) external returns (bool);\r\n\r\n    function burnFrom(address from, uint256 amount) external returns (bool);\r\n\r\n    function delegate(address delegatee) external;\r\n\r\n    function getCurrentVotes(address account) external view returns (uint256);\r\n\r\n    function getPriorVotes(address account, uint256 blockNumber) external view returns (uint256);\r\n}"
			},
			"src/utils/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../interfaces/IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}"
			},
			"src/libraries/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Math.sol\";\r\nimport \"./SignedMath.sol\";\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\r\n    uint8 private constant _ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                /// @solidity memory-safe-assembly\r\n                assembly {\r\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(int256 value) internal pure returns (string memory) {\r\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = _SYMBOLS[value & 0xf];\r\n            value >>= 4;\r\n        }\r\n        require(value == 0, \"Strings: hex length insufficient\");\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the two strings are equal.\r\n     */\r\n    function equal(string memory a, string memory b) internal pure returns (bool) {\r\n        return keccak256(bytes(a)) == keccak256(bytes(b));\r\n    }\r\n}"
			},
			"src/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}"
			},
			"src/interfaces/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev External interface of AccessControl declared to support ERC165 detection.\r\n */\r\ninterface IAccessControl {\r\n    /**\r\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\r\n     *\r\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\r\n     * {RoleAdminChanged} not being emitted signaling this.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is granted `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call, an admin role\r\n     * bearer except when using {AccessControl-_setupRole}.\r\n     */\r\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is revoked `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call:\r\n     *   - if using `revokeRole`, it is the admin role bearer\r\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\r\n     */\r\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Returns `true` if `account` has been granted `role`.\r\n     */\r\n    function hasRole(bytes32 role, address account) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\r\n     * {revokeRole}.\r\n     *\r\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\r\n     */\r\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function grantRole(bytes32 role, address account) external;\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function revokeRole(bytes32 role, address account) external;\r\n\r\n    /**\r\n     * @dev Revokes `role` from the calling account.\r\n     *\r\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\r\n     * purpose is to provide a mechanism for accounts to lose their privileges\r\n     * if they are compromised (such as when a trusted device is misplaced).\r\n     *\r\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be `account`.\r\n     */\r\n    function renounceRole(bytes32 role, address account) external;\r\n}"
			},
			"src/libraries/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\r\n\r\npragma solidity ^0.8.1;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     *\r\n     * Furthermore, `isContract` will also return true if the target contract within\r\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\r\n     * which only has an effect at the end of a transaction.\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}\r\n"
			},
			"src/interfaces/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Permit.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n */\r\ninterface IERC20Permit {\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\r\n     * given ``owner``'s signed approval.\r\n     *\r\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\r\n     * ordering also apply here.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `deadline` must be a timestamp in the future.\r\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\r\n     * over the EIP712-formatted function arguments.\r\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\r\n     *\r\n     * For more information on the signature format, see the\r\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\r\n     * section].\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Returns the current nonce for `owner`. This value must be\r\n     * included whenever a signature is generated for {permit}.\r\n     *\r\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\r\n     * prevents a signature from being used multiple times.\r\n     */\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}"
			},
			"src/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}"
			},
			"src/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}"
			},
			"src/libraries/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}"
			},
			"src/libraries/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    enum Rounding {\r\n        Down, // Toward negative infinity\r\n        Up, // Toward infinity\r\n        Zero // Toward zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds up instead\r\n     * of rounding down.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\r\n     * with further edits by Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod0 := mul(x, y)\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            require(denominator > prod1, \"Math: mulDiv overflow\");\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\r\n            // See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\r\n            uint256 twos = denominator & (~denominator + 1);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\r\n            // in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"src/Farm.sol": {
				"Farm": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "lpToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								}
							],
							"name": "AddPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAllocPoint",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldAllocPoint",
									"type": "uint256"
								}
							],
							"name": "UpdateAllocation",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "GOVERNOR_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "HYGT",
							"outputs": [
								{
									"internalType": "contract IHYGT",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "HYGTPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "bool",
									"name": "withUpdate",
									"type": "bool"
								}
							],
							"name": "addPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getPending",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getPendingBatch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "hygt_",
									"type": "address"
								},
								{
									"internalType": "address[3]",
									"name": "lpTokens_",
									"type": "address[3]"
								},
								{
									"internalType": "uint256",
									"name": "initialMintStartTime_",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accHYGTPerShare",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "withUpdate",
									"type": "bool"
								}
							],
							"name": "updateAllocation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"addPool(address,uint256,string,bool)": {
								"params": {
									"allocPoint": "The value for allocation points.",
									"lpToken": "The address of the `LP Token`.",
									"symbol": "The name for the pool.",
									"withUpdate": "Whether or not to update reward variables for all pools. May cause high gas spending."
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"initialize(address,address[3],uint256)": {
								"details": "This function can only be called once.",
								"params": {
									"hygt_": "The address of the `HYGT` contract.",
									"initialMintStartTime_": "The unix timestamp at which initial minting will begin.",
									"lpTokens_": "The addresses of the first 3 `LP Tokens` to add to the farming pool."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"updateAllocation(uint256,uint256,bool)": {
								"params": {
									"allocPoint": "The new value for allocation points.",
									"pid": "The unique id of the pool.",
									"withUpdate": "Whether or not to update reward variables for all pools. May cause high gas spending."
								}
							},
							"updatePool(uint256)": {
								"params": {
									"pid": "The unique id of the pool."
								}
							}
						},
						"stateVariables": {
							"_initializer": {
								"details": "Initialization variables."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Farm.sol\":182:11559  contract Farm is AccessControl {... */\n  mstore(0x40, 0xa0)\n    /* \"src/Farm.sol\":2090:2150  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/Farm.sol\":2130:2142  _msgSender() */\n  tag_4\n    /* \"src/Farm.sol\":2130:2140  _msgSender */\n  shl(0x20, tag_5)\n    /* \"src/Farm.sol\":2130:2142  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"src/Farm.sol\":2115:2142  _initializer = _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/Farm.sol\":182:11559  contract Farm is AccessControl {... */\n  jump(tag_6)\n    /* \"src/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\ntag_5:\n    /* \"src/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"src/utils/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"src/utils/Context.sol\":729:746  return msg.sender */\n  swap1\n  pop\n    /* \"src/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"src/Farm.sol\":182:11559  contract Farm is AccessControl {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xed93c67e1a9b7f09d3b44ee593360f0073603a8e45415e2c3c69afc994a1103d\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/Farm.sol\":182:11559  contract Farm is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5312ea8e\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x93f1a40b\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xb3ecb623\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xb3ecb623\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xccc57490\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x93f1a40b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xad35e1cc\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x5312ea8e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5e3e1581\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x79838ef0\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7f37df3b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3a0618fd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081e3eda\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23c64ce1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/utils/AccessControl.sol\":2686:2890  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Farm.sol\":4706:4801  function poolLength() external view returns (uint256) {... */\n    tag_4:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Farm.sol\":1398:1424  PoolInfo[] public poolInfo */\n    tag_5:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Farm.sol\":854:884  uint256 public totalAllocPoint */\n    tag_6:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Farm.sol\":558:575  IHYGT public HYGT */\n    tag_7:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/utils/AccessControl.sol\":4509:4640  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_8:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/utils/AccessControl.sol\":4950:5097  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"src/utils/AccessControl.sol\":6094:6312  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_10:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"src/Farm.sol\":5369:5767  function addPool(IERC20 lpToken, uint256 allocPoint, string memory symbol, bool withUpdate) external onlyRole(GOVERNOR_ROLE) {... */\n    tag_11:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"src/Farm.sol\":10280:11017  function withdraw(uint256 pid, uint256 amount) external {... */\n    tag_12:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"src/Farm.sol\":725:750  uint256 public startBlock */\n    tag_13:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Farm.sol\":8764:9411  function updatePool(uint256 pid) public {... */\n    tag_14:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"src/Farm.sol\":11172:11556  function emergencyWithdraw(uint256 pid) public {... */\n    tag_15:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"src/Farm.sol\":2589:3964  function initialize(address hygt_, address[3] memory lpTokens_, uint256 initialMintStartTime_) external {... */\n    tag_16:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      stop\n        /* \"src/Farm.sol\":7133:7315  function massUpdatePools() public {... */\n    tag_17:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      stop\n        /* \"src/Farm.sol\":632:659  uint256 public HYGTPerBlock */\n    tag_18:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Farm.sol\":7768:8527  function getPending(uint256 pid, address user) public view returns (uint256) {... */\n    tag_19:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/utils/AccessControl.sol\":2982:3129  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_20:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Farm.sol\":1487:1553  mapping (uint256 => mapping (address => UserInfo)) public userInfo */\n    tag_21:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_106\n      swap3\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/utils/AccessControl.sol\":2087:2136  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_22:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Farm.sol\":6554:7000  function updateAllocation(uint256 pid, uint256 allocPoint, bool withUpdate) external onlyRole(GOVERNOR_ROLE) {... */\n    tag_23:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      tag_114\n      jump\t// in\n    tag_111:\n      stop\n        /* \"src/Farm.sol\":7406:7668  function getPendingBatch(address user) external view returns (uint256) {... */\n    tag_24:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      tag_118\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/Farm.sol\":273:352  bytes32 public constant GOVERNOR_ROLE = keccak256(abi.encodePacked(\"Governor\")) */\n    tag_25:\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/utils/AccessControl.sol\":5390:5539  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_26:\n      tag_123\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n    tag_123:\n      stop\n        /* \"src/Farm.sol\":9419:10176  function deposit(uint256 pid, uint256 amount) external {... */\n    tag_27:\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      stop\n        /* \"src/utils/AccessControl.sol\":2686:2890  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_35:\n        /* \"src/utils/AccessControl.sol\":2771:2775  bool */\n      0x00\n        /* \"src/utils/AccessControl.sol\":2810:2842  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"src/utils/AccessControl.sol\":2795:2842  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"src/utils/AccessControl.sol\":2795:2806  interfaceId */\n      dup3\n        /* \"src/utils/AccessControl.sol\":2795:2842  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"src/utils/AccessControl.sol\":2795:2882  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_130\n      jumpi\n      pop\n        /* \"src/utils/AccessControl.sol\":2846:2882  super.supportsInterface(interfaceId) */\n      tag_131\n        /* \"src/utils/AccessControl.sol\":2870:2881  interfaceId */\n      dup3\n        /* \"src/utils/AccessControl.sol\":2846:2869  super.supportsInterface */\n      tag_132\n        /* \"src/utils/AccessControl.sol\":2846:2882  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_131:\n        /* \"src/utils/AccessControl.sol\":2795:2882  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_130:\n        /* \"src/utils/AccessControl.sol\":2788:2882  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"src/utils/AccessControl.sol\":2686:2890  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/Farm.sol\":4706:4801  function poolLength() external view returns (uint256) {... */\n    tag_39:\n        /* \"src/Farm.sol\":4751:4758  uint256 */\n      0x00\n        /* \"src/Farm.sol\":4778:4786  poolInfo */\n      0x06\n        /* \"src/Farm.sol\":4778:4793  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/Farm.sol\":4771:4793  return poolInfo.length */\n      swap1\n      pop\n        /* \"src/Farm.sol\":4706:4801  function poolLength() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"src/Farm.sol\":1398:1424  PoolInfo[] public poolInfo */\n    tag_45:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"src/Farm.sol\":854:884  uint256 public totalAllocPoint */\n    tag_49:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"src/Farm.sol\":558:575  IHYGT public HYGT */\n    tag_52:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":4509:4640  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_58:\n        /* \"src/utils/AccessControl.sol\":4583:4590  bytes32 */\n      0x00\n        /* \"src/utils/AccessControl.sol\":4610:4616  _roles */\n      dup1\n        /* \"src/utils/AccessControl.sol\":4610:4622  _roles[role] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":4617:4621  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":4610:4622  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/utils/AccessControl.sol\":4610:4632  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"src/utils/AccessControl.sol\":4603:4632  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"src/utils/AccessControl.sol\":4509:4640  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":4950:5097  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_64:\n        /* \"src/utils/AccessControl.sol\":5033:5051  getRoleAdmin(role) */\n      tag_137\n        /* \"src/utils/AccessControl.sol\":5046:5050  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":5033:5045  getRoleAdmin */\n      tag_58\n        /* \"src/utils/AccessControl.sol\":5033:5051  getRoleAdmin(role) */\n      jump\t// in\n    tag_137:\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      tag_139\n        /* \"src/utils/AccessControl.sol\":2589:2593  role */\n      dup2\n        /* \"src/utils/AccessControl.sol\":2578:2588  _checkRole */\n      tag_140\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      jump\t// in\n    tag_139:\n        /* \"src/utils/AccessControl.sol\":5064:5089  _grantRole(role, account) */\n      tag_142\n        /* \"src/utils/AccessControl.sol\":5075:5079  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":5081:5088  account */\n      dup4\n        /* \"src/utils/AccessControl.sol\":5064:5074  _grantRole */\n      tag_143\n        /* \"src/utils/AccessControl.sol\":5064:5089  _grantRole(role, account) */\n      jump\t// in\n    tag_142:\n        /* \"src/utils/AccessControl.sol\":4950:5097  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":6094:6312  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_67:\n        /* \"src/utils/AccessControl.sol\":6201:6213  _msgSender() */\n      tag_145\n        /* \"src/utils/AccessControl.sol\":6201:6211  _msgSender */\n      tag_146\n        /* \"src/utils/AccessControl.sol\":6201:6213  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"src/utils/AccessControl.sol\":6190:6213  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/utils/AccessControl.sol\":6190:6197  account */\n      dup2\n        /* \"src/utils/AccessControl.sol\":6190:6213  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/utils/AccessControl.sol\":6182:6265  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"src/utils/AccessControl.sol\":6278:6304  _revokeRole(role, account) */\n      tag_150\n        /* \"src/utils/AccessControl.sol\":6290:6294  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":6296:6303  account */\n      dup3\n        /* \"src/utils/AccessControl.sol\":6278:6289  _revokeRole */\n      tag_151\n        /* \"src/utils/AccessControl.sol\":6278:6304  _revokeRole(role, account) */\n      jump\t// in\n    tag_150:\n        /* \"src/utils/AccessControl.sol\":6094:6312  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Farm.sol\":5369:5767  function addPool(IERC20 lpToken, uint256 allocPoint, string memory symbol, bool withUpdate) external onlyRole(GOVERNOR_ROLE) {... */\n    tag_71:\n        /* \"src/Farm.sol\":323:351  abi.encodePacked(\"Governor\") */\n      add(0x20, mload(0x40))\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Farm.sol\":313:352  keccak256(abi.encodePacked(\"Governor\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      tag_155\n        /* \"src/utils/AccessControl.sol\":2589:2593  role */\n      dup2\n        /* \"src/utils/AccessControl.sol\":2578:2588  _checkRole */\n      tag_140\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      jump\t// in\n    tag_155:\n        /* \"src/Farm.sol\":5509:5519  withUpdate */\n      dup2\n        /* \"src/Farm.sol\":5505:5565  if (withUpdate) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"src/Farm.sol\":5536:5553  massUpdatePools() */\n      tag_158\n        /* \"src/Farm.sol\":5536:5551  massUpdatePools */\n      tag_90\n        /* \"src/Farm.sol\":5536:5553  massUpdatePools() */\n      jump\t// in\n    tag_158:\n        /* \"src/Farm.sol\":5505:5565  if (withUpdate) {... */\n    tag_157:\n        /* \"src/Farm.sol\":5575:5598  uint256 lastRewardBlock */\n      0x00\n        /* \"src/Farm.sol\":5616:5626  startBlock */\n      sload(0x03)\n        /* \"src/Farm.sol\":5601:5613  block.number */\n      number\n        /* \"src/Farm.sol\":5601:5626  block.number > startBlock */\n      gt\n        /* \"src/Farm.sol\":5601:5654  block.number > startBlock ? block.number : startBlock */\n      tag_159\n      jumpi\n        /* \"src/Farm.sol\":5644:5654  startBlock */\n      sload(0x03)\n        /* \"src/Farm.sol\":5601:5654  block.number > startBlock ? block.number : startBlock */\n      jump(tag_160)\n    tag_159:\n        /* \"src/Farm.sol\":5629:5641  block.number */\n      number\n        /* \"src/Farm.sol\":5601:5654  block.number > startBlock ? block.number : startBlock */\n    tag_160:\n        /* \"src/Farm.sol\":5575:5654  uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock */\n      swap1\n      pop\n        /* \"src/Farm.sol\":5684:5694  allocPoint */\n      dup5\n        /* \"src/Farm.sol\":5665:5680  totalAllocPoint */\n      0x04\n      0x00\n        /* \"src/Farm.sol\":5665:5694  totalAllocPoint += allocPoint */\n      dup3\n      dup3\n      sload\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Farm.sol\":5705:5759  _addPool(lpToken, allocPoint, symbol, lastRewardBlock) */\n      tag_163\n        /* \"src/Farm.sol\":5714:5721  lpToken */\n      dup7\n        /* \"src/Farm.sol\":5723:5733  allocPoint */\n      dup7\n        /* \"src/Farm.sol\":5735:5741  symbol */\n      dup7\n        /* \"src/Farm.sol\":5743:5758  lastRewardBlock */\n      dup5\n        /* \"src/Farm.sol\":5705:5713  _addPool */\n      tag_164\n        /* \"src/Farm.sol\":5705:5759  _addPool(lpToken, allocPoint, symbol, lastRewardBlock) */\n      jump\t// in\n    tag_163:\n        /* \"src/Farm.sol\":5494:5767  {... */\n      pop\n        /* \"src/Farm.sol\":5369:5767  function addPool(IERC20 lpToken, uint256 allocPoint, string memory symbol, bool withUpdate) external onlyRole(GOVERNOR_ROLE) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Farm.sol\":10280:11017  function withdraw(uint256 pid, uint256 amount) external {... */\n    tag_75:\n        /* \"src/Farm.sol\":10347:10368  PoolInfo storage pool */\n      0x00\n        /* \"src/Farm.sol\":10371:10379  poolInfo */\n      0x06\n        /* \"src/Farm.sol\":10380:10383  pid */\n      dup4\n        /* \"src/Farm.sol\":10371:10384  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_166\n      jumpi\n      tag_167\n      tag_168\n      jump\t// in\n    tag_167:\n    tag_166:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"src/Farm.sol\":10347:10384  PoolInfo storage pool = poolInfo[pid] */\n      swap1\n      pop\n        /* \"src/Farm.sol\":10395:10420  UserInfo storage userData */\n      0x00\n        /* \"src/Farm.sol\":10423:10431  userInfo */\n      0x07\n        /* \"src/Farm.sol\":10423:10436  userInfo[pid] */\n      0x00\n        /* \"src/Farm.sol\":10432:10435  pid */\n      dup6\n        /* \"src/Farm.sol\":10423:10436  userInfo[pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Farm.sol\":10423:10450  userInfo[pid][_msgSender()] */\n      0x00\n        /* \"src/Farm.sol\":10437:10449  _msgSender() */\n      tag_170\n        /* \"src/Farm.sol\":10437:10447  _msgSender */\n      tag_146\n        /* \"src/Farm.sol\":10437:10449  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"src/Farm.sol\":10423:10450  userInfo[pid][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Farm.sol\":10395:10450  UserInfo storage userData = userInfo[pid][_msgSender()] */\n      swap1\n      pop\n        /* \"src/Farm.sol\":10488:10494  amount */\n      dup3\n        /* \"src/Farm.sol\":10469:10477  userData */\n      dup2\n        /* \"src/Farm.sol\":10469:10484  userData.amount */\n      0x00\n      add\n      sload\n        /* \"src/Farm.sol\":10469:10494  userData.amount >= amount */\n      lt\n      iszero\n        /* \"src/Farm.sol\":10461:10513  require(userData.amount >= amount, \"Farm: not good\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"src/Farm.sol\":10524:10539  updatePool(pid) */\n      tag_174\n        /* \"src/Farm.sol\":10535:10538  pid */\n      dup5\n        /* \"src/Farm.sol\":10524:10534  updatePool */\n      tag_81\n        /* \"src/Farm.sol\":10524:10539  updatePool(pid) */\n      jump\t// in\n    tag_174:\n        /* \"src/Farm.sol\":10550:10565  uint256 pending */\n      0x00\n        /* \"src/Farm.sol\":10620:10628  userData */\n      dup2\n        /* \"src/Farm.sol\":10620:10639  userData.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"src/Farm.sol\":10612:10616  1e12 */\n      0xe8d4a51000\n        /* \"src/Farm.sol\":10588:10592  pool */\n      dup5\n        /* \"src/Farm.sol\":10588:10608  pool.accHYGTPerShare */\n      0x03\n      add\n      sload\n        /* \"src/Farm.sol\":10570:10578  userData */\n      dup5\n        /* \"src/Farm.sol\":10570:10585  userData.amount */\n      0x00\n      add\n      sload\n        /* \"src/Farm.sol\":10570:10608  userData.amount * pool.accHYGTPerShare */\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"src/Farm.sol\":10569:10616  (userData.amount * pool.accHYGTPerShare) / 1e12 */\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"src/Farm.sol\":10568:10639  ((userData.amount * pool.accHYGTPerShare) / 1e12) - userData.rewardDebt */\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"src/Farm.sol\":10550:10639  uint256 pending = ((userData.amount * pool.accHYGTPerShare) / 1e12) - userData.rewardDebt */\n      swap1\n      pop\n        /* \"src/Farm.sol\":10665:10666  0 */\n      0x00\n        /* \"src/Farm.sol\":10655:10662  pending */\n      dup2\n        /* \"src/Farm.sol\":10655:10666  pending > 0 */\n      gt\n        /* \"src/Farm.sol\":10652:10727  if(pending > 0) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"src/Farm.sol\":10683:10687  HYGT */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Farm.sol\":10683:10692  HYGT.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"src/Farm.sol\":10693:10705  _msgSender() */\n      tag_182\n        /* \"src/Farm.sol\":10693:10703  _msgSender */\n      tag_146\n        /* \"src/Farm.sol\":10693:10705  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"src/Farm.sol\":10707:10714  pending */\n      dup4\n        /* \"src/Farm.sol\":10683:10715  HYGT.mint(_msgSender(), pending) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap3\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      pop\n        /* \"src/Farm.sol\":10652:10727  if(pending > 0) {... */\n    tag_181:\n        /* \"src/Farm.sol\":10749:10750  0 */\n      0x00\n        /* \"src/Farm.sol\":10740:10746  amount */\n      dup5\n        /* \"src/Farm.sol\":10740:10750  amount > 0 */\n      gt\n        /* \"src/Farm.sol\":10737:10877  if(amount > 0) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"src/Farm.sol\":10786:10792  amount */\n      dup4\n        /* \"src/Farm.sol\":10767:10775  userData */\n      dup3\n        /* \"src/Farm.sol\":10767:10782  userData.amount */\n      0x00\n      add\n      0x00\n        /* \"src/Farm.sol\":10767:10792  userData.amount -= amount */\n      dup3\n      dup3\n      sload\n      tag_190\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_190:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Farm.sol\":10807:10865  SafeERC20.safeTransfer(pool.lpToken, _msgSender(), amount) */\n      tag_191\n        /* \"src/Farm.sol\":10830:10834  pool */\n      dup4\n        /* \"src/Farm.sol\":10830:10842  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Farm.sol\":10844:10856  _msgSender() */\n      tag_192\n        /* \"src/Farm.sol\":10844:10854  _msgSender */\n      tag_146\n        /* \"src/Farm.sol\":10844:10856  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"src/Farm.sol\":10858:10864  amount */\n      dup7\n        /* \"src/Farm.sol\":10807:10829  SafeERC20.safeTransfer */\n      tag_193\n        /* \"src/Farm.sol\":10807:10865  SafeERC20.safeTransfer(pool.lpToken, _msgSender(), amount) */\n      jump\t// in\n    tag_191:\n        /* \"src/Farm.sol\":10737:10877  if(amount > 0) {... */\n    tag_189:\n        /* \"src/Farm.sol\":10952:10956  1e12 */\n      0xe8d4a51000\n        /* \"src/Farm.sol\":10928:10932  pool */\n      dup4\n        /* \"src/Farm.sol\":10928:10948  pool.accHYGTPerShare */\n      0x03\n      add\n      sload\n        /* \"src/Farm.sol\":10910:10918  userData */\n      dup4\n        /* \"src/Farm.sol\":10910:10925  userData.amount */\n      0x00\n      add\n      sload\n        /* \"src/Farm.sol\":10910:10948  userData.amount * pool.accHYGTPerShare */\n      tag_194\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_194:\n        /* \"src/Farm.sol\":10909:10956  (userData.amount * pool.accHYGTPerShare) / 1e12 */\n      tag_195\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_195:\n        /* \"src/Farm.sol\":10887:10895  userData */\n      dup3\n        /* \"src/Farm.sol\":10887:10906  userData.rewardDebt */\n      0x01\n      add\n        /* \"src/Farm.sol\":10887:10956  userData.rewardDebt = (userData.amount * pool.accHYGTPerShare) / 1e12 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Farm.sol\":10997:11000  pid */\n      dup5\n        /* \"src/Farm.sol\":10983:10995  _msgSender() */\n      tag_196\n        /* \"src/Farm.sol\":10983:10993  _msgSender */\n      tag_146\n        /* \"src/Farm.sol\":10983:10995  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"src/Farm.sol\":10974:11009  Withdraw(_msgSender(), pid, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"src/Farm.sol\":11002:11008  amount */\n      dup7\n        /* \"src/Farm.sol\":10974:11009  Withdraw(_msgSender(), pid, amount) */\n      mload(0x40)\n      tag_197\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/Farm.sol\":10336:11017  {... */\n      pop\n      pop\n      pop\n        /* \"src/Farm.sol\":10280:11017  function withdraw(uint256 pid, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Farm.sol\":725:750  uint256 public startBlock */\n    tag_77:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"src/Farm.sol\":8764:9411  function updatePool(uint256 pid) public {... */\n    tag_81:\n        /* \"src/Farm.sol\":8815:8836  PoolInfo storage pool */\n      0x00\n        /* \"src/Farm.sol\":8839:8847  poolInfo */\n      0x06\n        /* \"src/Farm.sol\":8848:8851  pid */\n      dup3\n        /* \"src/Farm.sol\":8839:8852  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_199\n      jumpi\n      tag_200\n      tag_168\n      jump\t// in\n    tag_200:\n    tag_199:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"src/Farm.sol\":8815:8852  PoolInfo storage pool = poolInfo[pid] */\n      swap1\n      pop\n        /* \"src/Farm.sol\":8885:8889  pool */\n      dup1\n        /* \"src/Farm.sol\":8885:8905  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"src/Farm.sol\":8869:8881  block.number */\n      number\n        /* \"src/Farm.sol\":8869:8905  block.number <= pool.lastRewardBlock */\n      gt\n        /* \"src/Farm.sol\":8865:8940  if (block.number <= pool.lastRewardBlock) {... */\n      tag_202\n      jumpi\n        /* \"src/Farm.sol\":8922:8929  return; */\n      pop\n      jump(tag_198)\n        /* \"src/Farm.sol\":8865:8940  if (block.number <= pool.lastRewardBlock) {... */\n    tag_202:\n        /* \"src/Farm.sol\":8950:8966  uint256 lpSupply */\n      0x00\n        /* \"src/Farm.sol\":8969:8973  pool */\n      dup2\n        /* \"src/Farm.sol\":8969:8981  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Farm.sol\":8969:8991  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/Farm.sol\":9000:9004  this */\n      address\n        /* \"src/Farm.sol\":8969:9006  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_207\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"src/Farm.sol\":8950:9006  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"src/Farm.sol\":9035:9036  0 */\n      0x00\n        /* \"src/Farm.sol\":9023:9031  lpSupply */\n      dup2\n        /* \"src/Farm.sol\":9023:9036  lpSupply == 0 */\n      sub\n        /* \"src/Farm.sol\":9019:9121  if (lpSupply == 0) {... */\n      tag_209\n      jumpi\n        /* \"src/Farm.sol\":9076:9088  block.number */\n      number\n        /* \"src/Farm.sol\":9053:9057  pool */\n      dup3\n        /* \"src/Farm.sol\":9053:9073  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"src/Farm.sol\":9053:9088  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Farm.sol\":9103:9110  return; */\n      pop\n      pop\n      jump(tag_198)\n        /* \"src/Farm.sol\":9019:9121  if (lpSupply == 0) {... */\n    tag_209:\n        /* \"src/Farm.sol\":9131:9153  uint256 numberOfBlocks */\n      0x00\n        /* \"src/Farm.sol\":9171:9175  pool */\n      dup3\n        /* \"src/Farm.sol\":9171:9191  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"src/Farm.sol\":9156:9168  block.number */\n      number\n        /* \"src/Farm.sol\":9156:9191  block.number - pool.lastRewardBlock */\n      tag_210\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_210:\n        /* \"src/Farm.sol\":9131:9191  uint256 numberOfBlocks = block.number - pool.lastRewardBlock */\n      swap1\n      pop\n        /* \"src/Farm.sol\":9202:9220  uint256 HYGTReward */\n      0x00\n        /* \"src/Farm.sol\":9275:9290  totalAllocPoint */\n      sload(0x04)\n        /* \"src/Farm.sol\":9256:9260  pool */\n      dup5\n        /* \"src/Farm.sol\":9256:9271  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"src/Farm.sol\":9241:9253  HYGTPerBlock */\n      sload(0x02)\n        /* \"src/Farm.sol\":9224:9238  numberOfBlocks */\n      dup5\n        /* \"src/Farm.sol\":9224:9253  numberOfBlocks * HYGTPerBlock */\n      tag_211\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_211:\n        /* \"src/Farm.sol\":9224:9271  numberOfBlocks * HYGTPerBlock * pool.allocPoint */\n      tag_212\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_212:\n        /* \"src/Farm.sol\":9223:9290  (numberOfBlocks * HYGTPerBlock * pool.allocPoint) / totalAllocPoint */\n      tag_213\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_213:\n        /* \"src/Farm.sol\":9202:9290  uint256 HYGTReward = (numberOfBlocks * HYGTPerBlock * pool.allocPoint) / totalAllocPoint */\n      swap1\n      pop\n        /* \"src/Farm.sol\":9348:9356  lpSupply */\n      dup3\n        /* \"src/Farm.sol\":9340:9344  1e12 */\n      0xe8d4a51000\n        /* \"src/Farm.sol\":9327:9337  HYGTReward */\n      dup3\n        /* \"src/Farm.sol\":9327:9344  HYGTReward * 1e12 */\n      tag_214\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_214:\n        /* \"src/Farm.sol\":9326:9356  (HYGTReward * 1e12) / lpSupply */\n      tag_215\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_215:\n        /* \"src/Farm.sol\":9301:9305  pool */\n      dup5\n        /* \"src/Farm.sol\":9301:9321  pool.accHYGTPerShare */\n      0x03\n      add\n      0x00\n        /* \"src/Farm.sol\":9301:9357  pool.accHYGTPerShare += ((HYGTReward * 1e12) / lpSupply) */\n      dup3\n      dup3\n      sload\n      tag_216\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_216:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Farm.sol\":9391:9403  block.number */\n      number\n        /* \"src/Farm.sol\":9368:9372  pool */\n      dup5\n        /* \"src/Farm.sol\":9368:9388  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"src/Farm.sol\":9368:9403  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Farm.sol\":8804:9411  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Farm.sol\":8764:9411  function updatePool(uint256 pid) public {... */\n    tag_198:\n      pop\n      jump\t// out\n        /* \"src/Farm.sol\":11172:11556  function emergencyWithdraw(uint256 pid) public {... */\n    tag_84:\n        /* \"src/Farm.sol\":11230:11251  PoolInfo storage pool */\n      0x00\n        /* \"src/Farm.sol\":11254:11262  poolInfo */\n      0x06\n        /* \"src/Farm.sol\":11263:11266  pid */\n      dup3\n        /* \"src/Farm.sol\":11254:11267  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_218\n      jumpi\n      tag_219\n      tag_168\n      jump\t// in\n    tag_219:\n    tag_218:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"src/Farm.sol\":11230:11267  PoolInfo storage pool = poolInfo[pid] */\n      swap1\n      pop\n        /* \"src/Farm.sol\":11278:11303  UserInfo storage userData */\n      0x00\n        /* \"src/Farm.sol\":11306:11314  userInfo */\n      0x07\n        /* \"src/Farm.sol\":11306:11319  userInfo[pid] */\n      0x00\n        /* \"src/Farm.sol\":11315:11318  pid */\n      dup5\n        /* \"src/Farm.sol\":11306:11319  userInfo[pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Farm.sol\":11306:11333  userInfo[pid][_msgSender()] */\n      0x00\n        /* \"src/Farm.sol\":11320:11332  _msgSender() */\n      tag_221\n        /* \"src/Farm.sol\":11320:11330  _msgSender */\n      tag_146\n        /* \"src/Farm.sol\":11320:11332  _msgSender() */\n      jump\t// in\n    tag_221:\n        /* \"src/Farm.sol\":11306:11333  userInfo[pid][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Farm.sol\":11278:11333  UserInfo storage userData = userInfo[pid][_msgSender()] */\n      swap1\n      pop\n        /* \"src/Farm.sol\":11344:11411  SafeERC20.safeTransfer(pool.lpToken, _msgSender(), userData.amount) */\n      tag_222\n        /* \"src/Farm.sol\":11367:11371  pool */\n      dup3\n        /* \"src/Farm.sol\":11367:11379  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Farm.sol\":11381:11393  _msgSender() */\n      tag_223\n        /* \"src/Farm.sol\":11381:11391  _msgSender */\n      tag_146\n        /* \"src/Farm.sol\":11381:11393  _msgSender() */\n      jump\t// in\n    tag_223:\n        /* \"src/Farm.sol\":11395:11403  userData */\n      dup4\n        /* \"src/Farm.sol\":11395:11410  userData.amount */\n      0x00\n      add\n      sload\n        /* \"src/Farm.sol\":11344:11366  SafeERC20.safeTransfer */\n      tag_193\n        /* \"src/Farm.sol\":11344:11411  SafeERC20.safeTransfer(pool.lpToken, _msgSender(), userData.amount) */\n      jump\t// in\n    tag_222:\n        /* \"src/Farm.sol\":11461:11464  pid */\n      dup3\n        /* \"src/Farm.sol\":11447:11459  _msgSender() */\n      tag_224\n        /* \"src/Farm.sol\":11447:11457  _msgSender */\n      tag_146\n        /* \"src/Farm.sol\":11447:11459  _msgSender() */\n      jump\t// in\n    tag_224:\n        /* \"src/Farm.sol\":11429:11482  EmergencyWithdraw(_msgSender(), pid, userData.amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"src/Farm.sol\":11466:11474  userData */\n      dup4\n        /* \"src/Farm.sol\":11466:11481  userData.amount */\n      0x00\n      add\n      sload\n        /* \"src/Farm.sol\":11429:11482  EmergencyWithdraw(_msgSender(), pid, userData.amount) */\n      mload(0x40)\n      tag_225\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/Farm.sol\":11513:11514  0 */\n      0x00\n        /* \"src/Farm.sol\":11495:11503  userData */\n      dup2\n        /* \"src/Farm.sol\":11495:11510  userData.amount */\n      0x00\n      add\n        /* \"src/Farm.sol\":11495:11514  userData.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Farm.sol\":11547:11548  0 */\n      0x00\n        /* \"src/Farm.sol\":11525:11533  userData */\n      dup2\n        /* \"src/Farm.sol\":11525:11544  userData.rewardDebt */\n      0x01\n      add\n        /* \"src/Farm.sol\":11525:11548  userData.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Farm.sol\":11219:11556  {... */\n      pop\n      pop\n        /* \"src/Farm.sol\":11172:11556  function emergencyWithdraw(uint256 pid) public {... */\n      pop\n      jump\t// out\n        /* \"src/Farm.sol\":2589:3964  function initialize(address hygt_, address[3] memory lpTokens_, uint256 initialMintStartTime_) external {... */\n    tag_88:\n        /* \"src/Farm.sol\":2728:2740  _initializer */\n      immutable(\"0xed93c67e1a9b7f09d3b44ee593360f0073603a8e45415e2c3c69afc994a1103d\")\n        /* \"src/Farm.sol\":2712:2740  _msgSender() == _initializer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Farm.sol\":2712:2724  _msgSender() */\n      tag_227\n        /* \"src/Farm.sol\":2712:2722  _msgSender */\n      tag_146\n        /* \"src/Farm.sol\":2712:2724  _msgSender() */\n      jump\t// in\n    tag_227:\n        /* \"src/Farm.sol\":2712:2740  _msgSender() == _initializer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/Farm.sol\":2704:2780  require(_msgSender() == _initializer, \"Farm: caller is not the initializer\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"src/Farm.sol\":2912:2913  0 */\n      0x00\n        /* \"src/Farm.sol\":2895:2914  hygt_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Farm.sol\":2895:2900  hygt_ */\n      dup4\n        /* \"src/Farm.sol\":2895:2914  hygt_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/Farm.sol\":2887:2945  require(hygt_ != address(0), \"Farm: invalid HYGT address\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"src/Farm.sol\":3047:3086  _grantRole(GOVERNOR_ROLE, _msgSender()) */\n      tag_234\n        /* \"src/Farm.sol\":323:351  abi.encodePacked(\"Governor\") */\n      add(0x20, mload(0x40))\n      tag_235\n      swap1\n      tag_153\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Farm.sol\":313:352  keccak256(abi.encodePacked(\"Governor\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Farm.sol\":3073:3085  _msgSender() */\n      tag_236\n        /* \"src/Farm.sol\":3073:3083  _msgSender */\n      tag_146\n        /* \"src/Farm.sol\":3073:3085  _msgSender() */\n      jump\t// in\n    tag_236:\n        /* \"src/Farm.sol\":3047:3057  _grantRole */\n      tag_143\n        /* \"src/Farm.sol\":3047:3086  _grantRole(GOVERNOR_ROLE, _msgSender()) */\n      jump\t// in\n    tag_234:\n        /* \"src/Farm.sol\":3138:3182  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      tag_237\n        /* \"src/utils/AccessControl.sol\":2132:2136  0x00 */\n      0x00\n        /* \"src/Farm.sol\":3149:3167  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"src/Farm.sol\":3169:3181  _msgSender() */\n      tag_238\n        /* \"src/Farm.sol\":3169:3179  _msgSender */\n      tag_146\n        /* \"src/Farm.sol\":3169:3181  _msgSender() */\n      jump\t// in\n    tag_238:\n        /* \"src/Farm.sol\":3138:3148  _grantRole */\n      tag_143\n        /* \"src/Farm.sol\":3138:3182  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      jump\t// in\n    tag_237:\n        /* \"src/Farm.sol\":3208:3213  hygt_ */\n      dup3\n        /* \"src/Farm.sol\":3195:3199  HYGT */\n      0x01\n      0x00\n        /* \"src/Farm.sol\":3195:3214  HYGT = IHYGT(hygt_) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/Farm.sol\":3242:3250  2 * 1e18 */\n      0x1bc16d674ec80000\n        /* \"src/Farm.sol\":3227:3239  HYGTPerBlock */\n      0x02\n        /* \"src/Farm.sol\":3227:3250  HYGTPerBlock = 2 * 1e18 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Farm.sol\":3302:3326  uint256 averageBlockTime */\n      0x00\n        /* \"src/Farm.sol\":3329:3331  12 */\n      0x0c\n        /* \"src/Farm.sol\":3302:3331  uint256 averageBlockTime = 12 */\n      swap1\n      pop\n        /* \"src/Farm.sol\":3342:3357  uint256 dBlocks */\n      0x00\n        /* \"src/Farm.sol\":3423:3439  averageBlockTime */\n      dup2\n        /* \"src/Farm.sol\":3404:3419  block.timestamp */\n      timestamp\n        /* \"src/Farm.sol\":424:428  1800 */\n      0x0708\n        /* \"src/Farm.sol\":3362:3383  initialMintStartTime_ */\n      dup6\n        /* \"src/Farm.sol\":3362:3400  initialMintStartTime_ + ONE_MONTH_TIME */\n      tag_239\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_239:\n        /* \"src/Farm.sol\":3361:3419  (initialMintStartTime_ + ONE_MONTH_TIME) - block.timestamp */\n      tag_240\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_240:\n        /* \"src/Farm.sol\":3360:3439  ((initialMintStartTime_ + ONE_MONTH_TIME) - block.timestamp) / averageBlockTime */\n      tag_241\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_241:\n        /* \"src/Farm.sol\":3342:3439  uint256 dBlocks = ((initialMintStartTime_ + ONE_MONTH_TIME) - block.timestamp) / averageBlockTime */\n      swap1\n      pop\n        /* \"src/Farm.sol\":3478:3485  dBlocks */\n      dup1\n        /* \"src/Farm.sol\":3463:3475  block.number */\n      number\n        /* \"src/Farm.sol\":3463:3485  block.number + dBlocks */\n      tag_242\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_242:\n        /* \"src/Farm.sol\":3450:3460  startBlock */\n      0x03\n        /* \"src/Farm.sol\":3450:3485  startBlock = block.number + dBlocks */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Farm.sol\":3514:3518  1000 */\n      0x03e8\n        /* \"src/Farm.sol\":3496:3511  totalAllocPoint */\n      0x04\n        /* \"src/Farm.sol\":3496:3518  totalAllocPoint = 1000 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Farm.sol\":3627:3628  0 */\n      0x00\n        /* \"src/Farm.sol\":3608:3616  poolInfo */\n      0x06\n        /* \"src/Farm.sol\":3608:3623  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/Farm.sol\":3608:3628  poolInfo.length == 0 */\n      sub\n        /* \"src/Farm.sol\":3604:3923  if (poolInfo.length == 0) {... */\n      tag_243\n      jumpi\n        /* \"src/Farm.sol\":3645:3704  _addPool(IERC20(lpTokens_[0]), 400, \"HYDT-BNB\", startBlock) */\n      tag_244\n        /* \"src/Farm.sol\":3661:3670  lpTokens_ */\n      dup5\n        /* \"src/Farm.sol\":3671:3672  0 */\n      0x00\n        /* \"src/Farm.sol\":3661:3673  lpTokens_[0] */\n      0x03\n      dup2\n      lt\n      tag_245\n      jumpi\n      tag_246\n      tag_168\n      jump\t// in\n    tag_246:\n    tag_245:\n      0x20\n      mul\n      add\n      mload\n        /* \"src/Farm.sol\":3676:3679  400 */\n      0x0190\n        /* \"src/Farm.sol\":3645:3704  _addPool(IERC20(lpTokens_[0]), 400, \"HYDT-BNB\", startBlock) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      0x485944542d424e42000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"src/Farm.sol\":3693:3703  startBlock */\n      sload(0x03)\n        /* \"src/Farm.sol\":3645:3653  _addPool */\n      tag_164\n        /* \"src/Farm.sol\":3645:3704  _addPool(IERC20(lpTokens_[0]), 400, \"HYDT-BNB\", startBlock) */\n      jump\t// in\n    tag_244:\n        /* \"src/Farm.sol\":3738:3798  _addPool(IERC20(lpTokens_[1]), 400, \"HYDT-USDT\", startBlock) */\n      tag_247\n        /* \"src/Farm.sol\":3754:3763  lpTokens_ */\n      dup5\n        /* \"src/Farm.sol\":3764:3765  1 */\n      0x01\n        /* \"src/Farm.sol\":3754:3766  lpTokens_[1] */\n      0x03\n      dup2\n      lt\n      tag_248\n      jumpi\n      tag_249\n      tag_168\n      jump\t// in\n    tag_249:\n    tag_248:\n      0x20\n      mul\n      add\n      mload\n        /* \"src/Farm.sol\":3769:3772  400 */\n      0x0190\n        /* \"src/Farm.sol\":3738:3798  _addPool(IERC20(lpTokens_[1]), 400, \"HYDT-USDT\", startBlock) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      0x485944542d555344540000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"src/Farm.sol\":3787:3797  startBlock */\n      sload(0x03)\n        /* \"src/Farm.sol\":3738:3746  _addPool */\n      tag_164\n        /* \"src/Farm.sol\":3738:3798  _addPool(IERC20(lpTokens_[1]), 400, \"HYDT-USDT\", startBlock) */\n      jump\t// in\n    tag_247:\n        /* \"src/Farm.sol\":3832:3892  _addPool(IERC20(lpTokens_[2]), 200, \"HYDT-HYGT\", startBlock) */\n      tag_250\n        /* \"src/Farm.sol\":3848:3857  lpTokens_ */\n      dup5\n        /* \"src/Farm.sol\":3858:3859  2 */\n      0x02\n        /* \"src/Farm.sol\":3848:3860  lpTokens_[2] */\n      0x03\n      dup2\n      lt\n      tag_251\n      jumpi\n      tag_252\n      tag_168\n      jump\t// in\n    tag_252:\n    tag_251:\n      0x20\n      mul\n      add\n      mload\n        /* \"src/Farm.sol\":3863:3866  200 */\n      0xc8\n        /* \"src/Farm.sol\":3832:3892  _addPool(IERC20(lpTokens_[2]), 200, \"HYDT-HYGT\", startBlock) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      0x485944542d485947540000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"src/Farm.sol\":3881:3891  startBlock */\n      sload(0x03)\n        /* \"src/Farm.sol\":3832:3840  _addPool */\n      tag_164\n        /* \"src/Farm.sol\":3832:3892  _addPool(IERC20(lpTokens_[2]), 200, \"HYDT-HYGT\", startBlock) */\n      jump\t// in\n    tag_250:\n        /* \"src/Farm.sol\":3604:3923  if (poolInfo.length == 0) {... */\n    tag_243:\n        /* \"src/Farm.sol\":3952:3956  true */\n      0x01\n        /* \"src/Farm.sol\":3935:3949  _isInitialized */\n      0x05\n      0x00\n        /* \"src/Farm.sol\":3935:3956  _isInitialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/Farm.sol\":2693:3964  {... */\n      pop\n      pop\n        /* \"src/Farm.sol\":2589:3964  function initialize(address hygt_, address[3] memory lpTokens_, uint256 initialMintStartTime_) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Farm.sol\":7133:7315  function massUpdatePools() public {... */\n    tag_90:\n        /* \"src/Farm.sol\":7178:7192  uint256 length */\n      0x00\n        /* \"src/Farm.sol\":7195:7203  poolInfo */\n      0x06\n        /* \"src/Farm.sol\":7195:7210  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/Farm.sol\":7178:7210  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"src/Farm.sol\":7228:7239  uint256 pid */\n      0x00\n        /* \"src/Farm.sol\":7223:7308  for (uint256 pid = 0; pid < length; ++pid) {... */\n    tag_254:\n        /* \"src/Farm.sol\":7251:7257  length */\n      dup2\n        /* \"src/Farm.sol\":7245:7248  pid */\n      dup2\n        /* \"src/Farm.sol\":7245:7257  pid < length */\n      lt\n        /* \"src/Farm.sol\":7223:7308  for (uint256 pid = 0; pid < length; ++pid) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"src/Farm.sol\":7281:7296  updatePool(pid) */\n      tag_257\n        /* \"src/Farm.sol\":7292:7295  pid */\n      dup2\n        /* \"src/Farm.sol\":7281:7291  updatePool */\n      tag_81\n        /* \"src/Farm.sol\":7281:7296  updatePool(pid) */\n      jump\t// in\n    tag_257:\n        /* \"src/Farm.sol\":7259:7264  ++pid */\n      dup1\n      tag_258\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n      swap1\n      pop\n        /* \"src/Farm.sol\":7223:7308  for (uint256 pid = 0; pid < length; ++pid) {... */\n      jump(tag_254)\n    tag_255:\n      pop\n        /* \"src/Farm.sol\":7167:7315  {... */\n      pop\n        /* \"src/Farm.sol\":7133:7315  function massUpdatePools() public {... */\n      jump\t// out\n        /* \"src/Farm.sol\":632:659  uint256 public HYGTPerBlock */\n    tag_92:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"src/Farm.sol\":7768:8527  function getPending(uint256 pid, address user) public view returns (uint256) {... */\n    tag_97:\n        /* \"src/Farm.sol\":7836:7843  uint256 */\n      0x00\n        /* \"src/Farm.sol\":7856:7876  PoolInfo memory pool */\n      dup1\n        /* \"src/Farm.sol\":7879:7887  poolInfo */\n      0x06\n        /* \"src/Farm.sol\":7888:7891  pid */\n      dup5\n        /* \"src/Farm.sol\":7879:7892  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_261\n      jumpi\n      tag_262\n      tag_168\n      jump\t// in\n    tag_262:\n    tag_261:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"src/Farm.sol\":7856:7892  PoolInfo memory pool = poolInfo[pid] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/Farm.sol\":7903:7927  UserInfo memory userData */\n      0x00\n        /* \"src/Farm.sol\":7930:7938  userInfo */\n      0x07\n        /* \"src/Farm.sol\":7930:7943  userInfo[pid] */\n      0x00\n        /* \"src/Farm.sol\":7939:7942  pid */\n      dup7\n        /* \"src/Farm.sol\":7930:7943  userInfo[pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Farm.sol\":7930:7949  userInfo[pid][user] */\n      0x00\n        /* \"src/Farm.sol\":7944:7948  user */\n      dup6\n        /* \"src/Farm.sol\":7930:7949  userInfo[pid][user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Farm.sol\":7903:7949  UserInfo memory userData = userInfo[pid][user] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/Farm.sol\":7960:7983  uint256 accHYGTPerShare */\n      0x00\n        /* \"src/Farm.sol\":7986:7990  pool */\n      dup3\n        /* \"src/Farm.sol\":7986:8006  pool.accHYGTPerShare */\n      0x60\n      add\n      mload\n        /* \"src/Farm.sol\":7960:8006  uint256 accHYGTPerShare = pool.accHYGTPerShare */\n      swap1\n      pop\n        /* \"src/Farm.sol\":8017:8033  uint256 lpSupply */\n      0x00\n        /* \"src/Farm.sol\":8036:8040  pool */\n      dup4\n        /* \"src/Farm.sol\":8036:8048  pool.lpToken */\n      0x00\n      add\n      mload\n        /* \"src/Farm.sol\":8036:8058  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/Farm.sol\":8067:8071  this */\n      address\n        /* \"src/Farm.sol\":8036:8073  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_264:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_266\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_266:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_267\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_267:\n        /* \"src/Farm.sol\":8017:8073  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"src/Farm.sol\":8105:8109  pool */\n      dup4\n        /* \"src/Farm.sol\":8105:8125  pool.lastRewardBlock */\n      0x40\n      add\n      mload\n        /* \"src/Farm.sol\":8090:8102  block.number */\n      number\n        /* \"src/Farm.sol\":8090:8125  block.number > pool.lastRewardBlock */\n      gt\n        /* \"src/Farm.sol\":8090:8142  block.number > pool.lastRewardBlock && lpSupply != 0 */\n      dup1\n      iszero\n      tag_268\n      jumpi\n      pop\n        /* \"src/Farm.sol\":8141:8142  0 */\n      0x00\n        /* \"src/Farm.sol\":8129:8137  lpSupply */\n      dup2\n        /* \"src/Farm.sol\":8129:8142  lpSupply != 0 */\n      eq\n      iszero\n        /* \"src/Farm.sol\":8090:8142  block.number > pool.lastRewardBlock && lpSupply != 0 */\n    tag_268:\n        /* \"src/Farm.sol\":8086:8400  if (block.number > pool.lastRewardBlock && lpSupply != 0) {... */\n      iszero\n      tag_269\n      jumpi\n        /* \"src/Farm.sol\":8159:8181  uint256 numberOfBlocks */\n      0x00\n        /* \"src/Farm.sol\":8199:8203  pool */\n      dup5\n        /* \"src/Farm.sol\":8199:8219  pool.lastRewardBlock */\n      0x40\n      add\n      mload\n        /* \"src/Farm.sol\":8184:8196  block.number */\n      number\n        /* \"src/Farm.sol\":8184:8219  block.number - pool.lastRewardBlock */\n      tag_270\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_270:\n        /* \"src/Farm.sol\":8159:8219  uint256 numberOfBlocks = block.number - pool.lastRewardBlock */\n      swap1\n      pop\n        /* \"src/Farm.sol\":8234:8252  uint256 HYGTReward */\n      0x00\n        /* \"src/Farm.sol\":8307:8322  totalAllocPoint */\n      sload(0x04)\n        /* \"src/Farm.sol\":8288:8292  pool */\n      dup7\n        /* \"src/Farm.sol\":8288:8303  pool.allocPoint */\n      0x20\n      add\n      mload\n        /* \"src/Farm.sol\":8273:8285  HYGTPerBlock */\n      sload(0x02)\n        /* \"src/Farm.sol\":8256:8270  numberOfBlocks */\n      dup5\n        /* \"src/Farm.sol\":8256:8285  numberOfBlocks * HYGTPerBlock */\n      tag_271\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_271:\n        /* \"src/Farm.sol\":8256:8303  numberOfBlocks * HYGTPerBlock * pool.allocPoint */\n      tag_272\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_272:\n        /* \"src/Farm.sol\":8255:8322  (numberOfBlocks * HYGTPerBlock * pool.allocPoint) / totalAllocPoint */\n      tag_273\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_273:\n        /* \"src/Farm.sol\":8234:8322  uint256 HYGTReward = (numberOfBlocks * HYGTPerBlock * pool.allocPoint) / totalAllocPoint */\n      swap1\n      pop\n        /* \"src/Farm.sol\":8379:8387  lpSupply */\n      dup3\n        /* \"src/Farm.sol\":8371:8375  1e12 */\n      0xe8d4a51000\n        /* \"src/Farm.sol\":8358:8368  HYGTReward */\n      dup3\n        /* \"src/Farm.sol\":8358:8375  HYGTReward * 1e12 */\n      tag_274\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_274:\n        /* \"src/Farm.sol\":8357:8387  (HYGTReward * 1e12) / lpSupply */\n      tag_275\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_275:\n        /* \"src/Farm.sol\":8337:8388  accHYGTPerShare += ((HYGTReward * 1e12) / lpSupply) */\n      dup5\n      tag_276\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_276:\n      swap4\n      pop\n        /* \"src/Farm.sol\":8144:8400  {... */\n      pop\n      pop\n        /* \"src/Farm.sol\":8086:8400  if (block.number > pool.lastRewardBlock && lpSupply != 0) {... */\n    tag_269:\n        /* \"src/Farm.sol\":8410:8425  uint256 pending */\n      0x00\n        /* \"src/Farm.sol\":8475:8483  userData */\n      dup4\n        /* \"src/Farm.sol\":8475:8494  userData.rewardDebt */\n      0x20\n      add\n      mload\n        /* \"src/Farm.sol\":8467:8471  1e12 */\n      0xe8d4a51000\n        /* \"src/Farm.sol\":8448:8463  accHYGTPerShare */\n      dup5\n        /* \"src/Farm.sol\":8430:8438  userData */\n      dup7\n        /* \"src/Farm.sol\":8430:8445  userData.amount */\n      0x00\n      add\n      mload\n        /* \"src/Farm.sol\":8430:8463  userData.amount * accHYGTPerShare */\n      tag_277\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_277:\n        /* \"src/Farm.sol\":8429:8471  (userData.amount * accHYGTPerShare) / 1e12 */\n      tag_278\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_278:\n        /* \"src/Farm.sol\":8428:8494  ((userData.amount * accHYGTPerShare) / 1e12) - userData.rewardDebt */\n      tag_279\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_279:\n        /* \"src/Farm.sol\":8410:8494  uint256 pending = ((userData.amount * accHYGTPerShare) / 1e12) - userData.rewardDebt */\n      swap1\n      pop\n        /* \"src/Farm.sol\":8512:8519  pending */\n      dup1\n        /* \"src/Farm.sol\":8505:8519  return pending */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/Farm.sol\":7768:8527  function getPending(uint256 pid, address user) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":2982:3129  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_101:\n        /* \"src/utils/AccessControl.sol\":3068:3072  bool */\n      0x00\n        /* \"src/utils/AccessControl.sol\":3092:3098  _roles */\n      dup1\n        /* \"src/utils/AccessControl.sol\":3092:3104  _roles[role] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":3099:3103  role */\n      dup5\n        /* \"src/utils/AccessControl.sol\":3092:3104  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/utils/AccessControl.sol\":3092:3112  _roles[role].members */\n      0x00\n      add\n        /* \"src/utils/AccessControl.sol\":3092:3121  _roles[role].members[account] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":3113:3120  account */\n      dup4\n        /* \"src/utils/AccessControl.sol\":3092:3121  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/utils/AccessControl.sol\":3085:3121  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"src/utils/AccessControl.sol\":2982:3129  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/Farm.sol\":1487:1553  mapping (uint256 => mapping (address => UserInfo)) public userInfo */\n    tag_105:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":2087:2136  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_109:\n        /* \"src/utils/AccessControl.sol\":2132:2136  0x00 */\n      0x00\n        /* \"src/utils/AccessControl.sol\":2087:2136  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"src/Farm.sol\":6554:7000  function updateAllocation(uint256 pid, uint256 allocPoint, bool withUpdate) external onlyRole(GOVERNOR_ROLE) {... */\n    tag_114:\n        /* \"src/Farm.sol\":323:351  abi.encodePacked(\"Governor\") */\n      add(0x20, mload(0x40))\n      tag_281\n      swap1\n      tag_153\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Farm.sol\":313:352  keccak256(abi.encodePacked(\"Governor\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      tag_283\n        /* \"src/utils/AccessControl.sol\":2589:2593  role */\n      dup2\n        /* \"src/utils/AccessControl.sol\":2578:2588  _checkRole */\n      tag_140\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      jump\t// in\n    tag_283:\n        /* \"src/Farm.sol\":6678:6688  withUpdate */\n      dup2\n        /* \"src/Farm.sol\":6674:6734  if (withUpdate) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"src/Farm.sol\":6705:6722  massUpdatePools() */\n      tag_286\n        /* \"src/Farm.sol\":6705:6720  massUpdatePools */\n      tag_90\n        /* \"src/Farm.sol\":6705:6722  massUpdatePools() */\n      jump\t// in\n    tag_286:\n        /* \"src/Farm.sol\":6674:6734  if (withUpdate) {... */\n    tag_285:\n        /* \"src/Farm.sol\":6809:6819  allocPoint */\n      dup3\n        /* \"src/Farm.sol\":6781:6789  poolInfo */\n      0x06\n        /* \"src/Farm.sol\":6790:6793  pid */\n      dup6\n        /* \"src/Farm.sol\":6781:6794  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_287\n      jumpi\n      tag_288\n      tag_168\n      jump\t// in\n    tag_288:\n    tag_287:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"src/Farm.sol\":6781:6805  poolInfo[pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"src/Farm.sol\":6763:6778  totalAllocPoint */\n      sload(0x04)\n        /* \"src/Farm.sol\":6763:6805  totalAllocPoint - poolInfo[pid].allocPoint */\n      tag_290\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_290:\n        /* \"src/Farm.sol\":6762:6819  (totalAllocPoint - poolInfo[pid].allocPoint) + allocPoint */\n      tag_291\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_291:\n        /* \"src/Farm.sol\":6744:6759  totalAllocPoint */\n      0x04\n        /* \"src/Farm.sol\":6744:6819  totalAllocPoint = (totalAllocPoint - poolInfo[pid].allocPoint) + allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Farm.sol\":6830:6851  uint256 oldAllocPoint */\n      0x00\n        /* \"src/Farm.sol\":6854:6862  poolInfo */\n      0x06\n        /* \"src/Farm.sol\":6863:6866  pid */\n      dup6\n        /* \"src/Farm.sol\":6854:6867  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_292\n      jumpi\n      tag_293\n      tag_168\n      jump\t// in\n    tag_293:\n    tag_292:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"src/Farm.sol\":6854:6878  poolInfo[pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"src/Farm.sol\":6830:6878  uint256 oldAllocPoint = poolInfo[pid].allocPoint */\n      swap1\n      pop\n        /* \"src/Farm.sol\":6916:6926  allocPoint */\n      dup4\n        /* \"src/Farm.sol\":6889:6897  poolInfo */\n      0x06\n        /* \"src/Farm.sol\":6898:6901  pid */\n      dup7\n        /* \"src/Farm.sol\":6889:6902  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_295\n      jumpi\n      tag_296\n      tag_168\n      jump\t// in\n    tag_296:\n    tag_295:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"src/Farm.sol\":6889:6913  poolInfo[pid].allocPoint */\n      0x01\n      add\n        /* \"src/Farm.sol\":6889:6926  poolInfo[pid].allocPoint = allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Farm.sol\":6961:6964  pid */\n      dup5\n        /* \"src/Farm.sol\":6944:6992  UpdateAllocation(pid, allocPoint, oldAllocPoint) */\n      0x5b051d9271f3dacc9672ca07af039f84d81b973ee9174797456dd6238bf18fef\n        /* \"src/Farm.sol\":6966:6976  allocPoint */\n      dup6\n        /* \"src/Farm.sol\":6978:6991  oldAllocPoint */\n      dup4\n        /* \"src/Farm.sol\":6944:6992  UpdateAllocation(pid, allocPoint, oldAllocPoint) */\n      mload(0x40)\n      tag_298\n      swap3\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/Farm.sol\":6663:7000  {... */\n      pop\n        /* \"src/Farm.sol\":6554:7000  function updateAllocation(uint256 pid, uint256 allocPoint, bool withUpdate) external onlyRole(GOVERNOR_ROLE) {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Farm.sol\":7406:7668  function getPendingBatch(address user) external view returns (uint256) {... */\n    tag_118:\n        /* \"src/Farm.sol\":7468:7475  uint256 */\n      0x00\n        /* \"src/Farm.sol\":7488:7508  uint256 totalPending */\n      dup1\n        /* \"src/Farm.sol\":7526:7535  uint256 i */\n      0x00\n        /* \"src/Farm.sol\":7521:7631  for (uint256 i = 0 ; i < poolInfo.length ; i++) {... */\n    tag_300:\n        /* \"src/Farm.sol\":7546:7554  poolInfo */\n      0x06\n        /* \"src/Farm.sol\":7546:7561  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/Farm.sol\":7542:7543  i */\n      dup2\n        /* \"src/Farm.sol\":7542:7561  i < poolInfo.length */\n      lt\n        /* \"src/Farm.sol\":7521:7631  for (uint256 i = 0 ; i < poolInfo.length ; i++) {... */\n      iszero\n      tag_301\n      jumpi\n        /* \"src/Farm.sol\":7600:7619  getPending(i, user) */\n      tag_303\n        /* \"src/Farm.sol\":7611:7612  i */\n      dup2\n        /* \"src/Farm.sol\":7614:7618  user */\n      dup6\n        /* \"src/Farm.sol\":7600:7610  getPending */\n      tag_97\n        /* \"src/Farm.sol\":7600:7619  getPending(i, user) */\n      jump\t// in\n    tag_303:\n        /* \"src/Farm.sol\":7584:7619  totalPending += getPending(i, user) */\n      dup3\n      tag_304\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_304:\n      swap2\n      pop\n        /* \"src/Farm.sol\":7564:7567  i++ */\n      dup1\n      dup1\n      tag_305\n      swap1\n      tag_259\n      jump\t// in\n    tag_305:\n      swap2\n      pop\n      pop\n        /* \"src/Farm.sol\":7521:7631  for (uint256 i = 0 ; i < poolInfo.length ; i++) {... */\n      jump(tag_300)\n    tag_301:\n      pop\n        /* \"src/Farm.sol\":7648:7660  totalPending */\n      dup1\n        /* \"src/Farm.sol\":7641:7660  return totalPending */\n      swap2\n      pop\n      pop\n        /* \"src/Farm.sol\":7406:7668  function getPendingBatch(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/Farm.sol\":273:352  bytes32 public constant GOVERNOR_ROLE = keccak256(abi.encodePacked(\"Governor\")) */\n    tag_121:\n        /* \"src/Farm.sol\":323:351  abi.encodePacked(\"Governor\") */\n      add(0x20, mload(0x40))\n      tag_306\n      swap1\n      tag_153\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Farm.sol\":313:352  keccak256(abi.encodePacked(\"Governor\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Farm.sol\":273:352  bytes32 public constant GOVERNOR_ROLE = keccak256(abi.encodePacked(\"Governor\")) */\n      dup2\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":5390:5539  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_125:\n        /* \"src/utils/AccessControl.sol\":5474:5492  getRoleAdmin(role) */\n      tag_307\n        /* \"src/utils/AccessControl.sol\":5487:5491  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":5474:5486  getRoleAdmin */\n      tag_58\n        /* \"src/utils/AccessControl.sol\":5474:5492  getRoleAdmin(role) */\n      jump\t// in\n    tag_307:\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      tag_309\n        /* \"src/utils/AccessControl.sol\":2589:2593  role */\n      dup2\n        /* \"src/utils/AccessControl.sol\":2578:2588  _checkRole */\n      tag_140\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      jump\t// in\n    tag_309:\n        /* \"src/utils/AccessControl.sol\":5505:5531  _revokeRole(role, account) */\n      tag_311\n        /* \"src/utils/AccessControl.sol\":5517:5521  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":5523:5530  account */\n      dup4\n        /* \"src/utils/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_151\n        /* \"src/utils/AccessControl.sol\":5505:5531  _revokeRole(role, account) */\n      jump\t// in\n    tag_311:\n        /* \"src/utils/AccessControl.sol\":5390:5539  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Farm.sol\":9419:10176  function deposit(uint256 pid, uint256 amount) external {... */\n    tag_128:\n        /* \"src/Farm.sol\":9485:9506  PoolInfo storage pool */\n      0x00\n        /* \"src/Farm.sol\":9509:9517  poolInfo */\n      0x06\n        /* \"src/Farm.sol\":9518:9521  pid */\n      dup4\n        /* \"src/Farm.sol\":9509:9522  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_313\n      jumpi\n      tag_314\n      tag_168\n      jump\t// in\n    tag_314:\n    tag_313:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"src/Farm.sol\":9485:9522  PoolInfo storage pool = poolInfo[pid] */\n      swap1\n      pop\n        /* \"src/Farm.sol\":9533:9558  UserInfo storage userData */\n      0x00\n        /* \"src/Farm.sol\":9561:9569  userInfo */\n      0x07\n        /* \"src/Farm.sol\":9561:9574  userInfo[pid] */\n      0x00\n        /* \"src/Farm.sol\":9570:9573  pid */\n      dup6\n        /* \"src/Farm.sol\":9561:9574  userInfo[pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Farm.sol\":9561:9588  userInfo[pid][_msgSender()] */\n      0x00\n        /* \"src/Farm.sol\":9575:9587  _msgSender() */\n      tag_316\n        /* \"src/Farm.sol\":9575:9585  _msgSender */\n      tag_146\n        /* \"src/Farm.sol\":9575:9587  _msgSender() */\n      jump\t// in\n    tag_316:\n        /* \"src/Farm.sol\":9561:9588  userInfo[pid][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/Farm.sol\":9533:9588  UserInfo storage userData = userInfo[pid][_msgSender()] */\n      swap1\n      pop\n        /* \"src/Farm.sol\":9599:9614  updatePool(pid) */\n      tag_317\n        /* \"src/Farm.sol\":9610:9613  pid */\n      dup5\n        /* \"src/Farm.sol\":9599:9609  updatePool */\n      tag_81\n        /* \"src/Farm.sol\":9599:9614  updatePool(pid) */\n      jump\t// in\n    tag_317:\n        /* \"src/Farm.sol\":9649:9650  0 */\n      0x00\n        /* \"src/Farm.sol\":9631:9639  userData */\n      dup2\n        /* \"src/Farm.sol\":9631:9646  userData.amount */\n      0x00\n      add\n      sload\n        /* \"src/Farm.sol\":9631:9650  userData.amount > 0 */\n      gt\n        /* \"src/Farm.sol\":9627:9867  if (userData.amount > 0) {... */\n      iszero\n      tag_318\n      jumpi\n        /* \"src/Farm.sol\":9667:9682  uint256 pending */\n      0x00\n        /* \"src/Farm.sol\":9737:9745  userData */\n      dup2\n        /* \"src/Farm.sol\":9737:9756  userData.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"src/Farm.sol\":9729:9733  1e12 */\n      0xe8d4a51000\n        /* \"src/Farm.sol\":9705:9709  pool */\n      dup5\n        /* \"src/Farm.sol\":9705:9725  pool.accHYGTPerShare */\n      0x03\n      add\n      sload\n        /* \"src/Farm.sol\":9687:9695  userData */\n      dup5\n        /* \"src/Farm.sol\":9687:9702  userData.amount */\n      0x00\n      add\n      sload\n        /* \"src/Farm.sol\":9687:9725  userData.amount * pool.accHYGTPerShare */\n      tag_319\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_319:\n        /* \"src/Farm.sol\":9686:9733  (userData.amount * pool.accHYGTPerShare) / 1e12 */\n      tag_320\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_320:\n        /* \"src/Farm.sol\":9685:9756  ((userData.amount * pool.accHYGTPerShare) / 1e12) - userData.rewardDebt */\n      tag_321\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_321:\n        /* \"src/Farm.sol\":9667:9756  uint256 pending = ((userData.amount * pool.accHYGTPerShare) / 1e12) - userData.rewardDebt */\n      swap1\n      pop\n        /* \"src/Farm.sol\":9786:9787  0 */\n      0x00\n        /* \"src/Farm.sol\":9776:9783  pending */\n      dup2\n        /* \"src/Farm.sol\":9776:9787  pending > 0 */\n      gt\n        /* \"src/Farm.sol\":9773:9856  if(pending > 0) {... */\n      iszero\n      tag_322\n      jumpi\n        /* \"src/Farm.sol\":9808:9812  HYGT */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Farm.sol\":9808:9817  HYGT.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"src/Farm.sol\":9818:9830  _msgSender() */\n      tag_323\n        /* \"src/Farm.sol\":9818:9828  _msgSender */\n      tag_146\n        /* \"src/Farm.sol\":9818:9830  _msgSender() */\n      jump\t// in\n    tag_323:\n        /* \"src/Farm.sol\":9832:9839  pending */\n      dup4\n        /* \"src/Farm.sol\":9808:9840  HYGT.mint(_msgSender(), pending) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap3\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_324:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_326\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_326:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_327\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_327:\n      pop\n        /* \"src/Farm.sol\":9773:9856  if(pending > 0) {... */\n    tag_322:\n        /* \"src/Farm.sol\":9652:9867  {... */\n      pop\n        /* \"src/Farm.sol\":9627:9867  if (userData.amount > 0) {... */\n    tag_318:\n        /* \"src/Farm.sol\":9890:9891  0 */\n      0x00\n        /* \"src/Farm.sol\":9881:9887  amount */\n      dup4\n        /* \"src/Farm.sol\":9881:9891  amount > 0 */\n      gt\n        /* \"src/Farm.sol\":9877:10037  if (amount > 0) {... */\n      iszero\n      tag_328\n      jumpi\n        /* \"src/Farm.sol\":9908:9985  SafeERC20.safeTransferFrom(pool.lpToken, _msgSender(), address(this), amount) */\n      tag_329\n        /* \"src/Farm.sol\":9935:9939  pool */\n      dup3\n        /* \"src/Farm.sol\":9935:9947  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/Farm.sol\":9949:9961  _msgSender() */\n      tag_330\n        /* \"src/Farm.sol\":9949:9959  _msgSender */\n      tag_146\n        /* \"src/Farm.sol\":9949:9961  _msgSender() */\n      jump\t// in\n    tag_330:\n        /* \"src/Farm.sol\":9971:9975  this */\n      address\n        /* \"src/Farm.sol\":9978:9984  amount */\n      dup7\n        /* \"src/Farm.sol\":9908:9934  SafeERC20.safeTransferFrom */\n      tag_331\n        /* \"src/Farm.sol\":9908:9985  SafeERC20.safeTransferFrom(pool.lpToken, _msgSender(), address(this), amount) */\n      jump\t// in\n    tag_329:\n        /* \"src/Farm.sol\":10019:10025  amount */\n      dup3\n        /* \"src/Farm.sol\":10000:10008  userData */\n      dup2\n        /* \"src/Farm.sol\":10000:10015  userData.amount */\n      0x00\n      add\n      0x00\n        /* \"src/Farm.sol\":10000:10025  userData.amount += amount */\n      dup3\n      dup3\n      sload\n      tag_332\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_332:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Farm.sol\":9877:10037  if (amount > 0) {... */\n    tag_328:\n        /* \"src/Farm.sol\":10112:10116  1e12 */\n      0xe8d4a51000\n        /* \"src/Farm.sol\":10088:10092  pool */\n      dup3\n        /* \"src/Farm.sol\":10088:10108  pool.accHYGTPerShare */\n      0x03\n      add\n      sload\n        /* \"src/Farm.sol\":10070:10078  userData */\n      dup3\n        /* \"src/Farm.sol\":10070:10085  userData.amount */\n      0x00\n      add\n      sload\n        /* \"src/Farm.sol\":10070:10108  userData.amount * pool.accHYGTPerShare */\n      tag_333\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_333:\n        /* \"src/Farm.sol\":10069:10116  (userData.amount * pool.accHYGTPerShare) / 1e12 */\n      tag_334\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_334:\n        /* \"src/Farm.sol\":10047:10055  userData */\n      dup2\n        /* \"src/Farm.sol\":10047:10066  userData.rewardDebt */\n      0x01\n      add\n        /* \"src/Farm.sol\":10047:10116  userData.rewardDebt = (userData.amount * pool.accHYGTPerShare) / 1e12 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/Farm.sol\":10156:10159  pid */\n      dup4\n        /* \"src/Farm.sol\":10142:10154  _msgSender() */\n      tag_335\n        /* \"src/Farm.sol\":10142:10152  _msgSender */\n      tag_146\n        /* \"src/Farm.sol\":10142:10154  _msgSender() */\n      jump\t// in\n    tag_335:\n        /* \"src/Farm.sol\":10134:10168  Deposit(_msgSender(), pid, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"src/Farm.sol\":10161:10167  amount */\n      dup6\n        /* \"src/Farm.sol\":10134:10168  Deposit(_msgSender(), pid, amount) */\n      mload(0x40)\n      tag_336\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/Farm.sol\":9474:10176  {... */\n      pop\n      pop\n        /* \"src/Farm.sol\":9419:10176  function deposit(uint256 pid, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/ERC165.sol\":866:1023  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_132:\n        /* \"src/utils/ERC165.sol\":951:955  bool */\n      0x00\n        /* \"src/utils/ERC165.sol\":990:1015  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"src/utils/ERC165.sol\":975:1015  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"src/utils/ERC165.sol\":975:986  interfaceId */\n      dup3\n        /* \"src/utils/ERC165.sol\":975:1015  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"src/utils/ERC165.sol\":968:1015  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"src/utils/ERC165.sol\":866:1023  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":3433:3538  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_140:\n        /* \"src/utils/AccessControl.sol\":3500:3530  _checkRole(role, _msgSender()) */\n      tag_339\n        /* \"src/utils/AccessControl.sol\":3511:3515  role */\n      dup2\n        /* \"src/utils/AccessControl.sol\":3517:3529  _msgSender() */\n      tag_340\n        /* \"src/utils/AccessControl.sol\":3517:3527  _msgSender */\n      tag_146\n        /* \"src/utils/AccessControl.sol\":3517:3529  _msgSender() */\n      jump\t// in\n    tag_340:\n        /* \"src/utils/AccessControl.sol\":3500:3510  _checkRole */\n      tag_341\n        /* \"src/utils/AccessControl.sol\":3500:3530  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_339:\n        /* \"src/utils/AccessControl.sol\":3433:3538  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":7691:7929  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_143:\n        /* \"src/utils/AccessControl.sol\":7775:7797  hasRole(role, account) */\n      tag_343\n        /* \"src/utils/AccessControl.sol\":7783:7787  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":7789:7796  account */\n      dup3\n        /* \"src/utils/AccessControl.sol\":7775:7782  hasRole */\n      tag_101\n        /* \"src/utils/AccessControl.sol\":7775:7797  hasRole(role, account) */\n      jump\t// in\n    tag_343:\n        /* \"src/utils/AccessControl.sol\":7770:7922  if (!hasRole(role, account)) {... */\n      tag_344\n      jumpi\n        /* \"src/utils/AccessControl.sol\":7846:7850  true */\n      0x01\n        /* \"src/utils/AccessControl.sol\":7814:7820  _roles */\n      0x00\n        /* \"src/utils/AccessControl.sol\":7814:7826  _roles[role] */\n      dup1\n        /* \"src/utils/AccessControl.sol\":7821:7825  role */\n      dup5\n        /* \"src/utils/AccessControl.sol\":7814:7826  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/utils/AccessControl.sol\":7814:7834  _roles[role].members */\n      0x00\n      add\n        /* \"src/utils/AccessControl.sol\":7814:7843  _roles[role].members[account] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":7835:7842  account */\n      dup4\n        /* \"src/utils/AccessControl.sol\":7814:7843  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/utils/AccessControl.sol\":7814:7850  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/utils/AccessControl.sol\":7897:7909  _msgSender() */\n      tag_345\n        /* \"src/utils/AccessControl.sol\":7897:7907  _msgSender */\n      tag_146\n        /* \"src/utils/AccessControl.sol\":7897:7909  _msgSender() */\n      jump\t// in\n    tag_345:\n        /* \"src/utils/AccessControl.sol\":7870:7910  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/utils/AccessControl.sol\":7888:7895  account */\n      dup2\n        /* \"src/utils/AccessControl.sol\":7870:7910  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/utils/AccessControl.sol\":7882:7886  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":7870:7910  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/utils/AccessControl.sol\":7770:7922  if (!hasRole(role, account)) {... */\n    tag_344:\n        /* \"src/utils/AccessControl.sol\":7691:7929  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n    tag_146:\n        /* \"src/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"src/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"src/utils/Context.sol\":729:746  return msg.sender */\n      swap1\n      pop\n        /* \"src/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":8109:8348  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_151:\n        /* \"src/utils/AccessControl.sol\":8193:8215  hasRole(role, account) */\n      tag_348\n        /* \"src/utils/AccessControl.sol\":8201:8205  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":8207:8214  account */\n      dup3\n        /* \"src/utils/AccessControl.sol\":8193:8200  hasRole */\n      tag_101\n        /* \"src/utils/AccessControl.sol\":8193:8215  hasRole(role, account) */\n      jump\t// in\n    tag_348:\n        /* \"src/utils/AccessControl.sol\":8189:8341  if (hasRole(role, account)) {... */\n      iszero\n      tag_349\n      jumpi\n        /* \"src/utils/AccessControl.sol\":8264:8269  false */\n      0x00\n        /* \"src/utils/AccessControl.sol\":8232:8238  _roles */\n      dup1\n        /* \"src/utils/AccessControl.sol\":8232:8244  _roles[role] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":8239:8243  role */\n      dup5\n        /* \"src/utils/AccessControl.sol\":8232:8244  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/utils/AccessControl.sol\":8232:8252  _roles[role].members */\n      0x00\n      add\n        /* \"src/utils/AccessControl.sol\":8232:8261  _roles[role].members[account] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":8253:8260  account */\n      dup4\n        /* \"src/utils/AccessControl.sol\":8232:8261  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/utils/AccessControl.sol\":8232:8269  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/utils/AccessControl.sol\":8316:8328  _msgSender() */\n      tag_350\n        /* \"src/utils/AccessControl.sol\":8316:8326  _msgSender */\n      tag_146\n        /* \"src/utils/AccessControl.sol\":8316:8328  _msgSender() */\n      jump\t// in\n    tag_350:\n        /* \"src/utils/AccessControl.sol\":8289:8329  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/utils/AccessControl.sol\":8307:8314  account */\n      dup2\n        /* \"src/utils/AccessControl.sol\":8289:8329  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/utils/AccessControl.sol\":8301:8305  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":8289:8329  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/utils/AccessControl.sol\":8189:8341  if (hasRole(role, account)) {... */\n    tag_349:\n        /* \"src/utils/AccessControl.sol\":8109:8348  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/Farm.sol\":5775:6205  function _addPool(IERC20 lpToken, uint256 allocPoint, string memory symbol, uint256 lastRewardBlock) internal {... */\n    tag_164:\n        /* \"src/Farm.sol\":5896:5916  PoolInfo memory pool */\n      tag_352\n      tag_353\n      jump\t// in\n    tag_352:\n        /* \"src/Farm.sol\":5949:5956  lpToken */\n      dup5\n        /* \"src/Farm.sol\":5927:5931  pool */\n      dup2\n        /* \"src/Farm.sol\":5927:5939  pool.lpToken */\n      0x00\n      add\n        /* \"src/Farm.sol\":5927:5957  pool.lpToken = IERC20(lpToken) */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/Farm.sol\":5986:5996  allocPoint */\n      dup4\n        /* \"src/Farm.sol\":5968:5972  pool */\n      dup2\n        /* \"src/Farm.sol\":5968:5983  pool.allocPoint */\n      0x20\n      add\n        /* \"src/Farm.sol\":5968:5996  pool.allocPoint = allocPoint */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/Farm.sol\":6030:6045  lastRewardBlock */\n      dup2\n        /* \"src/Farm.sol\":6007:6011  pool */\n      dup2\n        /* \"src/Farm.sol\":6007:6027  pool.lastRewardBlock */\n      0x40\n      add\n        /* \"src/Farm.sol\":6007:6045  pool.lastRewardBlock = lastRewardBlock */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/Farm.sol\":6094:6102  poolInfo */\n      0x06\n        /* \"src/Farm.sol\":6108:6112  pool */\n      dup2\n        /* \"src/Farm.sol\":6094:6113  poolInfo.push(pool) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      pop\n      pop\n        /* \"src/Farm.sol\":6157:6158  1 */\n      0x01\n        /* \"src/Farm.sol\":6139:6147  poolInfo */\n      0x06\n        /* \"src/Farm.sol\":6139:6154  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"src/Farm.sol\":6139:6158  poolInfo.length - 1 */\n      tag_355\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_355:\n        /* \"src/Farm.sol\":6131:6197  AddPool(poolInfo.length - 1, address(lpToken), symbol, allocPoint) */\n      0x1fcb86d005de4723e36a6d74eeeb8529bac339b94c9241aed56567a2d214f105\n        /* \"src/Farm.sol\":6168:6175  lpToken */\n      dup7\n        /* \"src/Farm.sol\":6178:6184  symbol */\n      dup6\n        /* \"src/Farm.sol\":6186:6196  allocPoint */\n      dup8\n        /* \"src/Farm.sol\":6131:6197  AddPool(poolInfo.length - 1, address(lpToken), symbol, allocPoint) */\n      mload(0x40)\n      tag_356\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_357\n      jump\t// in\n    tag_356:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/Farm.sol\":5885:6205  {... */\n      pop\n        /* \"src/Farm.sol\":5775:6205  function _addPool(IERC20 lpToken, uint256 allocPoint, string memory symbol, uint256 lastRewardBlock) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/libraries/SafeERC20.sol\":776:953  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_193:\n        /* \"src/libraries/SafeERC20.sol\":859:945  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_359\n        /* \"src/libraries/SafeERC20.sol\":879:884  token */\n      dup4\n        /* \"src/libraries/SafeERC20.sol\":909:932  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"src/libraries/SafeERC20.sol\":934:936  to */\n      dup5\n        /* \"src/libraries/SafeERC20.sol\":938:943  value */\n      dup5\n        /* \"src/libraries/SafeERC20.sol\":886:944  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_360\n      swap3\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_360:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"src/libraries/SafeERC20.sol\":859:878  _callOptionalReturn */\n      tag_361\n        /* \"src/libraries/SafeERC20.sol\":859:945  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_359:\n        /* \"src/libraries/SafeERC20.sol\":776:953  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/libraries/SafeERC20.sol\":961:1166  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_331:\n        /* \"src/libraries/SafeERC20.sol\":1062:1158  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_363\n        /* \"src/libraries/SafeERC20.sol\":1082:1087  token */\n      dup5\n        /* \"src/libraries/SafeERC20.sol\":1112:1139  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"src/libraries/SafeERC20.sol\":1141:1145  from */\n      dup6\n        /* \"src/libraries/SafeERC20.sol\":1147:1149  to */\n      dup6\n        /* \"src/libraries/SafeERC20.sol\":1151:1156  value */\n      dup6\n        /* \"src/libraries/SafeERC20.sol\":1089:1157  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_364\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_365\n      jump\t// in\n    tag_364:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"src/libraries/SafeERC20.sol\":1062:1081  _callOptionalReturn */\n      tag_361\n        /* \"src/libraries/SafeERC20.sol\":1062:1158  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_363:\n        /* \"src/libraries/SafeERC20.sol\":961:1166  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":3828:4320  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_341:\n        /* \"src/utils/AccessControl.sol\":3917:3939  hasRole(role, account) */\n      tag_367\n        /* \"src/utils/AccessControl.sol\":3925:3929  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":3931:3938  account */\n      dup3\n        /* \"src/utils/AccessControl.sol\":3917:3924  hasRole */\n      tag_101\n        /* \"src/utils/AccessControl.sol\":3917:3939  hasRole(role, account) */\n      jump\t// in\n    tag_367:\n        /* \"src/utils/AccessControl.sol\":3912:4313  if (!hasRole(role, account)) {... */\n      tag_368\n      jumpi\n        /* \"src/utils/AccessControl.sol\":4105:4133  Strings.toHexString(account) */\n      tag_369\n        /* \"src/utils/AccessControl.sol\":4125:4132  account */\n      dup2\n        /* \"src/utils/AccessControl.sol\":4105:4124  Strings.toHexString */\n      tag_370\n        /* \"src/utils/AccessControl.sol\":4105:4133  Strings.toHexString(account) */\n      jump\t// in\n    tag_369:\n        /* \"src/utils/AccessControl.sol\":4206:4244  Strings.toHexString(uint256(role), 32) */\n      tag_371\n        /* \"src/utils/AccessControl.sol\":4234:4238  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":4226:4239  uint256(role) */\n      0x00\n      shr\n        /* \"src/utils/AccessControl.sol\":4241:4243  32 */\n      0x20\n        /* \"src/utils/AccessControl.sol\":4206:4225  Strings.toHexString */\n      tag_372\n        /* \"src/utils/AccessControl.sol\":4206:4244  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_371:\n        /* \"src/utils/AccessControl.sol\":4010:4267  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_373\n      swap3\n      swap2\n      swap1\n      tag_374\n      jump\t// in\n    tag_373:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/utils/AccessControl.sol\":3956:4301  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_375\n      swap2\n      swap1\n      tag_376\n      jump\t// in\n    tag_375:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/utils/AccessControl.sol\":3912:4313  if (!hasRole(role, account)) {... */\n    tag_368:\n        /* \"src/utils/AccessControl.sol\":3828:4320  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/libraries/SafeERC20.sol\":3664:4380  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_361:\n        /* \"src/libraries/SafeERC20.sol\":4088:4111  bytes memory returndata */\n      0x00\n        /* \"src/libraries/SafeERC20.sol\":4114:4183  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_378\n        /* \"src/libraries/SafeERC20.sol\":4142:4146  data */\n      dup3\n        /* \"src/libraries/SafeERC20.sol\":4114:4183  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"src/libraries/SafeERC20.sol\":4122:4127  token */\n      dup6\n        /* \"src/libraries/SafeERC20.sol\":4114:4141  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_379\n      swap1\n        /* \"src/libraries/SafeERC20.sol\":4114:4183  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_378:\n        /* \"src/libraries/SafeERC20.sol\":4088:4183  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"src/libraries/SafeERC20.sol\":4218:4219  0 */\n      0x00\n        /* \"src/libraries/SafeERC20.sol\":4198:4208  returndata */\n      dup2\n        /* \"src/libraries/SafeERC20.sol\":4198:4215  returndata.length */\n      mload\n        /* \"src/libraries/SafeERC20.sol\":4198:4219  returndata.length > 0 */\n      gt\n        /* \"src/libraries/SafeERC20.sol\":4194:4373  if (returndata.length > 0) {... */\n      iszero\n      tag_380\n      jumpi\n        /* \"src/libraries/SafeERC20.sol\":4295:4305  returndata */\n      dup1\n        /* \"src/libraries/SafeERC20.sol\":4284:4314  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_381\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_381:\n        /* \"src/libraries/SafeERC20.sol\":4276:4361  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_382\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_383\n      swap1\n      tag_384\n      jump\t// in\n    tag_383:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_382:\n        /* \"src/libraries/SafeERC20.sol\":4194:4373  if (returndata.length > 0) {... */\n    tag_380:\n        /* \"src/libraries/SafeERC20.sol\":3734:4380  {... */\n      pop\n        /* \"src/libraries/SafeERC20.sol\":3664:4380  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/libraries/Strings.sol\":2471:2622  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_370:\n        /* \"src/libraries/Strings.sol\":2529:2542  string memory */\n      0x60\n        /* \"src/libraries/Strings.sol\":2562:2614  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_386\n        /* \"src/libraries/Strings.sol\":2590:2594  addr */\n      dup3\n        /* \"src/libraries/Strings.sol\":2574:2596  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/libraries/Strings.sol\":346:348  20 */\n      0x14\n        /* \"src/libraries/Strings.sol\":2562:2614  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"src/libraries/Strings.sol\":2562:2573  toHexString */\n      tag_372\n        /* \"src/libraries/Strings.sol\":2562:2614  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_386:\n        /* \"src/libraries/Strings.sol\":2555:2614  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"src/libraries/Strings.sol\":2471:2622  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/libraries/Strings.sol\":1867:2314  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_372:\n        /* \"src/libraries/Strings.sol\":1942:1955  string memory */\n      0x60\n        /* \"src/libraries/Strings.sol\":1968:1987  bytes memory buffer */\n      0x00\n        /* \"src/libraries/Strings.sol\":2013:2014  2 */\n      0x02\n        /* \"src/libraries/Strings.sol\":2004:2010  length */\n      dup4\n        /* \"src/libraries/Strings.sol\":2000:2001  2 */\n      0x02\n        /* \"src/libraries/Strings.sol\":2000:2010  2 * length */\n      tag_388\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_388:\n        /* \"src/libraries/Strings.sol\":2000:2014  2 * length + 2 */\n      tag_389\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_389:\n        /* \"src/libraries/Strings.sol\":1990:2015  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_390\n      jumpi\n      tag_391\n      tag_392\n      jump\t// in\n    tag_391:\n    tag_390:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_393\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_393:\n      pop\n        /* \"src/libraries/Strings.sol\":1968:2015  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"src/libraries/Strings.sol\":2026:2041  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"src/libraries/Strings.sol\":2026:2032  buffer */\n      dup2\n        /* \"src/libraries/Strings.sol\":2033:2034  0 */\n      0x00\n        /* \"src/libraries/Strings.sol\":2026:2035  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_394\n      jumpi\n      tag_395\n      tag_168\n      jump\t// in\n    tag_395:\n    tag_394:\n      0x20\n      add\n      add\n        /* \"src/libraries/Strings.sol\":2026:2041  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"src/libraries/Strings.sol\":2052:2067  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"src/libraries/Strings.sol\":2052:2058  buffer */\n      dup2\n        /* \"src/libraries/Strings.sol\":2059:2060  1 */\n      0x01\n        /* \"src/libraries/Strings.sol\":2052:2061  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_396\n      jumpi\n      tag_397\n      tag_168\n      jump\t// in\n    tag_397:\n    tag_396:\n      0x20\n      add\n      add\n        /* \"src/libraries/Strings.sol\":2052:2067  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"src/libraries/Strings.sol\":2083:2092  uint256 i */\n      0x00\n        /* \"src/libraries/Strings.sol\":2108:2109  1 */\n      0x01\n        /* \"src/libraries/Strings.sol\":2099:2105  length */\n      dup5\n        /* \"src/libraries/Strings.sol\":2095:2096  2 */\n      0x02\n        /* \"src/libraries/Strings.sol\":2095:2105  2 * length */\n      tag_401\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_401:\n        /* \"src/libraries/Strings.sol\":2095:2109  2 * length + 1 */\n      tag_402\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_402:\n        /* \"src/libraries/Strings.sol\":2083:2109  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"src/libraries/Strings.sol\":2078:2209  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_398:\n        /* \"src/libraries/Strings.sol\":2115:2116  1 */\n      0x01\n        /* \"src/libraries/Strings.sol\":2111:2112  i */\n      dup2\n        /* \"src/libraries/Strings.sol\":2111:2116  i > 1 */\n      gt\n        /* \"src/libraries/Strings.sol\":2078:2209  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_399\n      jumpi\n        /* \"src/libraries/Strings.sol\":2150:2158  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"src/libraries/Strings.sol\":2167:2170  0xf */\n      0x0f\n        /* \"src/libraries/Strings.sol\":2159:2164  value */\n      dup7\n        /* \"src/libraries/Strings.sol\":2159:2170  value & 0xf */\n      and\n        /* \"src/libraries/Strings.sol\":2150:2171  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_403\n      jumpi\n      tag_404\n      tag_168\n      jump\t// in\n    tag_404:\n    tag_403:\n      byte\n      0xf8\n      shl\n        /* \"src/libraries/Strings.sol\":2138:2144  buffer */\n      dup3\n        /* \"src/libraries/Strings.sol\":2145:2146  i */\n      dup3\n        /* \"src/libraries/Strings.sol\":2138:2147  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_405\n      jumpi\n      tag_406\n      tag_168\n      jump\t// in\n    tag_406:\n    tag_405:\n      0x20\n      add\n      add\n        /* \"src/libraries/Strings.sol\":2138:2171  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"src/libraries/Strings.sol\":2196:2197  4 */\n      0x04\n        /* \"src/libraries/Strings.sol\":2186:2197  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"src/libraries/Strings.sol\":2118:2121  --i */\n      dup1\n      tag_407\n      swap1\n      tag_408\n      jump\t// in\n    tag_407:\n      swap1\n      pop\n        /* \"src/libraries/Strings.sol\":2078:2209  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_398)\n    tag_399:\n      pop\n        /* \"src/libraries/Strings.sol\":2236:2237  0 */\n      0x00\n        /* \"src/libraries/Strings.sol\":2227:2232  value */\n      dup5\n        /* \"src/libraries/Strings.sol\":2227:2237  value == 0 */\n      eq\n        /* \"src/libraries/Strings.sol\":2219:2274  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_409\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_410\n      swap1\n      tag_411\n      jump\t// in\n    tag_410:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_409:\n        /* \"src/libraries/Strings.sol\":2299:2305  buffer */\n      dup1\n        /* \"src/libraries/Strings.sol\":2285:2306  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"src/libraries/Strings.sol\":1867:2314  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/libraries/Address.sol\":4207:4436  function functionCall(... */\n    tag_379:\n        /* \"src/libraries/Address.sol\":4344:4356  bytes memory */\n      0x60\n        /* \"src/libraries/Address.sol\":4376:4428  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_413\n        /* \"src/libraries/Address.sol\":4398:4404  target */\n      dup5\n        /* \"src/libraries/Address.sol\":4406:4410  data */\n      dup5\n        /* \"src/libraries/Address.sol\":4412:4413  0 */\n      0x00\n        /* \"src/libraries/Address.sol\":4415:4427  errorMessage */\n      dup6\n        /* \"src/libraries/Address.sol\":4376:4397  functionCallWithValue */\n      tag_414\n        /* \"src/libraries/Address.sol\":4376:4428  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_413:\n        /* \"src/libraries/Address.sol\":4369:4428  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"src/libraries/Address.sol\":4207:4436  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/libraries/Address.sol\":5293:5748  function functionCallWithValue(... */\n    tag_414:\n        /* \"src/libraries/Address.sol\":5463:5475  bytes memory */\n      0x60\n        /* \"src/libraries/Address.sol\":5521:5526  value */\n      dup3\n        /* \"src/libraries/Address.sol\":5496:5517  address(this).balance */\n      selfbalance\n        /* \"src/libraries/Address.sol\":5496:5526  address(this).balance >= value */\n      lt\n      iszero\n        /* \"src/libraries/Address.sol\":5488:5569  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_416\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_417\n      swap1\n      tag_418\n      jump\t// in\n    tag_417:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_416:\n        /* \"src/libraries/Address.sol\":5581:5593  bool success */\n      0x00\n        /* \"src/libraries/Address.sol\":5595:5618  bytes memory returndata */\n      dup1\n        /* \"src/libraries/Address.sol\":5622:5628  target */\n      dup7\n        /* \"src/libraries/Address.sol\":5622:5633  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/libraries/Address.sol\":5641:5646  value */\n      dup6\n        /* \"src/libraries/Address.sol\":5648:5652  data */\n      dup8\n        /* \"src/libraries/Address.sol\":5622:5653  target.call{value: value}(data) */\n      mload(0x40)\n      tag_419\n      swap2\n      swap1\n      tag_420\n      jump\t// in\n    tag_419:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_423\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_422)\n    tag_423:\n      0x60\n      swap2\n      pop\n    tag_422:\n      pop\n        /* \"src/libraries/Address.sol\":5580:5653  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"src/libraries/Address.sol\":5671:5740  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_424\n        /* \"src/libraries/Address.sol\":5698:5704  target */\n      dup8\n        /* \"src/libraries/Address.sol\":5706:5713  success */\n      dup4\n        /* \"src/libraries/Address.sol\":5715:5725  returndata */\n      dup4\n        /* \"src/libraries/Address.sol\":5727:5739  errorMessage */\n      dup8\n        /* \"src/libraries/Address.sol\":5671:5697  verifyCallResultFromTarget */\n      tag_425\n        /* \"src/libraries/Address.sol\":5671:5740  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_424:\n        /* \"src/libraries/Address.sol\":5664:5740  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"src/libraries/Address.sol\":5293:5748  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/libraries/Address.sol\":7866:8510  function verifyCallResultFromTarget(... */\n    tag_425:\n        /* \"src/libraries/Address.sol\":8051:8063  bytes memory */\n      0x60\n        /* \"src/libraries/Address.sol\":8080:8087  success */\n      dup4\n        /* \"src/libraries/Address.sol\":8076:8503  if (success) {... */\n      iszero\n      tag_427\n      jumpi\n        /* \"src/libraries/Address.sol\":8129:8130  0 */\n      0x00\n        /* \"src/libraries/Address.sol\":8108:8118  returndata */\n      dup4\n        /* \"src/libraries/Address.sol\":8108:8125  returndata.length */\n      mload\n        /* \"src/libraries/Address.sol\":8108:8130  returndata.length == 0 */\n      sub\n        /* \"src/libraries/Address.sol\":8104:8394  if (returndata.length == 0) {... */\n      tag_428\n      jumpi\n        /* \"src/libraries/Address.sol\":8326:8344  isContract(target) */\n      tag_429\n        /* \"src/libraries/Address.sol\":8337:8343  target */\n      dup6\n        /* \"src/libraries/Address.sol\":8326:8336  isContract */\n      tag_430\n        /* \"src/libraries/Address.sol\":8326:8344  isContract(target) */\n      jump\t// in\n    tag_429:\n        /* \"src/libraries/Address.sol\":8318:8378  require(isContract(target), \"Address: call to non-contract\") */\n      tag_431\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_432\n      swap1\n      tag_433\n      jump\t// in\n    tag_432:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_431:\n        /* \"src/libraries/Address.sol\":8104:8394  if (returndata.length == 0) {... */\n    tag_428:\n        /* \"src/libraries/Address.sol\":8415:8425  returndata */\n      dup3\n        /* \"src/libraries/Address.sol\":8408:8425  return returndata */\n      swap1\n      pop\n      jump(tag_426)\n        /* \"src/libraries/Address.sol\":8076:8503  if (success) {... */\n    tag_427:\n        /* \"src/libraries/Address.sol\":8458:8491  _revert(returndata, errorMessage) */\n      tag_435\n        /* \"src/libraries/Address.sol\":8466:8476  returndata */\n      dup4\n        /* \"src/libraries/Address.sol\":8478:8490  errorMessage */\n      dup4\n        /* \"src/libraries/Address.sol\":8458:8465  _revert */\n      tag_436\n        /* \"src/libraries/Address.sol\":8458:8491  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_435:\n        /* \"src/libraries/Address.sol\":7866:8510  function verifyCallResultFromTarget(... */\n    tag_426:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/libraries/Address.sol\":1451:1777  function isContract(address account) internal view returns (bool) {... */\n    tag_430:\n        /* \"src/libraries/Address.sol\":1511:1515  bool */\n      0x00\n        /* \"src/libraries/Address.sol\":1768:1769  0 */\n      dup1\n        /* \"src/libraries/Address.sol\":1746:1753  account */\n      dup3\n        /* \"src/libraries/Address.sol\":1746:1765  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"src/libraries/Address.sol\":1746:1769  account.code.length > 0 */\n      gt\n        /* \"src/libraries/Address.sol\":1739:1769  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"src/libraries/Address.sol\":1451:1777  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/libraries/Address.sol\":9052:9604  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_436:\n        /* \"src/libraries/Address.sol\":9233:9234  0 */\n      0x00\n        /* \"src/libraries/Address.sol\":9213:9223  returndata */\n      dup3\n        /* \"src/libraries/Address.sol\":9213:9230  returndata.length */\n      mload\n        /* \"src/libraries/Address.sol\":9213:9234  returndata.length > 0 */\n      gt\n        /* \"src/libraries/Address.sol\":9209:9597  if (returndata.length > 0) {... */\n      iszero\n      tag_439\n      jumpi\n        /* \"src/libraries/Address.sol\":9445:9455  returndata */\n      dup2\n        /* \"src/libraries/Address.sol\":9439:9456  mload(returndata) */\n      mload\n        /* \"src/libraries/Address.sol\":9502:9517  returndata_size */\n      dup1\n        /* \"src/libraries/Address.sol\":9489:9499  returndata */\n      dup4\n        /* \"src/libraries/Address.sol\":9485:9487  32 */\n      0x20\n        /* \"src/libraries/Address.sol\":9481:9500  add(32, returndata) */\n      add\n        /* \"src/libraries/Address.sol\":9474:9518  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"src/libraries/Address.sol\":9209:9597  if (returndata.length > 0) {... */\n    tag_439:\n        /* \"src/libraries/Address.sol\":9572:9584  errorMessage */\n      dup1\n        /* \"src/libraries/Address.sol\":9565:9585  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_441\n      swap2\n      swap1\n      tag_376\n      jump\t// in\n    tag_441:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_353:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_442:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_443:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_444:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_445:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_446:\n        /* \"#utility.yul\":561:584   */\n      tag_529\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_445\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_530\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_530:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_447:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_532\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_446\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_34:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_535\n      tag_443\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":833:952   */\n    tag_534:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_536\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_447\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_448:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_449:\n        /* \"#utility.yul\":1268:1289   */\n      tag_539\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_448\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_37:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_541\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_449\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_450:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1719   */\n    tag_451:\n        /* \"#utility.yul\":1688:1712   */\n      tag_544\n        /* \"#utility.yul\":1706:1711   */\n      dup2\n        /* \"#utility.yul\":1688:1712   */\n      tag_450\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":1683:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1713   */\n      mstore\n        /* \"#utility.yul\":1601:1719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1725:1947   */\n    tag_41:\n        /* \"#utility.yul\":1818:1822   */\n      0x00\n        /* \"#utility.yul\":1856:1858   */\n      0x20\n        /* \"#utility.yul\":1845:1854   */\n      dup3\n        /* \"#utility.yul\":1841:1859   */\n      add\n        /* \"#utility.yul\":1833:1859   */\n      swap1\n      pop\n        /* \"#utility.yul\":1869:1940   */\n      tag_546\n        /* \"#utility.yul\":1937:1938   */\n      0x00\n        /* \"#utility.yul\":1926:1935   */\n      dup4\n        /* \"#utility.yul\":1922:1939   */\n      add\n        /* \"#utility.yul\":1913:1919   */\n      dup5\n        /* \"#utility.yul\":1869:1940   */\n      tag_451\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":1725:1947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1953:2075   */\n    tag_452:\n        /* \"#utility.yul\":2026:2050   */\n      tag_548\n        /* \"#utility.yul\":2044:2049   */\n      dup2\n        /* \"#utility.yul\":2026:2050   */\n      tag_450\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":2019:2024   */\n      dup2\n        /* \"#utility.yul\":2016:2051   */\n      eq\n        /* \"#utility.yul\":2006:2069   */\n      tag_549\n      jumpi\n        /* \"#utility.yul\":2065:2066   */\n      0x00\n        /* \"#utility.yul\":2062:2063   */\n      dup1\n        /* \"#utility.yul\":2055:2067   */\n      revert\n        /* \"#utility.yul\":2006:2069   */\n    tag_549:\n        /* \"#utility.yul\":1953:2075   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2081:2220   */\n    tag_453:\n        /* \"#utility.yul\":2127:2132   */\n      0x00\n        /* \"#utility.yul\":2165:2171   */\n      dup2\n        /* \"#utility.yul\":2152:2172   */\n      calldataload\n        /* \"#utility.yul\":2143:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2181:2214   */\n      tag_551\n        /* \"#utility.yul\":2208:2213   */\n      dup2\n        /* \"#utility.yul\":2181:2214   */\n      tag_452\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":2081:2220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2226:2555   */\n    tag_44:\n        /* \"#utility.yul\":2285:2291   */\n      0x00\n        /* \"#utility.yul\":2334:2336   */\n      0x20\n        /* \"#utility.yul\":2322:2331   */\n      dup3\n        /* \"#utility.yul\":2313:2320   */\n      dup5\n        /* \"#utility.yul\":2309:2332   */\n      sub\n        /* \"#utility.yul\":2305:2337   */\n      slt\n        /* \"#utility.yul\":2302:2421   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":2340:2419   */\n      tag_554\n      tag_443\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":2302:2421   */\n    tag_553:\n        /* \"#utility.yul\":2460:2461   */\n      0x00\n        /* \"#utility.yul\":2485:2538   */\n      tag_555\n        /* \"#utility.yul\":2530:2537   */\n      dup5\n        /* \"#utility.yul\":2521:2527   */\n      dup3\n        /* \"#utility.yul\":2510:2519   */\n      dup6\n        /* \"#utility.yul\":2506:2528   */\n      add\n        /* \"#utility.yul\":2485:2538   */\n      tag_453\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":2475:2538   */\n      swap2\n      pop\n        /* \"#utility.yul\":2431:2548   */\n      pop\n        /* \"#utility.yul\":2226:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2687   */\n    tag_454:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2638:2680   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2631:2636   */\n      dup3\n        /* \"#utility.yul\":2627:2681   */\n      and\n        /* \"#utility.yul\":2616:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2753   */\n    tag_455:\n        /* \"#utility.yul\":2721:2724   */\n      0x00\n        /* \"#utility.yul\":2742:2747   */\n      dup2\n        /* \"#utility.yul\":2735:2747   */\n      swap1\n      pop\n        /* \"#utility.yul\":2693:2753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2759:2901   */\n    tag_456:\n        /* \"#utility.yul\":2809:2818   */\n      0x00\n        /* \"#utility.yul\":2842:2895   */\n      tag_559\n        /* \"#utility.yul\":2860:2894   */\n      tag_560\n        /* \"#utility.yul\":2869:2893   */\n      tag_561\n        /* \"#utility.yul\":2887:2892   */\n      dup5\n        /* \"#utility.yul\":2869:2893   */\n      tag_454\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":2860:2894   */\n      tag_455\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":2842:2895   */\n      tag_454\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":2829:2895   */\n      swap1\n      pop\n        /* \"#utility.yul\":2759:2901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2907:3033   */\n    tag_457:\n        /* \"#utility.yul\":2957:2966   */\n      0x00\n        /* \"#utility.yul\":2990:3027   */\n      tag_563\n        /* \"#utility.yul\":3021:3026   */\n      dup3\n        /* \"#utility.yul\":2990:3027   */\n      tag_456\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":2977:3027   */\n      swap1\n      pop\n        /* \"#utility.yul\":2907:3033   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3039:3180   */\n    tag_458:\n        /* \"#utility.yul\":3104:3113   */\n      0x00\n        /* \"#utility.yul\":3137:3174   */\n      tag_565\n        /* \"#utility.yul\":3168:3173   */\n      dup3\n        /* \"#utility.yul\":3137:3174   */\n      tag_457\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":3124:3174   */\n      swap1\n      pop\n        /* \"#utility.yul\":3039:3180   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3186:3347   */\n    tag_459:\n        /* \"#utility.yul\":3288:3340   */\n      tag_567\n        /* \"#utility.yul\":3334:3339   */\n      dup2\n        /* \"#utility.yul\":3288:3340   */\n      tag_458\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":3283:3286   */\n      dup3\n        /* \"#utility.yul\":3276:3341   */\n      mstore\n        /* \"#utility.yul\":3186:3347   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3353:3936   */\n    tag_47:\n        /* \"#utility.yul\":3545:3549   */\n      0x00\n        /* \"#utility.yul\":3583:3586   */\n      0x80\n        /* \"#utility.yul\":3572:3581   */\n      dup3\n        /* \"#utility.yul\":3568:3587   */\n      add\n        /* \"#utility.yul\":3560:3587   */\n      swap1\n      pop\n        /* \"#utility.yul\":3597:3683   */\n      tag_569\n        /* \"#utility.yul\":3680:3681   */\n      0x00\n        /* \"#utility.yul\":3669:3678   */\n      dup4\n        /* \"#utility.yul\":3665:3682   */\n      add\n        /* \"#utility.yul\":3656:3662   */\n      dup8\n        /* \"#utility.yul\":3597:3683   */\n      tag_459\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":3693:3765   */\n      tag_570\n        /* \"#utility.yul\":3761:3763   */\n      0x20\n        /* \"#utility.yul\":3750:3759   */\n      dup4\n        /* \"#utility.yul\":3746:3764   */\n      add\n        /* \"#utility.yul\":3737:3743   */\n      dup7\n        /* \"#utility.yul\":3693:3765   */\n      tag_451\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":3775:3847   */\n      tag_571\n        /* \"#utility.yul\":3843:3845   */\n      0x40\n        /* \"#utility.yul\":3832:3841   */\n      dup4\n        /* \"#utility.yul\":3828:3846   */\n      add\n        /* \"#utility.yul\":3819:3825   */\n      dup6\n        /* \"#utility.yul\":3775:3847   */\n      tag_451\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":3857:3929   */\n      tag_572\n        /* \"#utility.yul\":3925:3927   */\n      0x60\n        /* \"#utility.yul\":3914:3923   */\n      dup4\n        /* \"#utility.yul\":3910:3928   */\n      add\n        /* \"#utility.yul\":3901:3907   */\n      dup5\n        /* \"#utility.yul\":3857:3929   */\n      tag_451\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":3353:3936   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3942:4082   */\n    tag_460:\n        /* \"#utility.yul\":4006:4015   */\n      0x00\n        /* \"#utility.yul\":4039:4076   */\n      tag_574\n        /* \"#utility.yul\":4070:4075   */\n      dup3\n        /* \"#utility.yul\":4039:4076   */\n      tag_457\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":4026:4076   */\n      swap1\n      pop\n        /* \"#utility.yul\":3942:4082   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4088:4247   */\n    tag_461:\n        /* \"#utility.yul\":4189:4240   */\n      tag_576\n        /* \"#utility.yul\":4234:4239   */\n      dup2\n        /* \"#utility.yul\":4189:4240   */\n      tag_460\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":4184:4187   */\n      dup3\n        /* \"#utility.yul\":4177:4241   */\n      mstore\n        /* \"#utility.yul\":4088:4247   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4253:4503   */\n    tag_54:\n        /* \"#utility.yul\":4360:4364   */\n      0x00\n        /* \"#utility.yul\":4398:4400   */\n      0x20\n        /* \"#utility.yul\":4387:4396   */\n      dup3\n        /* \"#utility.yul\":4383:4401   */\n      add\n        /* \"#utility.yul\":4375:4401   */\n      swap1\n      pop\n        /* \"#utility.yul\":4411:4496   */\n      tag_578\n        /* \"#utility.yul\":4493:4494   */\n      0x00\n        /* \"#utility.yul\":4482:4491   */\n      dup4\n        /* \"#utility.yul\":4478:4495   */\n      add\n        /* \"#utility.yul\":4469:4475   */\n      dup5\n        /* \"#utility.yul\":4411:4496   */\n      tag_461\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":4253:4503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4509:4586   */\n    tag_462:\n        /* \"#utility.yul\":4546:4553   */\n      0x00\n        /* \"#utility.yul\":4575:4580   */\n      dup2\n        /* \"#utility.yul\":4564:4580   */\n      swap1\n      pop\n        /* \"#utility.yul\":4509:4586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4592:4714   */\n    tag_463:\n        /* \"#utility.yul\":4665:4689   */\n      tag_581\n        /* \"#utility.yul\":4683:4688   */\n      dup2\n        /* \"#utility.yul\":4665:4689   */\n      tag_462\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":4658:4663   */\n      dup2\n        /* \"#utility.yul\":4655:4690   */\n      eq\n        /* \"#utility.yul\":4645:4708   */\n      tag_582\n      jumpi\n        /* \"#utility.yul\":4704:4705   */\n      0x00\n        /* \"#utility.yul\":4701:4702   */\n      dup1\n        /* \"#utility.yul\":4694:4706   */\n      revert\n        /* \"#utility.yul\":4645:4708   */\n    tag_582:\n        /* \"#utility.yul\":4592:4714   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4720:4859   */\n    tag_464:\n        /* \"#utility.yul\":4766:4771   */\n      0x00\n        /* \"#utility.yul\":4804:4810   */\n      dup2\n        /* \"#utility.yul\":4791:4811   */\n      calldataload\n        /* \"#utility.yul\":4782:4811   */\n      swap1\n      pop\n        /* \"#utility.yul\":4820:4853   */\n      tag_584\n        /* \"#utility.yul\":4847:4852   */\n      dup2\n        /* \"#utility.yul\":4820:4853   */\n      tag_463\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":4720:4859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4865:5194   */\n    tag_57:\n        /* \"#utility.yul\":4924:4930   */\n      0x00\n        /* \"#utility.yul\":4973:4975   */\n      0x20\n        /* \"#utility.yul\":4961:4970   */\n      dup3\n        /* \"#utility.yul\":4952:4959   */\n      dup5\n        /* \"#utility.yul\":4948:4971   */\n      sub\n        /* \"#utility.yul\":4944:4976   */\n      slt\n        /* \"#utility.yul\":4941:5060   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":4979:5058   */\n      tag_587\n      tag_443\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":4941:5060   */\n    tag_586:\n        /* \"#utility.yul\":5099:5100   */\n      0x00\n        /* \"#utility.yul\":5124:5177   */\n      tag_588\n        /* \"#utility.yul\":5169:5176   */\n      dup5\n        /* \"#utility.yul\":5160:5166   */\n      dup3\n        /* \"#utility.yul\":5149:5158   */\n      dup6\n        /* \"#utility.yul\":5145:5167   */\n      add\n        /* \"#utility.yul\":5124:5177   */\n      tag_464\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":5114:5177   */\n      swap2\n      pop\n        /* \"#utility.yul\":5070:5187   */\n      pop\n        /* \"#utility.yul\":4865:5194   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5200:5318   */\n    tag_465:\n        /* \"#utility.yul\":5287:5311   */\n      tag_590\n        /* \"#utility.yul\":5305:5310   */\n      dup2\n        /* \"#utility.yul\":5287:5311   */\n      tag_462\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":5282:5285   */\n      dup3\n        /* \"#utility.yul\":5275:5312   */\n      mstore\n        /* \"#utility.yul\":5200:5318   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5324:5546   */\n    tag_60:\n        /* \"#utility.yul\":5417:5421   */\n      0x00\n        /* \"#utility.yul\":5455:5457   */\n      0x20\n        /* \"#utility.yul\":5444:5453   */\n      dup3\n        /* \"#utility.yul\":5440:5458   */\n      add\n        /* \"#utility.yul\":5432:5458   */\n      swap1\n      pop\n        /* \"#utility.yul\":5468:5539   */\n      tag_592\n        /* \"#utility.yul\":5536:5537   */\n      0x00\n        /* \"#utility.yul\":5525:5534   */\n      dup4\n        /* \"#utility.yul\":5521:5538   */\n      add\n        /* \"#utility.yul\":5512:5518   */\n      dup5\n        /* \"#utility.yul\":5468:5539   */\n      tag_465\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":5324:5546   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5552:5648   */\n    tag_466:\n        /* \"#utility.yul\":5589:5596   */\n      0x00\n        /* \"#utility.yul\":5618:5642   */\n      tag_594\n        /* \"#utility.yul\":5636:5641   */\n      dup3\n        /* \"#utility.yul\":5618:5642   */\n      tag_454\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":5607:5642   */\n      swap1\n      pop\n        /* \"#utility.yul\":5552:5648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5654:5776   */\n    tag_467:\n        /* \"#utility.yul\":5727:5751   */\n      tag_596\n        /* \"#utility.yul\":5745:5750   */\n      dup2\n        /* \"#utility.yul\":5727:5751   */\n      tag_466\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":5720:5725   */\n      dup2\n        /* \"#utility.yul\":5717:5752   */\n      eq\n        /* \"#utility.yul\":5707:5770   */\n      tag_597\n      jumpi\n        /* \"#utility.yul\":5766:5767   */\n      0x00\n        /* \"#utility.yul\":5763:5764   */\n      dup1\n        /* \"#utility.yul\":5756:5768   */\n      revert\n        /* \"#utility.yul\":5707:5770   */\n    tag_597:\n        /* \"#utility.yul\":5654:5776   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5782:5921   */\n    tag_468:\n        /* \"#utility.yul\":5828:5833   */\n      0x00\n        /* \"#utility.yul\":5866:5872   */\n      dup2\n        /* \"#utility.yul\":5853:5873   */\n      calldataload\n        /* \"#utility.yul\":5844:5873   */\n      swap1\n      pop\n        /* \"#utility.yul\":5882:5915   */\n      tag_599\n        /* \"#utility.yul\":5909:5914   */\n      dup2\n        /* \"#utility.yul\":5882:5915   */\n      tag_467\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":5782:5921   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5927:6401   */\n    tag_63:\n        /* \"#utility.yul\":5995:6001   */\n      0x00\n        /* \"#utility.yul\":6003:6009   */\n      dup1\n        /* \"#utility.yul\":6052:6054   */\n      0x40\n        /* \"#utility.yul\":6040:6049   */\n      dup4\n        /* \"#utility.yul\":6031:6038   */\n      dup6\n        /* \"#utility.yul\":6027:6050   */\n      sub\n        /* \"#utility.yul\":6023:6055   */\n      slt\n        /* \"#utility.yul\":6020:6139   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":6058:6137   */\n      tag_602\n      tag_443\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":6020:6139   */\n    tag_601:\n        /* \"#utility.yul\":6178:6179   */\n      0x00\n        /* \"#utility.yul\":6203:6256   */\n      tag_603\n        /* \"#utility.yul\":6248:6255   */\n      dup6\n        /* \"#utility.yul\":6239:6245   */\n      dup3\n        /* \"#utility.yul\":6228:6237   */\n      dup7\n        /* \"#utility.yul\":6224:6246   */\n      add\n        /* \"#utility.yul\":6203:6256   */\n      tag_464\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":6193:6256   */\n      swap3\n      pop\n        /* \"#utility.yul\":6149:6266   */\n      pop\n        /* \"#utility.yul\":6305:6307   */\n      0x20\n        /* \"#utility.yul\":6331:6384   */\n      tag_604\n        /* \"#utility.yul\":6376:6383   */\n      dup6\n        /* \"#utility.yul\":6367:6373   */\n      dup3\n        /* \"#utility.yul\":6356:6365   */\n      dup7\n        /* \"#utility.yul\":6352:6374   */\n      add\n        /* \"#utility.yul\":6331:6384   */\n      tag_468\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":6321:6384   */\n      swap2\n      pop\n        /* \"#utility.yul\":6276:6394   */\n      pop\n        /* \"#utility.yul\":5927:6401   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6407:6518   */\n    tag_469:\n        /* \"#utility.yul\":6459:6466   */\n      0x00\n        /* \"#utility.yul\":6488:6512   */\n      tag_606\n        /* \"#utility.yul\":6506:6511   */\n      dup3\n        /* \"#utility.yul\":6488:6512   */\n      tag_466\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":6477:6512   */\n      swap1\n      pop\n        /* \"#utility.yul\":6407:6518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6524:6676   */\n    tag_470:\n        /* \"#utility.yul\":6612:6651   */\n      tag_608\n        /* \"#utility.yul\":6645:6650   */\n      dup2\n        /* \"#utility.yul\":6612:6651   */\n      tag_469\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":6605:6610   */\n      dup2\n        /* \"#utility.yul\":6602:6652   */\n      eq\n        /* \"#utility.yul\":6592:6670   */\n      tag_609\n      jumpi\n        /* \"#utility.yul\":6666:6667   */\n      0x00\n        /* \"#utility.yul\":6663:6664   */\n      dup1\n        /* \"#utility.yul\":6656:6668   */\n      revert\n        /* \"#utility.yul\":6592:6670   */\n    tag_609:\n        /* \"#utility.yul\":6524:6676   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6682:6851   */\n    tag_471:\n        /* \"#utility.yul\":6743:6748   */\n      0x00\n        /* \"#utility.yul\":6781:6787   */\n      dup2\n        /* \"#utility.yul\":6768:6788   */\n      calldataload\n        /* \"#utility.yul\":6759:6788   */\n      swap1\n      pop\n        /* \"#utility.yul\":6797:6845   */\n      tag_611\n        /* \"#utility.yul\":6839:6844   */\n      dup2\n        /* \"#utility.yul\":6797:6845   */\n      tag_470\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":6682:6851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6857:6974   */\n    tag_472:\n        /* \"#utility.yul\":6966:6967   */\n      0x00\n        /* \"#utility.yul\":6963:6964   */\n      dup1\n        /* \"#utility.yul\":6956:6968   */\n      revert\n        /* \"#utility.yul\":6980:7097   */\n    tag_473:\n        /* \"#utility.yul\":7089:7090   */\n      0x00\n        /* \"#utility.yul\":7086:7087   */\n      dup1\n        /* \"#utility.yul\":7079:7091   */\n      revert\n        /* \"#utility.yul\":7103:7205   */\n    tag_474:\n        /* \"#utility.yul\":7144:7150   */\n      0x00\n        /* \"#utility.yul\":7195:7197   */\n      0x1f\n        /* \"#utility.yul\":7191:7198   */\n      not\n        /* \"#utility.yul\":7186:7188   */\n      0x1f\n        /* \"#utility.yul\":7179:7184   */\n      dup4\n        /* \"#utility.yul\":7175:7189   */\n      add\n        /* \"#utility.yul\":7171:7199   */\n      and\n        /* \"#utility.yul\":7161:7199   */\n      swap1\n      pop\n        /* \"#utility.yul\":7103:7205   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7211:7391   */\n    tag_392:\n        /* \"#utility.yul\":7259:7336   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7256:7257   */\n      0x00\n        /* \"#utility.yul\":7249:7337   */\n      mstore\n        /* \"#utility.yul\":7356:7360   */\n      0x41\n        /* \"#utility.yul\":7353:7354   */\n      0x04\n        /* \"#utility.yul\":7346:7361   */\n      mstore\n        /* \"#utility.yul\":7380:7384   */\n      0x24\n        /* \"#utility.yul\":7377:7378   */\n      0x00\n        /* \"#utility.yul\":7370:7385   */\n      revert\n        /* \"#utility.yul\":7397:7678   */\n    tag_475:\n        /* \"#utility.yul\":7480:7507   */\n      tag_617\n        /* \"#utility.yul\":7502:7506   */\n      dup3\n        /* \"#utility.yul\":7480:7507   */\n      tag_474\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":7472:7478   */\n      dup2\n        /* \"#utility.yul\":7468:7508   */\n      add\n        /* \"#utility.yul\":7610:7616   */\n      dup2\n        /* \"#utility.yul\":7598:7608   */\n      dup2\n        /* \"#utility.yul\":7595:7617   */\n      lt\n        /* \"#utility.yul\":7574:7592   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7562:7572   */\n      dup3\n        /* \"#utility.yul\":7559:7593   */\n      gt\n        /* \"#utility.yul\":7556:7618   */\n      or\n        /* \"#utility.yul\":7553:7641   */\n      iszero\n      tag_618\n      jumpi\n        /* \"#utility.yul\":7621:7639   */\n      tag_619\n      tag_392\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":7553:7641   */\n    tag_618:\n        /* \"#utility.yul\":7661:7671   */\n      dup1\n        /* \"#utility.yul\":7657:7659   */\n      0x40\n        /* \"#utility.yul\":7650:7672   */\n      mstore\n        /* \"#utility.yul\":7440:7678   */\n      pop\n        /* \"#utility.yul\":7397:7678   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7684:7813   */\n    tag_476:\n        /* \"#utility.yul\":7718:7724   */\n      0x00\n        /* \"#utility.yul\":7745:7765   */\n      tag_621\n      tag_442\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":7735:7765   */\n      swap1\n      pop\n        /* \"#utility.yul\":7774:7807   */\n      tag_622\n        /* \"#utility.yul\":7802:7806   */\n      dup3\n        /* \"#utility.yul\":7794:7800   */\n      dup3\n        /* \"#utility.yul\":7774:7807   */\n      tag_475\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":7684:7813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7819:8127   */\n    tag_477:\n        /* \"#utility.yul\":7881:7885   */\n      0x00\n        /* \"#utility.yul\":7971:7989   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7963:7969   */\n      dup3\n        /* \"#utility.yul\":7960:7990   */\n      gt\n        /* \"#utility.yul\":7957:8013   */\n      iszero\n      tag_624\n      jumpi\n        /* \"#utility.yul\":7993:8011   */\n      tag_625\n      tag_392\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":7957:8013   */\n    tag_624:\n        /* \"#utility.yul\":8031:8060   */\n      tag_626\n        /* \"#utility.yul\":8053:8059   */\n      dup3\n        /* \"#utility.yul\":8031:8060   */\n      tag_474\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":8023:8060   */\n      swap1\n      pop\n        /* \"#utility.yul\":8115:8119   */\n      0x20\n        /* \"#utility.yul\":8109:8113   */\n      dup2\n        /* \"#utility.yul\":8105:8120   */\n      add\n        /* \"#utility.yul\":8097:8120   */\n      swap1\n      pop\n        /* \"#utility.yul\":7819:8127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8133:8279   */\n    tag_478:\n        /* \"#utility.yul\":8230:8236   */\n      dup3\n        /* \"#utility.yul\":8225:8228   */\n      dup2\n        /* \"#utility.yul\":8220:8223   */\n      dup4\n        /* \"#utility.yul\":8207:8237   */\n      calldatacopy\n        /* \"#utility.yul\":8271:8272   */\n      0x00\n        /* \"#utility.yul\":8262:8268   */\n      dup4\n        /* \"#utility.yul\":8257:8260   */\n      dup4\n        /* \"#utility.yul\":8253:8269   */\n      add\n        /* \"#utility.yul\":8246:8273   */\n      mstore\n        /* \"#utility.yul\":8133:8279   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8285:8710   */\n    tag_479:\n        /* \"#utility.yul\":8363:8368   */\n      0x00\n        /* \"#utility.yul\":8388:8454   */\n      tag_629\n        /* \"#utility.yul\":8404:8453   */\n      tag_630\n        /* \"#utility.yul\":8446:8452   */\n      dup5\n        /* \"#utility.yul\":8404:8453   */\n      tag_477\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":8388:8454   */\n      tag_476\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":8379:8454   */\n      swap1\n      pop\n        /* \"#utility.yul\":8477:8483   */\n      dup3\n        /* \"#utility.yul\":8470:8475   */\n      dup2\n        /* \"#utility.yul\":8463:8484   */\n      mstore\n        /* \"#utility.yul\":8515:8519   */\n      0x20\n        /* \"#utility.yul\":8508:8513   */\n      dup2\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8553:8556   */\n      dup5\n        /* \"#utility.yul\":8544:8550   */\n      dup5\n        /* \"#utility.yul\":8539:8542   */\n      dup5\n        /* \"#utility.yul\":8535:8551   */\n      add\n        /* \"#utility.yul\":8532:8557   */\n      gt\n        /* \"#utility.yul\":8529:8641   */\n      iszero\n      tag_631\n      jumpi\n        /* \"#utility.yul\":8560:8639   */\n      tag_632\n      tag_473\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":8529:8641   */\n    tag_631:\n        /* \"#utility.yul\":8650:8704   */\n      tag_633\n        /* \"#utility.yul\":8697:8703   */\n      dup5\n        /* \"#utility.yul\":8692:8695   */\n      dup3\n        /* \"#utility.yul\":8687:8690   */\n      dup6\n        /* \"#utility.yul\":8650:8704   */\n      tag_478\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":8369:8710   */\n      pop\n        /* \"#utility.yul\":8285:8710   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8730:9070   */\n    tag_480:\n        /* \"#utility.yul\":8786:8791   */\n      0x00\n        /* \"#utility.yul\":8835:8838   */\n      dup3\n        /* \"#utility.yul\":8828:8832   */\n      0x1f\n        /* \"#utility.yul\":8820:8826   */\n      dup4\n        /* \"#utility.yul\":8816:8833   */\n      add\n        /* \"#utility.yul\":8812:8839   */\n      slt\n        /* \"#utility.yul\":8802:8924   */\n      tag_635\n      jumpi\n        /* \"#utility.yul\":8843:8922   */\n      tag_636\n      tag_472\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":8802:8924   */\n    tag_635:\n        /* \"#utility.yul\":8960:8966   */\n      dup2\n        /* \"#utility.yul\":8947:8967   */\n      calldataload\n        /* \"#utility.yul\":8985:9064   */\n      tag_637\n        /* \"#utility.yul\":9060:9063   */\n      dup5\n        /* \"#utility.yul\":9052:9058   */\n      dup3\n        /* \"#utility.yul\":9045:9049   */\n      0x20\n        /* \"#utility.yul\":9037:9043   */\n      dup7\n        /* \"#utility.yul\":9033:9050   */\n      add\n        /* \"#utility.yul\":8985:9064   */\n      tag_479\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":8976:9064   */\n      swap2\n      pop\n        /* \"#utility.yul\":8792:9070   */\n      pop\n        /* \"#utility.yul\":8730:9070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9076:9192   */\n    tag_481:\n        /* \"#utility.yul\":9146:9167   */\n      tag_639\n        /* \"#utility.yul\":9161:9166   */\n      dup2\n        /* \"#utility.yul\":9146:9167   */\n      tag_448\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":9139:9144   */\n      dup2\n        /* \"#utility.yul\":9136:9168   */\n      eq\n        /* \"#utility.yul\":9126:9186   */\n      tag_640\n      jumpi\n        /* \"#utility.yul\":9182:9183   */\n      0x00\n        /* \"#utility.yul\":9179:9180   */\n      dup1\n        /* \"#utility.yul\":9172:9184   */\n      revert\n        /* \"#utility.yul\":9126:9186   */\n    tag_640:\n        /* \"#utility.yul\":9076:9192   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9198:9331   */\n    tag_482:\n        /* \"#utility.yul\":9241:9246   */\n      0x00\n        /* \"#utility.yul\":9279:9285   */\n      dup2\n        /* \"#utility.yul\":9266:9286   */\n      calldataload\n        /* \"#utility.yul\":9257:9286   */\n      swap1\n      pop\n        /* \"#utility.yul\":9295:9325   */\n      tag_642\n        /* \"#utility.yul\":9319:9324   */\n      dup2\n        /* \"#utility.yul\":9295:9325   */\n      tag_481\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":9198:9331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9337:10306   */\n    tag_70:\n        /* \"#utility.yul\":9445:9451   */\n      0x00\n        /* \"#utility.yul\":9453:9459   */\n      dup1\n        /* \"#utility.yul\":9461:9467   */\n      0x00\n        /* \"#utility.yul\":9469:9475   */\n      dup1\n        /* \"#utility.yul\":9518:9521   */\n      0x80\n        /* \"#utility.yul\":9506:9515   */\n      dup6\n        /* \"#utility.yul\":9497:9504   */\n      dup8\n        /* \"#utility.yul\":9493:9516   */\n      sub\n        /* \"#utility.yul\":9489:9522   */\n      slt\n        /* \"#utility.yul\":9486:9606   */\n      iszero\n      tag_644\n      jumpi\n        /* \"#utility.yul\":9525:9604   */\n      tag_645\n      tag_443\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":9486:9606   */\n    tag_644:\n        /* \"#utility.yul\":9645:9646   */\n      0x00\n        /* \"#utility.yul\":9670:9738   */\n      tag_646\n        /* \"#utility.yul\":9730:9737   */\n      dup8\n        /* \"#utility.yul\":9721:9727   */\n      dup3\n        /* \"#utility.yul\":9710:9719   */\n      dup9\n        /* \"#utility.yul\":9706:9728   */\n      add\n        /* \"#utility.yul\":9670:9738   */\n      tag_471\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":9660:9738   */\n      swap5\n      pop\n        /* \"#utility.yul\":9616:9748   */\n      pop\n        /* \"#utility.yul\":9787:9789   */\n      0x20\n        /* \"#utility.yul\":9813:9866   */\n      tag_647\n        /* \"#utility.yul\":9858:9865   */\n      dup8\n        /* \"#utility.yul\":9849:9855   */\n      dup3\n        /* \"#utility.yul\":9838:9847   */\n      dup9\n        /* \"#utility.yul\":9834:9856   */\n      add\n        /* \"#utility.yul\":9813:9866   */\n      tag_453\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":9803:9866   */\n      swap4\n      pop\n        /* \"#utility.yul\":9758:9876   */\n      pop\n        /* \"#utility.yul\":9943:9945   */\n      0x40\n        /* \"#utility.yul\":9932:9941   */\n      dup6\n        /* \"#utility.yul\":9928:9946   */\n      add\n        /* \"#utility.yul\":9915:9947   */\n      calldataload\n        /* \"#utility.yul\":9974:9992   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9966:9972   */\n      dup2\n        /* \"#utility.yul\":9963:9993   */\n      gt\n        /* \"#utility.yul\":9960:10077   */\n      iszero\n      tag_648\n      jumpi\n        /* \"#utility.yul\":9996:10075   */\n      tag_649\n      tag_444\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":9960:10077   */\n    tag_648:\n        /* \"#utility.yul\":10101:10164   */\n      tag_650\n        /* \"#utility.yul\":10156:10163   */\n      dup8\n        /* \"#utility.yul\":10147:10153   */\n      dup3\n        /* \"#utility.yul\":10136:10145   */\n      dup9\n        /* \"#utility.yul\":10132:10154   */\n      add\n        /* \"#utility.yul\":10101:10164   */\n      tag_480\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":10091:10164   */\n      swap3\n      pop\n        /* \"#utility.yul\":9886:10174   */\n      pop\n        /* \"#utility.yul\":10213:10215   */\n      0x60\n        /* \"#utility.yul\":10239:10289   */\n      tag_651\n        /* \"#utility.yul\":10281:10288   */\n      dup8\n        /* \"#utility.yul\":10272:10278   */\n      dup3\n        /* \"#utility.yul\":10261:10270   */\n      dup9\n        /* \"#utility.yul\":10257:10279   */\n      add\n        /* \"#utility.yul\":10239:10289   */\n      tag_482\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":10229:10289   */\n      swap2\n      pop\n        /* \"#utility.yul\":10184:10299   */\n      pop\n        /* \"#utility.yul\":9337:10306   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10312:10786   */\n    tag_74:\n        /* \"#utility.yul\":10380:10386   */\n      0x00\n        /* \"#utility.yul\":10388:10394   */\n      dup1\n        /* \"#utility.yul\":10437:10439   */\n      0x40\n        /* \"#utility.yul\":10425:10434   */\n      dup4\n        /* \"#utility.yul\":10416:10423   */\n      dup6\n        /* \"#utility.yul\":10412:10435   */\n      sub\n        /* \"#utility.yul\":10408:10440   */\n      slt\n        /* \"#utility.yul\":10405:10524   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":10443:10522   */\n      tag_654\n      tag_443\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":10405:10524   */\n    tag_653:\n        /* \"#utility.yul\":10563:10564   */\n      0x00\n        /* \"#utility.yul\":10588:10641   */\n      tag_655\n        /* \"#utility.yul\":10633:10640   */\n      dup6\n        /* \"#utility.yul\":10624:10630   */\n      dup3\n        /* \"#utility.yul\":10613:10622   */\n      dup7\n        /* \"#utility.yul\":10609:10631   */\n      add\n        /* \"#utility.yul\":10588:10641   */\n      tag_453\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":10578:10641   */\n      swap3\n      pop\n        /* \"#utility.yul\":10534:10651   */\n      pop\n        /* \"#utility.yul\":10690:10692   */\n      0x20\n        /* \"#utility.yul\":10716:10769   */\n      tag_656\n        /* \"#utility.yul\":10761:10768   */\n      dup6\n        /* \"#utility.yul\":10752:10758   */\n      dup3\n        /* \"#utility.yul\":10741:10750   */\n      dup7\n        /* \"#utility.yul\":10737:10759   */\n      add\n        /* \"#utility.yul\":10716:10769   */\n      tag_453\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":10706:10769   */\n      swap2\n      pop\n        /* \"#utility.yul\":10661:10779   */\n      pop\n        /* \"#utility.yul\":10312:10786   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10792:11041   */\n    tag_483:\n        /* \"#utility.yul\":10867:10871   */\n      0x00\n        /* \"#utility.yul\":10957:10975   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10949:10955   */\n      dup3\n        /* \"#utility.yul\":10946:10976   */\n      gt\n        /* \"#utility.yul\":10943:10999   */\n      iszero\n      tag_658\n      jumpi\n        /* \"#utility.yul\":10979:10997   */\n      tag_659\n      tag_392\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":10943:10999   */\n    tag_658:\n        /* \"#utility.yul\":11029:11033   */\n      0x20\n        /* \"#utility.yul\":11021:11027   */\n      dup3\n        /* \"#utility.yul\":11017:11034   */\n      mul\n        /* \"#utility.yul\":11009:11034   */\n      swap1\n      pop\n        /* \"#utility.yul\":10792:11041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11047:11164   */\n    tag_484:\n        /* \"#utility.yul\":11156:11157   */\n      0x00\n        /* \"#utility.yul\":11153:11154   */\n      dup1\n        /* \"#utility.yul\":11146:11158   */\n      revert\n        /* \"#utility.yul\":11188:11831   */\n    tag_485:\n        /* \"#utility.yul\":11282:11287   */\n      0x00\n        /* \"#utility.yul\":11307:11386   */\n      tag_662\n        /* \"#utility.yul\":11323:11385   */\n      tag_663\n        /* \"#utility.yul\":11378:11384   */\n      dup5\n        /* \"#utility.yul\":11323:11385   */\n      tag_483\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":11307:11386   */\n      tag_476\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":11298:11386   */\n      swap1\n      pop\n        /* \"#utility.yul\":11406:11411   */\n      dup1\n        /* \"#utility.yul\":11459:11463   */\n      0x20\n        /* \"#utility.yul\":11451:11457   */\n      dup5\n        /* \"#utility.yul\":11447:11464   */\n      mul\n        /* \"#utility.yul\":11439:11445   */\n      dup4\n        /* \"#utility.yul\":11435:11465   */\n      add\n        /* \"#utility.yul\":11488:11491   */\n      dup6\n        /* \"#utility.yul\":11480:11486   */\n      dup2\n        /* \"#utility.yul\":11477:11492   */\n      gt\n        /* \"#utility.yul\":11474:11596   */\n      iszero\n      tag_664\n      jumpi\n        /* \"#utility.yul\":11507:11586   */\n      tag_665\n      tag_484\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":11474:11596   */\n    tag_664:\n        /* \"#utility.yul\":11622:11628   */\n      dup4\n        /* \"#utility.yul\":11605:11825   */\n    tag_666:\n        /* \"#utility.yul\":11639:11645   */\n      dup2\n        /* \"#utility.yul\":11634:11637   */\n      dup2\n        /* \"#utility.yul\":11631:11646   */\n      lt\n        /* \"#utility.yul\":11605:11825   */\n      iszero\n      tag_668\n      jumpi\n        /* \"#utility.yul\":11714:11717   */\n      dup1\n        /* \"#utility.yul\":11743:11780   */\n      tag_669\n        /* \"#utility.yul\":11776:11779   */\n      dup9\n        /* \"#utility.yul\":11764:11774   */\n      dup3\n        /* \"#utility.yul\":11743:11780   */\n      tag_468\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":11738:11741   */\n      dup5\n        /* \"#utility.yul\":11731:11781   */\n      mstore\n        /* \"#utility.yul\":11810:11814   */\n      0x20\n        /* \"#utility.yul\":11805:11808   */\n      dup5\n        /* \"#utility.yul\":11801:11815   */\n      add\n        /* \"#utility.yul\":11794:11815   */\n      swap4\n      pop\n        /* \"#utility.yul\":11681:11825   */\n      pop\n        /* \"#utility.yul\":11665:11669   */\n      0x20\n        /* \"#utility.yul\":11660:11663   */\n      dup2\n        /* \"#utility.yul\":11656:11670   */\n      add\n        /* \"#utility.yul\":11649:11670   */\n      swap1\n      pop\n        /* \"#utility.yul\":11605:11825   */\n      jump(tag_666)\n    tag_668:\n        /* \"#utility.yul\":11609:11630   */\n      pop\n        /* \"#utility.yul\":11288:11831   */\n      pop\n      pop\n        /* \"#utility.yul\":11188:11831   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11855:12194   */\n    tag_486:\n        /* \"#utility.yul\":11924:11929   */\n      0x00\n        /* \"#utility.yul\":11973:11976   */\n      dup3\n        /* \"#utility.yul\":11966:11970   */\n      0x1f\n        /* \"#utility.yul\":11958:11964   */\n      dup4\n        /* \"#utility.yul\":11954:11971   */\n      add\n        /* \"#utility.yul\":11950:11977   */\n      slt\n        /* \"#utility.yul\":11940:12062   */\n      tag_671\n      jumpi\n        /* \"#utility.yul\":11981:12060   */\n      tag_672\n      tag_472\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":11940:12062   */\n    tag_671:\n        /* \"#utility.yul\":12085:12089   */\n      0x03\n        /* \"#utility.yul\":12107:12188   */\n      tag_673\n        /* \"#utility.yul\":12184:12187   */\n      dup5\n        /* \"#utility.yul\":12176:12182   */\n      dup3\n        /* \"#utility.yul\":12168:12174   */\n      dup6\n        /* \"#utility.yul\":12107:12188   */\n      tag_485\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":12098:12188   */\n      swap2\n      pop\n        /* \"#utility.yul\":11930:12194   */\n      pop\n        /* \"#utility.yul\":11855:12194   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12200:12867   */\n    tag_87:\n        /* \"#utility.yul\":12300:12306   */\n      0x00\n        /* \"#utility.yul\":12308:12314   */\n      dup1\n        /* \"#utility.yul\":12316:12322   */\n      0x00\n        /* \"#utility.yul\":12365:12368   */\n      0xa0\n        /* \"#utility.yul\":12353:12362   */\n      dup5\n        /* \"#utility.yul\":12344:12351   */\n      dup7\n        /* \"#utility.yul\":12340:12363   */\n      sub\n        /* \"#utility.yul\":12336:12369   */\n      slt\n        /* \"#utility.yul\":12333:12453   */\n      iszero\n      tag_675\n      jumpi\n        /* \"#utility.yul\":12372:12451   */\n      tag_676\n      tag_443\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":12333:12453   */\n    tag_675:\n        /* \"#utility.yul\":12492:12493   */\n      0x00\n        /* \"#utility.yul\":12517:12570   */\n      tag_677\n        /* \"#utility.yul\":12562:12569   */\n      dup7\n        /* \"#utility.yul\":12553:12559   */\n      dup3\n        /* \"#utility.yul\":12542:12551   */\n      dup8\n        /* \"#utility.yul\":12538:12560   */\n      add\n        /* \"#utility.yul\":12517:12570   */\n      tag_468\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":12507:12570   */\n      swap4\n      pop\n        /* \"#utility.yul\":12463:12580   */\n      pop\n        /* \"#utility.yul\":12619:12621   */\n      0x20\n        /* \"#utility.yul\":12645:12721   */\n      tag_678\n        /* \"#utility.yul\":12713:12720   */\n      dup7\n        /* \"#utility.yul\":12704:12710   */\n      dup3\n        /* \"#utility.yul\":12693:12702   */\n      dup8\n        /* \"#utility.yul\":12689:12711   */\n      add\n        /* \"#utility.yul\":12645:12721   */\n      tag_486\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":12635:12721   */\n      swap3\n      pop\n        /* \"#utility.yul\":12590:12731   */\n      pop\n        /* \"#utility.yul\":12770:12773   */\n      0x80\n        /* \"#utility.yul\":12797:12850   */\n      tag_679\n        /* \"#utility.yul\":12842:12849   */\n      dup7\n        /* \"#utility.yul\":12833:12839   */\n      dup3\n        /* \"#utility.yul\":12822:12831   */\n      dup8\n        /* \"#utility.yul\":12818:12840   */\n      add\n        /* \"#utility.yul\":12797:12850   */\n      tag_453\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":12787:12850   */\n      swap2\n      pop\n        /* \"#utility.yul\":12741:12860   */\n      pop\n        /* \"#utility.yul\":12200:12867   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":12873:13347   */\n    tag_96:\n        /* \"#utility.yul\":12941:12947   */\n      0x00\n        /* \"#utility.yul\":12949:12955   */\n      dup1\n        /* \"#utility.yul\":12998:13000   */\n      0x40\n        /* \"#utility.yul\":12986:12995   */\n      dup4\n        /* \"#utility.yul\":12977:12984   */\n      dup6\n        /* \"#utility.yul\":12973:12996   */\n      sub\n        /* \"#utility.yul\":12969:13001   */\n      slt\n        /* \"#utility.yul\":12966:13085   */\n      iszero\n      tag_681\n      jumpi\n        /* \"#utility.yul\":13004:13083   */\n      tag_682\n      tag_443\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":12966:13085   */\n    tag_681:\n        /* \"#utility.yul\":13124:13125   */\n      0x00\n        /* \"#utility.yul\":13149:13202   */\n      tag_683\n        /* \"#utility.yul\":13194:13201   */\n      dup6\n        /* \"#utility.yul\":13185:13191   */\n      dup3\n        /* \"#utility.yul\":13174:13183   */\n      dup7\n        /* \"#utility.yul\":13170:13192   */\n      add\n        /* \"#utility.yul\":13149:13202   */\n      tag_453\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":13139:13202   */\n      swap3\n      pop\n        /* \"#utility.yul\":13095:13212   */\n      pop\n        /* \"#utility.yul\":13251:13253   */\n      0x20\n        /* \"#utility.yul\":13277:13330   */\n      tag_684\n        /* \"#utility.yul\":13322:13329   */\n      dup6\n        /* \"#utility.yul\":13313:13319   */\n      dup3\n        /* \"#utility.yul\":13302:13311   */\n      dup7\n        /* \"#utility.yul\":13298:13320   */\n      add\n        /* \"#utility.yul\":13277:13330   */\n      tag_468\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":13267:13330   */\n      swap2\n      pop\n        /* \"#utility.yul\":13222:13340   */\n      pop\n        /* \"#utility.yul\":12873:13347   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13353:13685   */\n    tag_107:\n        /* \"#utility.yul\":13474:13478   */\n      0x00\n        /* \"#utility.yul\":13512:13514   */\n      0x40\n        /* \"#utility.yul\":13501:13510   */\n      dup3\n        /* \"#utility.yul\":13497:13515   */\n      add\n        /* \"#utility.yul\":13489:13515   */\n      swap1\n      pop\n        /* \"#utility.yul\":13525:13596   */\n      tag_686\n        /* \"#utility.yul\":13593:13594   */\n      0x00\n        /* \"#utility.yul\":13582:13591   */\n      dup4\n        /* \"#utility.yul\":13578:13595   */\n      add\n        /* \"#utility.yul\":13569:13575   */\n      dup6\n        /* \"#utility.yul\":13525:13596   */\n      tag_451\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":13606:13678   */\n      tag_687\n        /* \"#utility.yul\":13674:13676   */\n      0x20\n        /* \"#utility.yul\":13663:13672   */\n      dup4\n        /* \"#utility.yul\":13659:13677   */\n      add\n        /* \"#utility.yul\":13650:13656   */\n      dup5\n        /* \"#utility.yul\":13606:13678   */\n      tag_451\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":13353:13685   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13691:14304   */\n    tag_113:\n        /* \"#utility.yul\":13765:13771   */\n      0x00\n        /* \"#utility.yul\":13773:13779   */\n      dup1\n        /* \"#utility.yul\":13781:13787   */\n      0x00\n        /* \"#utility.yul\":13830:13832   */\n      0x60\n        /* \"#utility.yul\":13818:13827   */\n      dup5\n        /* \"#utility.yul\":13809:13816   */\n      dup7\n        /* \"#utility.yul\":13805:13828   */\n      sub\n        /* \"#utility.yul\":13801:13833   */\n      slt\n        /* \"#utility.yul\":13798:13917   */\n      iszero\n      tag_689\n      jumpi\n        /* \"#utility.yul\":13836:13915   */\n      tag_690\n      tag_443\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":13798:13917   */\n    tag_689:\n        /* \"#utility.yul\":13956:13957   */\n      0x00\n        /* \"#utility.yul\":13981:14034   */\n      tag_691\n        /* \"#utility.yul\":14026:14033   */\n      dup7\n        /* \"#utility.yul\":14017:14023   */\n      dup3\n        /* \"#utility.yul\":14006:14015   */\n      dup8\n        /* \"#utility.yul\":14002:14024   */\n      add\n        /* \"#utility.yul\":13981:14034   */\n      tag_453\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":13971:14034   */\n      swap4\n      pop\n        /* \"#utility.yul\":13927:14044   */\n      pop\n        /* \"#utility.yul\":14083:14085   */\n      0x20\n        /* \"#utility.yul\":14109:14162   */\n      tag_692\n        /* \"#utility.yul\":14154:14161   */\n      dup7\n        /* \"#utility.yul\":14145:14151   */\n      dup3\n        /* \"#utility.yul\":14134:14143   */\n      dup8\n        /* \"#utility.yul\":14130:14152   */\n      add\n        /* \"#utility.yul\":14109:14162   */\n      tag_453\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":14099:14162   */\n      swap3\n      pop\n        /* \"#utility.yul\":14054:14172   */\n      pop\n        /* \"#utility.yul\":14211:14213   */\n      0x40\n        /* \"#utility.yul\":14237:14287   */\n      tag_693\n        /* \"#utility.yul\":14279:14286   */\n      dup7\n        /* \"#utility.yul\":14270:14276   */\n      dup3\n        /* \"#utility.yul\":14259:14268   */\n      dup8\n        /* \"#utility.yul\":14255:14277   */\n      add\n        /* \"#utility.yul\":14237:14287   */\n      tag_482\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":14227:14287   */\n      swap2\n      pop\n        /* \"#utility.yul\":14182:14297   */\n      pop\n        /* \"#utility.yul\":13691:14304   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":14310:14639   */\n    tag_117:\n        /* \"#utility.yul\":14369:14375   */\n      0x00\n        /* \"#utility.yul\":14418:14420   */\n      0x20\n        /* \"#utility.yul\":14406:14415   */\n      dup3\n        /* \"#utility.yul\":14397:14404   */\n      dup5\n        /* \"#utility.yul\":14393:14416   */\n      sub\n        /* \"#utility.yul\":14389:14421   */\n      slt\n        /* \"#utility.yul\":14386:14505   */\n      iszero\n      tag_695\n      jumpi\n        /* \"#utility.yul\":14424:14503   */\n      tag_696\n      tag_443\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":14386:14505   */\n    tag_695:\n        /* \"#utility.yul\":14544:14545   */\n      0x00\n        /* \"#utility.yul\":14569:14622   */\n      tag_697\n        /* \"#utility.yul\":14614:14621   */\n      dup5\n        /* \"#utility.yul\":14605:14611   */\n      dup3\n        /* \"#utility.yul\":14594:14603   */\n      dup6\n        /* \"#utility.yul\":14590:14612   */\n      add\n        /* \"#utility.yul\":14569:14622   */\n      tag_468\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":14559:14622   */\n      swap2\n      pop\n        /* \"#utility.yul\":14515:14632   */\n      pop\n        /* \"#utility.yul\":14310:14639   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14645:14814   */\n    tag_487:\n        /* \"#utility.yul\":14729:14740   */\n      0x00\n        /* \"#utility.yul\":14763:14769   */\n      dup3\n        /* \"#utility.yul\":14758:14761   */\n      dup3\n        /* \"#utility.yul\":14751:14770   */\n      mstore\n        /* \"#utility.yul\":14803:14807   */\n      0x20\n        /* \"#utility.yul\":14798:14801   */\n      dup3\n        /* \"#utility.yul\":14794:14808   */\n      add\n        /* \"#utility.yul\":14779:14808   */\n      swap1\n      pop\n        /* \"#utility.yul\":14645:14814   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14820:15054   */\n    tag_488:\n        /* \"#utility.yul\":14960:14994   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":14956:14957   */\n      0x00\n        /* \"#utility.yul\":14948:14954   */\n      dup3\n        /* \"#utility.yul\":14944:14958   */\n      add\n        /* \"#utility.yul\":14937:14995   */\n      mstore\n        /* \"#utility.yul\":15029:15046   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":15024:15026   */\n      0x20\n        /* \"#utility.yul\":15016:15022   */\n      dup3\n        /* \"#utility.yul\":15012:15027   */\n      add\n        /* \"#utility.yul\":15005:15047   */\n      mstore\n        /* \"#utility.yul\":14820:15054   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15060:15426   */\n    tag_489:\n        /* \"#utility.yul\":15202:15205   */\n      0x00\n        /* \"#utility.yul\":15223:15290   */\n      tag_701\n        /* \"#utility.yul\":15287:15289   */\n      0x2f\n        /* \"#utility.yul\":15282:15285   */\n      dup4\n        /* \"#utility.yul\":15223:15290   */\n      tag_487\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":15216:15290   */\n      swap2\n      pop\n        /* \"#utility.yul\":15299:15392   */\n      tag_702\n        /* \"#utility.yul\":15388:15391   */\n      dup3\n        /* \"#utility.yul\":15299:15392   */\n      tag_488\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":15417:15419   */\n      0x40\n        /* \"#utility.yul\":15412:15415   */\n      dup3\n        /* \"#utility.yul\":15408:15420   */\n      add\n        /* \"#utility.yul\":15401:15420   */\n      swap1\n      pop\n        /* \"#utility.yul\":15060:15426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15432:15851   */\n    tag_149:\n        /* \"#utility.yul\":15598:15602   */\n      0x00\n        /* \"#utility.yul\":15636:15638   */\n      0x20\n        /* \"#utility.yul\":15625:15634   */\n      dup3\n        /* \"#utility.yul\":15621:15639   */\n      add\n        /* \"#utility.yul\":15613:15639   */\n      swap1\n      pop\n        /* \"#utility.yul\":15685:15694   */\n      dup2\n        /* \"#utility.yul\":15679:15683   */\n      dup2\n        /* \"#utility.yul\":15675:15695   */\n      sub\n        /* \"#utility.yul\":15671:15672   */\n      0x00\n        /* \"#utility.yul\":15660:15669   */\n      dup4\n        /* \"#utility.yul\":15656:15673   */\n      add\n        /* \"#utility.yul\":15649:15696   */\n      mstore\n        /* \"#utility.yul\":15713:15844   */\n      tag_704\n        /* \"#utility.yul\":15839:15843   */\n      dup2\n        /* \"#utility.yul\":15713:15844   */\n      tag_489\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":15705:15844   */\n      swap1\n      pop\n        /* \"#utility.yul\":15432:15851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15857:16005   */\n    tag_490:\n        /* \"#utility.yul\":15959:15970   */\n      0x00\n        /* \"#utility.yul\":15996:15999   */\n      dup2\n        /* \"#utility.yul\":15981:15999   */\n      swap1\n      pop\n        /* \"#utility.yul\":15857:16005   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16011:16169   */\n    tag_491:\n        /* \"#utility.yul\":16151:16161   */\n      0x476f7665726e6f72000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16147:16148   */\n      0x00\n        /* \"#utility.yul\":16139:16145   */\n      dup3\n        /* \"#utility.yul\":16135:16149   */\n      add\n        /* \"#utility.yul\":16128:16162   */\n      mstore\n        /* \"#utility.yul\":16011:16169   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16175:16575   */\n    tag_492:\n        /* \"#utility.yul\":16335:16338   */\n      0x00\n        /* \"#utility.yul\":16356:16440   */\n      tag_708\n        /* \"#utility.yul\":16438:16439   */\n      0x08\n        /* \"#utility.yul\":16433:16436   */\n      dup4\n        /* \"#utility.yul\":16356:16440   */\n      tag_490\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":16349:16440   */\n      swap2\n      pop\n        /* \"#utility.yul\":16449:16542   */\n      tag_709\n        /* \"#utility.yul\":16538:16541   */\n      dup3\n        /* \"#utility.yul\":16449:16542   */\n      tag_491\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":16567:16568   */\n      0x08\n        /* \"#utility.yul\":16562:16565   */\n      dup3\n        /* \"#utility.yul\":16558:16569   */\n      add\n        /* \"#utility.yul\":16551:16569   */\n      swap1\n      pop\n        /* \"#utility.yul\":16175:16575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16581:16962   */\n    tag_153:\n        /* \"#utility.yul\":16766:16769   */\n      0x00\n        /* \"#utility.yul\":16788:16936   */\n      tag_711\n        /* \"#utility.yul\":16932:16935   */\n      dup3\n        /* \"#utility.yul\":16788:16936   */\n      tag_492\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":16781:16936   */\n      swap2\n      pop\n        /* \"#utility.yul\":16953:16956   */\n      dup2\n        /* \"#utility.yul\":16946:16956   */\n      swap1\n      pop\n        /* \"#utility.yul\":16581:16962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16968:17148   */\n    tag_493:\n        /* \"#utility.yul\":17016:17093   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17013:17014   */\n      0x00\n        /* \"#utility.yul\":17006:17094   */\n      mstore\n        /* \"#utility.yul\":17113:17117   */\n      0x11\n        /* \"#utility.yul\":17110:17111   */\n      0x04\n        /* \"#utility.yul\":17103:17118   */\n      mstore\n        /* \"#utility.yul\":17137:17141   */\n      0x24\n        /* \"#utility.yul\":17134:17135   */\n      0x00\n        /* \"#utility.yul\":17127:17142   */\n      revert\n        /* \"#utility.yul\":17154:17345   */\n    tag_162:\n        /* \"#utility.yul\":17194:17197   */\n      0x00\n        /* \"#utility.yul\":17213:17233   */\n      tag_714\n        /* \"#utility.yul\":17231:17232   */\n      dup3\n        /* \"#utility.yul\":17213:17233   */\n      tag_450\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":17208:17233   */\n      swap2\n      pop\n        /* \"#utility.yul\":17247:17267   */\n      tag_715\n        /* \"#utility.yul\":17265:17266   */\n      dup4\n        /* \"#utility.yul\":17247:17267   */\n      tag_450\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":17242:17267   */\n      swap3\n      pop\n        /* \"#utility.yul\":17290:17291   */\n      dup3\n        /* \"#utility.yul\":17287:17288   */\n      dup3\n        /* \"#utility.yul\":17283:17292   */\n      add\n        /* \"#utility.yul\":17276:17292   */\n      swap1\n      pop\n        /* \"#utility.yul\":17311:17314   */\n      dup1\n        /* \"#utility.yul\":17308:17309   */\n      dup3\n        /* \"#utility.yul\":17305:17315   */\n      gt\n        /* \"#utility.yul\":17302:17338   */\n      iszero\n      tag_716\n      jumpi\n        /* \"#utility.yul\":17318:17336   */\n      tag_717\n      tag_493\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":17302:17338   */\n    tag_716:\n        /* \"#utility.yul\":17154:17345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17351:17531   */\n    tag_168:\n        /* \"#utility.yul\":17399:17476   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17396:17397   */\n      0x00\n        /* \"#utility.yul\":17389:17477   */\n      mstore\n        /* \"#utility.yul\":17496:17500   */\n      0x32\n        /* \"#utility.yul\":17493:17494   */\n      0x04\n        /* \"#utility.yul\":17486:17501   */\n      mstore\n        /* \"#utility.yul\":17520:17524   */\n      0x24\n        /* \"#utility.yul\":17517:17518   */\n      0x00\n        /* \"#utility.yul\":17510:17525   */\n      revert\n        /* \"#utility.yul\":17537:17701   */\n    tag_494:\n        /* \"#utility.yul\":17677:17693   */\n      0x4661726d3a206e6f7420676f6f64000000000000000000000000000000000000\n        /* \"#utility.yul\":17673:17674   */\n      0x00\n        /* \"#utility.yul\":17665:17671   */\n      dup3\n        /* \"#utility.yul\":17661:17675   */\n      add\n        /* \"#utility.yul\":17654:17694   */\n      mstore\n        /* \"#utility.yul\":17537:17701   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17707:18073   */\n    tag_495:\n        /* \"#utility.yul\":17849:17852   */\n      0x00\n        /* \"#utility.yul\":17870:17937   */\n      tag_721\n        /* \"#utility.yul\":17934:17936   */\n      0x0e\n        /* \"#utility.yul\":17929:17932   */\n      dup4\n        /* \"#utility.yul\":17870:17937   */\n      tag_487\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":17863:17937   */\n      swap2\n      pop\n        /* \"#utility.yul\":17946:18039   */\n      tag_722\n        /* \"#utility.yul\":18035:18038   */\n      dup3\n        /* \"#utility.yul\":17946:18039   */\n      tag_494\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":18064:18066   */\n      0x20\n        /* \"#utility.yul\":18059:18062   */\n      dup3\n        /* \"#utility.yul\":18055:18067   */\n      add\n        /* \"#utility.yul\":18048:18067   */\n      swap1\n      pop\n        /* \"#utility.yul\":17707:18073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18079:18498   */\n    tag_173:\n        /* \"#utility.yul\":18245:18249   */\n      0x00\n        /* \"#utility.yul\":18283:18285   */\n      0x20\n        /* \"#utility.yul\":18272:18281   */\n      dup3\n        /* \"#utility.yul\":18268:18286   */\n      add\n        /* \"#utility.yul\":18260:18286   */\n      swap1\n      pop\n        /* \"#utility.yul\":18332:18341   */\n      dup2\n        /* \"#utility.yul\":18326:18330   */\n      dup2\n        /* \"#utility.yul\":18322:18342   */\n      sub\n        /* \"#utility.yul\":18318:18319   */\n      0x00\n        /* \"#utility.yul\":18307:18316   */\n      dup4\n        /* \"#utility.yul\":18303:18320   */\n      add\n        /* \"#utility.yul\":18296:18343   */\n      mstore\n        /* \"#utility.yul\":18360:18491   */\n      tag_724\n        /* \"#utility.yul\":18486:18490   */\n      dup2\n        /* \"#utility.yul\":18360:18491   */\n      tag_495\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":18352:18491   */\n      swap1\n      pop\n        /* \"#utility.yul\":18079:18498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18504:18914   */\n    tag_176:\n        /* \"#utility.yul\":18544:18551   */\n      0x00\n        /* \"#utility.yul\":18567:18587   */\n      tag_726\n        /* \"#utility.yul\":18585:18586   */\n      dup3\n        /* \"#utility.yul\":18567:18587   */\n      tag_450\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":18562:18587   */\n      swap2\n      pop\n        /* \"#utility.yul\":18601:18621   */\n      tag_727\n        /* \"#utility.yul\":18619:18620   */\n      dup4\n        /* \"#utility.yul\":18601:18621   */\n      tag_450\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":18596:18621   */\n      swap3\n      pop\n        /* \"#utility.yul\":18656:18657   */\n      dup3\n        /* \"#utility.yul\":18653:18654   */\n      dup3\n        /* \"#utility.yul\":18649:18658   */\n      mul\n        /* \"#utility.yul\":18678:18708   */\n      tag_728\n        /* \"#utility.yul\":18696:18707   */\n      dup2\n        /* \"#utility.yul\":18678:18708   */\n      tag_450\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":18667:18708   */\n      swap2\n      pop\n        /* \"#utility.yul\":18857:18858   */\n      dup3\n        /* \"#utility.yul\":18848:18855   */\n      dup3\n        /* \"#utility.yul\":18844:18859   */\n      div\n        /* \"#utility.yul\":18841:18842   */\n      dup5\n        /* \"#utility.yul\":18838:18860   */\n      eq\n        /* \"#utility.yul\":18818:18819   */\n      dup4\n        /* \"#utility.yul\":18811:18820   */\n      iszero\n        /* \"#utility.yul\":18791:18874   */\n      or\n        /* \"#utility.yul\":18768:18907   */\n      tag_729\n      jumpi\n        /* \"#utility.yul\":18887:18905   */\n      tag_730\n      tag_493\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":18768:18907   */\n    tag_729:\n        /* \"#utility.yul\":18552:18914   */\n      pop\n        /* \"#utility.yul\":18504:18914   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18920:19100   */\n    tag_496:\n        /* \"#utility.yul\":18968:19045   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18965:18966   */\n      0x00\n        /* \"#utility.yul\":18958:19046   */\n      mstore\n        /* \"#utility.yul\":19065:19069   */\n      0x12\n        /* \"#utility.yul\":19062:19063   */\n      0x04\n        /* \"#utility.yul\":19055:19070   */\n      mstore\n        /* \"#utility.yul\":19089:19093   */\n      0x24\n        /* \"#utility.yul\":19086:19087   */\n      0x00\n        /* \"#utility.yul\":19079:19094   */\n      revert\n        /* \"#utility.yul\":19106:19291   */\n    tag_178:\n        /* \"#utility.yul\":19146:19147   */\n      0x00\n        /* \"#utility.yul\":19163:19183   */\n      tag_733\n        /* \"#utility.yul\":19181:19182   */\n      dup3\n        /* \"#utility.yul\":19163:19183   */\n      tag_450\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":19158:19183   */\n      swap2\n      pop\n        /* \"#utility.yul\":19197:19217   */\n      tag_734\n        /* \"#utility.yul\":19215:19216   */\n      dup4\n        /* \"#utility.yul\":19197:19217   */\n      tag_450\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":19192:19217   */\n      swap3\n      pop\n        /* \"#utility.yul\":19236:19237   */\n      dup3\n        /* \"#utility.yul\":19226:19261   */\n      tag_735\n      jumpi\n        /* \"#utility.yul\":19241:19259   */\n      tag_736\n      tag_496\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":19226:19261   */\n    tag_735:\n        /* \"#utility.yul\":19283:19284   */\n      dup3\n        /* \"#utility.yul\":19280:19281   */\n      dup3\n        /* \"#utility.yul\":19276:19285   */\n      div\n        /* \"#utility.yul\":19271:19285   */\n      swap1\n      pop\n        /* \"#utility.yul\":19106:19291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19297:19491   */\n    tag_180:\n        /* \"#utility.yul\":19337:19341   */\n      0x00\n        /* \"#utility.yul\":19357:19377   */\n      tag_738\n        /* \"#utility.yul\":19375:19376   */\n      dup3\n        /* \"#utility.yul\":19357:19377   */\n      tag_450\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":19352:19377   */\n      swap2\n      pop\n        /* \"#utility.yul\":19391:19411   */\n      tag_739\n        /* \"#utility.yul\":19409:19410   */\n      dup4\n        /* \"#utility.yul\":19391:19411   */\n      tag_450\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":19386:19411   */\n      swap3\n      pop\n        /* \"#utility.yul\":19435:19436   */\n      dup3\n        /* \"#utility.yul\":19432:19433   */\n      dup3\n        /* \"#utility.yul\":19428:19437   */\n      sub\n        /* \"#utility.yul\":19420:19437   */\n      swap1\n      pop\n        /* \"#utility.yul\":19459:19460   */\n      dup2\n        /* \"#utility.yul\":19453:19457   */\n      dup2\n        /* \"#utility.yul\":19450:19461   */\n      gt\n        /* \"#utility.yul\":19447:19484   */\n      iszero\n      tag_740\n      jumpi\n        /* \"#utility.yul\":19464:19482   */\n      tag_741\n      tag_493\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":19447:19484   */\n    tag_740:\n        /* \"#utility.yul\":19297:19491   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19497:19615   */\n    tag_497:\n        /* \"#utility.yul\":19584:19608   */\n      tag_743\n        /* \"#utility.yul\":19602:19607   */\n      dup2\n        /* \"#utility.yul\":19584:19608   */\n      tag_466\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":19579:19582   */\n      dup3\n        /* \"#utility.yul\":19572:19609   */\n      mstore\n        /* \"#utility.yul\":19497:19615   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19621:19953   */\n    tag_184:\n        /* \"#utility.yul\":19742:19746   */\n      0x00\n        /* \"#utility.yul\":19780:19782   */\n      0x40\n        /* \"#utility.yul\":19769:19778   */\n      dup3\n        /* \"#utility.yul\":19765:19783   */\n      add\n        /* \"#utility.yul\":19757:19783   */\n      swap1\n      pop\n        /* \"#utility.yul\":19793:19864   */\n      tag_745\n        /* \"#utility.yul\":19861:19862   */\n      0x00\n        /* \"#utility.yul\":19850:19859   */\n      dup4\n        /* \"#utility.yul\":19846:19863   */\n      add\n        /* \"#utility.yul\":19837:19843   */\n      dup6\n        /* \"#utility.yul\":19793:19864   */\n      tag_497\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":19874:19946   */\n      tag_746\n        /* \"#utility.yul\":19942:19944   */\n      0x20\n        /* \"#utility.yul\":19931:19940   */\n      dup4\n        /* \"#utility.yul\":19927:19945   */\n      add\n        /* \"#utility.yul\":19918:19924   */\n      dup5\n        /* \"#utility.yul\":19874:19946   */\n      tag_451\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":19621:19953   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19959:20096   */\n    tag_498:\n        /* \"#utility.yul\":20013:20018   */\n      0x00\n        /* \"#utility.yul\":20044:20050   */\n      dup2\n        /* \"#utility.yul\":20038:20051   */\n      mload\n        /* \"#utility.yul\":20029:20051   */\n      swap1\n      pop\n        /* \"#utility.yul\":20060:20090   */\n      tag_748\n        /* \"#utility.yul\":20084:20089   */\n      dup2\n        /* \"#utility.yul\":20060:20090   */\n      tag_481\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":19959:20096   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20102:20447   */\n    tag_188:\n        /* \"#utility.yul\":20169:20175   */\n      0x00\n        /* \"#utility.yul\":20218:20220   */\n      0x20\n        /* \"#utility.yul\":20206:20215   */\n      dup3\n        /* \"#utility.yul\":20197:20204   */\n      dup5\n        /* \"#utility.yul\":20193:20216   */\n      sub\n        /* \"#utility.yul\":20189:20221   */\n      slt\n        /* \"#utility.yul\":20186:20305   */\n      iszero\n      tag_750\n      jumpi\n        /* \"#utility.yul\":20224:20303   */\n      tag_751\n      tag_443\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":20186:20305   */\n    tag_750:\n        /* \"#utility.yul\":20344:20345   */\n      0x00\n        /* \"#utility.yul\":20369:20430   */\n      tag_752\n        /* \"#utility.yul\":20422:20429   */\n      dup5\n        /* \"#utility.yul\":20413:20419   */\n      dup3\n        /* \"#utility.yul\":20402:20411   */\n      dup6\n        /* \"#utility.yul\":20398:20420   */\n      add\n        /* \"#utility.yul\":20369:20430   */\n      tag_498\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":20359:20430   */\n      swap2\n      pop\n        /* \"#utility.yul\":20315:20440   */\n      pop\n        /* \"#utility.yul\":20102:20447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20453:20675   */\n    tag_204:\n        /* \"#utility.yul\":20546:20550   */\n      0x00\n        /* \"#utility.yul\":20584:20586   */\n      0x20\n        /* \"#utility.yul\":20573:20582   */\n      dup3\n        /* \"#utility.yul\":20569:20587   */\n      add\n        /* \"#utility.yul\":20561:20587   */\n      swap1\n      pop\n        /* \"#utility.yul\":20597:20668   */\n      tag_754\n        /* \"#utility.yul\":20665:20666   */\n      0x00\n        /* \"#utility.yul\":20654:20663   */\n      dup4\n        /* \"#utility.yul\":20650:20667   */\n      add\n        /* \"#utility.yul\":20641:20647   */\n      dup5\n        /* \"#utility.yul\":20597:20668   */\n      tag_497\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":20453:20675   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20681:20824   */\n    tag_499:\n        /* \"#utility.yul\":20738:20743   */\n      0x00\n        /* \"#utility.yul\":20769:20775   */\n      dup2\n        /* \"#utility.yul\":20763:20776   */\n      mload\n        /* \"#utility.yul\":20754:20776   */\n      swap1\n      pop\n        /* \"#utility.yul\":20785:20818   */\n      tag_756\n        /* \"#utility.yul\":20812:20817   */\n      dup2\n        /* \"#utility.yul\":20785:20818   */\n      tag_452\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":20681:20824   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20830:21181   */\n    tag_208:\n        /* \"#utility.yul\":20900:20906   */\n      0x00\n        /* \"#utility.yul\":20949:20951   */\n      0x20\n        /* \"#utility.yul\":20937:20946   */\n      dup3\n        /* \"#utility.yul\":20928:20935   */\n      dup5\n        /* \"#utility.yul\":20924:20947   */\n      sub\n        /* \"#utility.yul\":20920:20952   */\n      slt\n        /* \"#utility.yul\":20917:21036   */\n      iszero\n      tag_758\n      jumpi\n        /* \"#utility.yul\":20955:21034   */\n      tag_759\n      tag_443\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":20917:21036   */\n    tag_758:\n        /* \"#utility.yul\":21075:21076   */\n      0x00\n        /* \"#utility.yul\":21100:21164   */\n      tag_760\n        /* \"#utility.yul\":21156:21163   */\n      dup5\n        /* \"#utility.yul\":21147:21153   */\n      dup3\n        /* \"#utility.yul\":21136:21145   */\n      dup6\n        /* \"#utility.yul\":21132:21154   */\n      add\n        /* \"#utility.yul\":21100:21164   */\n      tag_499\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":21090:21164   */\n      swap2\n      pop\n        /* \"#utility.yul\":21046:21174   */\n      pop\n        /* \"#utility.yul\":20830:21181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21187:21409   */\n    tag_500:\n        /* \"#utility.yul\":21327:21361   */\n      0x4661726d3a2063616c6c6572206973206e6f742074686520696e697469616c69\n        /* \"#utility.yul\":21323:21324   */\n      0x00\n        /* \"#utility.yul\":21315:21321   */\n      dup3\n        /* \"#utility.yul\":21311:21325   */\n      add\n        /* \"#utility.yul\":21304:21362   */\n      mstore\n        /* \"#utility.yul\":21396:21401   */\n      0x7a65720000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21391:21393   */\n      0x20\n        /* \"#utility.yul\":21383:21389   */\n      dup3\n        /* \"#utility.yul\":21379:21394   */\n      add\n        /* \"#utility.yul\":21372:21402   */\n      mstore\n        /* \"#utility.yul\":21187:21409   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21415:21781   */\n    tag_501:\n        /* \"#utility.yul\":21557:21560   */\n      0x00\n        /* \"#utility.yul\":21578:21645   */\n      tag_763\n        /* \"#utility.yul\":21642:21644   */\n      0x23\n        /* \"#utility.yul\":21637:21640   */\n      dup4\n        /* \"#utility.yul\":21578:21645   */\n      tag_487\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":21571:21645   */\n      swap2\n      pop\n        /* \"#utility.yul\":21654:21747   */\n      tag_764\n        /* \"#utility.yul\":21743:21746   */\n      dup3\n        /* \"#utility.yul\":21654:21747   */\n      tag_500\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":21772:21774   */\n      0x40\n        /* \"#utility.yul\":21767:21770   */\n      dup3\n        /* \"#utility.yul\":21763:21775   */\n      add\n        /* \"#utility.yul\":21756:21775   */\n      swap1\n      pop\n        /* \"#utility.yul\":21415:21781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21787:22206   */\n    tag_230:\n        /* \"#utility.yul\":21953:21957   */\n      0x00\n        /* \"#utility.yul\":21991:21993   */\n      0x20\n        /* \"#utility.yul\":21980:21989   */\n      dup3\n        /* \"#utility.yul\":21976:21994   */\n      add\n        /* \"#utility.yul\":21968:21994   */\n      swap1\n      pop\n        /* \"#utility.yul\":22040:22049   */\n      dup2\n        /* \"#utility.yul\":22034:22038   */\n      dup2\n        /* \"#utility.yul\":22030:22050   */\n      sub\n        /* \"#utility.yul\":22026:22027   */\n      0x00\n        /* \"#utility.yul\":22015:22024   */\n      dup4\n        /* \"#utility.yul\":22011:22028   */\n      add\n        /* \"#utility.yul\":22004:22051   */\n      mstore\n        /* \"#utility.yul\":22068:22199   */\n      tag_766\n        /* \"#utility.yul\":22194:22198   */\n      dup2\n        /* \"#utility.yul\":22068:22199   */\n      tag_501\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":22060:22199   */\n      swap1\n      pop\n        /* \"#utility.yul\":21787:22206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22212:22388   */\n    tag_502:\n        /* \"#utility.yul\":22352:22380   */\n      0x4661726d3a20696e76616c696420485947542061646472657373000000000000\n        /* \"#utility.yul\":22348:22349   */\n      0x00\n        /* \"#utility.yul\":22340:22346   */\n      dup3\n        /* \"#utility.yul\":22336:22350   */\n      add\n        /* \"#utility.yul\":22329:22381   */\n      mstore\n        /* \"#utility.yul\":22212:22388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22394:22760   */\n    tag_503:\n        /* \"#utility.yul\":22536:22539   */\n      0x00\n        /* \"#utility.yul\":22557:22624   */\n      tag_769\n        /* \"#utility.yul\":22621:22623   */\n      0x1a\n        /* \"#utility.yul\":22616:22619   */\n      dup4\n        /* \"#utility.yul\":22557:22624   */\n      tag_487\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":22550:22624   */\n      swap2\n      pop\n        /* \"#utility.yul\":22633:22726   */\n      tag_770\n        /* \"#utility.yul\":22722:22725   */\n      dup3\n        /* \"#utility.yul\":22633:22726   */\n      tag_502\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":22751:22753   */\n      0x20\n        /* \"#utility.yul\":22746:22749   */\n      dup3\n        /* \"#utility.yul\":22742:22754   */\n      add\n        /* \"#utility.yul\":22735:22754   */\n      swap1\n      pop\n        /* \"#utility.yul\":22394:22760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22766:23185   */\n    tag_233:\n        /* \"#utility.yul\":22932:22936   */\n      0x00\n        /* \"#utility.yul\":22970:22972   */\n      0x20\n        /* \"#utility.yul\":22959:22968   */\n      dup3\n        /* \"#utility.yul\":22955:22973   */\n      add\n        /* \"#utility.yul\":22947:22973   */\n      swap1\n      pop\n        /* \"#utility.yul\":23019:23028   */\n      dup2\n        /* \"#utility.yul\":23013:23017   */\n      dup2\n        /* \"#utility.yul\":23009:23029   */\n      sub\n        /* \"#utility.yul\":23005:23006   */\n      0x00\n        /* \"#utility.yul\":22994:23003   */\n      dup4\n        /* \"#utility.yul\":22990:23007   */\n      add\n        /* \"#utility.yul\":22983:23030   */\n      mstore\n        /* \"#utility.yul\":23047:23178   */\n      tag_772\n        /* \"#utility.yul\":23173:23177   */\n      dup2\n        /* \"#utility.yul\":23047:23178   */\n      tag_503\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":23039:23178   */\n      swap1\n      pop\n        /* \"#utility.yul\":22766:23185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23191:23424   */\n    tag_259:\n        /* \"#utility.yul\":23230:23233   */\n      0x00\n        /* \"#utility.yul\":23253:23277   */\n      tag_774\n        /* \"#utility.yul\":23271:23276   */\n      dup3\n        /* \"#utility.yul\":23253:23277   */\n      tag_450\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":23244:23277   */\n      swap2\n      pop\n        /* \"#utility.yul\":23299:23365   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23292:23297   */\n      dup3\n        /* \"#utility.yul\":23289:23366   */\n      sub\n        /* \"#utility.yul\":23286:23389   */\n      tag_775\n      jumpi\n        /* \"#utility.yul\":23369:23387   */\n      tag_776\n      tag_493\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":23286:23389   */\n    tag_775:\n        /* \"#utility.yul\":23416:23417   */\n      0x01\n        /* \"#utility.yul\":23409:23414   */\n      dup3\n        /* \"#utility.yul\":23405:23418   */\n      add\n        /* \"#utility.yul\":23398:23418   */\n      swap1\n      pop\n        /* \"#utility.yul\":23191:23424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23430:23529   */\n    tag_504:\n        /* \"#utility.yul\":23482:23488   */\n      0x00\n        /* \"#utility.yul\":23516:23521   */\n      dup2\n        /* \"#utility.yul\":23510:23522   */\n      mload\n        /* \"#utility.yul\":23500:23522   */\n      swap1\n      pop\n        /* \"#utility.yul\":23430:23529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23535:23781   */\n    tag_505:\n        /* \"#utility.yul\":23616:23617   */\n      0x00\n        /* \"#utility.yul\":23626:23739   */\n    tag_779:\n        /* \"#utility.yul\":23640:23646   */\n      dup4\n        /* \"#utility.yul\":23637:23638   */\n      dup2\n        /* \"#utility.yul\":23634:23647   */\n      lt\n        /* \"#utility.yul\":23626:23739   */\n      iszero\n      tag_781\n      jumpi\n        /* \"#utility.yul\":23725:23726   */\n      dup1\n        /* \"#utility.yul\":23720:23723   */\n      dup3\n        /* \"#utility.yul\":23716:23727   */\n      add\n        /* \"#utility.yul\":23710:23728   */\n      mload\n        /* \"#utility.yul\":23706:23707   */\n      dup2\n        /* \"#utility.yul\":23701:23704   */\n      dup5\n        /* \"#utility.yul\":23697:23708   */\n      add\n        /* \"#utility.yul\":23690:23729   */\n      mstore\n        /* \"#utility.yul\":23662:23664   */\n      0x20\n        /* \"#utility.yul\":23659:23660   */\n      dup2\n        /* \"#utility.yul\":23655:23665   */\n      add\n        /* \"#utility.yul\":23650:23665   */\n      swap1\n      pop\n        /* \"#utility.yul\":23626:23739   */\n      jump(tag_779)\n    tag_781:\n        /* \"#utility.yul\":23773:23774   */\n      0x00\n        /* \"#utility.yul\":23764:23770   */\n      dup5\n        /* \"#utility.yul\":23759:23762   */\n      dup5\n        /* \"#utility.yul\":23755:23771   */\n      add\n        /* \"#utility.yul\":23748:23775   */\n      mstore\n        /* \"#utility.yul\":23597:23781   */\n      pop\n        /* \"#utility.yul\":23535:23781   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23787:24164   */\n    tag_506:\n        /* \"#utility.yul\":23875:23878   */\n      0x00\n        /* \"#utility.yul\":23903:23942   */\n      tag_783\n        /* \"#utility.yul\":23936:23941   */\n      dup3\n        /* \"#utility.yul\":23903:23942   */\n      tag_504\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":23958:24029   */\n      tag_784\n        /* \"#utility.yul\":24022:24028   */\n      dup2\n        /* \"#utility.yul\":24017:24020   */\n      dup6\n        /* \"#utility.yul\":23958:24029   */\n      tag_487\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":23951:24029   */\n      swap4\n      pop\n        /* \"#utility.yul\":24038:24103   */\n      tag_785\n        /* \"#utility.yul\":24096:24102   */\n      dup2\n        /* \"#utility.yul\":24091:24094   */\n      dup6\n        /* \"#utility.yul\":24084:24088   */\n      0x20\n        /* \"#utility.yul\":24077:24082   */\n      dup7\n        /* \"#utility.yul\":24073:24089   */\n      add\n        /* \"#utility.yul\":24038:24103   */\n      tag_505\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":24128:24157   */\n      tag_786\n        /* \"#utility.yul\":24150:24156   */\n      dup2\n        /* \"#utility.yul\":24128:24157   */\n      tag_474\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":24123:24126   */\n      dup5\n        /* \"#utility.yul\":24119:24158   */\n      add\n        /* \"#utility.yul\":24112:24158   */\n      swap2\n      pop\n        /* \"#utility.yul\":23879:24164   */\n      pop\n        /* \"#utility.yul\":23787:24164   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24170:24703   */\n    tag_357:\n        /* \"#utility.yul\":24339:24343   */\n      0x00\n        /* \"#utility.yul\":24377:24379   */\n      0x60\n        /* \"#utility.yul\":24366:24375   */\n      dup3\n        /* \"#utility.yul\":24362:24380   */\n      add\n        /* \"#utility.yul\":24354:24380   */\n      swap1\n      pop\n        /* \"#utility.yul\":24390:24461   */\n      tag_788\n        /* \"#utility.yul\":24458:24459   */\n      0x00\n        /* \"#utility.yul\":24447:24456   */\n      dup4\n        /* \"#utility.yul\":24443:24460   */\n      add\n        /* \"#utility.yul\":24434:24440   */\n      dup7\n        /* \"#utility.yul\":24390:24461   */\n      tag_497\n      jump\t// in\n    tag_788:\n        /* \"#utility.yul\":24508:24517   */\n      dup2\n        /* \"#utility.yul\":24502:24506   */\n      dup2\n        /* \"#utility.yul\":24498:24518   */\n      sub\n        /* \"#utility.yul\":24493:24495   */\n      0x20\n        /* \"#utility.yul\":24482:24491   */\n      dup4\n        /* \"#utility.yul\":24478:24496   */\n      add\n        /* \"#utility.yul\":24471:24519   */\n      mstore\n        /* \"#utility.yul\":24536:24614   */\n      tag_789\n        /* \"#utility.yul\":24609:24613   */\n      dup2\n        /* \"#utility.yul\":24600:24606   */\n      dup6\n        /* \"#utility.yul\":24536:24614   */\n      tag_506\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":24528:24614   */\n      swap1\n      pop\n        /* \"#utility.yul\":24624:24696   */\n      tag_790\n        /* \"#utility.yul\":24692:24694   */\n      0x40\n        /* \"#utility.yul\":24681:24690   */\n      dup4\n        /* \"#utility.yul\":24677:24695   */\n      add\n        /* \"#utility.yul\":24668:24674   */\n      dup5\n        /* \"#utility.yul\":24624:24696   */\n      tag_451\n      jump\t// in\n    tag_790:\n        /* \"#utility.yul\":24170:24703   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24709:25151   */\n    tag_365:\n        /* \"#utility.yul\":24858:24862   */\n      0x00\n        /* \"#utility.yul\":24896:24898   */\n      0x60\n        /* \"#utility.yul\":24885:24894   */\n      dup3\n        /* \"#utility.yul\":24881:24899   */\n      add\n        /* \"#utility.yul\":24873:24899   */\n      swap1\n      pop\n        /* \"#utility.yul\":24909:24980   */\n      tag_792\n        /* \"#utility.yul\":24977:24978   */\n      0x00\n        /* \"#utility.yul\":24966:24975   */\n      dup4\n        /* \"#utility.yul\":24962:24979   */\n      add\n        /* \"#utility.yul\":24953:24959   */\n      dup7\n        /* \"#utility.yul\":24909:24980   */\n      tag_497\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":24990:25062   */\n      tag_793\n        /* \"#utility.yul\":25058:25060   */\n      0x20\n        /* \"#utility.yul\":25047:25056   */\n      dup4\n        /* \"#utility.yul\":25043:25061   */\n      add\n        /* \"#utility.yul\":25034:25040   */\n      dup6\n        /* \"#utility.yul\":24990:25062   */\n      tag_497\n      jump\t// in\n    tag_793:\n        /* \"#utility.yul\":25072:25144   */\n      tag_794\n        /* \"#utility.yul\":25140:25142   */\n      0x40\n        /* \"#utility.yul\":25129:25138   */\n      dup4\n        /* \"#utility.yul\":25125:25143   */\n      add\n        /* \"#utility.yul\":25116:25122   */\n      dup5\n        /* \"#utility.yul\":25072:25144   */\n      tag_451\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":24709:25151   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25157:25330   */\n    tag_507:\n        /* \"#utility.yul\":25297:25322   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":25293:25294   */\n      0x00\n        /* \"#utility.yul\":25285:25291   */\n      dup3\n        /* \"#utility.yul\":25281:25295   */\n      add\n        /* \"#utility.yul\":25274:25323   */\n      mstore\n        /* \"#utility.yul\":25157:25330   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25336:25738   */\n    tag_508:\n        /* \"#utility.yul\":25496:25499   */\n      0x00\n        /* \"#utility.yul\":25517:25602   */\n      tag_797\n        /* \"#utility.yul\":25599:25601   */\n      0x17\n        /* \"#utility.yul\":25594:25597   */\n      dup4\n        /* \"#utility.yul\":25517:25602   */\n      tag_490\n      jump\t// in\n    tag_797:\n        /* \"#utility.yul\":25510:25602   */\n      swap2\n      pop\n        /* \"#utility.yul\":25611:25704   */\n      tag_798\n        /* \"#utility.yul\":25700:25703   */\n      dup3\n        /* \"#utility.yul\":25611:25704   */\n      tag_507\n      jump\t// in\n    tag_798:\n        /* \"#utility.yul\":25729:25731   */\n      0x17\n        /* \"#utility.yul\":25724:25727   */\n      dup3\n        /* \"#utility.yul\":25720:25732   */\n      add\n        /* \"#utility.yul\":25713:25732   */\n      swap1\n      pop\n        /* \"#utility.yul\":25336:25738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25744:26134   */\n    tag_509:\n        /* \"#utility.yul\":25850:25853   */\n      0x00\n        /* \"#utility.yul\":25878:25917   */\n      tag_800\n        /* \"#utility.yul\":25911:25916   */\n      dup3\n        /* \"#utility.yul\":25878:25917   */\n      tag_504\n      jump\t// in\n    tag_800:\n        /* \"#utility.yul\":25933:26022   */\n      tag_801\n        /* \"#utility.yul\":26015:26021   */\n      dup2\n        /* \"#utility.yul\":26010:26013   */\n      dup6\n        /* \"#utility.yul\":25933:26022   */\n      tag_490\n      jump\t// in\n    tag_801:\n        /* \"#utility.yul\":25926:26022   */\n      swap4\n      pop\n        /* \"#utility.yul\":26031:26096   */\n      tag_802\n        /* \"#utility.yul\":26089:26095   */\n      dup2\n        /* \"#utility.yul\":26084:26087   */\n      dup6\n        /* \"#utility.yul\":26077:26081   */\n      0x20\n        /* \"#utility.yul\":26070:26075   */\n      dup7\n        /* \"#utility.yul\":26066:26082   */\n      add\n        /* \"#utility.yul\":26031:26096   */\n      tag_505\n      jump\t// in\n    tag_802:\n        /* \"#utility.yul\":26121:26127   */\n      dup1\n        /* \"#utility.yul\":26116:26119   */\n      dup5\n        /* \"#utility.yul\":26112:26128   */\n      add\n        /* \"#utility.yul\":26105:26128   */\n      swap2\n      pop\n        /* \"#utility.yul\":25854:26134   */\n      pop\n        /* \"#utility.yul\":25744:26134   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26140:26307   */\n    tag_510:\n        /* \"#utility.yul\":26280:26299   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":26276:26277   */\n      0x00\n        /* \"#utility.yul\":26268:26274   */\n      dup3\n        /* \"#utility.yul\":26264:26278   */\n      add\n        /* \"#utility.yul\":26257:26300   */\n      mstore\n        /* \"#utility.yul\":26140:26307   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26313:26715   */\n    tag_511:\n        /* \"#utility.yul\":26473:26476   */\n      0x00\n        /* \"#utility.yul\":26494:26579   */\n      tag_805\n        /* \"#utility.yul\":26576:26578   */\n      0x11\n        /* \"#utility.yul\":26571:26574   */\n      dup4\n        /* \"#utility.yul\":26494:26579   */\n      tag_490\n      jump\t// in\n    tag_805:\n        /* \"#utility.yul\":26487:26579   */\n      swap2\n      pop\n        /* \"#utility.yul\":26588:26681   */\n      tag_806\n        /* \"#utility.yul\":26677:26680   */\n      dup3\n        /* \"#utility.yul\":26588:26681   */\n      tag_510\n      jump\t// in\n    tag_806:\n        /* \"#utility.yul\":26706:26708   */\n      0x11\n        /* \"#utility.yul\":26701:26704   */\n      dup3\n        /* \"#utility.yul\":26697:26709   */\n      add\n        /* \"#utility.yul\":26690:26709   */\n      swap1\n      pop\n        /* \"#utility.yul\":26313:26715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26721:27688   */\n    tag_374:\n        /* \"#utility.yul\":27103:27106   */\n      0x00\n        /* \"#utility.yul\":27125:27273   */\n      tag_808\n        /* \"#utility.yul\":27269:27272   */\n      dup3\n        /* \"#utility.yul\":27125:27273   */\n      tag_508\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":27118:27273   */\n      swap2\n      pop\n        /* \"#utility.yul\":27290:27385   */\n      tag_809\n        /* \"#utility.yul\":27381:27384   */\n      dup3\n        /* \"#utility.yul\":27372:27378   */\n      dup6\n        /* \"#utility.yul\":27290:27385   */\n      tag_509\n      jump\t// in\n    tag_809:\n        /* \"#utility.yul\":27283:27385   */\n      swap2\n      pop\n        /* \"#utility.yul\":27402:27550   */\n      tag_810\n        /* \"#utility.yul\":27546:27549   */\n      dup3\n        /* \"#utility.yul\":27402:27550   */\n      tag_511\n      jump\t// in\n    tag_810:\n        /* \"#utility.yul\":27395:27550   */\n      swap2\n      pop\n        /* \"#utility.yul\":27567:27662   */\n      tag_811\n        /* \"#utility.yul\":27658:27661   */\n      dup3\n        /* \"#utility.yul\":27649:27655   */\n      dup5\n        /* \"#utility.yul\":27567:27662   */\n      tag_509\n      jump\t// in\n    tag_811:\n        /* \"#utility.yul\":27560:27662   */\n      swap2\n      pop\n        /* \"#utility.yul\":27679:27682   */\n      dup2\n        /* \"#utility.yul\":27672:27682   */\n      swap1\n      pop\n        /* \"#utility.yul\":26721:27688   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27694:28007   */\n    tag_376:\n        /* \"#utility.yul\":27807:27811   */\n      0x00\n        /* \"#utility.yul\":27845:27847   */\n      0x20\n        /* \"#utility.yul\":27834:27843   */\n      dup3\n        /* \"#utility.yul\":27830:27848   */\n      add\n        /* \"#utility.yul\":27822:27848   */\n      swap1\n      pop\n        /* \"#utility.yul\":27894:27903   */\n      dup2\n        /* \"#utility.yul\":27888:27892   */\n      dup2\n        /* \"#utility.yul\":27884:27904   */\n      sub\n        /* \"#utility.yul\":27880:27881   */\n      0x00\n        /* \"#utility.yul\":27869:27878   */\n      dup4\n        /* \"#utility.yul\":27865:27882   */\n      add\n        /* \"#utility.yul\":27858:27905   */\n      mstore\n        /* \"#utility.yul\":27922:28000   */\n      tag_813\n        /* \"#utility.yul\":27995:27999   */\n      dup2\n        /* \"#utility.yul\":27986:27992   */\n      dup5\n        /* \"#utility.yul\":27922:28000   */\n      tag_506\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":27914:28000   */\n      swap1\n      pop\n        /* \"#utility.yul\":27694:28007   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28013:28242   */\n    tag_512:\n        /* \"#utility.yul\":28153:28187   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":28149:28150   */\n      0x00\n        /* \"#utility.yul\":28141:28147   */\n      dup3\n        /* \"#utility.yul\":28137:28151   */\n      add\n        /* \"#utility.yul\":28130:28188   */\n      mstore\n        /* \"#utility.yul\":28222:28234   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28217:28219   */\n      0x20\n        /* \"#utility.yul\":28209:28215   */\n      dup3\n        /* \"#utility.yul\":28205:28220   */\n      add\n        /* \"#utility.yul\":28198:28235   */\n      mstore\n        /* \"#utility.yul\":28013:28242   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28248:28614   */\n    tag_513:\n        /* \"#utility.yul\":28390:28393   */\n      0x00\n        /* \"#utility.yul\":28411:28478   */\n      tag_816\n        /* \"#utility.yul\":28475:28477   */\n      0x2a\n        /* \"#utility.yul\":28470:28473   */\n      dup4\n        /* \"#utility.yul\":28411:28478   */\n      tag_487\n      jump\t// in\n    tag_816:\n        /* \"#utility.yul\":28404:28478   */\n      swap2\n      pop\n        /* \"#utility.yul\":28487:28580   */\n      tag_817\n        /* \"#utility.yul\":28576:28579   */\n      dup3\n        /* \"#utility.yul\":28487:28580   */\n      tag_512\n      jump\t// in\n    tag_817:\n        /* \"#utility.yul\":28605:28607   */\n      0x40\n        /* \"#utility.yul\":28600:28603   */\n      dup3\n        /* \"#utility.yul\":28596:28608   */\n      add\n        /* \"#utility.yul\":28589:28608   */\n      swap1\n      pop\n        /* \"#utility.yul\":28248:28614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28620:29039   */\n    tag_384:\n        /* \"#utility.yul\":28786:28790   */\n      0x00\n        /* \"#utility.yul\":28824:28826   */\n      0x20\n        /* \"#utility.yul\":28813:28822   */\n      dup3\n        /* \"#utility.yul\":28809:28827   */\n      add\n        /* \"#utility.yul\":28801:28827   */\n      swap1\n      pop\n        /* \"#utility.yul\":28873:28882   */\n      dup2\n        /* \"#utility.yul\":28867:28871   */\n      dup2\n        /* \"#utility.yul\":28863:28883   */\n      sub\n        /* \"#utility.yul\":28859:28860   */\n      0x00\n        /* \"#utility.yul\":28848:28857   */\n      dup4\n        /* \"#utility.yul\":28844:28861   */\n      add\n        /* \"#utility.yul\":28837:28884   */\n      mstore\n        /* \"#utility.yul\":28901:29032   */\n      tag_819\n        /* \"#utility.yul\":29027:29031   */\n      dup2\n        /* \"#utility.yul\":28901:29032   */\n      tag_513\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":28893:29032   */\n      swap1\n      pop\n        /* \"#utility.yul\":28620:29039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29045:29216   */\n    tag_408:\n        /* \"#utility.yul\":29084:29087   */\n      0x00\n        /* \"#utility.yul\":29107:29131   */\n      tag_821\n        /* \"#utility.yul\":29125:29130   */\n      dup3\n        /* \"#utility.yul\":29107:29131   */\n      tag_450\n      jump\t// in\n    tag_821:\n        /* \"#utility.yul\":29098:29131   */\n      swap2\n      pop\n        /* \"#utility.yul\":29153:29157   */\n      0x00\n        /* \"#utility.yul\":29146:29151   */\n      dup3\n        /* \"#utility.yul\":29143:29158   */\n      sub\n        /* \"#utility.yul\":29140:29181   */\n      tag_822\n      jumpi\n        /* \"#utility.yul\":29161:29179   */\n      tag_823\n      tag_493\n      jump\t// in\n    tag_823:\n        /* \"#utility.yul\":29140:29181   */\n    tag_822:\n        /* \"#utility.yul\":29208:29209   */\n      0x01\n        /* \"#utility.yul\":29201:29206   */\n      dup3\n        /* \"#utility.yul\":29197:29210   */\n      sub\n        /* \"#utility.yul\":29190:29210   */\n      swap1\n      pop\n        /* \"#utility.yul\":29045:29216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29222:29404   */\n    tag_514:\n        /* \"#utility.yul\":29362:29396   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":29358:29359   */\n      0x00\n        /* \"#utility.yul\":29350:29356   */\n      dup3\n        /* \"#utility.yul\":29346:29360   */\n      add\n        /* \"#utility.yul\":29339:29397   */\n      mstore\n        /* \"#utility.yul\":29222:29404   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29410:29776   */\n    tag_515:\n        /* \"#utility.yul\":29552:29555   */\n      0x00\n        /* \"#utility.yul\":29573:29640   */\n      tag_826\n        /* \"#utility.yul\":29637:29639   */\n      0x20\n        /* \"#utility.yul\":29632:29635   */\n      dup4\n        /* \"#utility.yul\":29573:29640   */\n      tag_487\n      jump\t// in\n    tag_826:\n        /* \"#utility.yul\":29566:29640   */\n      swap2\n      pop\n        /* \"#utility.yul\":29649:29742   */\n      tag_827\n        /* \"#utility.yul\":29738:29741   */\n      dup3\n        /* \"#utility.yul\":29649:29742   */\n      tag_514\n      jump\t// in\n    tag_827:\n        /* \"#utility.yul\":29767:29769   */\n      0x20\n        /* \"#utility.yul\":29762:29765   */\n      dup3\n        /* \"#utility.yul\":29758:29770   */\n      add\n        /* \"#utility.yul\":29751:29770   */\n      swap1\n      pop\n        /* \"#utility.yul\":29410:29776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29782:30201   */\n    tag_411:\n        /* \"#utility.yul\":29948:29952   */\n      0x00\n        /* \"#utility.yul\":29986:29988   */\n      0x20\n        /* \"#utility.yul\":29975:29984   */\n      dup3\n        /* \"#utility.yul\":29971:29989   */\n      add\n        /* \"#utility.yul\":29963:29989   */\n      swap1\n      pop\n        /* \"#utility.yul\":30035:30044   */\n      dup2\n        /* \"#utility.yul\":30029:30033   */\n      dup2\n        /* \"#utility.yul\":30025:30045   */\n      sub\n        /* \"#utility.yul\":30021:30022   */\n      0x00\n        /* \"#utility.yul\":30010:30019   */\n      dup4\n        /* \"#utility.yul\":30006:30023   */\n      add\n        /* \"#utility.yul\":29999:30046   */\n      mstore\n        /* \"#utility.yul\":30063:30194   */\n      tag_829\n        /* \"#utility.yul\":30189:30193   */\n      dup2\n        /* \"#utility.yul\":30063:30194   */\n      tag_515\n      jump\t// in\n    tag_829:\n        /* \"#utility.yul\":30055:30194   */\n      swap1\n      pop\n        /* \"#utility.yul\":29782:30201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30207:30432   */\n    tag_516:\n        /* \"#utility.yul\":30347:30381   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":30343:30344   */\n      0x00\n        /* \"#utility.yul\":30335:30341   */\n      dup3\n        /* \"#utility.yul\":30331:30345   */\n      add\n        /* \"#utility.yul\":30324:30382   */\n      mstore\n        /* \"#utility.yul\":30416:30424   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30411:30413   */\n      0x20\n        /* \"#utility.yul\":30403:30409   */\n      dup3\n        /* \"#utility.yul\":30399:30414   */\n      add\n        /* \"#utility.yul\":30392:30425   */\n      mstore\n        /* \"#utility.yul\":30207:30432   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30438:30804   */\n    tag_517:\n        /* \"#utility.yul\":30580:30583   */\n      0x00\n        /* \"#utility.yul\":30601:30668   */\n      tag_832\n        /* \"#utility.yul\":30665:30667   */\n      0x26\n        /* \"#utility.yul\":30660:30663   */\n      dup4\n        /* \"#utility.yul\":30601:30668   */\n      tag_487\n      jump\t// in\n    tag_832:\n        /* \"#utility.yul\":30594:30668   */\n      swap2\n      pop\n        /* \"#utility.yul\":30677:30770   */\n      tag_833\n        /* \"#utility.yul\":30766:30769   */\n      dup3\n        /* \"#utility.yul\":30677:30770   */\n      tag_516\n      jump\t// in\n    tag_833:\n        /* \"#utility.yul\":30795:30797   */\n      0x40\n        /* \"#utility.yul\":30790:30793   */\n      dup3\n        /* \"#utility.yul\":30786:30798   */\n      add\n        /* \"#utility.yul\":30779:30798   */\n      swap1\n      pop\n        /* \"#utility.yul\":30438:30804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30810:31229   */\n    tag_418:\n        /* \"#utility.yul\":30976:30980   */\n      0x00\n        /* \"#utility.yul\":31014:31016   */\n      0x20\n        /* \"#utility.yul\":31003:31012   */\n      dup3\n        /* \"#utility.yul\":30999:31017   */\n      add\n        /* \"#utility.yul\":30991:31017   */\n      swap1\n      pop\n        /* \"#utility.yul\":31063:31072   */\n      dup2\n        /* \"#utility.yul\":31057:31061   */\n      dup2\n        /* \"#utility.yul\":31053:31073   */\n      sub\n        /* \"#utility.yul\":31049:31050   */\n      0x00\n        /* \"#utility.yul\":31038:31047   */\n      dup4\n        /* \"#utility.yul\":31034:31051   */\n      add\n        /* \"#utility.yul\":31027:31074   */\n      mstore\n        /* \"#utility.yul\":31091:31222   */\n      tag_835\n        /* \"#utility.yul\":31217:31221   */\n      dup2\n        /* \"#utility.yul\":31091:31222   */\n      tag_517\n      jump\t// in\n    tag_835:\n        /* \"#utility.yul\":31083:31222   */\n      swap1\n      pop\n        /* \"#utility.yul\":30810:31229   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31235:31333   */\n    tag_518:\n        /* \"#utility.yul\":31286:31292   */\n      0x00\n        /* \"#utility.yul\":31320:31325   */\n      dup2\n        /* \"#utility.yul\":31314:31326   */\n      mload\n        /* \"#utility.yul\":31304:31326   */\n      swap1\n      pop\n        /* \"#utility.yul\":31235:31333   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31339:31486   */\n    tag_519:\n        /* \"#utility.yul\":31440:31451   */\n      0x00\n        /* \"#utility.yul\":31477:31480   */\n      dup2\n        /* \"#utility.yul\":31462:31480   */\n      swap1\n      pop\n        /* \"#utility.yul\":31339:31486   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31492:31878   */\n    tag_520:\n        /* \"#utility.yul\":31596:31599   */\n      0x00\n        /* \"#utility.yul\":31624:31662   */\n      tag_839\n        /* \"#utility.yul\":31656:31661   */\n      dup3\n        /* \"#utility.yul\":31624:31662   */\n      tag_518\n      jump\t// in\n    tag_839:\n        /* \"#utility.yul\":31678:31766   */\n      tag_840\n        /* \"#utility.yul\":31759:31765   */\n      dup2\n        /* \"#utility.yul\":31754:31757   */\n      dup6\n        /* \"#utility.yul\":31678:31766   */\n      tag_519\n      jump\t// in\n    tag_840:\n        /* \"#utility.yul\":31671:31766   */\n      swap4\n      pop\n        /* \"#utility.yul\":31775:31840   */\n      tag_841\n        /* \"#utility.yul\":31833:31839   */\n      dup2\n        /* \"#utility.yul\":31828:31831   */\n      dup6\n        /* \"#utility.yul\":31821:31825   */\n      0x20\n        /* \"#utility.yul\":31814:31819   */\n      dup7\n        /* \"#utility.yul\":31810:31826   */\n      add\n        /* \"#utility.yul\":31775:31840   */\n      tag_505\n      jump\t// in\n    tag_841:\n        /* \"#utility.yul\":31865:31871   */\n      dup1\n        /* \"#utility.yul\":31860:31863   */\n      dup5\n        /* \"#utility.yul\":31856:31872   */\n      add\n        /* \"#utility.yul\":31849:31872   */\n      swap2\n      pop\n        /* \"#utility.yul\":31600:31878   */\n      pop\n        /* \"#utility.yul\":31492:31878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31884:32155   */\n    tag_420:\n        /* \"#utility.yul\":32014:32017   */\n      0x00\n        /* \"#utility.yul\":32036:32129   */\n      tag_843\n        /* \"#utility.yul\":32125:32128   */\n      dup3\n        /* \"#utility.yul\":32116:32122   */\n      dup5\n        /* \"#utility.yul\":32036:32129   */\n      tag_520\n      jump\t// in\n    tag_843:\n        /* \"#utility.yul\":32029:32129   */\n      swap2\n      pop\n        /* \"#utility.yul\":32146:32149   */\n      dup2\n        /* \"#utility.yul\":32139:32149   */\n      swap1\n      pop\n        /* \"#utility.yul\":31884:32155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32161:32340   */\n    tag_521:\n        /* \"#utility.yul\":32301:32332   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":32297:32298   */\n      0x00\n        /* \"#utility.yul\":32289:32295   */\n      dup3\n        /* \"#utility.yul\":32285:32299   */\n      add\n        /* \"#utility.yul\":32278:32333   */\n      mstore\n        /* \"#utility.yul\":32161:32340   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32346:32712   */\n    tag_522:\n        /* \"#utility.yul\":32488:32491   */\n      0x00\n        /* \"#utility.yul\":32509:32576   */\n      tag_846\n        /* \"#utility.yul\":32573:32575   */\n      0x1d\n        /* \"#utility.yul\":32568:32571   */\n      dup4\n        /* \"#utility.yul\":32509:32576   */\n      tag_487\n      jump\t// in\n    tag_846:\n        /* \"#utility.yul\":32502:32576   */\n      swap2\n      pop\n        /* \"#utility.yul\":32585:32678   */\n      tag_847\n        /* \"#utility.yul\":32674:32677   */\n      dup3\n        /* \"#utility.yul\":32585:32678   */\n      tag_521\n      jump\t// in\n    tag_847:\n        /* \"#utility.yul\":32703:32705   */\n      0x20\n        /* \"#utility.yul\":32698:32701   */\n      dup3\n        /* \"#utility.yul\":32694:32706   */\n      add\n        /* \"#utility.yul\":32687:32706   */\n      swap1\n      pop\n        /* \"#utility.yul\":32346:32712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32718:33137   */\n    tag_433:\n        /* \"#utility.yul\":32884:32888   */\n      0x00\n        /* \"#utility.yul\":32922:32924   */\n      0x20\n        /* \"#utility.yul\":32911:32920   */\n      dup3\n        /* \"#utility.yul\":32907:32925   */\n      add\n        /* \"#utility.yul\":32899:32925   */\n      swap1\n      pop\n        /* \"#utility.yul\":32971:32980   */\n      dup2\n        /* \"#utility.yul\":32965:32969   */\n      dup2\n        /* \"#utility.yul\":32961:32981   */\n      sub\n        /* \"#utility.yul\":32957:32958   */\n      0x00\n        /* \"#utility.yul\":32946:32955   */\n      dup4\n        /* \"#utility.yul\":32942:32959   */\n      add\n        /* \"#utility.yul\":32935:32982   */\n      mstore\n        /* \"#utility.yul\":32999:33130   */\n      tag_849\n        /* \"#utility.yul\":33125:33129   */\n      dup2\n        /* \"#utility.yul\":32999:33130   */\n      tag_522\n      jump\t// in\n    tag_849:\n        /* \"#utility.yul\":32991:33130   */\n      swap1\n      pop\n        /* \"#utility.yul\":32718:33137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220833301db9137e85833c7978c11043a13d82605aa6b342c33cdcd4c1f9c72552464736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_115": {
									"entryPoint": null,
									"id": 115,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_3315": {
									"entryPoint": 87,
									"id": 3315,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b5061001f61005760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505061005f565b600033905090565b6080516132c06200007b6000396000610c6501526132c06000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80635312ea8e116100de57806393f1a40b11610097578063b3ecb62311610071578063b3ecb6231461043a578063ccc574901461046a578063d547741f14610488578063e2bbb158146104a457610173565b806393f1a40b146103cf578063a217fddf14610400578063ad35e1cc1461041e57610173565b80635312ea8e1461030f5780635e3e15811461032b578063630b5ba11461034757806379838ef0146103515780637f37df3b1461036f57806391d148541461039f57610173565b80632f2ff15d116101305780632f2ff15d1461026557806336568abe146102815780633a0618fd1461029d578063441a3e70146102b957806348cd4cb1146102d557806351eb05a6146102f357610173565b806301ffc9a714610178578063081e3eda146101a85780631526fe27146101c657806317caf6f1146101f957806323c64ce114610217578063248a9ca314610235575b600080fd5b610192600480360381019061018d919061219f565b6104c0565b60405161019f91906121e7565b60405180910390f35b6101b061053a565b6040516101bd919061221b565b60405180910390f35b6101e060048036038101906101db9190612262565b610547565b6040516101f0949392919061230e565b60405180910390f35b6102016105a7565b60405161020e919061221b565b60405180910390f35b61021f6105ad565b60405161022c9190612374565b60405180910390f35b61024f600480360381019061024a91906123c5565b6105d3565b60405161025c9190612401565b60405180910390f35b61027f600480360381019061027a919061245a565b6105f2565b005b61029b6004803603810190610296919061245a565b610613565b005b6102b760048036038101906102b2919061264a565b610696565b005b6102d360048036038101906102ce91906126cd565b610717565b005b6102dd6109b5565b6040516102ea919061221b565b60405180910390f35b61030d60048036038101906103089190612262565b6109bb565b005b61032960048036038101906103249190612262565b610b35565b005b610345600480360381019061034091906127c3565b610c63565b005b61034f610f8f565b005b610359610fc2565b604051610366919061221b565b60405180910390f35b61038960048036038101906103849190612816565b610fc8565b604051610396919061221b565b60405180910390f35b6103b960048036038101906103b4919061245a565b611234565b6040516103c691906121e7565b60405180910390f35b6103e960048036038101906103e49190612816565b61129e565b6040516103f7929190612856565b60405180910390f35b6104086112cf565b6040516104159190612401565b60405180910390f35b6104386004803603810190610433919061287f565b6112d6565b005b610454600480360381019061044f91906128d2565b6113ec565b604051610461919061221b565b60405180910390f35b610472611433565b60405161047f9190612401565b60405180910390f35b6104a2600480360381019061049d919061245a565b61145b565b005b6104be60048036038101906104b991906126cd565b61147c565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105335750610532826116e2565b5b9050919050565b6000600680549050905090565b6006818154811061055757600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000838152602001908152602001600020600101549050919050565b6105fb826105d3565b6106048161174c565b61060e8383611760565b505050565b61061b611840565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067f90612982565b60405180910390fd5b6106928282611848565b5050565b6040516020016106a5906129f9565b604051602081830303815290604052805190602001206106c48161174c565b81156106d3576106d2610f8f565b5b600060035443116106e6576003546106e8565b435b905084600460008282546106fc9190612a3d565b9250508190555061070f86868684611929565b505050505050565b60006006838154811061072d5761072c612a71565b5b90600052602060002090600402019050600060076000858152602001908152602001600020600061075c611840565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905082816000015410156107df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d690612aec565b60405180910390fd5b6107e8846109bb565b6000816001015464e8d4a51000846003015484600001546108099190612b0c565b6108139190612b7d565b61081d9190612bae565b905060008111156108d157600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1961086e611840565b836040518363ffffffff1660e01b815260040161088c929190612bf1565b6020604051808303816000875af11580156108ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cf9190612c2f565b505b600084111561092c57838260000160008282546108ee9190612bae565b9250508190555061092b8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610925611840565b86611a64565b5b64e8d4a51000836003015483600001546109469190612b0c565b6109509190612b7d565b826001018190555084610961611840565b73ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568866040516109a6919061221b565b60405180910390a35050505050565b60035481565b6000600682815481106109d1576109d0612a71565b5b90600052602060002090600402019050806002015443116109f25750610b32565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a519190612c5c565b602060405180830381865afa158015610a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a929190612c8c565b905060008103610aac574382600201819055505050610b32565b6000826002015443610abe9190612bae565b90506000600454846001015460025484610ad89190612b0c565b610ae29190612b0c565b610aec9190612b7d565b90508264e8d4a5100082610b009190612b0c565b610b0a9190612b7d565b846003016000828254610b1d9190612a3d565b92505081905550438460020181905550505050505b50565b600060068281548110610b4b57610b4a612a71565b5b906000526020600020906004020190506000600760008481526020019081526020016000206000610b7a611840565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050610bf08260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610be6611840565b8360000154611a64565b82610bf9611840565b73ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958360000154604051610c42919061221b565b60405180910390a36000816000018190555060008160010181905550505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610ca2611840565b73ffffffffffffffffffffffffffffffffffffffff1614610cf8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cef90612d2b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5e90612d97565b60405180910390fd5b610d9c604051602001610d79906129f9565b60405160208183030381529060405280519060200120610d97611840565b611760565b610db06000801b610dab611840565b611760565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550671bc16d674ec800006002819055506000600c90506000814261070885610e189190612a3d565b610e229190612bae565b610e2c9190612b7d565b90508043610e3a9190612a3d565b6003819055506103e8600481905550600060068054905003610f6d57610eb384600060038110610e6d57610e6c612a71565b5b60200201516101906040518060400160405280600881526020017f485944542d424e42000000000000000000000000000000000000000000000000815250600354611929565b610f1084600160038110610eca57610ec9612a71565b5b60200201516101906040518060400160405280600981526020017f485944542d555344540000000000000000000000000000000000000000000000815250600354611929565b610f6c84600260038110610f2757610f26612a71565b5b602002015160c86040518060400160405280600981526020017f485944542d485947540000000000000000000000000000000000000000000000815250600354611929565b5b6001600560006101000a81548160ff0219169083151502179055505050505050565b6000600680549050905060005b81811015610fbe57610fad816109bb565b80610fb790612db7565b9050610f9c565b5050565b60025481565b60008060068481548110610fdf57610fde612a71565b5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481525050905060006007600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000826060015190506000836000015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111299190612c5c565b602060405180830381865afa158015611146573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116a9190612c8c565b9050836040015143118015611180575060008114155b156111f35760008460400151436111979190612bae565b905060006004548660200151600254846111b19190612b0c565b6111bb9190612b0c565b6111c59190612b7d565b90508264e8d4a51000826111d99190612b0c565b6111e39190612b7d565b846111ee9190612a3d565b935050505b6000836020015164e8d4a510008486600001516112109190612b0c565b61121a9190612b7d565b6112249190612bae565b9050809550505050505092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6007602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b6000801b81565b6040516020016112e5906129f9565b604051602081830303815290604052805190602001206113048161174c565b811561131357611312610f8f565b5b826006858154811061132857611327612a71565b5b9060005260206000209060040201600101546004546113479190612bae565b6113519190612a3d565b60048190555060006006858154811061136d5761136c612a71565b5b9060005260206000209060040201600101549050836006868154811061139657611395612a71565b5b906000526020600020906004020160010181905550847f5b051d9271f3dacc9672ca07af039f84d81b973ee9174797456dd6238bf18fef85836040516113dd929190612856565b60405180910390a25050505050565b60008060005b600680549050811015611429576114098185610fc8565b826114149190612a3d565b9150808061142190612db7565b9150506113f2565b5080915050919050565b604051602001611442906129f9565b6040516020818303038152906040528051906020012081565b611464826105d3565b61146d8161174c565b6114778383611848565b505050565b60006006838154811061149257611491612a71565b5b9060005260206000209060040201905060006007600085815260200190815260200160002060006114c1611840565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611506846109bb565b6000816000015411156115fe576000816001015464e8d4a51000846003015484600001546115349190612b0c565b61153e9190612b7d565b6115489190612bae565b905060008111156115fc57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f19611599611840565b836040518363ffffffff1660e01b81526004016115b7929190612bf1565b6020604051808303816000875af11580156115d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fa9190612c2f565b505b505b600083111561165a5761163e8260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611637611840565b3086611aea565b828160000160008282546116529190612a3d565b925050819055505b64e8d4a51000826003015482600001546116749190612b0c565b61167e9190612b7d565b81600101819055508361168f611840565b73ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15856040516116d4919061221b565b60405180910390a350505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61175d81611758611840565b611b73565b50565b61176a8282611234565b61183c57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506117e1611840565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b6118528282611234565b1561192557600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506118ca611840565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6119316120f5565b84816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508381602001818152505081816040018181525050600681908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015550506001600680549050611a229190612bae565b7f1fcb86d005de4723e36a6d74eeeb8529bac339b94c9241aed56567a2d214f105868587604051611a5593929190612e6d565b60405180910390a25050505050565b611ae58363a9059cbb60e01b8484604051602401611a83929190612bf1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611bf8565b505050565b611b6d846323b872dd60e01b858585604051602401611b0b93929190612eab565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611bf8565b50505050565b611b7d8282611234565b611bf457611b8a81611cbf565b611b988360001c6020611cec565b604051602001611ba9929190612fab565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611beb9190612fe5565b60405180910390fd5b5050565b6000611c5a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611f289092919063ffffffff16565b9050600081511115611cba5780806020019051810190611c7a9190612c2f565b611cb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cb090613079565b60405180910390fd5b5b505050565b6060611ce58273ffffffffffffffffffffffffffffffffffffffff16601460ff16611cec565b9050919050565b606060006002836002611cff9190612b0c565b611d099190612a3d565b67ffffffffffffffff811115611d2257611d216124f3565b5b6040519080825280601f01601f191660200182016040528015611d545781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611d8c57611d8b612a71565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611df057611def612a71565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002611e309190612b0c565b611e3a9190612a3d565b90505b6001811115611eda577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110611e7c57611e7b612a71565b5b1a60f81b828281518110611e9357611e92612a71565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080611ed390613099565b9050611e3d565b5060008414611f1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f159061310e565b60405180910390fd5b8091505092915050565b6060611f378484600085611f40565b90509392505050565b606082471015611f85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f7c906131a0565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611fae9190613207565b60006040518083038185875af1925050503d8060008114611feb576040519150601f19603f3d011682016040523d82523d6000602084013e611ff0565b606091505b50915091506120018783838761200d565b92505050949350505050565b6060831561206f5760008351036120675761202785612082565b612066576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161205d9061326a565b60405180910390fd5b5b82905061207a565b61207983836120a5565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156120b85781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ec9190612fe5565b60405180910390fd5b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61217c81612147565b811461218757600080fd5b50565b60008135905061219981612173565b92915050565b6000602082840312156121b5576121b461213d565b5b60006121c38482850161218a565b91505092915050565b60008115159050919050565b6121e1816121cc565b82525050565b60006020820190506121fc60008301846121d8565b92915050565b6000819050919050565b61221581612202565b82525050565b6000602082019050612230600083018461220c565b92915050565b61223f81612202565b811461224a57600080fd5b50565b60008135905061225c81612236565b92915050565b6000602082840312156122785761227761213d565b5b60006122868482850161224d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006122d46122cf6122ca8461228f565b6122af565b61228f565b9050919050565b60006122e6826122b9565b9050919050565b60006122f8826122db565b9050919050565b612308816122ed565b82525050565b600060808201905061232360008301876122ff565b612330602083018661220c565b61233d604083018561220c565b61234a606083018461220c565b95945050505050565b600061235e826122db565b9050919050565b61236e81612353565b82525050565b60006020820190506123896000830184612365565b92915050565b6000819050919050565b6123a28161238f565b81146123ad57600080fd5b50565b6000813590506123bf81612399565b92915050565b6000602082840312156123db576123da61213d565b5b60006123e9848285016123b0565b91505092915050565b6123fb8161238f565b82525050565b600060208201905061241660008301846123f2565b92915050565b60006124278261228f565b9050919050565b6124378161241c565b811461244257600080fd5b50565b6000813590506124548161242e565b92915050565b600080604083850312156124715761247061213d565b5b600061247f858286016123b0565b925050602061249085828601612445565b9150509250929050565b60006124a58261241c565b9050919050565b6124b58161249a565b81146124c057600080fd5b50565b6000813590506124d2816124ac565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61252b826124e2565b810181811067ffffffffffffffff8211171561254a576125496124f3565b5b80604052505050565b600061255d612133565b90506125698282612522565b919050565b600067ffffffffffffffff821115612589576125886124f3565b5b612592826124e2565b9050602081019050919050565b82818337600083830152505050565b60006125c16125bc8461256e565b612553565b9050828152602081018484840111156125dd576125dc6124dd565b5b6125e884828561259f565b509392505050565b600082601f830112612605576126046124d8565b5b81356126158482602086016125ae565b91505092915050565b612627816121cc565b811461263257600080fd5b50565b6000813590506126448161261e565b92915050565b600080600080608085870312156126645761266361213d565b5b6000612672878288016124c3565b94505060206126838782880161224d565b935050604085013567ffffffffffffffff8111156126a4576126a3612142565b5b6126b0878288016125f0565b92505060606126c187828801612635565b91505092959194509250565b600080604083850312156126e4576126e361213d565b5b60006126f28582860161224d565b92505060206127038582860161224d565b9150509250929050565b600067ffffffffffffffff821115612728576127276124f3565b5b602082029050919050565b600080fd5b600061274b6127468461270d565b612553565b9050806020840283018581111561276557612764612733565b5b835b8181101561278e578061277a8882612445565b845260208401935050602081019050612767565b5050509392505050565b600082601f8301126127ad576127ac6124d8565b5b60036127ba848285612738565b91505092915050565b600080600060a084860312156127dc576127db61213d565b5b60006127ea86828701612445565b93505060206127fb86828701612798565b925050608061280c8682870161224d565b9150509250925092565b6000806040838503121561282d5761282c61213d565b5b600061283b8582860161224d565b925050602061284c85828601612445565b9150509250929050565b600060408201905061286b600083018561220c565b612878602083018461220c565b9392505050565b6000806000606084860312156128985761289761213d565b5b60006128a68682870161224d565b93505060206128b78682870161224d565b92505060406128c886828701612635565b9150509250925092565b6000602082840312156128e8576128e761213d565b5b60006128f684828501612445565b91505092915050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b600061296c602f836128ff565b915061297782612910565b604082019050919050565b6000602082019050818103600083015261299b8161295f565b9050919050565b600081905092915050565b7f476f7665726e6f72000000000000000000000000000000000000000000000000600082015250565b60006129e36008836129a2565b91506129ee826129ad565b600882019050919050565b6000612a04826129d6565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612a4882612202565b9150612a5383612202565b9250828201905080821115612a6b57612a6a612a0e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4661726d3a206e6f7420676f6f64000000000000000000000000000000000000600082015250565b6000612ad6600e836128ff565b9150612ae182612aa0565b602082019050919050565b60006020820190508181036000830152612b0581612ac9565b9050919050565b6000612b1782612202565b9150612b2283612202565b9250828202612b3081612202565b91508282048414831517612b4757612b46612a0e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612b8882612202565b9150612b9383612202565b925082612ba357612ba2612b4e565b5b828204905092915050565b6000612bb982612202565b9150612bc483612202565b9250828203905081811115612bdc57612bdb612a0e565b5b92915050565b612beb8161241c565b82525050565b6000604082019050612c066000830185612be2565b612c13602083018461220c565b9392505050565b600081519050612c298161261e565b92915050565b600060208284031215612c4557612c4461213d565b5b6000612c5384828501612c1a565b91505092915050565b6000602082019050612c716000830184612be2565b92915050565b600081519050612c8681612236565b92915050565b600060208284031215612ca257612ca161213d565b5b6000612cb084828501612c77565b91505092915050565b7f4661726d3a2063616c6c6572206973206e6f742074686520696e697469616c6960008201527f7a65720000000000000000000000000000000000000000000000000000000000602082015250565b6000612d156023836128ff565b9150612d2082612cb9565b604082019050919050565b60006020820190508181036000830152612d4481612d08565b9050919050565b7f4661726d3a20696e76616c696420485947542061646472657373000000000000600082015250565b6000612d81601a836128ff565b9150612d8c82612d4b565b602082019050919050565b60006020820190508181036000830152612db081612d74565b9050919050565b6000612dc282612202565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612df457612df3612a0e565b5b600182019050919050565b600081519050919050565b60005b83811015612e28578082015181840152602081019050612e0d565b60008484015250505050565b6000612e3f82612dff565b612e4981856128ff565b9350612e59818560208601612e0a565b612e62816124e2565b840191505092915050565b6000606082019050612e826000830186612be2565b8181036020830152612e948185612e34565b9050612ea3604083018461220c565b949350505050565b6000606082019050612ec06000830186612be2565b612ecd6020830185612be2565b612eda604083018461220c565b949350505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000612f186017836129a2565b9150612f2382612ee2565b601782019050919050565b6000612f3982612dff565b612f4381856129a2565b9350612f53818560208601612e0a565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000612f956011836129a2565b9150612fa082612f5f565b601182019050919050565b6000612fb682612f0b565b9150612fc28285612f2e565b9150612fcd82612f88565b9150612fd98284612f2e565b91508190509392505050565b60006020820190508181036000830152612fff8184612e34565b905092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000613063602a836128ff565b915061306e82613007565b604082019050919050565b6000602082019050818103600083015261309281613056565b9050919050565b60006130a482612202565b9150600082036130b7576130b6612a0e565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b60006130f86020836128ff565b9150613103826130c2565b602082019050919050565b60006020820190508181036000830152613127816130eb565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061318a6026836128ff565b91506131958261312e565b604082019050919050565b600060208201905081810360008301526131b98161317d565b9050919050565b600081519050919050565b600081905092915050565b60006131e1826131c0565b6131eb81856131cb565b93506131fb818560208601612e0a565b80840191505092915050565b600061321382846131d6565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000613254601d836128ff565b915061325f8261321e565b602082019050919050565b6000602082019050818103600083015261328381613247565b905091905056fea2646970667358221220833301db9137e85833c7978c11043a13d82605aa6b342c33cdcd4c1f9c72552464736f6c63430008130033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F PUSH2 0x57 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x5F JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x32C0 PUSH3 0x7B PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xC65 ADD MSTORE PUSH2 0x32C0 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5312EA8E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x93F1A40B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB3ECB623 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB3ECB623 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xCCC57490 EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x4A4 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xAD35E1CC EQ PUSH2 0x41E JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x5E3E1581 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x79838EF0 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x7F37DF3B EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x39F JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x3A0618FD EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x2F3 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x23C64CE1 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x235 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x219F JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x21E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x2262 JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x230E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x2374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x2401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x245A JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x245A JUMP JUMPDEST PUSH2 0x613 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x696 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x26CD JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DD PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x2262 JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x2262 JUMP JUMPDEST PUSH2 0xB35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x27C3 JUMP JUMPDEST PUSH2 0xC63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34F PUSH2 0xF8F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x359 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x2816 JUMP JUMPDEST PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x245A JUMP JUMPDEST PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x21E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x2816 JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F7 SWAP3 SWAP2 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x2401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x287F JUMP JUMPDEST PUSH2 0x12D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x454 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x2401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x245A JUMP JUMPDEST PUSH2 0x145B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B9 SWAP2 SWAP1 PUSH2 0x26CD JUMP JUMPDEST PUSH2 0x147C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x533 JUMPI POP PUSH2 0x532 DUP3 PUSH2 0x16E2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5FB DUP3 PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x604 DUP2 PUSH2 0x174C JUMP JUMPDEST PUSH2 0x60E DUP4 DUP4 PUSH2 0x1760 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x61B PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67F SWAP1 PUSH2 0x2982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x692 DUP3 DUP3 PUSH2 0x1848 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6A5 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x6C4 DUP2 PUSH2 0x174C JUMP JUMPDEST DUP2 ISZERO PUSH2 0x6D3 JUMPI PUSH2 0x6D2 PUSH2 0xF8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD NUMBER GT PUSH2 0x6E6 JUMPI PUSH1 0x3 SLOAD PUSH2 0x6E8 JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP DUP5 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x70F DUP7 DUP7 DUP7 DUP5 PUSH2 0x1929 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x72D JUMPI PUSH2 0x72C PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x75C PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D6 SWAP1 PUSH2 0x2AEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E8 DUP5 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x809 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x813 SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST PUSH2 0x81D SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x8D1 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 PUSH2 0x86E PUSH2 0x1840 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88C SWAP3 SWAP2 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x2C2F JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x92C JUMPI DUP4 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x92B DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x925 PUSH2 0x1840 JUMP JUMPDEST DUP7 PUSH2 0x1A64 JUMP JUMPDEST JUMPDEST PUSH5 0xE8D4A51000 DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x946 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x950 SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 PUSH2 0x961 PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9D1 JUMPI PUSH2 0x9D0 PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x9F2 JUMPI POP PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA51 SWAP2 SWAP1 PUSH2 0x2C5C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA92 SWAP2 SWAP1 PUSH2 0x2C8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0xAAC JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xABE SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH1 0x2 SLOAD DUP5 PUSH2 0xAD8 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0xAEC SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 POP DUP3 PUSH5 0xE8D4A51000 DUP3 PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0xB0A SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST DUP5 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB1D SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB4B JUMPI PUSH2 0xB4A PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xB7A PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0xBF0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBE6 PUSH2 0x1840 JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1A64 JUMP JUMPDEST DUP3 PUSH2 0xBF9 PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCA2 PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCEF SWAP1 PUSH2 0x2D2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5E SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD9C PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD79 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xD97 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x1760 JUMP JUMPDEST PUSH2 0xDB0 PUSH1 0x0 DUP1 SHL PUSH2 0xDAB PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x1760 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0x1BC16D674EC80000 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xC SWAP1 POP PUSH1 0x0 DUP2 TIMESTAMP PUSH2 0x708 DUP6 PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH2 0xE22 SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST PUSH2 0xE2C SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 POP DUP1 NUMBER PUSH2 0xE3A SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x3E8 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SUB PUSH2 0xF6D JUMPI PUSH2 0xEB3 DUP5 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0xE6D JUMPI PUSH2 0xE6C PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x190 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x485944542D424E42000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x3 SLOAD PUSH2 0x1929 JUMP JUMPDEST PUSH2 0xF10 DUP5 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0xECA JUMPI PUSH2 0xEC9 PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x190 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x485944542D555344540000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x3 SLOAD PUSH2 0x1929 JUMP JUMPDEST PUSH2 0xF6C DUP5 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0xF27 JUMPI PUSH2 0xF26 PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0xC8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x485944542D485947540000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x3 SLOAD PUSH2 0x1929 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFBE JUMPI PUSH2 0xFAD DUP2 PUSH2 0x9BB JUMP JUMPDEST DUP1 PUSH2 0xFB7 SWAP1 PUSH2 0x2DB7 JUMP JUMPDEST SWAP1 POP PUSH2 0xF9C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xFDF JUMPI PUSH2 0xFDE PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1129 SWAP2 SWAP1 PUSH2 0x2C5C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1146 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x116A SWAP2 SWAP1 PUSH2 0x2C8C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x40 ADD MLOAD NUMBER GT DUP1 ISZERO PUSH2 0x1180 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x11F3 JUMPI PUSH1 0x0 DUP5 PUSH1 0x40 ADD MLOAD NUMBER PUSH2 0x1197 SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SLOAD DUP5 PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x11BB SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x11C5 SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 POP DUP3 PUSH5 0xE8D4A51000 DUP3 PUSH2 0x11D9 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x11E3 SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST DUP5 PUSH2 0x11EE SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD PUSH5 0xE8D4A51000 DUP5 DUP7 PUSH1 0x0 ADD MLOAD PUSH2 0x1210 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12E5 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1304 DUP2 PUSH2 0x174C JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1313 JUMPI PUSH2 0x1312 PUSH2 0xF8F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1328 JUMPI PUSH2 0x1327 PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x4 SLOAD PUSH2 0x1347 SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST PUSH2 0x1351 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x136D JUMPI PUSH2 0x136C PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP DUP4 PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1396 JUMPI PUSH2 0x1395 PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 PUSH32 0x5B051D9271F3DACC9672CA07AF039F84D81B973EE9174797456DD6238BF18FEF DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x13DD SWAP3 SWAP2 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1429 JUMPI PUSH2 0x1409 DUP2 DUP6 PUSH2 0xFC8 JUMP JUMPDEST DUP3 PUSH2 0x1414 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x1421 SWAP1 PUSH2 0x2DB7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13F2 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1442 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH2 0x1464 DUP3 PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x146D DUP2 PUSH2 0x174C JUMP JUMPDEST PUSH2 0x1477 DUP4 DUP4 PUSH2 0x1848 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1492 JUMPI PUSH2 0x1491 PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x14C1 PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1506 DUP5 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x15FE JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x1534 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x153E SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST PUSH2 0x1548 SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x15FC JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 PUSH2 0x1599 PUSH2 0x1840 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B7 SWAP3 SWAP2 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15FA SWAP2 SWAP1 PUSH2 0x2C2F JUMP JUMPDEST POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x165A JUMPI PUSH2 0x163E DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1637 PUSH2 0x1840 JUMP JUMPDEST ADDRESS DUP7 PUSH2 0x1AEA JUMP JUMPDEST DUP3 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1652 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH5 0xE8D4A51000 DUP3 PUSH1 0x3 ADD SLOAD DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x1674 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x167E SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH2 0x168F PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x16D4 SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175D DUP2 PUSH2 0x1758 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x1B73 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x176A DUP3 DUP3 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x183C JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x17E1 PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1852 DUP3 DUP3 PUSH2 0x1234 JUMP JUMPDEST ISZERO PUSH2 0x1925 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x18CA PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1931 PUSH2 0x20F5 JUMP JUMPDEST DUP5 DUP2 PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x6 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP PUSH1 0x1 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH2 0x1A22 SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST PUSH32 0x1FCB86D005DE4723E36A6D74EEEB8529BAC339B94C9241AED56567A2D214F105 DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1A55 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1AE5 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1A83 SWAP3 SWAP2 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BF8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1B6D DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B0B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BF8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1B7D DUP3 DUP3 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x1BF4 JUMPI PUSH2 0x1B8A DUP2 PUSH2 0x1CBF JUMP JUMPDEST PUSH2 0x1B98 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x1CEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BA9 SWAP3 SWAP2 SWAP1 PUSH2 0x2FAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BEB SWAP2 SWAP1 PUSH2 0x2FE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5A DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F28 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1CBA JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C7A SWAP2 SWAP1 PUSH2 0x2C2F JUMP JUMPDEST PUSH2 0x1CB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB0 SWAP1 PUSH2 0x3079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1CE5 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x1CEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x1CFF SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x1D09 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D22 JUMPI PUSH2 0x1D21 PUSH2 0x24F3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D54 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1D8C JUMPI PUSH2 0x1D8B PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1DF0 JUMPI PUSH2 0x1DEF PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1E30 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x1E3A SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1EDA JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1E7C JUMPI PUSH2 0x1E7B PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E93 JUMPI PUSH2 0x1E92 PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x1ED3 SWAP1 PUSH2 0x3099 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E3D JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1F1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F15 SWAP1 PUSH2 0x310E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1F37 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1F40 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1F85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F7C SWAP1 PUSH2 0x31A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1FAE SWAP2 SWAP1 PUSH2 0x3207 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FEB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2001 DUP8 DUP4 DUP4 DUP8 PUSH2 0x200D JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x206F JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x2067 JUMPI PUSH2 0x2027 DUP6 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x2066 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205D SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x207A JUMP JUMPDEST PUSH2 0x2079 DUP4 DUP4 PUSH2 0x20A5 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x20B8 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20EC SWAP2 SWAP1 PUSH2 0x2FE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x217C DUP2 PUSH2 0x2147 JUMP JUMPDEST DUP2 EQ PUSH2 0x2187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2199 DUP2 PUSH2 0x2173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B5 JUMPI PUSH2 0x21B4 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21C3 DUP5 DUP3 DUP6 ADD PUSH2 0x218A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21E1 DUP2 PUSH2 0x21CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2215 DUP2 PUSH2 0x2202 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2230 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x220C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x223F DUP2 PUSH2 0x2202 JUMP JUMPDEST DUP2 EQ PUSH2 0x224A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x225C DUP2 PUSH2 0x2236 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2278 JUMPI PUSH2 0x2277 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2286 DUP5 DUP3 DUP6 ADD PUSH2 0x224D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D4 PUSH2 0x22CF PUSH2 0x22CA DUP5 PUSH2 0x228F JUMP JUMPDEST PUSH2 0x22AF JUMP JUMPDEST PUSH2 0x228F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E6 DUP3 PUSH2 0x22B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F8 DUP3 PUSH2 0x22DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2308 DUP2 PUSH2 0x22ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2323 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x22FF JUMP JUMPDEST PUSH2 0x2330 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x233D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x234A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x220C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235E DUP3 PUSH2 0x22DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236E DUP2 PUSH2 0x2353 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2389 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2365 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23A2 DUP2 PUSH2 0x238F JUMP JUMPDEST DUP2 EQ PUSH2 0x23AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23BF DUP2 PUSH2 0x2399 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23DB JUMPI PUSH2 0x23DA PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23E9 DUP5 DUP3 DUP6 ADD PUSH2 0x23B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23FB DUP2 PUSH2 0x238F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2416 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2427 DUP3 PUSH2 0x228F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2437 DUP2 PUSH2 0x241C JUMP JUMPDEST DUP2 EQ PUSH2 0x2442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2454 DUP2 PUSH2 0x242E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2471 JUMPI PUSH2 0x2470 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x247F DUP6 DUP3 DUP7 ADD PUSH2 0x23B0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2490 DUP6 DUP3 DUP7 ADD PUSH2 0x2445 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A5 DUP3 PUSH2 0x241C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B5 DUP2 PUSH2 0x249A JUMP JUMPDEST DUP2 EQ PUSH2 0x24C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24D2 DUP2 PUSH2 0x24AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x252B DUP3 PUSH2 0x24E2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x254A JUMPI PUSH2 0x2549 PUSH2 0x24F3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x255D PUSH2 0x2133 JUMP JUMPDEST SWAP1 POP PUSH2 0x2569 DUP3 DUP3 PUSH2 0x2522 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2589 JUMPI PUSH2 0x2588 PUSH2 0x24F3 JUMP JUMPDEST JUMPDEST PUSH2 0x2592 DUP3 PUSH2 0x24E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C1 PUSH2 0x25BC DUP5 PUSH2 0x256E JUMP JUMPDEST PUSH2 0x2553 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x25DD JUMPI PUSH2 0x25DC PUSH2 0x24DD JUMP JUMPDEST JUMPDEST PUSH2 0x25E8 DUP5 DUP3 DUP6 PUSH2 0x259F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2605 JUMPI PUSH2 0x2604 PUSH2 0x24D8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2615 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2627 DUP2 PUSH2 0x21CC JUMP JUMPDEST DUP2 EQ PUSH2 0x2632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2644 DUP2 PUSH2 0x261E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2664 JUMPI PUSH2 0x2663 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2672 DUP8 DUP3 DUP9 ADD PUSH2 0x24C3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2683 DUP8 DUP3 DUP9 ADD PUSH2 0x224D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26A4 JUMPI PUSH2 0x26A3 PUSH2 0x2142 JUMP JUMPDEST JUMPDEST PUSH2 0x26B0 DUP8 DUP3 DUP9 ADD PUSH2 0x25F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x26C1 DUP8 DUP3 DUP9 ADD PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26E4 JUMPI PUSH2 0x26E3 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26F2 DUP6 DUP3 DUP7 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2703 DUP6 DUP3 DUP7 ADD PUSH2 0x224D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2728 JUMPI PUSH2 0x2727 PUSH2 0x24F3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x274B PUSH2 0x2746 DUP5 PUSH2 0x270D JUMP JUMPDEST PUSH2 0x2553 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2765 JUMPI PUSH2 0x2764 PUSH2 0x2733 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x278E JUMPI DUP1 PUSH2 0x277A DUP9 DUP3 PUSH2 0x2445 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2767 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27AD JUMPI PUSH2 0x27AC PUSH2 0x24D8 JUMP JUMPDEST JUMPDEST PUSH1 0x3 PUSH2 0x27BA DUP5 DUP3 DUP6 PUSH2 0x2738 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x27DC JUMPI PUSH2 0x27DB PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27EA DUP7 DUP3 DUP8 ADD PUSH2 0x2445 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x27FB DUP7 DUP3 DUP8 ADD PUSH2 0x2798 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x280C DUP7 DUP3 DUP8 ADD PUSH2 0x224D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x282D JUMPI PUSH2 0x282C PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x283B DUP6 DUP3 DUP7 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x284C DUP6 DUP3 DUP7 ADD PUSH2 0x2445 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x286B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x2878 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x220C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2898 JUMPI PUSH2 0x2897 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A6 DUP7 DUP3 DUP8 ADD PUSH2 0x224D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x28B7 DUP7 DUP3 DUP8 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x28C8 DUP7 DUP3 DUP8 ADD PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28E8 JUMPI PUSH2 0x28E7 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28F6 DUP5 DUP3 DUP6 ADD PUSH2 0x2445 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x296C PUSH1 0x2F DUP4 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP PUSH2 0x2977 DUP3 PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x299B DUP2 PUSH2 0x295F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476F7665726E6F72000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E3 PUSH1 0x8 DUP4 PUSH2 0x29A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x29EE DUP3 PUSH2 0x29AD JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A04 DUP3 PUSH2 0x29D6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2A48 DUP3 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A53 DUP4 PUSH2 0x2202 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A6B JUMPI PUSH2 0x2A6A PUSH2 0x2A0E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4661726D3A206E6F7420676F6F64000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD6 PUSH1 0xE DUP4 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE1 DUP3 PUSH2 0x2AA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B05 DUP2 PUSH2 0x2AC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B17 DUP3 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B22 DUP4 PUSH2 0x2202 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2B30 DUP2 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2B47 JUMPI PUSH2 0x2B46 PUSH2 0x2A0E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B88 DUP3 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B93 DUP4 PUSH2 0x2202 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2BA3 JUMPI PUSH2 0x2BA2 PUSH2 0x2B4E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB9 DUP3 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BC4 DUP4 PUSH2 0x2202 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2BDC JUMPI PUSH2 0x2BDB PUSH2 0x2A0E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BEB DUP2 PUSH2 0x241C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C06 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2BE2 JUMP JUMPDEST PUSH2 0x2C13 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x220C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C29 DUP2 PUSH2 0x261E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C45 JUMPI PUSH2 0x2C44 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C53 DUP5 DUP3 DUP6 ADD PUSH2 0x2C1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C71 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C86 DUP2 PUSH2 0x2236 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CA2 JUMPI PUSH2 0x2CA1 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CB0 DUP5 DUP3 DUP6 ADD PUSH2 0x2C77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661726D3A2063616C6C6572206973206E6F742074686520696E697469616C69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7A65720000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D15 PUSH1 0x23 DUP4 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP PUSH2 0x2D20 DUP3 PUSH2 0x2CB9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D44 DUP2 PUSH2 0x2D08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661726D3A20696E76616C696420485947542061646472657373000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D81 PUSH1 0x1A DUP4 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP PUSH2 0x2D8C DUP3 PUSH2 0x2D4B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DB0 DUP2 PUSH2 0x2D74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC2 DUP3 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2DF4 JUMPI PUSH2 0x2DF3 PUSH2 0x2A0E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E28 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E0D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E3F DUP3 PUSH2 0x2DFF JUMP JUMPDEST PUSH2 0x2E49 DUP2 DUP6 PUSH2 0x28FF JUMP JUMPDEST SWAP4 POP PUSH2 0x2E59 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2E0A JUMP JUMPDEST PUSH2 0x2E62 DUP2 PUSH2 0x24E2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E82 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2BE2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2E94 DUP2 DUP6 PUSH2 0x2E34 JUMP JUMPDEST SWAP1 POP PUSH2 0x2EA3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x220C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EC0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2BE2 JUMP JUMPDEST PUSH2 0x2ECD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2BE2 JUMP JUMPDEST PUSH2 0x2EDA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x220C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F18 PUSH1 0x17 DUP4 PUSH2 0x29A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F23 DUP3 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F39 DUP3 PUSH2 0x2DFF JUMP JUMPDEST PUSH2 0x2F43 DUP2 DUP6 PUSH2 0x29A2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2F53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2E0A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F95 PUSH1 0x11 DUP4 PUSH2 0x29A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FA0 DUP3 PUSH2 0x2F5F JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB6 DUP3 PUSH2 0x2F0B JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC2 DUP3 DUP6 PUSH2 0x2F2E JUMP JUMPDEST SWAP2 POP PUSH2 0x2FCD DUP3 PUSH2 0x2F88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD9 DUP3 DUP5 PUSH2 0x2F2E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FFF DUP2 DUP5 PUSH2 0x2E34 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3063 PUSH1 0x2A DUP4 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP PUSH2 0x306E DUP3 PUSH2 0x3007 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3092 DUP2 PUSH2 0x3056 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A4 DUP3 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x30B7 JUMPI PUSH2 0x30B6 PUSH2 0x2A0E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F8 PUSH1 0x20 DUP4 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP PUSH2 0x3103 DUP3 PUSH2 0x30C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3127 DUP2 PUSH2 0x30EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x318A PUSH1 0x26 DUP4 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP PUSH2 0x3195 DUP3 PUSH2 0x312E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31B9 DUP2 PUSH2 0x317D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31E1 DUP3 PUSH2 0x31C0 JUMP JUMPDEST PUSH2 0x31EB DUP2 DUP6 PUSH2 0x31CB JUMP JUMPDEST SWAP4 POP PUSH2 0x31FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2E0A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3213 DUP3 DUP5 PUSH2 0x31D6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3254 PUSH1 0x1D DUP4 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP PUSH2 0x325F DUP3 PUSH2 0x321E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3283 DUP2 PUSH2 0x3247 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 CALLER ADD 0xDB SWAP2 CALLDATACOPY 0xE8 PC CALLER 0xC7 SWAP8 DUP13 GT DIV GASPRICE SGT 0xD8 0x26 SDIV 0xAA PUSH12 0x342C33CDCD4C1F9C72552464 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "182:11377:0:-:0;;;2090:60;;;;;;;;;;2130:12;:10;;;:12;;:::i;:::-;2115:27;;;;;;;;;;182:11377;;656:98:12;709:7;736:10;729:17;;656:98;:::o;182:11377:0:-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_3015": {
									"entryPoint": 4815,
									"id": 3015,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@GOVERNOR_ROLE_14": {
									"entryPoint": 5171,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@HYGTPerBlock_24": {
									"entryPoint": 4034,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@HYGT_21": {
									"entryPoint": 1453,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_addPool_352": {
									"entryPoint": 6441,
									"id": 352,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_callOptionalReturn_2652": {
									"entryPoint": 7160,
									"id": 2652,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_3080": {
									"entryPoint": 5964,
									"id": 3080,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_3119": {
									"entryPoint": 7027,
									"id": 3119,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_3271": {
									"entryPoint": 5984,
									"id": 3271,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_3315": {
									"entryPoint": 6208,
									"id": 3315,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1505": {
									"entryPoint": 8357,
									"id": 1505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revokeRole_3302": {
									"entryPoint": 6216,
									"id": 3302,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addPool_296": {
									"entryPoint": 1686,
									"id": 296,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@deposit_757": {
									"entryPoint": 5244,
									"id": 757,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@emergencyWithdraw_919": {
									"entryPoint": 2869,
									"id": 919,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_1330": {
									"entryPoint": 8000,
									"id": 1330,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_1266": {
									"entryPoint": 7976,
									"id": 1266,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getPendingBatch_464": {
									"entryPoint": 5100,
									"id": 464,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPending_564": {
									"entryPoint": 4040,
									"id": 564,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRoleAdmin_3134": {
									"entryPoint": 1491,
									"id": 3134,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_3154": {
									"entryPoint": 1522,
									"id": 3154,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_3067": {
									"entryPoint": 4660,
									"id": 3067,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_241": {
									"entryPoint": 3171,
									"id": 241,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isContract_1194": {
									"entryPoint": 8322,
									"id": 1194,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@massUpdatePools_430": {
									"entryPoint": 3983,
									"id": 430,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolInfo_56": {
									"entryPoint": 1351,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_251": {
									"entryPoint": 1338,
									"id": 251,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_3197": {
									"entryPoint": 1555,
									"id": 3197,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_3174": {
									"entryPoint": 5211,
									"id": 3174,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_2430": {
									"entryPoint": 6890,
									"id": 2430,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_2404": {
									"entryPoint": 6756,
									"id": 2404,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startBlock_27": {
									"entryPoint": 2485,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_3048": {
									"entryPoint": 1216,
									"id": 3048,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3348": {
									"entryPoint": 5858,
									"id": 3348,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_2941": {
									"entryPoint": 7404,
									"id": 2941,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_2961": {
									"entryPoint": 7359,
									"id": 2961,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalAllocPoint_30": {
									"entryPoint": 1447,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateAllocation_404": {
									"entryPoint": 4822,
									"id": 404,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@updatePool_649": {
									"entryPoint": 2491,
									"id": 649,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_64": {
									"entryPoint": 4766,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1461": {
									"entryPoint": 8205,
									"id": 1461,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdraw_864": {
									"entryPoint": 1815,
									"id": 864,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$3_memory_ptr": {
									"entryPoint": 10040,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 9646,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 9285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$3_memory_ptr": {
									"entryPoint": 10136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 11290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 9136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$1083": {
									"entryPoint": 9411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 9712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 11383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_array$_t_address_$3_memory_ptrt_uint256": {
									"entryPoint": 10179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 11311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 9157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 9306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$1083t_uint256t_string_memory_ptrt_bool": {
									"entryPoint": 9802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 11404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 10262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 9933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 10367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 11234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 9202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$1083_to_t_address_fromStack": {
									"entryPoint": 8959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IHYGT_$1176_to_t_address_fromStack": {
									"entryPoint": 9061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_19f3453e52ae10a360d9e48db78d5d4e6a706bf3acf6c2436b95797b32ab141c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7e44769768d03ec3c3ea627eef9905a5a2b1a1882e0c31c77df1d668d8a68193_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b0441d385a0111946137fe922aa6443c7191a75eba4f870fbd5b5fb2578d76e5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d0990c50b6714f222e6fd1faaf5345bf1aa2867d2861fc2cc43b364e7d948647_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 12807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_d0990c50b6714f222e6fd1faaf5345bf1aa2867d2861fc2cc43b364e7d948647__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 12203,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 11356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11947,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 11885,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11249,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 9217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1083_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8974,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IHYGT_$1176__to_t_address__fromStack_reversed": {
									"entryPoint": 9076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_19f3453e52ae10a360d9e48db78d5d4e6a706bf3acf6c2436b95797b32ab141c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e44769768d03ec3c3ea627eef9905a5a2b1a1882e0c31c77df1d668d8a68193__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b0441d385a0111946137fe922aa6443c7191a75eba4f870fbd5b5fb2578d76e5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10326,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8499,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$3_memory_ptr": {
									"entryPoint": 9997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 9582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 12736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 11775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 9103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$1083": {
									"entryPoint": 9370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$1083_to_t_address": {
									"entryPoint": 8941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IHYGT_$1176_to_t_address": {
									"entryPoint": 9043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 9631,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 11786,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 12441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 11703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10766,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11086,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10865,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9459,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9432,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 10035,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 9437,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8509,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 12482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_19f3453e52ae10a360d9e48db78d5d4e6a706bf3acf6c2436b95797b32ab141c": {
									"entryPoint": 10912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 12590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7e44769768d03ec3c3ea627eef9905a5a2b1a1882e0c31c77df1d668d8a68193": {
									"entryPoint": 11449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b0441d385a0111946137fe922aa6443c7191a75eba4f870fbd5b5fb2578d76e5": {
									"entryPoint": 11595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 12830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d0990c50b6714f222e6fd1faaf5345bf1aa2867d2861fc2cc43b364e7d948647": {
									"entryPoint": 10669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 12002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 12295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 12127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 10512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 9113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$1083": {
									"entryPoint": 9388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:33140:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:14",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:14",
														"type": ""
													}
												],
												"src": "334:149:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:14"
															},
															"nodeType": "YulIf",
															"src": "541:62:14"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:14",
														"type": ""
													}
												],
												"src": "489:120:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:14",
														"type": ""
													}
												],
												"src": "615:137:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:14"
															},
															"nodeType": "YulIf",
															"src": "833:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:14",
														"type": ""
													}
												],
												"src": "758:327:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:14",
														"type": ""
													}
												],
												"src": "1091:90:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:14",
														"type": ""
													}
												],
												"src": "1187:109:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:14",
														"type": ""
													}
												],
												"src": "1302:210:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1584:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:14",
														"type": ""
													}
												],
												"src": "1518:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1666:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1706:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1688:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1688:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1676:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1676:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1654:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1661:3:14",
														"type": ""
													}
												],
												"src": "1601:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1823:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1833:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1845:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1856:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1926:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1937:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1922:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1922:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1869:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1869:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1795:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1807:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1818:4:14",
														"type": ""
													}
												],
												"src": "1725:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1996:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2053:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2062:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2065:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2055:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2055:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2055:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2044:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2026:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2026:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2016:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2016:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:43:14"
															},
															"nodeType": "YulIf",
															"src": "2006:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1989:5:14",
														"type": ""
													}
												],
												"src": "1953:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2133:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2143:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2165:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2152:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2152:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2143:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2208:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2181:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2181:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2111:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2119:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2127:5:14",
														"type": ""
													}
												],
												"src": "2081:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2292:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2338:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2340:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2340:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2313:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2322:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2309:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2309:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2334:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:32:14"
															},
															"nodeType": "YulIf",
															"src": "2302:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "2431:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2446:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2460:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2450:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2475:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2510:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2521:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2506:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2506:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2530:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2485:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2485:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2475:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2262:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2273:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2285:6:14",
														"type": ""
													}
												],
												"src": "2226:329:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2606:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2616:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2631:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2638:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2627:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2627:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2588:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2598:7:14",
														"type": ""
													}
												],
												"src": "2561:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2725:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2735:12:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2742:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2735:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2711:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2721:3:14",
														"type": ""
													}
												],
												"src": "2693:60:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2819:82:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2829:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2887:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2869:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2869:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2860:8:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2860:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2842:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2842:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2829:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2799:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2809:9:14",
														"type": ""
													}
												],
												"src": "2759:142:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2967:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2977:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3021:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2990:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2990:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2977:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2947:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2957:9:14",
														"type": ""
													}
												],
												"src": "2907:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3114:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3124:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3168:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3137:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3137:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3124:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$1083_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3094:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3104:9:14",
														"type": ""
													}
												],
												"src": "3039:141:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3266:81:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3283:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3334:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$1083_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3288:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3288:52:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3276:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3276:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3276:65:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$1083_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3254:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3261:3:14",
														"type": ""
													}
												],
												"src": "3186:161:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3550:386:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3560:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3572:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3583:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3568:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3568:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3560:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3656:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3669:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3680:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3665:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3665:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$1083_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3597:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3597:86:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3597:86:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3737:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3750:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3761:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3746:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3746:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3693:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3693:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3693:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3832:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3843:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3828:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3828:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3775:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3775:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3775:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3901:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3914:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3925:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3910:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3910:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3857:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3857:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3857:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1083_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3498:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3510:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3518:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3526:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3534:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3545:4:14",
														"type": ""
													}
												],
												"src": "3353:583:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4016:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4026:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4070:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4039:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4039:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4026:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IHYGT_$1176_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3996:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4006:9:14",
														"type": ""
													}
												],
												"src": "3942:140:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4167:80:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4184:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4234:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IHYGT_$1176_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4189:44:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4189:51:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4177:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4177:64:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4177:64:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_IHYGT_$1176_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4155:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4162:3:14",
														"type": ""
													}
												],
												"src": "4088:159:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4365:138:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4375:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4387:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4398:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4383:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4383:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4375:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4469:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4482:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4493:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4478:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4478:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IHYGT_$1176_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4411:57:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4411:85:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4411:85:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IHYGT_$1176__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4337:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4349:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4360:4:14",
														"type": ""
													}
												],
												"src": "4253:250:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4554:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4564:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4575:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4564:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4536:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4546:7:14",
														"type": ""
													}
												],
												"src": "4509:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4635:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4692:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4701:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4704:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4694:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4694:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4694:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4658:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4683:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "4665:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4665:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4655:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4655:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4648:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4648:43:14"
															},
															"nodeType": "YulIf",
															"src": "4645:63:14"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4628:5:14",
														"type": ""
													}
												],
												"src": "4592:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4772:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4782:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4804:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4791:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4791:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4782:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4847:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "4820:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4820:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4820:33:14"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4750:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4758:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4766:5:14",
														"type": ""
													}
												],
												"src": "4720:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4931:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4977:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4979:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4979:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4979:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4952:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4961:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4948:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4948:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4973:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4944:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4944:32:14"
															},
															"nodeType": "YulIf",
															"src": "4941:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "5070:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5085:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5099:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5089:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5114:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5149:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5160:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5145:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5145:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5169:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5124:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5124:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5114:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4901:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4912:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4924:6:14",
														"type": ""
													}
												],
												"src": "4865:329:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5265:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5282:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5305:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5287:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5287:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5275:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5275:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5275:37:14"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5253:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5260:3:14",
														"type": ""
													}
												],
												"src": "5200:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5422:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5432:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5444:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5455:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5440:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5440:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5432:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5512:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5525:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5536:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5521:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5521:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5468:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5468:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5394:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5406:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5417:4:14",
														"type": ""
													}
												],
												"src": "5324:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5597:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5607:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5636:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5618:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5618:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5607:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5579:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5589:7:14",
														"type": ""
													}
												],
												"src": "5552:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5697:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5754:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5763:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5766:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5756:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5756:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5756:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5720:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5745:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5727:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5727:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5717:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5717:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5710:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5710:43:14"
															},
															"nodeType": "YulIf",
															"src": "5707:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5690:5:14",
														"type": ""
													}
												],
												"src": "5654:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5834:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5844:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5866:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5853:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5853:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5844:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5909:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5882:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5882:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5882:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5812:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5820:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5828:5:14",
														"type": ""
													}
												],
												"src": "5782:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6010:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6056:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6058:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6058:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6058:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6031:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6040:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6027:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6027:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6052:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6023:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6023:32:14"
															},
															"nodeType": "YulIf",
															"src": "6020:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "6149:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6164:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6178:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6168:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6193:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6228:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6239:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6224:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6224:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6248:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "6203:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6203:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6193:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6276:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6291:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6305:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6295:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6321:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6356:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6367:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6352:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6352:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6376:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6331:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6331:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6321:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5972:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5983:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5995:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6003:6:14",
														"type": ""
													}
												],
												"src": "5927:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6467:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6477:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6506:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6488:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6488:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6477:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$1083",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6449:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6459:7:14",
														"type": ""
													}
												],
												"src": "6407:111:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6582:94:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6654:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6663:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6666:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6656:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6656:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6656:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6605:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6645:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$1083",
																					"nodeType": "YulIdentifier",
																					"src": "6612:32:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6612:39:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6602:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6602:50:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6595:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6595:58:14"
															},
															"nodeType": "YulIf",
															"src": "6592:78:14"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$1083",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6575:5:14",
														"type": ""
													}
												],
												"src": "6524:152:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6749:102:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6759:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6781:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6768:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6768:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6759:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6839:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$1083",
																	"nodeType": "YulIdentifier",
																	"src": "6797:41:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6797:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6797:48:14"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$1083",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6727:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6735:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6743:5:14",
														"type": ""
													}
												],
												"src": "6682:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6946:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6963:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6966:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6956:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6956:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6956:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6857:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7069:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7086:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7089:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7079:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7079:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7079:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "6980:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7151:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7161:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7179:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7186:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7175:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7175:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7195:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7191:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7191:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7171:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7171:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7161:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7134:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7144:6:14",
														"type": ""
													}
												],
												"src": "7103:102:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7239:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7256:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7259:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7249:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7249:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7249:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7353:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7356:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7346:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7346:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7346:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7377:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7380:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7370:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7370:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7370:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7211:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7440:238:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7450:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7472:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7502:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7480:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7480:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7468:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7468:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7454:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7619:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7621:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7621:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7621:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7562:10:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7574:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7559:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7559:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7598:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7610:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7595:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7595:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7556:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7556:62:14"
															},
															"nodeType": "YulIf",
															"src": "7553:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7657:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7661:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7650:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7650:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7650:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7426:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7434:4:14",
														"type": ""
													}
												],
												"src": "7397:281:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7725:88:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7735:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7745:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7745:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7735:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7794:6:14"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7802:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7774:19:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7774:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7774:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7709:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7718:6:14",
														"type": ""
													}
												],
												"src": "7684:129:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7886:241:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7991:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7993:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7993:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7993:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7963:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7971:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7960:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7960:30:14"
															},
															"nodeType": "YulIf",
															"src": "7957:56:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8023:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8053:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8031:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8031:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8023:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8097:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8109:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8115:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8105:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8105:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8097:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7870:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7881:4:14",
														"type": ""
													}
												],
												"src": "7819:308:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8197:82:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8220:3:14"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8225:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8230:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8207:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8207:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8207:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8257:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8262:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8253:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8253:16:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8271:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8246:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8246:27:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8246:27:14"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8179:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8184:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8189:6:14",
														"type": ""
													}
												],
												"src": "8133:146:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8369:341:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8379:75:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8446:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8404:41:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8404:49:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8388:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8388:66:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8379:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8470:5:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8477:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8463:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8463:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8463:21:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8493:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8508:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8515:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8504:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8504:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8497:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8558:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8560:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8560:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8560:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8539:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8544:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8535:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8535:16:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8553:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8532:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8532:25:14"
															},
															"nodeType": "YulIf",
															"src": "8529:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8687:3:14"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8692:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8697:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8650:36:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8650:54:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8650:54:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8342:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8347:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8355:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8363:5:14",
														"type": ""
													}
												],
												"src": "8285:425:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8792:278:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8841:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8843:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8843:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8843:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8820:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8828:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8816:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8816:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8835:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8812:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8812:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8805:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8805:35:14"
															},
															"nodeType": "YulIf",
															"src": "8802:122:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8933:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8960:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8947:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8947:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8937:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8976:88:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9037:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9045:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9033:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9033:17:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9052:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9060:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8985:47:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8985:79:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8976:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8770:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8778:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8786:5:14",
														"type": ""
													}
												],
												"src": "8730:340:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9116:76:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9170:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9179:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9182:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9172:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9172:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9172:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9139:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9161:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "9146:14:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9146:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9136:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9136:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9129:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9129:40:14"
															},
															"nodeType": "YulIf",
															"src": "9126:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9109:5:14",
														"type": ""
													}
												],
												"src": "9076:116:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9247:84:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9257:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9279:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9266:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9266:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9257:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9319:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9295:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9295:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9295:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9225:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9233:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9241:5:14",
														"type": ""
													}
												],
												"src": "9198:133:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9476:830:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9523:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9525:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9525:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9525:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9497:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9506:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9493:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9493:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9518:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9489:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9489:33:14"
															},
															"nodeType": "YulIf",
															"src": "9486:120:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "9616:132:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9631:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9645:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9635:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9660:78:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9710:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9721:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9706:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9706:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9730:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$1083",
																			"nodeType": "YulIdentifier",
																			"src": "9670:35:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9670:68:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9660:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9758:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9773:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9787:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9777:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9803:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9838:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9849:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9834:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9834:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9858:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9813:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9813:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9803:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9886:288:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9901:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9932:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9943:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9928:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9928:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9915:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9915:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9905:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9994:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9996:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9996:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9996:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9966:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9974:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9963:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9963:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "9960:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10091:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10136:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10147:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10132:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10132:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10156:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10101:30:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10101:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "10091:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10184:115:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10199:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10213:2:14",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10203:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10229:60:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10261:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10272:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10257:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10257:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10281:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "10239:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10239:50:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "10229:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$1083t_uint256t_string_memory_ptrt_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9422:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9433:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9445:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9453:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9461:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9469:6:14",
														"type": ""
													}
												],
												"src": "9337:969:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10395:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10441:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10443:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10443:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10443:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10416:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10425:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10412:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10412:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10437:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10408:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10408:32:14"
															},
															"nodeType": "YulIf",
															"src": "10405:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "10534:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10549:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10563:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10553:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10578:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10613:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10624:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10609:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10609:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10633:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10588:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10588:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10578:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10661:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10676:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10690:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10680:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10706:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10741:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10752:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10737:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10737:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10761:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10716:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10716:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10706:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10357:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10368:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10380:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10388:6:14",
														"type": ""
													}
												],
												"src": "10312:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10872:169:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10977:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10979:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10979:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10979:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10949:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10957:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10946:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10946:30:14"
															},
															"nodeType": "YulIf",
															"src": "10943:56:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11009:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11021:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11029:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11017:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11017:17:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "11009:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$3_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10856:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10867:4:14",
														"type": ""
													}
												],
												"src": "10792:249:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11136:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11153:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11156:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11146:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11146:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11146:12:14"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "11047:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11288:543:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11298:88:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11378:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$3_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11323:54:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11323:62:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11307:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11307:79:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "11298:5:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11395:16:14",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "11406:5:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "11399:3:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11421:44:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11439:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11451:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11459:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "11447:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11447:17:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11435:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11435:30:14"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "11425:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11493:103:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "11507:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11507:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11507:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "11480:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "11488:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11477:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11477:15:14"
															},
															"nodeType": "YulIf",
															"src": "11474:122:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11681:144:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11696:21:14",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "11714:3:14"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "11700:10:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11738:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "11764:10:14"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "11776:3:14"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "11743:20:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11743:37:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11731:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11731:50:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11731:50:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11794:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "11805:3:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11810:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11801:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11801:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11794:3:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "11634:3:14"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "11639:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11631:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11631:15:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11647:25:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11649:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "11660:3:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11665:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11656:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11656:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "11649:3:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11609:21:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "11611:17:14",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "11622:6:14"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "11615:3:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "11605:220:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$3_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11258:6:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11266:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11274:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11282:5:14",
														"type": ""
													}
												],
												"src": "11188:643:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11930:264:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11979:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "11981:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11981:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11981:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11958:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11966:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11954:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11954:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "11973:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11950:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11950:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11943:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11943:35:14"
															},
															"nodeType": "YulIf",
															"src": "11940:122:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12071:18:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12085:4:14",
																"type": "",
																"value": "0x03"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12075:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12098:90:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12168:6:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12176:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "12184:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$3_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12107:60:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12107:81:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "12098:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$3_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11908:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11916:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11924:5:14",
														"type": ""
													}
												],
												"src": "11855:339:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12323:544:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12370:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12372:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12372:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12372:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12344:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12353:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12340:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12340:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12365:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12336:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12336:33:14"
															},
															"nodeType": "YulIf",
															"src": "12333:120:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "12463:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12478:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12492:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12482:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12507:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12542:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12553:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12538:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12538:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12562:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12517:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12517:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12507:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12590:141:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12605:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12619:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12609:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12635:86:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12693:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12704:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12689:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12689:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12713:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$3_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12645:43:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12645:76:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12635:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12741:119:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12756:17:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12770:3:14",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12760:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12787:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12822:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12833:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12818:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12818:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12842:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12797:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12797:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "12787:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_address_$3_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12277:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12288:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12300:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12308:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12316:6:14",
														"type": ""
													}
												],
												"src": "12200:667:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12956:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13002:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13004:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13004:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13004:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12977:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12986:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12973:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12973:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12998:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12969:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12969:32:14"
															},
															"nodeType": "YulIf",
															"src": "12966:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "13095:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13110:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13124:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13114:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13139:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13174:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13185:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13170:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13170:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13194:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13149:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13149:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13139:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13222:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13237:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13251:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13241:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13267:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13302:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13313:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13298:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13298:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13322:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "13277:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13277:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "13267:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12918:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12929:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12941:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12949:6:14",
														"type": ""
													}
												],
												"src": "12873:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13479:206:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13489:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13501:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13512:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13497:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13497:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13489:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13569:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13582:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13593:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13578:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13578:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13525:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13525:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13525:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13650:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13663:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13674:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13659:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13659:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13606:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13606:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13606:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13443:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13455:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13463:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13474:4:14",
														"type": ""
													}
												],
												"src": "13353:332:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13788:516:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13834:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13836:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13836:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13836:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13809:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13818:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13805:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13805:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13830:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13801:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13801:32:14"
															},
															"nodeType": "YulIf",
															"src": "13798:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "13927:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13942:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13956:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13946:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13971:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14006:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14017:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14002:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14002:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14026:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13981:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13981:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13971:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "14054:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14069:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14083:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14073:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14099:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14134:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14145:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14130:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14130:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14154:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "14109:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14109:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "14099:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "14182:115:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14197:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14211:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14201:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14227:60:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14259:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14270:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14255:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14255:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14279:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "14237:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14237:50:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "14227:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13742:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13753:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13765:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13773:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13781:6:14",
														"type": ""
													}
												],
												"src": "13691:613:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14376:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14422:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "14424:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14424:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14424:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14397:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14406:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14393:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14393:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14418:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14389:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14389:32:14"
															},
															"nodeType": "YulIf",
															"src": "14386:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "14515:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14530:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14544:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14534:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14559:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14594:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14605:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14590:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14590:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14614:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "14569:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14569:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14559:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14346:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14357:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14369:6:14",
														"type": ""
													}
												],
												"src": "14310:329:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14741:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14758:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14763:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14751:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14751:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14751:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14779:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14798:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14803:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14794:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14794:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14779:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14713:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14718:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14729:11:14",
														"type": ""
													}
												],
												"src": "14645:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14926:128:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14948:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14956:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14944:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14944:14:14"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14960:34:14",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14937:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14937:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14937:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15016:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15024:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15012:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15012:15:14"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15029:17:14",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15005:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15005:42:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15005:42:14"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14918:6:14",
														"type": ""
													}
												],
												"src": "14820:234:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15206:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15216:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15282:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15287:2:14",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15223:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15223:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15216:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15388:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nodeType": "YulIdentifier",
																	"src": "15299:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15299:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15299:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15401:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15412:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15417:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15408:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15408:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15401:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15194:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15202:3:14",
														"type": ""
													}
												],
												"src": "15060:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15603:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15613:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15625:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15636:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15621:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15621:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15613:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15660:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15671:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15656:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15656:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15679:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15685:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15675:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15675:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15649:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15649:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15649:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15705:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15839:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15713:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15713:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15705:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15583:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15598:4:14",
														"type": ""
													}
												],
												"src": "15432:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15971:34:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15981:18:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "15996:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "15981:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15943:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15948:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15959:11:14",
														"type": ""
													}
												],
												"src": "15857:148:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16117:52:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16139:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16147:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16135:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16135:14:14"
																	},
																	{
																		"hexValue": "476f7665726e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16151:10:14",
																		"type": "",
																		"value": "Governor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16128:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16128:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16128:34:14"
														}
													]
												},
												"name": "store_literal_in_memory_d0990c50b6714f222e6fd1faaf5345bf1aa2867d2861fc2cc43b364e7d948647",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16109:6:14",
														"type": ""
													}
												],
												"src": "16011:158:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16339:236:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16349:91:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16433:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16438:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16356:76:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16356:84:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16349:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16538:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d0990c50b6714f222e6fd1faaf5345bf1aa2867d2861fc2cc43b364e7d948647",
																	"nodeType": "YulIdentifier",
																	"src": "16449:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16449:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16449:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16551:18:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16562:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16567:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16558:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16558:11:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16551:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d0990c50b6714f222e6fd1faaf5345bf1aa2867d2861fc2cc43b364e7d948647_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16327:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16335:3:14",
														"type": ""
													}
												],
												"src": "16175:400:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16770:192:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16781:155:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16932:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d0990c50b6714f222e6fd1faaf5345bf1aa2867d2861fc2cc43b364e7d948647_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16788:142:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16788:148:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16781:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16946:10:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16953:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16946:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_d0990c50b6714f222e6fd1faaf5345bf1aa2867d2861fc2cc43b364e7d948647__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16757:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16766:3:14",
														"type": ""
													}
												],
												"src": "16581:381:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16996:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17013:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17016:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17006:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17006:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17006:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17110:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17113:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17103:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17103:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17103:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17134:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17137:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17127:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17127:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17127:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16968:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17198:147:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17208:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17231:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17213:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17213:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17208:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17242:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17265:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17247:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17247:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "17242:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17276:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17287:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17290:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17283:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17283:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "17276:3:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17316:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17318:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17318:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17318:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17308:1:14"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "17311:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17305:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17305:10:14"
															},
															"nodeType": "YulIf",
															"src": "17302:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17185:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17188:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "17194:3:14",
														"type": ""
													}
												],
												"src": "17154:191:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17379:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17396:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17399:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17389:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17389:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17389:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17493:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17496:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17486:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17486:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17486:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17517:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17520:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17510:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17510:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17510:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "17351:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17643:58:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17665:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17673:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17661:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17661:14:14"
																	},
																	{
																		"hexValue": "4661726d3a206e6f7420676f6f64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17677:16:14",
																		"type": "",
																		"value": "Farm: not good"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17654:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17654:40:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17654:40:14"
														}
													]
												},
												"name": "store_literal_in_memory_19f3453e52ae10a360d9e48db78d5d4e6a706bf3acf6c2436b95797b32ab141c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17635:6:14",
														"type": ""
													}
												],
												"src": "17537:164:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17853:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17863:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17929:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17934:2:14",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17870:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17870:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17863:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18035:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_19f3453e52ae10a360d9e48db78d5d4e6a706bf3acf6c2436b95797b32ab141c",
																	"nodeType": "YulIdentifier",
																	"src": "17946:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17946:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17946:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18048:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18059:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18064:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18055:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18055:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18048:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_19f3453e52ae10a360d9e48db78d5d4e6a706bf3acf6c2436b95797b32ab141c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17841:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17849:3:14",
														"type": ""
													}
												],
												"src": "17707:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18250:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18260:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18272:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18283:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18268:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18268:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18260:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18307:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18318:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18303:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18303:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18326:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18332:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18322:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18322:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18296:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18296:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18296:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18352:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18486:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_19f3453e52ae10a360d9e48db78d5d4e6a706bf3acf6c2436b95797b32ab141c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18360:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18360:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18352:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_19f3453e52ae10a360d9e48db78d5d4e6a706bf3acf6c2436b95797b32ab141c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18230:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18245:4:14",
														"type": ""
													}
												],
												"src": "18079:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18552:362:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18562:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18585:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18567:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18567:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18562:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18596:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18619:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18601:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18601:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18596:1:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18630:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18653:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18656:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "18649:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18649:9:14"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "18634:11:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18667:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "18696:11:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18678:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18678:30:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "18667:7:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18885:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18887:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18887:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18887:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "18818:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "18811:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18811:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "18841:1:14"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "18848:7:14"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "18857:1:14"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "18844:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18844:15:14"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "18838:2:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18838:22:14"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "18791:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18791:83:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18771:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18771:113:14"
															},
															"nodeType": "YulIf",
															"src": "18768:139:14"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18535:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18538:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "18544:7:14",
														"type": ""
													}
												],
												"src": "18504:410:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18948:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18965:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18968:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18958:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18958:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18958:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19062:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19065:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19055:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19055:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19055:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19086:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19089:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19079:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19079:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19079:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "18920:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19148:143:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19158:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19181:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19163:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19163:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19158:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19192:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19215:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19197:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19197:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19192:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19239:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "19241:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19241:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19241:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19236:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19229:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19229:9:14"
															},
															"nodeType": "YulIf",
															"src": "19226:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19271:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19280:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19283:1:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "19276:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19276:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19271:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19137:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19140:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "19146:1:14",
														"type": ""
													}
												],
												"src": "19106:185:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19342:149:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19352:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19375:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19357:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19357:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19352:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19386:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19409:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19391:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19391:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19386:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19420:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19432:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19435:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19428:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19428:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "19420:4:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19462:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19464:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19464:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19464:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "19453:4:14"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19459:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19450:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19450:11:14"
															},
															"nodeType": "YulIf",
															"src": "19447:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19328:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19331:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "19337:4:14",
														"type": ""
													}
												],
												"src": "19297:194:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19562:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19579:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19602:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19584:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19584:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19572:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19572:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19572:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19550:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19557:3:14",
														"type": ""
													}
												],
												"src": "19497:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19747:206:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19757:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19769:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19780:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19765:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19765:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19757:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19837:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19850:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19861:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19846:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19846:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19793:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19793:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19793:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19918:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19931:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19942:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19927:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19927:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19874:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19874:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19874:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19711:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19723:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19731:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19742:4:14",
														"type": ""
													}
												],
												"src": "19621:332:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20019:77:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20029:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20044:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20038:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20038:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20029:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20084:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "20060:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20060:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20060:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "19997:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20005:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20013:5:14",
														"type": ""
													}
												],
												"src": "19959:137:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20176:271:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20222:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "20224:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20224:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20224:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20197:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20206:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20193:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20193:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20218:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20189:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20189:32:14"
															},
															"nodeType": "YulIf",
															"src": "20186:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "20315:125:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20330:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20344:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20334:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20359:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20402:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20413:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20398:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20398:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20422:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20369:28:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20369:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "20359:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20146:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20157:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20169:6:14",
														"type": ""
													}
												],
												"src": "20102:345:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20551:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20561:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20573:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20584:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20569:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20569:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20561:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20641:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20654:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20665:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20650:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20650:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20597:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20597:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20597:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20523:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20535:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20546:4:14",
														"type": ""
													}
												],
												"src": "20453:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20744:80:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20754:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20769:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20763:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20763:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20754:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20812:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20785:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20785:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20785:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "20722:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20730:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20738:5:14",
														"type": ""
													}
												],
												"src": "20681:143:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20907:274:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20953:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "20955:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20955:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20955:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20928:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20937:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20924:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20924:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20949:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20920:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20920:32:14"
															},
															"nodeType": "YulIf",
															"src": "20917:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "21046:128:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21061:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21075:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21065:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21090:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21136:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21147:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21132:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21132:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21156:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21100:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21100:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "21090:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20877:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20888:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20900:6:14",
														"type": ""
													}
												],
												"src": "20830:351:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21293:116:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21315:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21323:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21311:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21311:14:14"
																	},
																	{
																		"hexValue": "4661726d3a2063616c6c6572206973206e6f742074686520696e697469616c69",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21327:34:14",
																		"type": "",
																		"value": "Farm: caller is not the initiali"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21304:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21304:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21304:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21383:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21391:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21379:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21379:15:14"
																	},
																	{
																		"hexValue": "7a6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21396:5:14",
																		"type": "",
																		"value": "zer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21372:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21372:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21372:30:14"
														}
													]
												},
												"name": "store_literal_in_memory_7e44769768d03ec3c3ea627eef9905a5a2b1a1882e0c31c77df1d668d8a68193",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21285:6:14",
														"type": ""
													}
												],
												"src": "21187:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21561:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21571:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21637:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21642:2:14",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21578:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21578:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21571:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21743:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7e44769768d03ec3c3ea627eef9905a5a2b1a1882e0c31c77df1d668d8a68193",
																	"nodeType": "YulIdentifier",
																	"src": "21654:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21654:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21654:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21756:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21767:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21772:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21763:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21763:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21756:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7e44769768d03ec3c3ea627eef9905a5a2b1a1882e0c31c77df1d668d8a68193_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21549:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21557:3:14",
														"type": ""
													}
												],
												"src": "21415:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21958:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21968:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21980:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21991:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21976:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21976:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21968:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22015:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22026:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22011:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22011:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22034:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22040:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22030:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22030:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22004:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22004:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22004:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22060:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22194:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7e44769768d03ec3c3ea627eef9905a5a2b1a1882e0c31c77df1d668d8a68193_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22068:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22068:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22060:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e44769768d03ec3c3ea627eef9905a5a2b1a1882e0c31c77df1d668d8a68193__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21938:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21953:4:14",
														"type": ""
													}
												],
												"src": "21787:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22318:70:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22340:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22348:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22336:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22336:14:14"
																	},
																	{
																		"hexValue": "4661726d3a20696e76616c696420485947542061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22352:28:14",
																		"type": "",
																		"value": "Farm: invalid HYGT address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22329:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22329:52:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22329:52:14"
														}
													]
												},
												"name": "store_literal_in_memory_b0441d385a0111946137fe922aa6443c7191a75eba4f870fbd5b5fb2578d76e5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22310:6:14",
														"type": ""
													}
												],
												"src": "22212:176:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22540:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22550:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22616:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22621:2:14",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22557:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22557:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22550:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22722:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b0441d385a0111946137fe922aa6443c7191a75eba4f870fbd5b5fb2578d76e5",
																	"nodeType": "YulIdentifier",
																	"src": "22633:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22633:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22633:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22735:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22746:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22751:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22742:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22742:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22735:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b0441d385a0111946137fe922aa6443c7191a75eba4f870fbd5b5fb2578d76e5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22528:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22536:3:14",
														"type": ""
													}
												],
												"src": "22394:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22937:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22947:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22959:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22970:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22955:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22955:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22947:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22994:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23005:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22990:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22990:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23013:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23019:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23009:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23009:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22983:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22983:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22983:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23039:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23173:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b0441d385a0111946137fe922aa6443c7191a75eba4f870fbd5b5fb2578d76e5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23047:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23047:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23039:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b0441d385a0111946137fe922aa6443c7191a75eba4f870fbd5b5fb2578d76e5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22917:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22932:4:14",
														"type": ""
													}
												],
												"src": "22766:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23234:190:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23244:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23271:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23253:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23253:24:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "23244:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23367:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23369:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23369:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23369:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23292:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23299:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "23289:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23289:77:14"
															},
															"nodeType": "YulIf",
															"src": "23286:103:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23398:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23409:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23416:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23405:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23405:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "23398:3:14"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23220:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "23230:3:14",
														"type": ""
													}
												],
												"src": "23191:233:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23489:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23500:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23516:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23510:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23510:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "23500:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23472:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23482:6:14",
														"type": ""
													}
												],
												"src": "23430:99:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23597:184:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23607:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "23616:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "23611:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23676:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "23701:3:14"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "23706:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "23697:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23697:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "23720:3:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "23725:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "23716:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "23716:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "23710:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23710:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "23690:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23690:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23690:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "23637:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23640:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "23634:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23634:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "23648:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "23650:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "23659:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23662:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "23655:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23655:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "23650:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "23630:3:14",
																"statements": []
															},
															"src": "23626:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "23759:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "23764:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23755:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23755:16:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23773:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23748:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23748:27:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23748:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "23579:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "23584:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23589:6:14",
														"type": ""
													}
												],
												"src": "23535:246:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23879:285:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23889:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23936:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "23903:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23903:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "23893:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23951:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24017:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24022:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23958:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23958:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23951:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24077:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24084:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24073:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24073:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24091:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24096:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "24038:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24038:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24038:65:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24112:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24123:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "24150:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "24128:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24128:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24119:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24119:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24112:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23860:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23867:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23875:3:14",
														"type": ""
													}
												],
												"src": "23787:377:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24344:359:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24354:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24366:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24377:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24362:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24362:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24354:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24434:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24447:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24458:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24443:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24443:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24390:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24390:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24390:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24482:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24493:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24478:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24478:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24502:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24508:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24498:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24498:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24471:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24471:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24471:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24528:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24600:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24609:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24536:63:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24536:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24528:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "24668:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24681:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24692:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24677:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24677:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24624:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24624:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24624:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24300:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "24312:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24320:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24328:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24339:4:14",
														"type": ""
													}
												],
												"src": "24170:533:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24863:288:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24873:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24885:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24896:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24881:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24881:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24873:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24953:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24966:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24977:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24962:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24962:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24909:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24909:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24909:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25034:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25047:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25058:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25043:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25043:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24990:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24990:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24990:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "25116:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25129:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25140:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25125:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25125:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25072:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25072:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25072:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24819:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "24831:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24839:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24847:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24858:4:14",
														"type": ""
													}
												],
												"src": "24709:442:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25263:67:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25285:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25293:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25281:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25281:14:14"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25297:25:14",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25274:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25274:49:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25274:49:14"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25255:6:14",
														"type": ""
													}
												],
												"src": "25157:173:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25500:238:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25510:92:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25594:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25599:2:14",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25517:76:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25517:85:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25510:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25700:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "25611:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25611:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25611:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25713:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25724:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25729:2:14",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25720:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25720:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25713:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25488:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25496:3:14",
														"type": ""
													}
												],
												"src": "25336:402:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25854:280:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25864:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25911:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "25878:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25878:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "25868:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25926:96:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26010:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26015:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25933:76:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25933:89:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25926:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26070:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26077:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26066:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26066:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26084:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26089:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "26031:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26031:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26031:65:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26105:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26116:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26121:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26112:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26112:16:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26105:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25835:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25842:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25850:3:14",
														"type": ""
													}
												],
												"src": "25744:390:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26246:61:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26268:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26276:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26264:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26264:14:14"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26280:19:14",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26257:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26257:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26257:43:14"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26238:6:14",
														"type": ""
													}
												],
												"src": "26140:167:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26477:238:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26487:92:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26571:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26576:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26494:76:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26494:85:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26487:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26677:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "26588:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26588:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26588:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26690:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26701:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26706:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26697:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26697:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26690:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26465:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26473:3:14",
														"type": ""
													}
												],
												"src": "26313:402:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27107:581:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27118:155:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27269:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27125:142:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27125:148:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27118:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27283:102:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27372:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27381:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27290:81:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27290:95:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27283:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27395:155:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27546:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27402:142:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27402:148:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27395:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27560:102:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27649:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27658:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27567:81:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27567:95:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27560:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "27672:10:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "27679:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27672:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27078:3:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27084:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27092:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27103:3:14",
														"type": ""
													}
												],
												"src": "26721:967:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27812:195:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27822:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27834:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27845:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27830:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27830:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27822:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27869:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27880:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27865:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27865:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27888:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27894:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27884:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27884:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27858:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27858:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27858:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27914:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27986:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27995:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27922:63:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27922:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27914:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27784:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27796:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27807:4:14",
														"type": ""
													}
												],
												"src": "27694:313:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28119:123:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28141:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28149:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28137:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28137:14:14"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28153:34:14",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28130:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28130:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28130:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28209:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28217:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28205:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28205:15:14"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28222:12:14",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28198:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28198:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28198:37:14"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28111:6:14",
														"type": ""
													}
												],
												"src": "28013:229:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28394:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28404:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28470:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28475:2:14",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28411:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28411:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28404:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28576:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "28487:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28487:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28487:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28589:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28600:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28605:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28596:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28596:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28589:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28382:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28390:3:14",
														"type": ""
													}
												],
												"src": "28248:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28791:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28801:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28813:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28824:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28809:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28809:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28801:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28848:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28859:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28844:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28844:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28867:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28873:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28863:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28863:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28837:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28837:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28837:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28893:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29027:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28901:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28901:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28893:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28771:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28786:4:14",
														"type": ""
													}
												],
												"src": "28620:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29088:128:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29098:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29125:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29107:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29107:24:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "29098:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29159:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "29161:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29161:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29161:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29146:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29153:4:14",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "29143:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29143:15:14"
															},
															"nodeType": "YulIf",
															"src": "29140:41:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29190:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29201:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29208:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "29197:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29197:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "29190:3:14"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29074:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "29084:3:14",
														"type": ""
													}
												],
												"src": "29045:171:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29328:76:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29350:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29358:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29346:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29346:14:14"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29362:34:14",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29339:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29339:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29339:58:14"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29320:6:14",
														"type": ""
													}
												],
												"src": "29222:182:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29556:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29566:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29632:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29637:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29573:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29573:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "29566:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29738:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "29649:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29649:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29649:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29751:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29762:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29767:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29758:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29758:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "29751:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "29544:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29552:3:14",
														"type": ""
													}
												],
												"src": "29410:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29953:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29963:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29975:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29986:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29971:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29971:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29963:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30010:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30021:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30006:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30006:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30029:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30035:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30025:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30025:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29999:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "29999:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29999:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30055:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30189:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30063:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "30063:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30055:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29933:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29948:4:14",
														"type": ""
													}
												],
												"src": "29782:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30313:119:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30335:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30343:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30331:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30331:14:14"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30347:34:14",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30324:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "30324:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30324:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30403:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30411:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30399:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30399:15:14"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30416:8:14",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30392:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "30392:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30392:33:14"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30305:6:14",
														"type": ""
													}
												],
												"src": "30207:225:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30584:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30594:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30660:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30665:2:14",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30601:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "30601:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "30594:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30766:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "30677:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "30677:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30677:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30779:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30790:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30795:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30786:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "30786:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "30779:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30572:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30580:3:14",
														"type": ""
													}
												],
												"src": "30438:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30981:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30991:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31003:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31014:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30999:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "30999:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30991:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31038:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31049:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31034:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31034:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "31057:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31063:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31053:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31053:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31027:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "31027:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31027:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31083:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31217:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31091:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "31091:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31083:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30961:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30976:4:14",
														"type": ""
													}
												],
												"src": "30810:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31293:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31304:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "31320:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "31314:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "31314:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "31304:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31276:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "31286:6:14",
														"type": ""
													}
												],
												"src": "31235:98:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31452:34:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31462:18:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "31477:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "31462:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31424:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "31429:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "31440:11:14",
														"type": ""
													}
												],
												"src": "31339:147:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31600:278:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31610:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "31656:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "31624:31:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "31624:38:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "31614:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "31671:95:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31754:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31759:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31678:75:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "31678:88:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31671:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31814:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31821:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31810:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31810:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31828:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31833:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "31775:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "31775:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31775:65:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31849:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31860:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31865:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31856:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "31856:16:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "31849:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31581:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31588:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31596:3:14",
														"type": ""
													}
												],
												"src": "31492:386:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32018:137:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32029:100:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "32116:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32125:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32036:79:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "32036:93:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "32029:3:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "32139:10:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "32146:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "32139:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31997:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "32003:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "32014:3:14",
														"type": ""
													}
												],
												"src": "31884:271:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32267:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32289:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32297:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32285:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32285:14:14"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32301:31:14",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32278:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "32278:55:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32278:55:14"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "32259:6:14",
														"type": ""
													}
												],
												"src": "32161:179:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32492:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32502:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32568:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32573:2:14",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32509:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "32509:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "32502:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32674:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "32585:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "32585:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32585:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32687:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32698:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32703:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32694:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "32694:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "32687:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "32480:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "32488:3:14",
														"type": ""
													}
												],
												"src": "32346:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32889:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32899:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "32911:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32922:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32907:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "32907:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32899:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32946:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32957:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32942:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32942:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "32965:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32971:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "32961:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32961:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32935:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "32935:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32935:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32991:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "33125:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32999:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "32999:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32991:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "32869:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "32884:4:14",
														"type": ""
													}
												],
												"src": "32718:419:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1083_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1083_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1083_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1083_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC20_$1083_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function convert_t_contract$_IHYGT_$1176_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IHYGT_$1176_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IHYGT_$1176_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IHYGT_$1176__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IHYGT_$1176_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IERC20_$1083(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$1083(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$1083(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$1083(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$1083(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$1083t_uint256t_string_memory_ptrt_bool(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$1083(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$3_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[3]\n    function abi_decode_available_length_t_array$_t_address_$3_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$3_memory_ptr(length))\n        let dst := array\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[3]\n    function abi_decode_t_array$_t_address_$3_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := 0x03\n        array := abi_decode_available_length_t_array$_t_address_$3_memory_ptr(offset, length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_address_$3_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_array$_t_address_$3_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_d0990c50b6714f222e6fd1faaf5345bf1aa2867d2861fc2cc43b364e7d948647(memPtr) {\n\n        mstore(add(memPtr, 0), \"Governor\")\n\n    }\n\n    function abi_encode_t_stringliteral_d0990c50b6714f222e6fd1faaf5345bf1aa2867d2861fc2cc43b364e7d948647_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 8)\n        store_literal_in_memory_d0990c50b6714f222e6fd1faaf5345bf1aa2867d2861fc2cc43b364e7d948647(pos)\n        end := add(pos, 8)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_d0990c50b6714f222e6fd1faaf5345bf1aa2867d2861fc2cc43b364e7d948647__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_d0990c50b6714f222e6fd1faaf5345bf1aa2867d2861fc2cc43b364e7d948647_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_19f3453e52ae10a360d9e48db78d5d4e6a706bf3acf6c2436b95797b32ab141c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Farm: not good\")\n\n    }\n\n    function abi_encode_t_stringliteral_19f3453e52ae10a360d9e48db78d5d4e6a706bf3acf6c2436b95797b32ab141c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_19f3453e52ae10a360d9e48db78d5d4e6a706bf3acf6c2436b95797b32ab141c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_19f3453e52ae10a360d9e48db78d5d4e6a706bf3acf6c2436b95797b32ab141c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_19f3453e52ae10a360d9e48db78d5d4e6a706bf3acf6c2436b95797b32ab141c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_7e44769768d03ec3c3ea627eef9905a5a2b1a1882e0c31c77df1d668d8a68193(memPtr) {\n\n        mstore(add(memPtr, 0), \"Farm: caller is not the initiali\")\n\n        mstore(add(memPtr, 32), \"zer\")\n\n    }\n\n    function abi_encode_t_stringliteral_7e44769768d03ec3c3ea627eef9905a5a2b1a1882e0c31c77df1d668d8a68193_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_7e44769768d03ec3c3ea627eef9905a5a2b1a1882e0c31c77df1d668d8a68193(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e44769768d03ec3c3ea627eef9905a5a2b1a1882e0c31c77df1d668d8a68193__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e44769768d03ec3c3ea627eef9905a5a2b1a1882e0c31c77df1d668d8a68193_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b0441d385a0111946137fe922aa6443c7191a75eba4f870fbd5b5fb2578d76e5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Farm: invalid HYGT address\")\n\n    }\n\n    function abi_encode_t_stringliteral_b0441d385a0111946137fe922aa6443c7191a75eba4f870fbd5b5fb2578d76e5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_b0441d385a0111946137fe922aa6443c7191a75eba4f870fbd5b5fb2578d76e5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b0441d385a0111946137fe922aa6443c7191a75eba4f870fbd5b5fb2578d76e5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b0441d385a0111946137fe922aa6443c7191a75eba4f870fbd5b5fb2578d76e5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"33": [
									{
										"length": 32,
										"start": 3173
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5312EA8E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x93F1A40B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB3ECB623 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB3ECB623 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xCCC57490 EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x4A4 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xAD35E1CC EQ PUSH2 0x41E JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x5E3E1581 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x79838EF0 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x7F37DF3B EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x39F JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x3A0618FD EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x2F3 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x23C64CE1 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x235 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x219F JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x21E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH2 0x53A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x2262 JUMP JUMPDEST PUSH2 0x547 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x230E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x2374 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x23C5 JUMP JUMPDEST PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x2401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x245A JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x245A JUMP JUMPDEST PUSH2 0x613 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x696 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x26CD JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DD PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x2262 JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x2262 JUMP JUMPDEST PUSH2 0xB35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x27C3 JUMP JUMPDEST PUSH2 0xC63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34F PUSH2 0xF8F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x359 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x2816 JUMP JUMPDEST PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x245A JUMP JUMPDEST PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x21E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x2816 JUMP JUMPDEST PUSH2 0x129E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F7 SWAP3 SWAP2 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x2401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x287F JUMP JUMPDEST PUSH2 0x12D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x454 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x28D2 JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x2401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x245A JUMP JUMPDEST PUSH2 0x145B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B9 SWAP2 SWAP1 PUSH2 0x26CD JUMP JUMPDEST PUSH2 0x147C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x533 JUMPI POP PUSH2 0x532 DUP3 PUSH2 0x16E2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5FB DUP3 PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x604 DUP2 PUSH2 0x174C JUMP JUMPDEST PUSH2 0x60E DUP4 DUP4 PUSH2 0x1760 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x61B PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67F SWAP1 PUSH2 0x2982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x692 DUP3 DUP3 PUSH2 0x1848 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6A5 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x6C4 DUP2 PUSH2 0x174C JUMP JUMPDEST DUP2 ISZERO PUSH2 0x6D3 JUMPI PUSH2 0x6D2 PUSH2 0xF8F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD NUMBER GT PUSH2 0x6E6 JUMPI PUSH1 0x3 SLOAD PUSH2 0x6E8 JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP DUP5 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6FC SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x70F DUP7 DUP7 DUP7 DUP5 PUSH2 0x1929 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x72D JUMPI PUSH2 0x72C PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x75C PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D6 SWAP1 PUSH2 0x2AEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E8 DUP5 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x809 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x813 SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST PUSH2 0x81D SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x8D1 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 PUSH2 0x86E PUSH2 0x1840 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88C SWAP3 SWAP2 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x2C2F JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x92C JUMPI DUP4 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x92B DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x925 PUSH2 0x1840 JUMP JUMPDEST DUP7 PUSH2 0x1A64 JUMP JUMPDEST JUMPDEST PUSH5 0xE8D4A51000 DUP4 PUSH1 0x3 ADD SLOAD DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x946 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x950 SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 PUSH2 0x961 PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9D1 JUMPI PUSH2 0x9D0 PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x9F2 JUMPI POP PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA51 SWAP2 SWAP1 PUSH2 0x2C5C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA6E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA92 SWAP2 SWAP1 PUSH2 0x2C8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0xAAC JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xABE SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH1 0x2 SLOAD DUP5 PUSH2 0xAD8 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0xAEC SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 POP DUP3 PUSH5 0xE8D4A51000 DUP3 PUSH2 0xB00 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0xB0A SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST DUP5 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB1D SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB4B JUMPI PUSH2 0xB4A PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xB7A PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0xBF0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBE6 PUSH2 0x1840 JUMP JUMPDEST DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1A64 JUMP JUMPDEST DUP3 PUSH2 0xBF9 PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCA2 PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCEF SWAP1 PUSH2 0x2D2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5E SWAP1 PUSH2 0x2D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD9C PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD79 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xD97 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x1760 JUMP JUMPDEST PUSH2 0xDB0 PUSH1 0x0 DUP1 SHL PUSH2 0xDAB PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x1760 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0x1BC16D674EC80000 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xC SWAP1 POP PUSH1 0x0 DUP2 TIMESTAMP PUSH2 0x708 DUP6 PUSH2 0xE18 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH2 0xE22 SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST PUSH2 0xE2C SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 POP DUP1 NUMBER PUSH2 0xE3A SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x3E8 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SUB PUSH2 0xF6D JUMPI PUSH2 0xEB3 DUP5 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0xE6D JUMPI PUSH2 0xE6C PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x190 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x485944542D424E42000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x3 SLOAD PUSH2 0x1929 JUMP JUMPDEST PUSH2 0xF10 DUP5 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0xECA JUMPI PUSH2 0xEC9 PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x190 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x485944542D555344540000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x3 SLOAD PUSH2 0x1929 JUMP JUMPDEST PUSH2 0xF6C DUP5 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0xF27 JUMPI PUSH2 0xF26 PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0xC8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x485944542D485947540000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x3 SLOAD PUSH2 0x1929 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFBE JUMPI PUSH2 0xFAD DUP2 PUSH2 0x9BB JUMP JUMPDEST DUP1 PUSH2 0xFB7 SWAP1 PUSH2 0x2DB7 JUMP JUMPDEST SWAP1 POP PUSH2 0xF9C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xFDF JUMPI PUSH2 0xFDE PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1129 SWAP2 SWAP1 PUSH2 0x2C5C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1146 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x116A SWAP2 SWAP1 PUSH2 0x2C8C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x40 ADD MLOAD NUMBER GT DUP1 ISZERO PUSH2 0x1180 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x11F3 JUMPI PUSH1 0x0 DUP5 PUSH1 0x40 ADD MLOAD NUMBER PUSH2 0x1197 SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SLOAD DUP5 PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x11BB SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x11C5 SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST SWAP1 POP DUP3 PUSH5 0xE8D4A51000 DUP3 PUSH2 0x11D9 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x11E3 SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST DUP5 PUSH2 0x11EE SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD PUSH5 0xE8D4A51000 DUP5 DUP7 PUSH1 0x0 ADD MLOAD PUSH2 0x1210 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST PUSH2 0x1224 SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12E5 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1304 DUP2 PUSH2 0x174C JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1313 JUMPI PUSH2 0x1312 PUSH2 0xF8F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1328 JUMPI PUSH2 0x1327 PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x4 SLOAD PUSH2 0x1347 SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST PUSH2 0x1351 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x136D JUMPI PUSH2 0x136C PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP DUP4 PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1396 JUMPI PUSH2 0x1395 PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 PUSH32 0x5B051D9271F3DACC9672CA07AF039F84D81B973EE9174797456DD6238BF18FEF DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x13DD SWAP3 SWAP2 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1429 JUMPI PUSH2 0x1409 DUP2 DUP6 PUSH2 0xFC8 JUMP JUMPDEST DUP3 PUSH2 0x1414 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0x1421 SWAP1 PUSH2 0x2DB7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13F2 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1442 SWAP1 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH2 0x1464 DUP3 PUSH2 0x5D3 JUMP JUMPDEST PUSH2 0x146D DUP2 PUSH2 0x174C JUMP JUMPDEST PUSH2 0x1477 DUP4 DUP4 PUSH2 0x1848 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1492 JUMPI PUSH2 0x1491 PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x14C1 PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1506 DUP5 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x15FE JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD PUSH5 0xE8D4A51000 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x1534 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x153E SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST PUSH2 0x1548 SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x15FC JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 PUSH2 0x1599 PUSH2 0x1840 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B7 SWAP3 SWAP2 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15FA SWAP2 SWAP1 PUSH2 0x2C2F JUMP JUMPDEST POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x165A JUMPI PUSH2 0x163E DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1637 PUSH2 0x1840 JUMP JUMPDEST ADDRESS DUP7 PUSH2 0x1AEA JUMP JUMPDEST DUP3 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1652 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH5 0xE8D4A51000 DUP3 PUSH1 0x3 ADD SLOAD DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x1674 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x167E SWAP2 SWAP1 PUSH2 0x2B7D JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH2 0x168F PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x16D4 SWAP2 SWAP1 PUSH2 0x221B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175D DUP2 PUSH2 0x1758 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x1B73 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x176A DUP3 DUP3 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x183C JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x17E1 PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1852 DUP3 DUP3 PUSH2 0x1234 JUMP JUMPDEST ISZERO PUSH2 0x1925 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x18CA PUSH2 0x1840 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1931 PUSH2 0x20F5 JUMP JUMPDEST DUP5 DUP2 PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x6 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP PUSH1 0x1 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH2 0x1A22 SWAP2 SWAP1 PUSH2 0x2BAE JUMP JUMPDEST PUSH32 0x1FCB86D005DE4723E36A6D74EEEB8529BAC339B94C9241AED56567A2D214F105 DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1A55 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1AE5 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1A83 SWAP3 SWAP2 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BF8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1B6D DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B0B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BF8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1B7D DUP3 DUP3 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x1BF4 JUMPI PUSH2 0x1B8A DUP2 PUSH2 0x1CBF JUMP JUMPDEST PUSH2 0x1B98 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x1CEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1BA9 SWAP3 SWAP2 SWAP1 PUSH2 0x2FAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BEB SWAP2 SWAP1 PUSH2 0x2FE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5A DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F28 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1CBA JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1C7A SWAP2 SWAP1 PUSH2 0x2C2F JUMP JUMPDEST PUSH2 0x1CB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB0 SWAP1 PUSH2 0x3079 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1CE5 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x1CEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x1CFF SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x1D09 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D22 JUMPI PUSH2 0x1D21 PUSH2 0x24F3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D54 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1D8C JUMPI PUSH2 0x1D8B PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1DF0 JUMPI PUSH2 0x1DEF PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1E30 SWAP2 SWAP1 PUSH2 0x2B0C JUMP JUMPDEST PUSH2 0x1E3A SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1EDA JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1E7C JUMPI PUSH2 0x1E7B PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E93 JUMPI PUSH2 0x1E92 PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x1ED3 SWAP1 PUSH2 0x3099 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E3D JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1F1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F15 SWAP1 PUSH2 0x310E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1F37 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1F40 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1F85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F7C SWAP1 PUSH2 0x31A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1FAE SWAP2 SWAP1 PUSH2 0x3207 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FEB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2001 DUP8 DUP4 DUP4 DUP8 PUSH2 0x200D JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x206F JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x2067 JUMPI PUSH2 0x2027 DUP6 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x2066 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205D SWAP1 PUSH2 0x326A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x207A JUMP JUMPDEST PUSH2 0x2079 DUP4 DUP4 PUSH2 0x20A5 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x20B8 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20EC SWAP2 SWAP1 PUSH2 0x2FE5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x217C DUP2 PUSH2 0x2147 JUMP JUMPDEST DUP2 EQ PUSH2 0x2187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2199 DUP2 PUSH2 0x2173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B5 JUMPI PUSH2 0x21B4 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21C3 DUP5 DUP3 DUP6 ADD PUSH2 0x218A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21E1 DUP2 PUSH2 0x21CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2215 DUP2 PUSH2 0x2202 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2230 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x220C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x223F DUP2 PUSH2 0x2202 JUMP JUMPDEST DUP2 EQ PUSH2 0x224A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x225C DUP2 PUSH2 0x2236 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2278 JUMPI PUSH2 0x2277 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2286 DUP5 DUP3 DUP6 ADD PUSH2 0x224D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D4 PUSH2 0x22CF PUSH2 0x22CA DUP5 PUSH2 0x228F JUMP JUMPDEST PUSH2 0x22AF JUMP JUMPDEST PUSH2 0x228F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E6 DUP3 PUSH2 0x22B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F8 DUP3 PUSH2 0x22DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2308 DUP2 PUSH2 0x22ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2323 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x22FF JUMP JUMPDEST PUSH2 0x2330 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x233D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x234A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x220C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235E DUP3 PUSH2 0x22DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x236E DUP2 PUSH2 0x2353 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2389 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2365 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23A2 DUP2 PUSH2 0x238F JUMP JUMPDEST DUP2 EQ PUSH2 0x23AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23BF DUP2 PUSH2 0x2399 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23DB JUMPI PUSH2 0x23DA PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23E9 DUP5 DUP3 DUP6 ADD PUSH2 0x23B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23FB DUP2 PUSH2 0x238F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2416 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2427 DUP3 PUSH2 0x228F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2437 DUP2 PUSH2 0x241C JUMP JUMPDEST DUP2 EQ PUSH2 0x2442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2454 DUP2 PUSH2 0x242E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2471 JUMPI PUSH2 0x2470 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x247F DUP6 DUP3 DUP7 ADD PUSH2 0x23B0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2490 DUP6 DUP3 DUP7 ADD PUSH2 0x2445 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A5 DUP3 PUSH2 0x241C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B5 DUP2 PUSH2 0x249A JUMP JUMPDEST DUP2 EQ PUSH2 0x24C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24D2 DUP2 PUSH2 0x24AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x252B DUP3 PUSH2 0x24E2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x254A JUMPI PUSH2 0x2549 PUSH2 0x24F3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x255D PUSH2 0x2133 JUMP JUMPDEST SWAP1 POP PUSH2 0x2569 DUP3 DUP3 PUSH2 0x2522 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2589 JUMPI PUSH2 0x2588 PUSH2 0x24F3 JUMP JUMPDEST JUMPDEST PUSH2 0x2592 DUP3 PUSH2 0x24E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C1 PUSH2 0x25BC DUP5 PUSH2 0x256E JUMP JUMPDEST PUSH2 0x2553 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x25DD JUMPI PUSH2 0x25DC PUSH2 0x24DD JUMP JUMPDEST JUMPDEST PUSH2 0x25E8 DUP5 DUP3 DUP6 PUSH2 0x259F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2605 JUMPI PUSH2 0x2604 PUSH2 0x24D8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2615 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2627 DUP2 PUSH2 0x21CC JUMP JUMPDEST DUP2 EQ PUSH2 0x2632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2644 DUP2 PUSH2 0x261E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2664 JUMPI PUSH2 0x2663 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2672 DUP8 DUP3 DUP9 ADD PUSH2 0x24C3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2683 DUP8 DUP3 DUP9 ADD PUSH2 0x224D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26A4 JUMPI PUSH2 0x26A3 PUSH2 0x2142 JUMP JUMPDEST JUMPDEST PUSH2 0x26B0 DUP8 DUP3 DUP9 ADD PUSH2 0x25F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x26C1 DUP8 DUP3 DUP9 ADD PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26E4 JUMPI PUSH2 0x26E3 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26F2 DUP6 DUP3 DUP7 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2703 DUP6 DUP3 DUP7 ADD PUSH2 0x224D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2728 JUMPI PUSH2 0x2727 PUSH2 0x24F3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x274B PUSH2 0x2746 DUP5 PUSH2 0x270D JUMP JUMPDEST PUSH2 0x2553 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2765 JUMPI PUSH2 0x2764 PUSH2 0x2733 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x278E JUMPI DUP1 PUSH2 0x277A DUP9 DUP3 PUSH2 0x2445 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2767 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27AD JUMPI PUSH2 0x27AC PUSH2 0x24D8 JUMP JUMPDEST JUMPDEST PUSH1 0x3 PUSH2 0x27BA DUP5 DUP3 DUP6 PUSH2 0x2738 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x27DC JUMPI PUSH2 0x27DB PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27EA DUP7 DUP3 DUP8 ADD PUSH2 0x2445 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x27FB DUP7 DUP3 DUP8 ADD PUSH2 0x2798 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x280C DUP7 DUP3 DUP8 ADD PUSH2 0x224D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x282D JUMPI PUSH2 0x282C PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x283B DUP6 DUP3 DUP7 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x284C DUP6 DUP3 DUP7 ADD PUSH2 0x2445 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x286B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x220C JUMP JUMPDEST PUSH2 0x2878 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x220C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2898 JUMPI PUSH2 0x2897 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A6 DUP7 DUP3 DUP8 ADD PUSH2 0x224D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x28B7 DUP7 DUP3 DUP8 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x28C8 DUP7 DUP3 DUP8 ADD PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28E8 JUMPI PUSH2 0x28E7 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28F6 DUP5 DUP3 DUP6 ADD PUSH2 0x2445 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x296C PUSH1 0x2F DUP4 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP PUSH2 0x2977 DUP3 PUSH2 0x2910 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x299B DUP2 PUSH2 0x295F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x476F7665726E6F72000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E3 PUSH1 0x8 DUP4 PUSH2 0x29A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x29EE DUP3 PUSH2 0x29AD JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A04 DUP3 PUSH2 0x29D6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2A48 DUP3 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A53 DUP4 PUSH2 0x2202 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A6B JUMPI PUSH2 0x2A6A PUSH2 0x2A0E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4661726D3A206E6F7420676F6F64000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD6 PUSH1 0xE DUP4 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE1 DUP3 PUSH2 0x2AA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B05 DUP2 PUSH2 0x2AC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B17 DUP3 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B22 DUP4 PUSH2 0x2202 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2B30 DUP2 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2B47 JUMPI PUSH2 0x2B46 PUSH2 0x2A0E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B88 DUP3 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B93 DUP4 PUSH2 0x2202 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2BA3 JUMPI PUSH2 0x2BA2 PUSH2 0x2B4E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB9 DUP3 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BC4 DUP4 PUSH2 0x2202 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2BDC JUMPI PUSH2 0x2BDB PUSH2 0x2A0E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BEB DUP2 PUSH2 0x241C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C06 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2BE2 JUMP JUMPDEST PUSH2 0x2C13 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x220C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C29 DUP2 PUSH2 0x261E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C45 JUMPI PUSH2 0x2C44 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C53 DUP5 DUP3 DUP6 ADD PUSH2 0x2C1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C71 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C86 DUP2 PUSH2 0x2236 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CA2 JUMPI PUSH2 0x2CA1 PUSH2 0x213D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CB0 DUP5 DUP3 DUP6 ADD PUSH2 0x2C77 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661726D3A2063616C6C6572206973206E6F742074686520696E697469616C69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7A65720000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D15 PUSH1 0x23 DUP4 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP PUSH2 0x2D20 DUP3 PUSH2 0x2CB9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D44 DUP2 PUSH2 0x2D08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4661726D3A20696E76616C696420485947542061646472657373000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D81 PUSH1 0x1A DUP4 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP PUSH2 0x2D8C DUP3 PUSH2 0x2D4B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DB0 DUP2 PUSH2 0x2D74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC2 DUP3 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2DF4 JUMPI PUSH2 0x2DF3 PUSH2 0x2A0E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E28 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E0D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E3F DUP3 PUSH2 0x2DFF JUMP JUMPDEST PUSH2 0x2E49 DUP2 DUP6 PUSH2 0x28FF JUMP JUMPDEST SWAP4 POP PUSH2 0x2E59 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2E0A JUMP JUMPDEST PUSH2 0x2E62 DUP2 PUSH2 0x24E2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2E82 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2BE2 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2E94 DUP2 DUP6 PUSH2 0x2E34 JUMP JUMPDEST SWAP1 POP PUSH2 0x2EA3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x220C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EC0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2BE2 JUMP JUMPDEST PUSH2 0x2ECD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2BE2 JUMP JUMPDEST PUSH2 0x2EDA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x220C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F18 PUSH1 0x17 DUP4 PUSH2 0x29A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F23 DUP3 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F39 DUP3 PUSH2 0x2DFF JUMP JUMPDEST PUSH2 0x2F43 DUP2 DUP6 PUSH2 0x29A2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2F53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2E0A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F95 PUSH1 0x11 DUP4 PUSH2 0x29A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FA0 DUP3 PUSH2 0x2F5F JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB6 DUP3 PUSH2 0x2F0B JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC2 DUP3 DUP6 PUSH2 0x2F2E JUMP JUMPDEST SWAP2 POP PUSH2 0x2FCD DUP3 PUSH2 0x2F88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FD9 DUP3 DUP5 PUSH2 0x2F2E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FFF DUP2 DUP5 PUSH2 0x2E34 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3063 PUSH1 0x2A DUP4 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP PUSH2 0x306E DUP3 PUSH2 0x3007 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3092 DUP2 PUSH2 0x3056 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30A4 DUP3 PUSH2 0x2202 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x30B7 JUMPI PUSH2 0x30B6 PUSH2 0x2A0E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F8 PUSH1 0x20 DUP4 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP PUSH2 0x3103 DUP3 PUSH2 0x30C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3127 DUP2 PUSH2 0x30EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x318A PUSH1 0x26 DUP4 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP PUSH2 0x3195 DUP3 PUSH2 0x312E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31B9 DUP2 PUSH2 0x317D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31E1 DUP3 PUSH2 0x31C0 JUMP JUMPDEST PUSH2 0x31EB DUP2 DUP6 PUSH2 0x31CB JUMP JUMPDEST SWAP4 POP PUSH2 0x31FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2E0A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3213 DUP3 DUP5 PUSH2 0x31D6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3254 PUSH1 0x1D DUP4 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP PUSH2 0x325F DUP3 PUSH2 0x321E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3283 DUP2 PUSH2 0x3247 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 CALLER ADD 0xDB SWAP2 CALLDATACOPY 0xE8 PC CALLER 0xC7 SWAP8 DUP13 GT DIV GASPRICE SGT 0xD8 0x26 SDIV 0xAA PUSH12 0x342C33CDCD4C1F9C72552464 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "182:11377:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2686:204:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4706:95:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1398:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;854:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;558:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4509:131:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4950:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6094:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5369:398:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10280:737;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;725:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8764:647;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11172:384;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2589:1375;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7133:182;;;:::i;:::-;;632:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7768:759;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2982:147:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1487:66:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2087:49:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6554:446:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7406:262;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;273:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5390:149:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9419:757:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2686:204:11;2771:4;2810:32;2795:47;;;:11;:47;;;;:87;;;;2846:36;2870:11;2846:23;:36::i;:::-;2795:87;2788:94;;2686:204;;;:::o;4706:95:0:-;4751:7;4778:8;:15;;;;4771:22;;4706:95;:::o;1398:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;854:30::-;;;;:::o;558:17::-;;;;;;;;;;;;;:::o;4509:131:11:-;4583:7;4610:6;:12;4617:4;4610:12;;;;;;;;;;;:22;;;4603:29;;4509:131;;;:::o;4950:147::-;5033:18;5046:4;5033:12;:18::i;:::-;2578:16;2589:4;2578:10;:16::i;:::-;5064:25:::1;5075:4;5081:7;5064:10;:25::i;:::-;4950:147:::0;;;:::o;6094:218::-;6201:12;:10;:12::i;:::-;6190:23;;:7;:23;;;6182:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6278:26;6290:4;6296:7;6278:11;:26::i;:::-;6094:218;;:::o;5369:398:0:-;323:28;;;;;;;:::i;:::-;;;;;;;;;;;;;313:39;;;;;;2578:16:11;2589:4;2578:10;:16::i;:::-;5509:10:0::1;5505:60;;;5536:17;:15;:17::i;:::-;5505:60;5575:23;5616:10;;5601:12;:25;:53;;5644:10;;5601:53;;;5629:12;5601:53;5575:79;;5684:10;5665:15;;:29;;;;;;;:::i;:::-;;;;;;;;5705:54;5714:7;5723:10;5735:6;5743:15;5705:8;:54::i;:::-;5494:273;5369:398:::0;;;;;:::o;10280:737::-;10347:21;10371:8;10380:3;10371:13;;;;;;;;:::i;:::-;;;;;;;;;;;;10347:37;;10395:25;10423:8;:13;10432:3;10423:13;;;;;;;;;;;:27;10437:12;:10;:12::i;:::-;10423:27;;;;;;;;;;;;;;;10395:55;;10488:6;10469:8;:15;;;:25;;10461:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;10524:15;10535:3;10524:10;:15::i;:::-;10550;10620:8;:19;;;10612:4;10588;:20;;;10570:8;:15;;;:38;;;;:::i;:::-;10569:47;;;;:::i;:::-;10568:71;;;;:::i;:::-;10550:89;;10665:1;10655:7;:11;10652:75;;;10683:4;;;;;;;;;;;:9;;;10693:12;:10;:12::i;:::-;10707:7;10683:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10652:75;10749:1;10740:6;:10;10737:140;;;10786:6;10767:8;:15;;;:25;;;;;;;:::i;:::-;;;;;;;;10807:58;10830:4;:12;;;;;;;;;;;;10844;:10;:12::i;:::-;10858:6;10807:22;:58::i;:::-;10737:140;10952:4;10928;:20;;;10910:8;:15;;;:38;;;;:::i;:::-;10909:47;;;;:::i;:::-;10887:8;:19;;:69;;;;10997:3;10983:12;:10;:12::i;:::-;10974:35;;;11002:6;10974:35;;;;;;:::i;:::-;;;;;;;;10336:681;;;10280:737;;:::o;725:25::-;;;;:::o;8764:647::-;8815:21;8839:8;8848:3;8839:13;;;;;;;;:::i;:::-;;;;;;;;;;;;8815:37;;8885:4;:20;;;8869:12;:36;8865:75;;8922:7;;;8865:75;8950:16;8969:4;:12;;;;;;;;;;;;:22;;;9000:4;8969:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8950:56;;9035:1;9023:8;:13;9019:102;;9076:12;9053:4;:20;;:35;;;;9103:7;;;;9019:102;9131:22;9171:4;:20;;;9156:12;:35;;;;:::i;:::-;9131:60;;9202:18;9275:15;;9256:4;:15;;;9241:12;;9224:14;:29;;;;:::i;:::-;:47;;;;:::i;:::-;9223:67;;;;:::i;:::-;9202:88;;9348:8;9340:4;9327:10;:17;;;;:::i;:::-;9326:30;;;;:::i;:::-;9301:4;:20;;;:56;;;;;;;:::i;:::-;;;;;;;;9391:12;9368:4;:20;;:35;;;;8804:607;;;;8764:647;;:::o;11172:384::-;11230:21;11254:8;11263:3;11254:13;;;;;;;;:::i;:::-;;;;;;;;;;;;11230:37;;11278:25;11306:8;:13;11315:3;11306:13;;;;;;;;;;;:27;11320:12;:10;:12::i;:::-;11306:27;;;;;;;;;;;;;;;11278:55;;11344:67;11367:4;:12;;;;;;;;;;;;11381;:10;:12::i;:::-;11395:8;:15;;;11344:22;:67::i;:::-;11461:3;11447:12;:10;:12::i;:::-;11429:53;;;11466:8;:15;;;11429:53;;;;;;:::i;:::-;;;;;;;;11513:1;11495:8;:15;;:19;;;;11547:1;11525:8;:19;;:23;;;;11219:337;;11172:384;:::o;2589:1375::-;2728:12;2712:28;;:12;:10;:12::i;:::-;:28;;;2704:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2912:1;2895:19;;:5;:19;;;2887:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3047:39;323:28;;;;;;;:::i;:::-;;;;;;;;;;;;;313:39;;;;;;3073:12;:10;:12::i;:::-;3047:10;:39::i;:::-;3138:44;2132:4:11;3149:18:0;;3169:12;:10;:12::i;:::-;3138:10;:44::i;:::-;3208:5;3195:4;;:19;;;;;;;;;;;;;;;;;;3242:8;3227:12;:23;;;;3302:24;3329:2;3302:29;;3342:15;3423:16;3404:15;424:4;3362:21;:38;;;;:::i;:::-;3361:58;;;;:::i;:::-;3360:79;;;;:::i;:::-;3342:97;;3478:7;3463:12;:22;;;;:::i;:::-;3450:10;:35;;;;3514:4;3496:15;:22;;;;3627:1;3608:8;:15;;;;:20;3604:319;;3645:59;3661:9;3671:1;3661:12;;;;;;;:::i;:::-;;;;;;3676:3;3645:59;;;;;;;;;;;;;;;;;3693:10;;3645:8;:59::i;:::-;3738:60;3754:9;3764:1;3754:12;;;;;;;:::i;:::-;;;;;;3769:3;3738:60;;;;;;;;;;;;;;;;;3787:10;;3738:8;:60::i;:::-;3832;3848:9;3858:1;3848:12;;;;;;;:::i;:::-;;;;;;3863:3;3832:60;;;;;;;;;;;;;;;;;3881:10;;3832:8;:60::i;:::-;3604:319;3952:4;3935:14;;:21;;;;;;;;;;;;;;;;;;2693:1271;;2589:1375;;;:::o;7133:182::-;7178:14;7195:8;:15;;;;7178:32;;7228:11;7223:85;7251:6;7245:3;:12;7223:85;;;7281:15;7292:3;7281:10;:15::i;:::-;7259:5;;;;:::i;:::-;;;7223:85;;;;7167:148;7133:182::o;632:27::-;;;;:::o;7768:759::-;7836:7;7856:20;7879:8;7888:3;7879:13;;;;;;;;:::i;:::-;;;;;;;;;;;;7856:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7903:24;7930:8;:13;7939:3;7930:13;;;;;;;;;;;:19;7944:4;7930:19;;;;;;;;;;;;;;;7903:46;;;;;;;;;;;;;;;;;;;;;;;;;;;7960:23;7986:4;:20;;;7960:46;;8017:16;8036:4;:12;;;:22;;;8067:4;8036:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8017:56;;8105:4;:20;;;8090:12;:35;:52;;;;;8141:1;8129:8;:13;;8090:52;8086:314;;;8159:22;8199:4;:20;;;8184:12;:35;;;;:::i;:::-;8159:60;;8234:18;8307:15;;8288:4;:15;;;8273:12;;8256:14;:29;;;;:::i;:::-;:47;;;;:::i;:::-;8255:67;;;;:::i;:::-;8234:88;;8379:8;8371:4;8358:10;:17;;;;:::i;:::-;8357:30;;;;:::i;:::-;8337:51;;;;;:::i;:::-;;;8144:256;;8086:314;8410:15;8475:8;:19;;;8467:4;8448:15;8430:8;:15;;;:33;;;;:::i;:::-;8429:42;;;;:::i;:::-;8428:66;;;;:::i;:::-;8410:84;;8512:7;8505:14;;;;;;;7768:759;;;;:::o;2982:147:11:-;3068:4;3092:6;:12;3099:4;3092:12;;;;;;;;;;;:20;;:29;3113:7;3092:29;;;;;;;;;;;;;;;;;;;;;;;;;3085:36;;2982:147;;;;:::o;1487:66:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2087:49:11:-;2132:4;2087:49;;;:::o;6554:446:0:-;323:28;;;;;;;:::i;:::-;;;;;;;;;;;;;313:39;;;;;;2578:16:11;2589:4;2578:10;:16::i;:::-;6678:10:0::1;6674:60;;;6705:17;:15;:17::i;:::-;6674:60;6809:10;6781:8;6790:3;6781:13;;;;;;;;:::i;:::-;;;;;;;;;;;;:24;;;6763:15;;:42;;;;:::i;:::-;6762:57;;;;:::i;:::-;6744:15;:75;;;;6830:21;6854:8;6863:3;6854:13;;;;;;;;:::i;:::-;;;;;;;;;;;;:24;;;6830:48;;6916:10;6889:8;6898:3;6889:13;;;;;;;;:::i;:::-;;;;;;;;;;;;:24;;:37;;;;6961:3;6944:48;6966:10;6978:13;6944:48;;;;;;;:::i;:::-;;;;;;;;6663:337;6554:446:::0;;;;:::o;7406:262::-;7468:7;7488:20;7526:9;7521:110;7546:8;:15;;;;7542:1;:19;7521:110;;;7600:19;7611:1;7614:4;7600:10;:19::i;:::-;7584:35;;;;;:::i;:::-;;;7564:3;;;;;:::i;:::-;;;;7521:110;;;;7648:12;7641:19;;;7406:262;;;:::o;273:79::-;323:28;;;;;;;:::i;:::-;;;;;;;;;;;;;313:39;;;;;;273:79;:::o;5390:149:11:-;5474:18;5487:4;5474:12;:18::i;:::-;2578:16;2589:4;2578:10;:16::i;:::-;5505:26:::1;5517:4;5523:7;5505:11;:26::i;:::-;5390:149:::0;;;:::o;9419:757:0:-;9485:21;9509:8;9518:3;9509:13;;;;;;;;:::i;:::-;;;;;;;;;;;;9485:37;;9533:25;9561:8;:13;9570:3;9561:13;;;;;;;;;;;:27;9575:12;:10;:12::i;:::-;9561:27;;;;;;;;;;;;;;;9533:55;;9599:15;9610:3;9599:10;:15::i;:::-;9649:1;9631:8;:15;;;:19;9627:240;;;9667:15;9737:8;:19;;;9729:4;9705;:20;;;9687:8;:15;;;:38;;;;:::i;:::-;9686:47;;;;:::i;:::-;9685:71;;;;:::i;:::-;9667:89;;9786:1;9776:7;:11;9773:83;;;9808:4;;;;;;;;;;;:9;;;9818:12;:10;:12::i;:::-;9832:7;9808:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9773:83;9652:215;9627:240;9890:1;9881:6;:10;9877:160;;;9908:77;9935:4;:12;;;;;;;;;;;;9949;:10;:12::i;:::-;9971:4;9978:6;9908:26;:77::i;:::-;10019:6;10000:8;:15;;;:25;;;;;;;:::i;:::-;;;;;;;;9877:160;10112:4;10088;:20;;;10070:8;:15;;;:38;;;;:::i;:::-;10069:47;;;;:::i;:::-;10047:8;:19;;:69;;;;10156:3;10142:12;:10;:12::i;:::-;10134:34;;;10161:6;10134:34;;;;;;:::i;:::-;;;;;;;;9474:702;;9419:757;;:::o;866:157:13:-;951:4;990:25;975:40;;;:11;:40;;;;968:47;;866:157;;;:::o;3433:105:11:-;3500:30;3511:4;3517:12;:10;:12::i;:::-;3500:10;:30::i;:::-;3433:105;:::o;7691:238::-;7775:22;7783:4;7789:7;7775;:22::i;:::-;7770:152;;7846:4;7814:6;:12;7821:4;7814:12;;;;;;;;;;;:20;;:29;7835:7;7814:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7897:12;:10;:12::i;:::-;7870:40;;7888:7;7870:40;;7882:4;7870:40;;;;;;;;;;7770:152;7691:238;;:::o;656:98:12:-;709:7;736:10;729:17;;656:98;:::o;8109:239:11:-;8193:22;8201:4;8207:7;8193;:22::i;:::-;8189:152;;;8264:5;8232:6;:12;8239:4;8232:12;;;;;;;;;;;:20;;:29;8253:7;8232:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8316:12;:10;:12::i;:::-;8289:40;;8307:7;8289:40;;8301:4;8289:40;;;;;;;;;;8189:152;8109:239;;:::o;5775:430:0:-;5896:20;;:::i;:::-;5949:7;5927:4;:12;;:30;;;;;;;;;;;5986:10;5968:4;:15;;:28;;;;;6030:15;6007:4;:20;;:38;;;;;6094:8;6108:4;6094:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6157:1;6139:8;:15;;;;:19;;;;:::i;:::-;6131:66;6168:7;6178:6;6186:10;6131:66;;;;;;;;:::i;:::-;;;;;;;;5885:320;5775:430;;;;:::o;776:177:8:-;859:86;879:5;909:23;;;934:2;938:5;886:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:19;:86::i;:::-;776:177;;;:::o;961:205::-;1062:96;1082:5;1112:27;;;1141:4;1147:2;1151:5;1089:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1062:19;:96::i;:::-;961:205;;;;:::o;3828:492:11:-;3917:22;3925:4;3931:7;3917;:22::i;:::-;3912:401;;4105:28;4125:7;4105:19;:28::i;:::-;4206:38;4234:4;4226:13;;4241:2;4206:19;:38::i;:::-;4010:257;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3956:345;;;;;;;;;;;:::i;:::-;;;;;;;;3912:401;3828:492;;:::o;3664:716:8:-;4088:23;4114:69;4142:4;4114:69;;;;;;;;;;;;;;;;;4122:5;4114:27;;;;:69;;;;;:::i;:::-;4088:95;;4218:1;4198:10;:17;:21;4194:179;;;4295:10;4284:30;;;;;;;;;;;;:::i;:::-;4276:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4194:179;3734:646;3664:716;;:::o;2471:151:10:-;2529:13;2562:52;2590:4;2574:22;;346:2;2562:52;;:11;:52::i;:::-;2555:59;;2471:151;;;:::o;1867:447::-;1942:13;1968:19;2013:1;2004:6;2000:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1990:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1968:47;;2026:15;:6;2033:1;2026:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2052;:6;2059:1;2052:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2083:9;2108:1;2099:6;2095:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2083:26;;2078:131;2115:1;2111;:5;2078:131;;;2150:8;2167:3;2159:5;:11;2150:21;;;;;;;:::i;:::-;;;;;2138:6;2145:1;2138:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2196:1;2186:11;;;;;2118:3;;;;:::i;:::-;;;2078:131;;;;2236:1;2227:5;:10;2219:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2299:6;2285:21;;;1867:447;;;;:::o;4207:229:6:-;4344:12;4376:52;4398:6;4406:4;4412:1;4415:12;4376:21;:52::i;:::-;4369:59;;4207:229;;;;;:::o;5293:455::-;5463:12;5521:5;5496:21;:30;;5488:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5581:12;5595:23;5622:6;:11;;5641:5;5648:4;5622:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5580:73;;;;5671:69;5698:6;5706:7;5715:10;5727:12;5671:26;:69::i;:::-;5664:76;;;;5293:455;;;;;;:::o;7866:644::-;8051:12;8080:7;8076:427;;;8129:1;8108:10;:17;:22;8104:290;;8326:18;8337:6;8326:10;:18::i;:::-;8318:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;8104:290;8415:10;8408:17;;;;8076:427;8458:33;8466:10;8478:12;8458:7;:33::i;:::-;7866:644;;;;;;;:::o;1451:326::-;1511:4;1768:1;1746:7;:19;;;:23;1739:30;;1451:326;;;:::o;9052:552::-;9233:1;9213:10;:17;:21;9209:388;;;9445:10;9439:17;9502:15;9489:10;9485:2;9481:19;9474:44;9209:388;9572:12;9565:20;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:118::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1601:118;;:::o;1725:222::-;1818:4;1856:2;1845:9;1841:18;1833:26;;1869:71;1937:1;1926:9;1922:17;1913:6;1869:71;:::i;:::-;1725:222;;;;:::o;1953:122::-;2026:24;2044:5;2026:24;:::i;:::-;2019:5;2016:35;2006:63;;2065:1;2062;2055:12;2006:63;1953:122;:::o;2081:139::-;2127:5;2165:6;2152:20;2143:29;;2181:33;2208:5;2181:33;:::i;:::-;2081:139;;;;:::o;2226:329::-;2285:6;2334:2;2322:9;2313:7;2309:23;2305:32;2302:119;;;2340:79;;:::i;:::-;2302:119;2460:1;2485:53;2530:7;2521:6;2510:9;2506:22;2485:53;:::i;:::-;2475:63;;2431:117;2226:329;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:60::-;2721:3;2742:5;2735:12;;2693:60;;;:::o;2759:142::-;2809:9;2842:53;2860:34;2869:24;2887:5;2869:24;:::i;:::-;2860:34;:::i;:::-;2842:53;:::i;:::-;2829:66;;2759:142;;;:::o;2907:126::-;2957:9;2990:37;3021:5;2990:37;:::i;:::-;2977:50;;2907:126;;;:::o;3039:141::-;3104:9;3137:37;3168:5;3137:37;:::i;:::-;3124:50;;3039:141;;;:::o;3186:161::-;3288:52;3334:5;3288:52;:::i;:::-;3283:3;3276:65;3186:161;;:::o;3353:583::-;3545:4;3583:3;3572:9;3568:19;3560:27;;3597:86;3680:1;3669:9;3665:17;3656:6;3597:86;:::i;:::-;3693:72;3761:2;3750:9;3746:18;3737:6;3693:72;:::i;:::-;3775;3843:2;3832:9;3828:18;3819:6;3775:72;:::i;:::-;3857;3925:2;3914:9;3910:18;3901:6;3857:72;:::i;:::-;3353:583;;;;;;;:::o;3942:140::-;4006:9;4039:37;4070:5;4039:37;:::i;:::-;4026:50;;3942:140;;;:::o;4088:159::-;4189:51;4234:5;4189:51;:::i;:::-;4184:3;4177:64;4088:159;;:::o;4253:250::-;4360:4;4398:2;4387:9;4383:18;4375:26;;4411:85;4493:1;4482:9;4478:17;4469:6;4411:85;:::i;:::-;4253:250;;;;:::o;4509:77::-;4546:7;4575:5;4564:16;;4509:77;;;:::o;4592:122::-;4665:24;4683:5;4665:24;:::i;:::-;4658:5;4655:35;4645:63;;4704:1;4701;4694:12;4645:63;4592:122;:::o;4720:139::-;4766:5;4804:6;4791:20;4782:29;;4820:33;4847:5;4820:33;:::i;:::-;4720:139;;;;:::o;4865:329::-;4924:6;4973:2;4961:9;4952:7;4948:23;4944:32;4941:119;;;4979:79;;:::i;:::-;4941:119;5099:1;5124:53;5169:7;5160:6;5149:9;5145:22;5124:53;:::i;:::-;5114:63;;5070:117;4865:329;;;;:::o;5200:118::-;5287:24;5305:5;5287:24;:::i;:::-;5282:3;5275:37;5200:118;;:::o;5324:222::-;5417:4;5455:2;5444:9;5440:18;5432:26;;5468:71;5536:1;5525:9;5521:17;5512:6;5468:71;:::i;:::-;5324:222;;;;:::o;5552:96::-;5589:7;5618:24;5636:5;5618:24;:::i;:::-;5607:35;;5552:96;;;:::o;5654:122::-;5727:24;5745:5;5727:24;:::i;:::-;5720:5;5717:35;5707:63;;5766:1;5763;5756:12;5707:63;5654:122;:::o;5782:139::-;5828:5;5866:6;5853:20;5844:29;;5882:33;5909:5;5882:33;:::i;:::-;5782:139;;;;:::o;5927:474::-;5995:6;6003;6052:2;6040:9;6031:7;6027:23;6023:32;6020:119;;;6058:79;;:::i;:::-;6020:119;6178:1;6203:53;6248:7;6239:6;6228:9;6224:22;6203:53;:::i;:::-;6193:63;;6149:117;6305:2;6331:53;6376:7;6367:6;6356:9;6352:22;6331:53;:::i;:::-;6321:63;;6276:118;5927:474;;;;;:::o;6407:111::-;6459:7;6488:24;6506:5;6488:24;:::i;:::-;6477:35;;6407:111;;;:::o;6524:152::-;6612:39;6645:5;6612:39;:::i;:::-;6605:5;6602:50;6592:78;;6666:1;6663;6656:12;6592:78;6524:152;:::o;6682:169::-;6743:5;6781:6;6768:20;6759:29;;6797:48;6839:5;6797:48;:::i;:::-;6682:169;;;;:::o;6857:117::-;6966:1;6963;6956:12;6980:117;7089:1;7086;7079:12;7103:102;7144:6;7195:2;7191:7;7186:2;7179:5;7175:14;7171:28;7161:38;;7103:102;;;:::o;7211:180::-;7259:77;7256:1;7249:88;7356:4;7353:1;7346:15;7380:4;7377:1;7370:15;7397:281;7480:27;7502:4;7480:27;:::i;:::-;7472:6;7468:40;7610:6;7598:10;7595:22;7574:18;7562:10;7559:34;7556:62;7553:88;;;7621:18;;:::i;:::-;7553:88;7661:10;7657:2;7650:22;7440:238;7397:281;;:::o;7684:129::-;7718:6;7745:20;;:::i;:::-;7735:30;;7774:33;7802:4;7794:6;7774:33;:::i;:::-;7684:129;;;:::o;7819:308::-;7881:4;7971:18;7963:6;7960:30;7957:56;;;7993:18;;:::i;:::-;7957:56;8031:29;8053:6;8031:29;:::i;:::-;8023:37;;8115:4;8109;8105:15;8097:23;;7819:308;;;:::o;8133:146::-;8230:6;8225:3;8220;8207:30;8271:1;8262:6;8257:3;8253:16;8246:27;8133:146;;;:::o;8285:425::-;8363:5;8388:66;8404:49;8446:6;8404:49;:::i;:::-;8388:66;:::i;:::-;8379:75;;8477:6;8470:5;8463:21;8515:4;8508:5;8504:16;8553:3;8544:6;8539:3;8535:16;8532:25;8529:112;;;8560:79;;:::i;:::-;8529:112;8650:54;8697:6;8692:3;8687;8650:54;:::i;:::-;8369:341;8285:425;;;;;:::o;8730:340::-;8786:5;8835:3;8828:4;8820:6;8816:17;8812:27;8802:122;;8843:79;;:::i;:::-;8802:122;8960:6;8947:20;8985:79;9060:3;9052:6;9045:4;9037:6;9033:17;8985:79;:::i;:::-;8976:88;;8792:278;8730:340;;;;:::o;9076:116::-;9146:21;9161:5;9146:21;:::i;:::-;9139:5;9136:32;9126:60;;9182:1;9179;9172:12;9126:60;9076:116;:::o;9198:133::-;9241:5;9279:6;9266:20;9257:29;;9295:30;9319:5;9295:30;:::i;:::-;9198:133;;;;:::o;9337:969::-;9445:6;9453;9461;9469;9518:3;9506:9;9497:7;9493:23;9489:33;9486:120;;;9525:79;;:::i;:::-;9486:120;9645:1;9670:68;9730:7;9721:6;9710:9;9706:22;9670:68;:::i;:::-;9660:78;;9616:132;9787:2;9813:53;9858:7;9849:6;9838:9;9834:22;9813:53;:::i;:::-;9803:63;;9758:118;9943:2;9932:9;9928:18;9915:32;9974:18;9966:6;9963:30;9960:117;;;9996:79;;:::i;:::-;9960:117;10101:63;10156:7;10147:6;10136:9;10132:22;10101:63;:::i;:::-;10091:73;;9886:288;10213:2;10239:50;10281:7;10272:6;10261:9;10257:22;10239:50;:::i;:::-;10229:60;;10184:115;9337:969;;;;;;;:::o;10312:474::-;10380:6;10388;10437:2;10425:9;10416:7;10412:23;10408:32;10405:119;;;10443:79;;:::i;:::-;10405:119;10563:1;10588:53;10633:7;10624:6;10613:9;10609:22;10588:53;:::i;:::-;10578:63;;10534:117;10690:2;10716:53;10761:7;10752:6;10741:9;10737:22;10716:53;:::i;:::-;10706:63;;10661:118;10312:474;;;;;:::o;10792:249::-;10867:4;10957:18;10949:6;10946:30;10943:56;;;10979:18;;:::i;:::-;10943:56;11029:4;11021:6;11017:17;11009:25;;10792:249;;;:::o;11047:117::-;11156:1;11153;11146:12;11188:643;11282:5;11307:79;11323:62;11378:6;11323:62;:::i;:::-;11307:79;:::i;:::-;11298:88;;11406:5;11459:4;11451:6;11447:17;11439:6;11435:30;11488:3;11480:6;11477:15;11474:122;;;11507:79;;:::i;:::-;11474:122;11622:6;11605:220;11639:6;11634:3;11631:15;11605:220;;;11714:3;11743:37;11776:3;11764:10;11743:37;:::i;:::-;11738:3;11731:50;11810:4;11805:3;11801:14;11794:21;;11681:144;11665:4;11660:3;11656:14;11649:21;;11605:220;;;11609:21;11288:543;;11188:643;;;;;:::o;11855:339::-;11924:5;11973:3;11966:4;11958:6;11954:17;11950:27;11940:122;;11981:79;;:::i;:::-;11940:122;12085:4;12107:81;12184:3;12176:6;12168;12107:81;:::i;:::-;12098:90;;11930:264;11855:339;;;;:::o;12200:667::-;12300:6;12308;12316;12365:3;12353:9;12344:7;12340:23;12336:33;12333:120;;;12372:79;;:::i;:::-;12333:120;12492:1;12517:53;12562:7;12553:6;12542:9;12538:22;12517:53;:::i;:::-;12507:63;;12463:117;12619:2;12645:76;12713:7;12704:6;12693:9;12689:22;12645:76;:::i;:::-;12635:86;;12590:141;12770:3;12797:53;12842:7;12833:6;12822:9;12818:22;12797:53;:::i;:::-;12787:63;;12741:119;12200:667;;;;;:::o;12873:474::-;12941:6;12949;12998:2;12986:9;12977:7;12973:23;12969:32;12966:119;;;13004:79;;:::i;:::-;12966:119;13124:1;13149:53;13194:7;13185:6;13174:9;13170:22;13149:53;:::i;:::-;13139:63;;13095:117;13251:2;13277:53;13322:7;13313:6;13302:9;13298:22;13277:53;:::i;:::-;13267:63;;13222:118;12873:474;;;;;:::o;13353:332::-;13474:4;13512:2;13501:9;13497:18;13489:26;;13525:71;13593:1;13582:9;13578:17;13569:6;13525:71;:::i;:::-;13606:72;13674:2;13663:9;13659:18;13650:6;13606:72;:::i;:::-;13353:332;;;;;:::o;13691:613::-;13765:6;13773;13781;13830:2;13818:9;13809:7;13805:23;13801:32;13798:119;;;13836:79;;:::i;:::-;13798:119;13956:1;13981:53;14026:7;14017:6;14006:9;14002:22;13981:53;:::i;:::-;13971:63;;13927:117;14083:2;14109:53;14154:7;14145:6;14134:9;14130:22;14109:53;:::i;:::-;14099:63;;14054:118;14211:2;14237:50;14279:7;14270:6;14259:9;14255:22;14237:50;:::i;:::-;14227:60;;14182:115;13691:613;;;;;:::o;14310:329::-;14369:6;14418:2;14406:9;14397:7;14393:23;14389:32;14386:119;;;14424:79;;:::i;:::-;14386:119;14544:1;14569:53;14614:7;14605:6;14594:9;14590:22;14569:53;:::i;:::-;14559:63;;14515:117;14310:329;;;;:::o;14645:169::-;14729:11;14763:6;14758:3;14751:19;14803:4;14798:3;14794:14;14779:29;;14645:169;;;;:::o;14820:234::-;14960:34;14956:1;14948:6;14944:14;14937:58;15029:17;15024:2;15016:6;15012:15;15005:42;14820:234;:::o;15060:366::-;15202:3;15223:67;15287:2;15282:3;15223:67;:::i;:::-;15216:74;;15299:93;15388:3;15299:93;:::i;:::-;15417:2;15412:3;15408:12;15401:19;;15060:366;;;:::o;15432:419::-;15598:4;15636:2;15625:9;15621:18;15613:26;;15685:9;15679:4;15675:20;15671:1;15660:9;15656:17;15649:47;15713:131;15839:4;15713:131;:::i;:::-;15705:139;;15432:419;;;:::o;15857:148::-;15959:11;15996:3;15981:18;;15857:148;;;;:::o;16011:158::-;16151:10;16147:1;16139:6;16135:14;16128:34;16011:158;:::o;16175:400::-;16335:3;16356:84;16438:1;16433:3;16356:84;:::i;:::-;16349:91;;16449:93;16538:3;16449:93;:::i;:::-;16567:1;16562:3;16558:11;16551:18;;16175:400;;;:::o;16581:381::-;16766:3;16788:148;16932:3;16788:148;:::i;:::-;16781:155;;16953:3;16946:10;;16581:381;;;:::o;16968:180::-;17016:77;17013:1;17006:88;17113:4;17110:1;17103:15;17137:4;17134:1;17127:15;17154:191;17194:3;17213:20;17231:1;17213:20;:::i;:::-;17208:25;;17247:20;17265:1;17247:20;:::i;:::-;17242:25;;17290:1;17287;17283:9;17276:16;;17311:3;17308:1;17305:10;17302:36;;;17318:18;;:::i;:::-;17302:36;17154:191;;;;:::o;17351:180::-;17399:77;17396:1;17389:88;17496:4;17493:1;17486:15;17520:4;17517:1;17510:15;17537:164;17677:16;17673:1;17665:6;17661:14;17654:40;17537:164;:::o;17707:366::-;17849:3;17870:67;17934:2;17929:3;17870:67;:::i;:::-;17863:74;;17946:93;18035:3;17946:93;:::i;:::-;18064:2;18059:3;18055:12;18048:19;;17707:366;;;:::o;18079:419::-;18245:4;18283:2;18272:9;18268:18;18260:26;;18332:9;18326:4;18322:20;18318:1;18307:9;18303:17;18296:47;18360:131;18486:4;18360:131;:::i;:::-;18352:139;;18079:419;;;:::o;18504:410::-;18544:7;18567:20;18585:1;18567:20;:::i;:::-;18562:25;;18601:20;18619:1;18601:20;:::i;:::-;18596:25;;18656:1;18653;18649:9;18678:30;18696:11;18678:30;:::i;:::-;18667:41;;18857:1;18848:7;18844:15;18841:1;18838:22;18818:1;18811:9;18791:83;18768:139;;18887:18;;:::i;:::-;18768:139;18552:362;18504:410;;;;:::o;18920:180::-;18968:77;18965:1;18958:88;19065:4;19062:1;19055:15;19089:4;19086:1;19079:15;19106:185;19146:1;19163:20;19181:1;19163:20;:::i;:::-;19158:25;;19197:20;19215:1;19197:20;:::i;:::-;19192:25;;19236:1;19226:35;;19241:18;;:::i;:::-;19226:35;19283:1;19280;19276:9;19271:14;;19106:185;;;;:::o;19297:194::-;19337:4;19357:20;19375:1;19357:20;:::i;:::-;19352:25;;19391:20;19409:1;19391:20;:::i;:::-;19386:25;;19435:1;19432;19428:9;19420:17;;19459:1;19453:4;19450:11;19447:37;;;19464:18;;:::i;:::-;19447:37;19297:194;;;;:::o;19497:118::-;19584:24;19602:5;19584:24;:::i;:::-;19579:3;19572:37;19497:118;;:::o;19621:332::-;19742:4;19780:2;19769:9;19765:18;19757:26;;19793:71;19861:1;19850:9;19846:17;19837:6;19793:71;:::i;:::-;19874:72;19942:2;19931:9;19927:18;19918:6;19874:72;:::i;:::-;19621:332;;;;;:::o;19959:137::-;20013:5;20044:6;20038:13;20029:22;;20060:30;20084:5;20060:30;:::i;:::-;19959:137;;;;:::o;20102:345::-;20169:6;20218:2;20206:9;20197:7;20193:23;20189:32;20186:119;;;20224:79;;:::i;:::-;20186:119;20344:1;20369:61;20422:7;20413:6;20402:9;20398:22;20369:61;:::i;:::-;20359:71;;20315:125;20102:345;;;;:::o;20453:222::-;20546:4;20584:2;20573:9;20569:18;20561:26;;20597:71;20665:1;20654:9;20650:17;20641:6;20597:71;:::i;:::-;20453:222;;;;:::o;20681:143::-;20738:5;20769:6;20763:13;20754:22;;20785:33;20812:5;20785:33;:::i;:::-;20681:143;;;;:::o;20830:351::-;20900:6;20949:2;20937:9;20928:7;20924:23;20920:32;20917:119;;;20955:79;;:::i;:::-;20917:119;21075:1;21100:64;21156:7;21147:6;21136:9;21132:22;21100:64;:::i;:::-;21090:74;;21046:128;20830:351;;;;:::o;21187:222::-;21327:34;21323:1;21315:6;21311:14;21304:58;21396:5;21391:2;21383:6;21379:15;21372:30;21187:222;:::o;21415:366::-;21557:3;21578:67;21642:2;21637:3;21578:67;:::i;:::-;21571:74;;21654:93;21743:3;21654:93;:::i;:::-;21772:2;21767:3;21763:12;21756:19;;21415:366;;;:::o;21787:419::-;21953:4;21991:2;21980:9;21976:18;21968:26;;22040:9;22034:4;22030:20;22026:1;22015:9;22011:17;22004:47;22068:131;22194:4;22068:131;:::i;:::-;22060:139;;21787:419;;;:::o;22212:176::-;22352:28;22348:1;22340:6;22336:14;22329:52;22212:176;:::o;22394:366::-;22536:3;22557:67;22621:2;22616:3;22557:67;:::i;:::-;22550:74;;22633:93;22722:3;22633:93;:::i;:::-;22751:2;22746:3;22742:12;22735:19;;22394:366;;;:::o;22766:419::-;22932:4;22970:2;22959:9;22955:18;22947:26;;23019:9;23013:4;23009:20;23005:1;22994:9;22990:17;22983:47;23047:131;23173:4;23047:131;:::i;:::-;23039:139;;22766:419;;;:::o;23191:233::-;23230:3;23253:24;23271:5;23253:24;:::i;:::-;23244:33;;23299:66;23292:5;23289:77;23286:103;;23369:18;;:::i;:::-;23286:103;23416:1;23409:5;23405:13;23398:20;;23191:233;;;:::o;23430:99::-;23482:6;23516:5;23510:12;23500:22;;23430:99;;;:::o;23535:246::-;23616:1;23626:113;23640:6;23637:1;23634:13;23626:113;;;23725:1;23720:3;23716:11;23710:18;23706:1;23701:3;23697:11;23690:39;23662:2;23659:1;23655:10;23650:15;;23626:113;;;23773:1;23764:6;23759:3;23755:16;23748:27;23597:184;23535:246;;;:::o;23787:377::-;23875:3;23903:39;23936:5;23903:39;:::i;:::-;23958:71;24022:6;24017:3;23958:71;:::i;:::-;23951:78;;24038:65;24096:6;24091:3;24084:4;24077:5;24073:16;24038:65;:::i;:::-;24128:29;24150:6;24128:29;:::i;:::-;24123:3;24119:39;24112:46;;23879:285;23787:377;;;;:::o;24170:533::-;24339:4;24377:2;24366:9;24362:18;24354:26;;24390:71;24458:1;24447:9;24443:17;24434:6;24390:71;:::i;:::-;24508:9;24502:4;24498:20;24493:2;24482:9;24478:18;24471:48;24536:78;24609:4;24600:6;24536:78;:::i;:::-;24528:86;;24624:72;24692:2;24681:9;24677:18;24668:6;24624:72;:::i;:::-;24170:533;;;;;;:::o;24709:442::-;24858:4;24896:2;24885:9;24881:18;24873:26;;24909:71;24977:1;24966:9;24962:17;24953:6;24909:71;:::i;:::-;24990:72;25058:2;25047:9;25043:18;25034:6;24990:72;:::i;:::-;25072;25140:2;25129:9;25125:18;25116:6;25072:72;:::i;:::-;24709:442;;;;;;:::o;25157:173::-;25297:25;25293:1;25285:6;25281:14;25274:49;25157:173;:::o;25336:402::-;25496:3;25517:85;25599:2;25594:3;25517:85;:::i;:::-;25510:92;;25611:93;25700:3;25611:93;:::i;:::-;25729:2;25724:3;25720:12;25713:19;;25336:402;;;:::o;25744:390::-;25850:3;25878:39;25911:5;25878:39;:::i;:::-;25933:89;26015:6;26010:3;25933:89;:::i;:::-;25926:96;;26031:65;26089:6;26084:3;26077:4;26070:5;26066:16;26031:65;:::i;:::-;26121:6;26116:3;26112:16;26105:23;;25854:280;25744:390;;;;:::o;26140:167::-;26280:19;26276:1;26268:6;26264:14;26257:43;26140:167;:::o;26313:402::-;26473:3;26494:85;26576:2;26571:3;26494:85;:::i;:::-;26487:92;;26588:93;26677:3;26588:93;:::i;:::-;26706:2;26701:3;26697:12;26690:19;;26313:402;;;:::o;26721:967::-;27103:3;27125:148;27269:3;27125:148;:::i;:::-;27118:155;;27290:95;27381:3;27372:6;27290:95;:::i;:::-;27283:102;;27402:148;27546:3;27402:148;:::i;:::-;27395:155;;27567:95;27658:3;27649:6;27567:95;:::i;:::-;27560:102;;27679:3;27672:10;;26721:967;;;;;:::o;27694:313::-;27807:4;27845:2;27834:9;27830:18;27822:26;;27894:9;27888:4;27884:20;27880:1;27869:9;27865:17;27858:47;27922:78;27995:4;27986:6;27922:78;:::i;:::-;27914:86;;27694:313;;;;:::o;28013:229::-;28153:34;28149:1;28141:6;28137:14;28130:58;28222:12;28217:2;28209:6;28205:15;28198:37;28013:229;:::o;28248:366::-;28390:3;28411:67;28475:2;28470:3;28411:67;:::i;:::-;28404:74;;28487:93;28576:3;28487:93;:::i;:::-;28605:2;28600:3;28596:12;28589:19;;28248:366;;;:::o;28620:419::-;28786:4;28824:2;28813:9;28809:18;28801:26;;28873:9;28867:4;28863:20;28859:1;28848:9;28844:17;28837:47;28901:131;29027:4;28901:131;:::i;:::-;28893:139;;28620:419;;;:::o;29045:171::-;29084:3;29107:24;29125:5;29107:24;:::i;:::-;29098:33;;29153:4;29146:5;29143:15;29140:41;;29161:18;;:::i;:::-;29140:41;29208:1;29201:5;29197:13;29190:20;;29045:171;;;:::o;29222:182::-;29362:34;29358:1;29350:6;29346:14;29339:58;29222:182;:::o;29410:366::-;29552:3;29573:67;29637:2;29632:3;29573:67;:::i;:::-;29566:74;;29649:93;29738:3;29649:93;:::i;:::-;29767:2;29762:3;29758:12;29751:19;;29410:366;;;:::o;29782:419::-;29948:4;29986:2;29975:9;29971:18;29963:26;;30035:9;30029:4;30025:20;30021:1;30010:9;30006:17;29999:47;30063:131;30189:4;30063:131;:::i;:::-;30055:139;;29782:419;;;:::o;30207:225::-;30347:34;30343:1;30335:6;30331:14;30324:58;30416:8;30411:2;30403:6;30399:15;30392:33;30207:225;:::o;30438:366::-;30580:3;30601:67;30665:2;30660:3;30601:67;:::i;:::-;30594:74;;30677:93;30766:3;30677:93;:::i;:::-;30795:2;30790:3;30786:12;30779:19;;30438:366;;;:::o;30810:419::-;30976:4;31014:2;31003:9;30999:18;30991:26;;31063:9;31057:4;31053:20;31049:1;31038:9;31034:17;31027:47;31091:131;31217:4;31091:131;:::i;:::-;31083:139;;30810:419;;;:::o;31235:98::-;31286:6;31320:5;31314:12;31304:22;;31235:98;;;:::o;31339:147::-;31440:11;31477:3;31462:18;;31339:147;;;;:::o;31492:386::-;31596:3;31624:38;31656:5;31624:38;:::i;:::-;31678:88;31759:6;31754:3;31678:88;:::i;:::-;31671:95;;31775:65;31833:6;31828:3;31821:4;31814:5;31810:16;31775:65;:::i;:::-;31865:6;31860:3;31856:16;31849:23;;31600:278;31492:386;;;;:::o;31884:271::-;32014:3;32036:93;32125:3;32116:6;32036:93;:::i;:::-;32029:100;;32146:3;32139:10;;31884:271;;;;:::o;32161:179::-;32301:31;32297:1;32289:6;32285:14;32278:55;32161:179;:::o;32346:366::-;32488:3;32509:67;32573:2;32568:3;32509:67;:::i;:::-;32502:74;;32585:93;32674:3;32585:93;:::i;:::-;32703:2;32698:3;32694:12;32687:19;;32346:366;;;:::o;32718:419::-;32884:4;32922:2;32911:9;32907:18;32899:26;;32971:9;32965:4;32961:20;32957:1;32946:9;32942:17;32935:47;32999:131;33125:4;32999:131;:::i;:::-;32991:139;;32718:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2598400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "402",
								"GOVERNOR_ROLE()": "700",
								"HYGT()": "infinite",
								"HYGTPerBlock()": "2518",
								"addPool(address,uint256,string,bool)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"getPending(uint256,address)": "infinite",
								"getPendingBatch(address)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3273",
								"initialize(address,address[3],uint256)": "infinite",
								"massUpdatePools()": "infinite",
								"poolInfo(uint256)": "infinite",
								"poolLength()": "2491",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"startBlock()": "2540",
								"supportsInterface(bytes4)": "751",
								"totalAllocPoint()": "2519",
								"updateAllocation(uint256,uint256,bool)": "infinite",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"_addPool(contract IERC20,uint256,string memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 182,
									"end": 11559,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 182,
									"end": 11559,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 182,
									"end": 11559,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2090,
									"end": 2150,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2090,
									"end": 2150,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2090,
									"end": 2150,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2090,
									"end": 2150,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2090,
									"end": 2150,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2090,
									"end": 2150,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2150,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2090,
									"end": 2150,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2090,
									"end": 2150,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2090,
									"end": 2150,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2090,
									"end": 2150,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2130,
									"end": 2142,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2130,
									"end": 2140,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2130,
									"end": 2140,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2130,
									"end": 2140,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2130,
									"end": 2142,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2130,
									"end": 2142,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2130,
									"end": 2142,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2130,
									"end": 2142,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2130,
									"end": 2142,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2142,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2115,
									"end": 2142,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2142,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2115,
									"end": 2142,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2142,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2115,
									"end": 2142,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2142,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2142,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2142,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2142,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 182,
									"end": 11559,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 182,
									"end": 11559,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 754,
									"name": "tag",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 656,
									"end": 754,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 729,
									"end": 746,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 729,
									"end": 746,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 656,
									"end": 754,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 656,
									"end": 754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 182,
									"end": 11559,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 182,
									"end": 11559,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 182,
									"end": 11559,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 182,
									"end": 11559,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 182,
									"end": 11559,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 182,
									"end": 11559,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 182,
									"end": 11559,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 182,
									"end": 11559,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 182,
									"end": 11559,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 182,
									"end": 11559,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 182,
									"end": 11559,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 182,
									"end": 11559,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 182,
									"end": 11559,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220833301db9137e85833c7978c11043a13d82605aa6b342c33cdcd4c1f9c72552464736f6c63430008130033",
									".code": [
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "5312EA8E"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "93F1A40B"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "B3ECB623"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "B3ECB623"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "CCC57490"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "E2BBB158"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "93F1A40B"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "AD35E1CC"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "5312EA8E"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "5E3E1581"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "630B5BA1"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "79838EF0"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "7F37DF3B"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "3A0618FD"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "441A3E70"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "48CD4CB1"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "51EB05A6"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "81E3EDA"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "1526FE27"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "17CAF6F1"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "23C64CE1"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 11559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 2686,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 2686,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 2686,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4706,
											"end": 4801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4706,
											"end": 4801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1398,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1398,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1398,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 854,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 854,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 854,
											"end": 884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 854,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 854,
											"end": 884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 854,
											"end": 884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 854,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 854,
											"end": 884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 558,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 558,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 4509,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 4509,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4509,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 4950,
											"end": 5097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4950,
											"end": 5097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 6094,
											"end": 6312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 6094,
											"end": 6312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5369,
											"end": 5767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5369,
											"end": 5767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10280,
											"end": 11017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 10280,
											"end": 11017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 725,
											"end": 750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 725,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 725,
											"end": 750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 725,
											"end": 750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 725,
											"end": 750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 725,
											"end": 750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 725,
											"end": 750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8764,
											"end": 9411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8764,
											"end": 9411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 11172,
											"end": 11556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11172,
											"end": 11556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2589,
											"end": 3964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2589,
											"end": 3964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7133,
											"end": 7315,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7133,
											"end": 7315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7133,
											"end": 7315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 7133,
											"end": 7315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 7133,
											"end": 7315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7133,
											"end": 7315,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 7133,
											"end": 7315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7133,
											"end": 7315,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 632,
											"end": 659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 632,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 632,
											"end": 659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 632,
											"end": 659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 632,
											"end": 659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 632,
											"end": 659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 632,
											"end": 659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 7768,
											"end": 8527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 7768,
											"end": 8527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7768,
											"end": 8527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2982,
											"end": 3129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 2982,
											"end": 3129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 2982,
											"end": 3129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1487,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1487,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1487,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 2087,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2087,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6554,
											"end": 7000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6554,
											"end": 7000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7406,
											"end": 7668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 7406,
											"end": 7668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7406,
											"end": 7668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 273,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 273,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 273,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 273,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 273,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 273,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 273,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 273,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 273,
											"end": 352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 273,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 273,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 273,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 273,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 273,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 273,
											"end": 352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 273,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 352,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 5390,
											"end": 5539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 5390,
											"end": 5539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9419,
											"end": 10176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 9419,
											"end": 10176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2771,
											"end": 2775,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2842,
											"name": "PUSH",
											"source": 11,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2806,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2846,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2870,
											"end": 2881,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2846,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 2846,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2846,
											"end": 2882,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2846,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2788,
											"end": 2882,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2788,
											"end": 2882,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2686,
											"end": 2890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4751,
											"end": 4758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4778,
											"end": 4786,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4778,
											"end": 4793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4778,
											"end": 4793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4778,
											"end": 4793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4778,
											"end": 4793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1398,
											"end": 1424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 854,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 854,
											"end": 884,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 854,
											"end": 884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 558,
											"end": 575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4590,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4616,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4610,
											"end": 4632,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4610,
											"end": 4632,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4610,
											"end": 4632,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4603,
											"end": 4632,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4603,
											"end": 4632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4509,
											"end": 4640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 5046,
											"end": 5050,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 5033,
											"end": 5051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5051,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 5033,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2589,
											"end": 2593,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2578,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5064,
											"end": 5089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 5075,
											"end": 5079,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5081,
											"end": 5088,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5064,
											"end": 5074,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 5064,
											"end": 5089,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5064,
											"end": 5089,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 5064,
											"end": 5089,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 5097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6201,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 6201,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 6201,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6201,
											"end": 6213,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 6201,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6190,
											"end": 6213,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6190,
											"end": 6213,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6190,
											"end": 6197,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6190,
											"end": 6213,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6190,
											"end": 6213,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6190,
											"end": 6213,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 6182,
											"end": 6265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6278,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 6290,
											"end": 6294,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6296,
											"end": 6303,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6278,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 6278,
											"end": 6304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6278,
											"end": 6304,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 6278,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6094,
											"end": 6312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 323,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2589,
											"end": 2593,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2578,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5509,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5565,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5505,
											"end": 5565,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5536,
											"end": 5551,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5536,
											"end": 5553,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5536,
											"end": 5553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5505,
											"end": 5565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5575,
											"end": 5598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5616,
											"end": 5626,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5613,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5626,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5601,
											"end": 5654,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5644,
											"end": 5654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5644,
											"end": 5654,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5601,
											"end": 5654,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5601,
											"end": 5654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5629,
											"end": 5641,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 5601,
											"end": 5654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5601,
											"end": 5654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5575,
											"end": 5654,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5575,
											"end": 5654,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5684,
											"end": 5694,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5665,
											"end": 5680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5694,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5694,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5694,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5665,
											"end": 5694,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5694,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5665,
											"end": 5694,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5665,
											"end": 5694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5694,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5694,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5694,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5665,
											"end": 5694,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5714,
											"end": 5721,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5723,
											"end": 5733,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5735,
											"end": 5741,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5758,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5705,
											"end": 5759,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5705,
											"end": 5759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5494,
											"end": 5767,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10371,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10380,
											"end": 10383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 10371,
											"end": 10384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10371,
											"end": 10384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10347,
											"end": 10384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10395,
											"end": 10420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10423,
											"end": 10431,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10423,
											"end": 10436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10432,
											"end": 10435,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10423,
											"end": 10436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10423,
											"end": 10436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10423,
											"end": 10436,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10437,
											"end": 10449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 10437,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10437,
											"end": 10449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10449,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 10437,
											"end": 10449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10423,
											"end": 10450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10423,
											"end": 10450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10423,
											"end": 10450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10423,
											"end": 10450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10423,
											"end": 10450,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10395,
											"end": 10450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10395,
											"end": 10450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10488,
											"end": 10494,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10469,
											"end": 10477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10469,
											"end": 10484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10469,
											"end": 10484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10469,
											"end": 10484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10469,
											"end": 10494,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10469,
											"end": 10494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 10461,
											"end": 10513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 10461,
											"end": 10513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10524,
											"end": 10539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 10535,
											"end": 10538,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10524,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10524,
											"end": 10539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10524,
											"end": 10539,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 10524,
											"end": 10539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10620,
											"end": 10628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10620,
											"end": 10639,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10620,
											"end": 10639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10620,
											"end": 10639,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10612,
											"end": 10616,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 10588,
											"end": 10592,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10588,
											"end": 10608,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10588,
											"end": 10608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10588,
											"end": 10608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10578,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10570,
											"end": 10585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 10570,
											"end": 10608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 10570,
											"end": 10608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10608,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 10570,
											"end": 10608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10569,
											"end": 10616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 10569,
											"end": 10616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10569,
											"end": 10616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10569,
											"end": 10616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 10569,
											"end": 10616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10569,
											"end": 10616,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 10569,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10568,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 10568,
											"end": 10639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10568,
											"end": 10639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10568,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 10568,
											"end": 10639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10568,
											"end": 10639,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 10568,
											"end": 10639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10665,
											"end": 10666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10655,
											"end": 10662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10655,
											"end": 10666,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10652,
											"end": 10727,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10652,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 10652,
											"end": 10727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10692,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10683,
											"end": 10692,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10692,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 10693,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 10693,
											"end": 10703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10693,
											"end": 10705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10693,
											"end": 10705,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 10693,
											"end": 10705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10714,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 10683,
											"end": 10715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 10683,
											"end": 10715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10683,
											"end": 10715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10652,
											"end": 10727,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 10652,
											"end": 10727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10749,
											"end": 10750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10740,
											"end": 10746,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 10750,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10737,
											"end": 10877,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10737,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 10737,
											"end": 10877,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10786,
											"end": 10792,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10767,
											"end": 10775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10767,
											"end": 10782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10767,
											"end": 10782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10767,
											"end": 10782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 10767,
											"end": 10792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 10830,
											"end": 10834,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10830,
											"end": 10842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10830,
											"end": 10842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10830,
											"end": 10842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10830,
											"end": 10842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10830,
											"end": 10842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10830,
											"end": 10842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10830,
											"end": 10842,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10830,
											"end": 10842,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10830,
											"end": 10842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10830,
											"end": 10842,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10830,
											"end": 10842,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10830,
											"end": 10842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10844,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 10844,
											"end": 10854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10844,
											"end": 10856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10844,
											"end": 10856,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 10844,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10858,
											"end": 10864,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 10807,
											"end": 10865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10807,
											"end": 10865,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 10807,
											"end": 10865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10737,
											"end": 10877,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 10737,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10956,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 10928,
											"end": 10932,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10928,
											"end": 10948,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10928,
											"end": 10948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10928,
											"end": 10948,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10910,
											"end": 10918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10910,
											"end": 10925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10910,
											"end": 10925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10910,
											"end": 10925,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10910,
											"end": 10948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 10910,
											"end": 10948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10910,
											"end": 10948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10910,
											"end": 10948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 10910,
											"end": 10948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10910,
											"end": 10948,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 10910,
											"end": 10948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10909,
											"end": 10956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 10909,
											"end": 10956,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10909,
											"end": 10956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10909,
											"end": 10956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 10909,
											"end": 10956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10909,
											"end": 10956,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 10909,
											"end": 10956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10887,
											"end": 10895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10887,
											"end": 10906,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10887,
											"end": 10906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10887,
											"end": 10956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10887,
											"end": 10956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10887,
											"end": 10956,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10887,
											"end": 10956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10997,
											"end": 11000,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10983,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10983,
											"end": 10995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10983,
											"end": 10995,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10983,
											"end": 10995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 11002,
											"end": 11008,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 10974,
											"end": 11009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 11009,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 11017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 11017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10336,
											"end": 11017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 11017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 725,
											"end": 750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 725,
											"end": 750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 725,
											"end": 750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 8836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8847,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8848,
											"end": 8851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8839,
											"end": 8852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 8852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 8852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8885,
											"end": 8889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8885,
											"end": 8905,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8885,
											"end": 8905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8885,
											"end": 8905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 8881,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 8869,
											"end": 8905,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8865,
											"end": 8940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 8865,
											"end": 8940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8922,
											"end": 8929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8922,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 8922,
											"end": 8929,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8865,
											"end": 8940,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 8865,
											"end": 8940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8950,
											"end": 8966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8969,
											"end": 8973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8969,
											"end": 8981,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8969,
											"end": 8981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8981,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8981,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8969,
											"end": 8981,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8981,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8981,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8969,
											"end": 8981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8991,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8969,
											"end": 8991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8991,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 9000,
											"end": 9004,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8969,
											"end": 9006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8969,
											"end": 9006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 8969,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8950,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8950,
											"end": 9006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9035,
											"end": 9036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9023,
											"end": 9031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9023,
											"end": 9036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9019,
											"end": 9121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 9019,
											"end": 9121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9076,
											"end": 9088,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 9053,
											"end": 9057,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9053,
											"end": 9073,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9053,
											"end": 9073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9053,
											"end": 9088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9053,
											"end": 9088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9053,
											"end": 9088,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9053,
											"end": 9088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9103,
											"end": 9110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9103,
											"end": 9110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9103,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 9103,
											"end": 9110,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9019,
											"end": 9121,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 9019,
											"end": 9121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9131,
											"end": 9153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9171,
											"end": 9175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9191,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9171,
											"end": 9191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9171,
											"end": 9191,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9156,
											"end": 9168,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 9156,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 9156,
											"end": 9191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9156,
											"end": 9191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9156,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 9156,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9156,
											"end": 9191,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 9156,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9131,
											"end": 9191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9131,
											"end": 9191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9202,
											"end": 9220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9275,
											"end": 9290,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9275,
											"end": 9290,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9256,
											"end": 9260,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9256,
											"end": 9271,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9241,
											"end": 9253,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9241,
											"end": 9253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9238,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 9224,
											"end": 9253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 9224,
											"end": 9253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9253,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 9224,
											"end": 9253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 9224,
											"end": 9271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 9224,
											"end": 9271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9271,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 9224,
											"end": 9271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 9223,
											"end": 9290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 9223,
											"end": 9290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9223,
											"end": 9290,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 9223,
											"end": 9290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9202,
											"end": 9290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9202,
											"end": 9290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9348,
											"end": 9356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9340,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 9327,
											"end": 9337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9327,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 9327,
											"end": 9344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9327,
											"end": 9344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9327,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 9327,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9327,
											"end": 9344,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 9327,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9326,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 9326,
											"end": 9356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9326,
											"end": 9356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9326,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 9326,
											"end": 9356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9326,
											"end": 9356,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 9326,
											"end": 9356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9305,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9301,
											"end": 9321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9301,
											"end": 9357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9357,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 9301,
											"end": 9357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 9301,
											"end": 9357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9357,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 9301,
											"end": 9357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9357,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9357,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9403,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 9368,
											"end": 9372,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9368,
											"end": 9403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9368,
											"end": 9403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9368,
											"end": 9403,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9368,
											"end": 9403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 9411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 9411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 9411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 9411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8764,
											"end": 9411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11230,
											"end": 11251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11254,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11263,
											"end": 11266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 11254,
											"end": 11267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11254,
											"end": 11267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11230,
											"end": 11267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11230,
											"end": 11267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11306,
											"end": 11314,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11306,
											"end": 11319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11315,
											"end": 11318,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11319,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11306,
											"end": 11319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11319,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11306,
											"end": 11319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11319,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11306,
											"end": 11319,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11320,
											"end": 11332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 11320,
											"end": 11330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 11320,
											"end": 11332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11320,
											"end": 11332,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 11320,
											"end": 11332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11333,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11306,
											"end": 11333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11333,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11306,
											"end": 11333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11306,
											"end": 11333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11306,
											"end": 11333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11306,
											"end": 11333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11306,
											"end": 11333,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 11367,
											"end": 11371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11367,
											"end": 11379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11367,
											"end": 11379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11367,
											"end": 11379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11367,
											"end": 11379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11367,
											"end": 11379,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11367,
											"end": 11379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11367,
											"end": 11379,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11367,
											"end": 11379,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11367,
											"end": 11379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11367,
											"end": 11379,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11367,
											"end": 11379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11367,
											"end": 11379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 11381,
											"end": 11391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 11381,
											"end": 11393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11393,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 11381,
											"end": 11393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11395,
											"end": 11403,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11395,
											"end": 11410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11395,
											"end": 11410,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11395,
											"end": 11410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 11344,
											"end": 11411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11344,
											"end": 11411,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 11344,
											"end": 11411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11461,
											"end": 11464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11447,
											"end": 11459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 11447,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 11447,
											"end": 11459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11447,
											"end": 11459,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 11447,
											"end": 11459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "PUSH",
											"source": 0,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 11466,
											"end": 11474,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11466,
											"end": 11481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11466,
											"end": 11481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11466,
											"end": 11481,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 11429,
											"end": 11482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11429,
											"end": 11482,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11513,
											"end": 11514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11495,
											"end": 11503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11495,
											"end": 11510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11495,
											"end": 11510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11495,
											"end": 11514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11495,
											"end": 11514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11495,
											"end": 11514,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11495,
											"end": 11514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11547,
											"end": 11548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11525,
											"end": 11533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11544,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11525,
											"end": 11544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11548,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2712,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2712,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2712,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2712,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2712,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2712,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 2704,
											"end": 2780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2704,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 2913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2895,
											"end": 2914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2900,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2895,
											"end": 2914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2914,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2887,
											"end": 2945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2887,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3047,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 323,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3073,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3073,
											"end": 3085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3085,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3073,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3047,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3047,
											"end": 3086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3047,
											"end": 3086,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 3047,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2132,
											"end": 2136,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3149,
											"end": 3167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3167,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3169,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3169,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3169,
											"end": 3181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3169,
											"end": 3181,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3169,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3138,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3182,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 3138,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3199,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3195,
											"end": 3199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3250,
											"name": "PUSH",
											"source": 0,
											"value": "1BC16D674EC80000"
										},
										{
											"begin": 3227,
											"end": 3239,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 3302,
											"end": 3331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3423,
											"end": 3439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3419,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 424,
											"end": 428,
											"name": "PUSH",
											"source": 0,
											"value": "708"
										},
										{
											"begin": 3362,
											"end": 3383,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3362,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 3361,
											"end": 3419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3361,
											"end": 3419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3361,
											"end": 3419,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 3361,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3360,
											"end": 3439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3360,
											"end": 3439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3360,
											"end": 3439,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3360,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3342,
											"end": 3439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3342,
											"end": 3439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3475,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3463,
											"end": 3485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3463,
											"end": 3485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3463,
											"end": 3485,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3463,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3460,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3450,
											"end": 3485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3485,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3514,
											"end": 3518,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 3496,
											"end": 3511,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3627,
											"end": 3628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3608,
											"end": 3616,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3608,
											"end": 3623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3628,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3604,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3604,
											"end": 3923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3661,
											"end": 3670,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3671,
											"end": 3672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3661,
											"end": 3673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3661,
											"end": 3673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3676,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "PUSH",
											"source": 0,
											"value": "485944542D424E42000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3693,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3693,
											"end": 3703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3645,
											"end": 3704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3645,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 3754,
											"end": 3763,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3765,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3754,
											"end": 3766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3772,
											"name": "PUSH",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "PUSH",
											"source": 0,
											"value": "485944542D555344540000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3787,
											"end": 3797,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3787,
											"end": 3797,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3738,
											"end": 3798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 3738,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 3848,
											"end": 3857,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3859,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3848,
											"end": 3860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3863,
											"end": 3866,
											"name": "PUSH",
											"source": 0,
											"value": "C8"
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "PUSH",
											"source": 0,
											"value": "485944542D485947540000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3881,
											"end": 3891,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3881,
											"end": 3891,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3832,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3832,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 3832,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3604,
											"end": 3923,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3604,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3956,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3935,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3935,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 3964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2693,
											"end": 3964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2589,
											"end": 3964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7133,
											"end": 7315,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 7133,
											"end": 7315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7195,
											"end": 7203,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7195,
											"end": 7210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7210,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7195,
											"end": 7210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7228,
											"end": 7239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7223,
											"end": 7308,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 7223,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7251,
											"end": 7257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7257,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7223,
											"end": 7308,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7223,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 7223,
											"end": 7308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7281,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 7292,
											"end": 7295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7281,
											"end": 7291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7281,
											"end": 7296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7281,
											"end": 7296,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 7281,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7259,
											"end": 7264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7259,
											"end": 7264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 7259,
											"end": 7264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7259,
											"end": 7264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 7259,
											"end": 7264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7259,
											"end": 7264,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 7259,
											"end": 7264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7259,
											"end": 7264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7259,
											"end": 7264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7223,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 7223,
											"end": 7308,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7223,
											"end": 7308,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 7223,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7223,
											"end": 7308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7167,
											"end": 7315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7133,
											"end": 7315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 632,
											"end": 659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 632,
											"end": 659,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7887,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7888,
											"end": 7891,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7879,
											"end": 7892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7856,
											"end": 7892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7930,
											"end": 7938,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7939,
											"end": 7942,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7930,
											"end": 7943,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7944,
											"end": 7948,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7903,
											"end": 7949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7990,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 8006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 8006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8017,
											"end": 8033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8036,
											"end": 8040,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8036,
											"end": 8048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8036,
											"end": 8058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8058,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8036,
											"end": 8073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8036,
											"end": 8073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8017,
											"end": 8073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8017,
											"end": 8073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8105,
											"end": 8125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8105,
											"end": 8125,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8102,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8125,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8142,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 8090,
											"end": 8142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8141,
											"end": 8142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8129,
											"end": 8137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8129,
											"end": 8142,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8129,
											"end": 8142,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8142,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 8090,
											"end": 8142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8086,
											"end": 8400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8086,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 8086,
											"end": 8400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8159,
											"end": 8181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8199,
											"end": 8203,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8199,
											"end": 8219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8196,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 8184,
											"end": 8219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 8184,
											"end": 8219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8184,
											"end": 8219,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 8184,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8159,
											"end": 8219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8159,
											"end": 8219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8307,
											"end": 8322,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8307,
											"end": 8322,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8288,
											"end": 8292,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8273,
											"end": 8285,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8273,
											"end": 8285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8270,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 8256,
											"end": 8285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8256,
											"end": 8285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8285,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 8256,
											"end": 8285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 8256,
											"end": 8303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8256,
											"end": 8303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8303,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 8256,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8255,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 8255,
											"end": 8322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8255,
											"end": 8322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8255,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8255,
											"end": 8322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8255,
											"end": 8322,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 8255,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8379,
											"end": 8387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8371,
											"end": 8375,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 8358,
											"end": 8368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8358,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 8358,
											"end": 8375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8358,
											"end": 8375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8358,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8358,
											"end": 8375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8358,
											"end": 8375,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 8358,
											"end": 8375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 8357,
											"end": 8387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8357,
											"end": 8387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8387,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 8357,
											"end": 8387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8337,
											"end": 8388,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8337,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 8337,
											"end": 8388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8337,
											"end": 8388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8337,
											"end": 8388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 8337,
											"end": 8388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8337,
											"end": 8388,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 8337,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8337,
											"end": 8388,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8337,
											"end": 8388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8144,
											"end": 8400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8144,
											"end": 8400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8086,
											"end": 8400,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 8086,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8475,
											"end": 8483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8475,
											"end": 8494,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8475,
											"end": 8494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8475,
											"end": 8494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8467,
											"end": 8471,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 8448,
											"end": 8463,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8430,
											"end": 8438,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8430,
											"end": 8445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8430,
											"end": 8445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8430,
											"end": 8445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8430,
											"end": 8463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 8430,
											"end": 8463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8430,
											"end": 8463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8430,
											"end": 8463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8430,
											"end": 8463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8430,
											"end": 8463,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 8430,
											"end": 8463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 8429,
											"end": 8471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8429,
											"end": 8471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8429,
											"end": 8471,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 8429,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 8428,
											"end": 8494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 8428,
											"end": 8494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8494,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 8428,
											"end": 8494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8505,
											"end": 8519,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 8505,
											"end": 8519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8505,
											"end": 8519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8505,
											"end": 8519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8505,
											"end": 8519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8505,
											"end": 8519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8505,
											"end": 8519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 8527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3072,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3103,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3112,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3112,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3120,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2132,
											"end": 2136,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2087,
											"end": 2136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 323,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 2589,
											"end": 2593,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2578,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6678,
											"end": 6688,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6734,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 6674,
											"end": 6734,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 6705,
											"end": 6720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6705,
											"end": 6722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 6705,
											"end": 6722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6674,
											"end": 6734,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 6674,
											"end": 6734,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6809,
											"end": 6819,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6790,
											"end": 6793,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6781,
											"end": 6794,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6781,
											"end": 6805,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 6805,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6763,
											"end": 6778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6763,
											"end": 6778,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6763,
											"end": 6805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 6763,
											"end": 6805,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6763,
											"end": 6805,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6763,
											"end": 6805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 6763,
											"end": 6805,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6763,
											"end": 6805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 6763,
											"end": 6805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6762,
											"end": 6819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 6762,
											"end": 6819,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6762,
											"end": 6819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6762,
											"end": 6819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6762,
											"end": 6819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6762,
											"end": 6819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 6762,
											"end": 6819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6744,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6744,
											"end": 6819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6744,
											"end": 6819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6744,
											"end": 6819,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6744,
											"end": 6819,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6863,
											"end": 6866,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6854,
											"end": 6867,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6867,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6854,
											"end": 6878,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6878,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6878,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6916,
											"end": 6926,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6898,
											"end": 6901,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6889,
											"end": 6902,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6902,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6889,
											"end": 6913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6926,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6926,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6926,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6926,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 6964,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 6992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5B051D9271F3DACC9672CA07AF039F84D81B973EE9174797456DD6238BF18FEF"
										},
										{
											"begin": 6966,
											"end": 6976,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6991,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 6992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6944,
											"end": 6992,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 6992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 6944,
											"end": 6992,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 6992,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 6992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 6992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6944,
											"end": 6992,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 6992,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 6944,
											"end": 6992,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 6992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6944,
											"end": 6992,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 6992,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 6992,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 6992,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 6992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 6992,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 6663,
											"end": 7000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6554,
											"end": 7000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7468,
											"end": 7475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7488,
											"end": 7508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7526,
											"end": 7535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7631,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 7521,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7546,
											"end": 7554,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7546,
											"end": 7561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7546,
											"end": 7561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7546,
											"end": 7561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7546,
											"end": 7561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7542,
											"end": 7543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7542,
											"end": 7561,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7521,
											"end": 7631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7521,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 7521,
											"end": 7631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7600,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 7611,
											"end": 7612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7600,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 7600,
											"end": 7619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7600,
											"end": 7619,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 7600,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 7584,
											"end": 7619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7584,
											"end": 7619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7619,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 7584,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7584,
											"end": 7619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 7564,
											"end": 7567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 7564,
											"end": 7567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7567,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 7564,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7564,
											"end": 7567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7521,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 7521,
											"end": 7631,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7521,
											"end": 7631,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 7521,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7521,
											"end": 7631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7648,
											"end": 7660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7641,
											"end": 7660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7641,
											"end": 7660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7641,
											"end": 7660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 273,
											"end": 352,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 273,
											"end": 352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 323,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 323,
											"end": 351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 313,
											"end": 352,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 273,
											"end": 352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 273,
											"end": 352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 5487,
											"end": 5491,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5474,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 5474,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 2589,
											"end": 2593,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 2578,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5505,
											"end": 5531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 5517,
											"end": 5521,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5523,
											"end": 5530,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5505,
											"end": 5516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 5505,
											"end": 5531,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5505,
											"end": 5531,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 5505,
											"end": 5531,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5390,
											"end": 5539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9509,
											"end": 9517,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9518,
											"end": 9521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 9509,
											"end": 9522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9533,
											"end": 9558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9561,
											"end": 9569,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9561,
											"end": 9574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9573,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9561,
											"end": 9574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9561,
											"end": 9574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9561,
											"end": 9574,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9575,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 9575,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 9575,
											"end": 9587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9575,
											"end": 9587,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 9575,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9588,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9561,
											"end": 9588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9588,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9561,
											"end": 9588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9561,
											"end": 9588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9561,
											"end": 9588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9561,
											"end": 9588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9561,
											"end": 9588,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9533,
											"end": 9588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9533,
											"end": 9588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 9610,
											"end": 9613,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 9599,
											"end": 9614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9599,
											"end": 9614,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 9599,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9649,
											"end": 9650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9631,
											"end": 9639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9631,
											"end": 9646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9650,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 9627,
											"end": 9867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9737,
											"end": 9745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9756,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9737,
											"end": 9756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9756,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9729,
											"end": 9733,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 9705,
											"end": 9709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9725,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9705,
											"end": 9725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9705,
											"end": 9725,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9687,
											"end": 9695,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9687,
											"end": 9702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9687,
											"end": 9702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9687,
											"end": 9702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9687,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 9687,
											"end": 9725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9687,
											"end": 9725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9687,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 9687,
											"end": 9725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9687,
											"end": 9725,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 9687,
											"end": 9725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9686,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 9686,
											"end": 9733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9686,
											"end": 9733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9686,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 9686,
											"end": 9733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9686,
											"end": 9733,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 9686,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 9756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 9685,
											"end": 9756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 9756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 9756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 9685,
											"end": 9756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 9756,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 9685,
											"end": 9756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9667,
											"end": 9756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9786,
											"end": 9787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9776,
											"end": 9783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9776,
											"end": 9787,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9773,
											"end": 9856,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9773,
											"end": 9856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 9773,
											"end": 9856,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9812,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9808,
											"end": 9812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9808,
											"end": 9812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9812,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9808,
											"end": 9812,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9812,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9812,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9808,
											"end": 9812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9817,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9808,
											"end": 9817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9817,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 9818,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 9818,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 9818,
											"end": 9830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9818,
											"end": 9830,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 9818,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9832,
											"end": 9839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 9808,
											"end": 9840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 9808,
											"end": 9840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9808,
											"end": 9840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9773,
											"end": 9856,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 9773,
											"end": 9856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9652,
											"end": 9867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9627,
											"end": 9867,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 9627,
											"end": 9867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9890,
											"end": 9891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9881,
											"end": 9887,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9881,
											"end": 9891,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9877,
											"end": 10037,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9877,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 9877,
											"end": 10037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 9985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 9935,
											"end": 9939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9935,
											"end": 9947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9935,
											"end": 9947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9935,
											"end": 9947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9935,
											"end": 9947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9935,
											"end": 9947,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9935,
											"end": 9947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9935,
											"end": 9947,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9935,
											"end": 9947,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9935,
											"end": 9947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9935,
											"end": 9947,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9935,
											"end": 9947,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9935,
											"end": 9947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 9949,
											"end": 9959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 9949,
											"end": 9961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 9961,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 9949,
											"end": 9961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9971,
											"end": 9975,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9978,
											"end": 9984,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 9934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 9908,
											"end": 9985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 9985,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 9908,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10019,
											"end": 10025,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10000,
											"end": 10015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10000,
											"end": 10025,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10025,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10025,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 10000,
											"end": 10025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 10000,
											"end": 10025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10025,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 10000,
											"end": 10025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10025,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10025,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10000,
											"end": 10025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9877,
											"end": 10037,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 9877,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10112,
											"end": 10116,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 10088,
											"end": 10092,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10088,
											"end": 10108,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10088,
											"end": 10108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10088,
											"end": 10108,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10070,
											"end": 10078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10070,
											"end": 10085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10070,
											"end": 10085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10070,
											"end": 10085,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10070,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 10070,
											"end": 10108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10070,
											"end": 10108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10070,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 10070,
											"end": 10108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10070,
											"end": 10108,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 10070,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10069,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 10069,
											"end": 10116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10069,
											"end": 10116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10069,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 10069,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10069,
											"end": 10116,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 10069,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10066,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10047,
											"end": 10066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10116,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10156,
											"end": 10159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10142,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 10142,
											"end": 10152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10142,
											"end": 10154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10142,
											"end": 10154,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 10142,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 10161,
											"end": 10167,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 10134,
											"end": 10168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10134,
											"end": 10168,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9474,
											"end": 10176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9474,
											"end": 10176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 10176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9419,
											"end": 10176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 951,
											"end": 955,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1015,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 975,
											"end": 986,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 968,
											"end": 1015,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 968,
											"end": 1015,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 866,
											"end": 1023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3433,
											"end": 3538,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 3433,
											"end": 3538,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 3511,
											"end": 3515,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3517,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 3517,
											"end": 3529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3517,
											"end": 3529,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 3517,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3500,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 3500,
											"end": 3530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3538,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7929,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 7691,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7775,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 7783,
											"end": 7787,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7789,
											"end": 7796,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7775,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 7775,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7775,
											"end": 7797,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 7775,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7770,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 7770,
											"end": 7922,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7846,
											"end": 7850,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7821,
											"end": 7825,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7834,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7834,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7842,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7897,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 7897,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 7897,
											"end": 7909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7897,
											"end": 7909,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 7897,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7888,
											"end": 7895,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7882,
											"end": 7886,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "PUSH",
											"source": 11,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "LOG4",
											"source": 11
										},
										{
											"begin": 7770,
											"end": 7922,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 7770,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7929,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7929,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 754,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 729,
											"end": 746,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 729,
											"end": 746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 656,
											"end": 754,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 656,
											"end": 754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8109,
											"end": 8348,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 8109,
											"end": 8348,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8193,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 8201,
											"end": 8205,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8207,
											"end": 8214,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8193,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 8193,
											"end": 8215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8193,
											"end": 8215,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 8193,
											"end": 8215,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8189,
											"end": 8341,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8189,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 8189,
											"end": 8341,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8238,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8239,
											"end": 8243,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8252,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8252,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8260,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8316,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 8316,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 8316,
											"end": 8328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8316,
											"end": 8328,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 8316,
											"end": 8328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8307,
											"end": 8314,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8301,
											"end": 8305,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "PUSH",
											"source": 11,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "LOG4",
											"source": 11
										},
										{
											"begin": 8189,
											"end": 8341,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 8189,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8109,
											"end": 8348,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8109,
											"end": 8348,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8109,
											"end": 8348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 6205,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5775,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 5896,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 5896,
											"end": 5916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5896,
											"end": 5916,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 5896,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5949,
											"end": 5956,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5927,
											"end": 5931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5927,
											"end": 5939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 5939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5927,
											"end": 5957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5927,
											"end": 5957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5927,
											"end": 5957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5927,
											"end": 5957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5927,
											"end": 5957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5927,
											"end": 5957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5927,
											"end": 5957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5927,
											"end": 5957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5927,
											"end": 5957,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5927,
											"end": 5957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5927,
											"end": 5957,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 5996,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5968,
											"end": 5983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5968,
											"end": 5996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6030,
											"end": 6045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6007,
											"end": 6027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6102,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6108,
											"end": 6112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6157,
											"end": 6158,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6139,
											"end": 6147,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6139,
											"end": 6154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6139,
											"end": 6154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6139,
											"end": 6154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6139,
											"end": 6154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6139,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 6139,
											"end": 6158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6139,
											"end": 6158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6139,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 6139,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6139,
											"end": 6158,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 6139,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "PUSH",
											"source": 0,
											"value": "1FCB86D005DE4723E36A6D74EEEB8529BAC339B94C9241AED56567A2D214F105"
										},
										{
											"begin": 6168,
											"end": 6175,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6184,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6186,
											"end": 6196,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 6131,
											"end": 6197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6131,
											"end": 6197,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 6205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5775,
											"end": 6205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5775,
											"end": 6205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5775,
											"end": 6205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5775,
											"end": 6205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5775,
											"end": 6205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 776,
											"end": 953,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 776,
											"end": 953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 859,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 879,
											"end": 884,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 909,
											"end": 932,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 909,
											"end": 932,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 909,
											"end": 932,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 934,
											"end": 936,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 938,
											"end": 943,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 944,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 886,
											"end": 944,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 886,
											"end": 944,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 886,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 886,
											"end": 944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 944,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 944,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 944,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 886,
											"end": 944,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 944,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 886,
											"end": 944,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 886,
											"end": 944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 859,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 859,
											"end": 945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 859,
											"end": 945,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 859,
											"end": 945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 776,
											"end": 953,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 776,
											"end": 953,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 776,
											"end": 953,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 776,
											"end": 953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 961,
											"end": 1166,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 961,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 1082,
											"end": 1087,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1139,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1112,
											"end": 1139,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1112,
											"end": 1139,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1145,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 1089,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1089,
											"end": 1157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 1062,
											"end": 1158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1158,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 1062,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 961,
											"end": 1166,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 961,
											"end": 1166,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 961,
											"end": 1166,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 961,
											"end": 1166,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 961,
											"end": 1166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3828,
											"end": 4320,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 3828,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 3925,
											"end": 3929,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3931,
											"end": 3938,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3917,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3912,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 3912,
											"end": 4313,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4105,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 4125,
											"end": 4132,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4105,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 4105,
											"end": 4133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4105,
											"end": 4133,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 4105,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 4234,
											"end": 4238,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 4241,
											"end": 4243,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4206,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 4206,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4244,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 4206,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 4010,
											"end": 4267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 3956,
											"end": 4301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3912,
											"end": 4313,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 3912,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3828,
											"end": 4320,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3828,
											"end": 4320,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3828,
											"end": 4320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3664,
											"end": 4380,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 3664,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4088,
											"end": 4111,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 4142,
											"end": 4146,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "PUSH",
											"source": 8,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4122,
											"end": 4127,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4141,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4114,
											"end": 4141,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 4114,
											"end": 4141,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 4114,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4088,
											"end": 4183,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4088,
											"end": 4183,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4218,
											"end": 4219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4208,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4215,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4219,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4194,
											"end": 4373,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4194,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 4194,
											"end": 4373,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4305,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 4284,
											"end": 4314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 4284,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 4276,
											"end": 4361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 4276,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4194,
											"end": 4373,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 4194,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3734,
											"end": 4380,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3664,
											"end": 4380,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3664,
											"end": 4380,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3664,
											"end": 4380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2471,
											"end": 2622,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 2471,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2529,
											"end": 2542,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2562,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 2590,
											"end": 2594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2574,
											"end": 2596,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2574,
											"end": 2596,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 346,
											"end": 348,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 2562,
											"end": 2614,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2562,
											"end": 2614,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 2562,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2614,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 2562,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2614,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2555,
											"end": 2614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2471,
											"end": 2622,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2471,
											"end": 2622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2471,
											"end": 2622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2471,
											"end": 2622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1968,
											"end": 1987,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2004,
											"end": 2010,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 2000,
											"end": 2010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 2000,
											"end": 2014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 1990,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 2015,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1968,
											"end": 2015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "PUSH",
											"source": 10,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2026,
											"end": 2032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2033,
											"end": 2034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 2026,
											"end": 2035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 10,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2052,
											"end": 2058,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 2052,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2083,
											"end": 2092,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2099,
											"end": 2105,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 2095,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 2095,
											"end": 2109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2083,
											"end": 2109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2083,
											"end": 2109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2115,
											"end": 2116,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2111,
											"end": 2112,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2111,
											"end": 2116,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2158,
											"name": "PUSH",
											"source": 10,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 2167,
											"end": 2170,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 2159,
											"end": 2164,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2170,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 2150,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "PUSH",
											"source": 10,
											"value": "F8"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2146,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 2138,
											"end": 2147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2196,
											"end": 2197,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2186,
											"end": 2197,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2186,
											"end": 2197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2186,
											"end": 2197,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2186,
											"end": 2197,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2186,
											"end": 2197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 2118,
											"end": 2121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2232,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2237,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 2219,
											"end": 2274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2306,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 2314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4356,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4376,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 4398,
											"end": 4404,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4406,
											"end": 4410,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4412,
											"end": 4413,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4415,
											"end": 4427,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 4376,
											"end": 4428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4428,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 4376,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4428,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4207,
											"end": 4436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4207,
											"end": 4436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "tag",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5463,
											"end": 5475,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5496,
											"end": 5517,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 5496,
											"end": 5526,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5496,
											"end": 5526,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 5488,
											"end": 5569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 5488,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5593,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5595,
											"end": 5618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5628,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5633,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5622,
											"end": 5633,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5641,
											"end": 5646,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5652,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 5622,
											"end": 5653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "tag",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5580,
											"end": 5653,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5580,
											"end": 5653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5580,
											"end": 5653,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5580,
											"end": 5653,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 5698,
											"end": 5704,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5713,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5715,
											"end": 5725,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5727,
											"end": 5739,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 5671,
											"end": 5740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5740,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 5671,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5740,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "tag",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8051,
											"end": 8063,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8080,
											"end": 8087,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8503,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 8076,
											"end": 8503,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8129,
											"end": 8130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8118,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8125,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8108,
											"end": 8130,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8104,
											"end": 8394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 8104,
											"end": 8394,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 8337,
											"end": 8343,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8326,
											"end": 8336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 8326,
											"end": 8344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 8326,
											"end": 8344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 8318,
											"end": 8378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "tag",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "tag",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 8318,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8104,
											"end": 8394,
											"name": "tag",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 8104,
											"end": 8394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8415,
											"end": 8425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8408,
											"end": 8425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8408,
											"end": 8425,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8408,
											"end": 8425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 8408,
											"end": 8425,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8076,
											"end": 8503,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 8076,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8458,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 8466,
											"end": 8476,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8490,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8458,
											"end": 8465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 8458,
											"end": 8491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8458,
											"end": 8491,
											"name": "tag",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 8458,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7866,
											"end": 8510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1777,
											"name": "tag",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 1451,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1768,
											"end": 1769,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1765,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1765,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1765,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1769,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1451,
											"end": 1777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9052,
											"end": 9604,
											"name": "tag",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 9052,
											"end": 9604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9233,
											"end": 9234,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9213,
											"end": 9223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9213,
											"end": 9230,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9213,
											"end": 9234,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9209,
											"end": 9597,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9209,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 9209,
											"end": 9597,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9445,
											"end": 9455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9439,
											"end": 9456,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9489,
											"end": 9499,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9485,
											"end": 9487,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9481,
											"end": 9500,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9474,
											"end": 9518,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9209,
											"end": 9597,
											"name": "tag",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 9209,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9572,
											"end": 9584,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 9565,
											"end": 9585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "tag",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9565,
											"end": 9585,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "353"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "tag",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 1688,
											"end": 1712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "tag",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1713,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1858,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1841,
											"end": 1859,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1939,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 1869,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "tag",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1725,
											"end": 1947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1953,
											"end": 2075,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 1953,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 2044,
											"end": 2049,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 2026,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "tag",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 2026,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2051,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2055,
											"end": 2067,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 2006,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1953,
											"end": 2075,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1953,
											"end": 2075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2152,
											"end": 2172,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2143,
											"end": 2172,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2143,
											"end": 2172,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 2208,
											"end": 2213,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 2181,
											"end": 2214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "tag",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 2181,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2081,
											"end": 2220,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2081,
											"end": 2220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2331,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2313,
											"end": 2320,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2309,
											"end": 2332,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2305,
											"end": 2337,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 2340,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "tag",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 2340,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "tag",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 2302,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2461,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 2530,
											"end": 2537,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2510,
											"end": 2519,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 2485,
											"end": 2538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "tag",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 2485,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2475,
											"end": 2538,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2431,
											"end": 2548,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2226,
											"end": 2555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2226,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "tag",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2680,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2636,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2627,
											"end": 2681,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2561,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2721,
											"end": 2724,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2747,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2753,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2693,
											"end": 2753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "tag",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2809,
											"end": 2818,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 2887,
											"end": 2892,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 2869,
											"end": 2893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 2869,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 2860,
											"end": 2894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "tag",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 2860,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 2842,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "tag",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2829,
											"end": 2895,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2829,
											"end": 2895,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2759,
											"end": 2901,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2759,
											"end": 2901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2957,
											"end": 2966,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 3021,
											"end": 3026,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2990,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 2990,
											"end": 3027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2990,
											"end": 3027,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 2990,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2977,
											"end": 3027,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2977,
											"end": 3027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2907,
											"end": 3033,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2907,
											"end": 3033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3180,
											"name": "tag",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 3039,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3104,
											"end": 3113,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 3168,
											"end": 3173,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 3137,
											"end": 3174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3137,
											"end": 3174,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 3137,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3124,
											"end": 3174,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3124,
											"end": 3174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3180,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3180,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3180,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3186,
											"end": 3347,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 3186,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3288,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 3334,
											"end": 3339,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3288,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 3288,
											"end": 3340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3288,
											"end": 3340,
											"name": "tag",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 3288,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3283,
											"end": 3286,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3276,
											"end": 3341,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3186,
											"end": 3347,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3186,
											"end": 3347,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3186,
											"end": 3347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3353,
											"end": 3936,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 3353,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3545,
											"end": 3549,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3586,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3568,
											"end": 3587,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3560,
											"end": 3587,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3560,
											"end": 3587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3597,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3678,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3665,
											"end": 3682,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3656,
											"end": 3662,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3597,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 3597,
											"end": 3683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3597,
											"end": 3683,
											"name": "tag",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 3597,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3693,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 3761,
											"end": 3763,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3759,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3746,
											"end": 3764,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3737,
											"end": 3743,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3693,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 3693,
											"end": 3765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3693,
											"end": 3765,
											"name": "tag",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 3693,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3775,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 3843,
											"end": 3845,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3828,
											"end": 3846,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3819,
											"end": 3825,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3775,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 3775,
											"end": 3847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3775,
											"end": 3847,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 3775,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3857,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 3925,
											"end": 3927,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3910,
											"end": 3928,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3857,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 3857,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3857,
											"end": 3929,
											"name": "tag",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 3857,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3353,
											"end": 3936,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 3353,
											"end": 3936,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3353,
											"end": 3936,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3353,
											"end": 3936,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3353,
											"end": 3936,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3353,
											"end": 3936,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3353,
											"end": 3936,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3353,
											"end": 3936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3942,
											"end": 4082,
											"name": "tag",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 3942,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4006,
											"end": 4015,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 4070,
											"end": 4075,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4039,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 4039,
											"end": 4076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4039,
											"end": 4076,
											"name": "tag",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 4039,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4026,
											"end": 4076,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4026,
											"end": 4076,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3942,
											"end": 4082,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3942,
											"end": 4082,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3942,
											"end": 4082,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3942,
											"end": 4082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4088,
											"end": 4247,
											"name": "tag",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 4088,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4189,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 4234,
											"end": 4239,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4189,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 4189,
											"end": 4240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4189,
											"end": 4240,
											"name": "tag",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 4189,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4184,
											"end": 4187,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4177,
											"end": 4241,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4088,
											"end": 4247,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4088,
											"end": 4247,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4088,
											"end": 4247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4503,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 4253,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4398,
											"end": 4400,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4387,
											"end": 4396,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4383,
											"end": 4401,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4375,
											"end": 4401,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4375,
											"end": 4401,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4411,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 4493,
											"end": 4494,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4482,
											"end": 4491,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4478,
											"end": 4495,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4469,
											"end": 4475,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4411,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 4411,
											"end": 4496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4411,
											"end": 4496,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 4411,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4503,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4503,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4503,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4503,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4509,
											"end": 4586,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 4509,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4546,
											"end": 4553,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 4580,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4564,
											"end": 4580,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4564,
											"end": 4580,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4509,
											"end": 4586,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4509,
											"end": 4586,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4509,
											"end": 4586,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4509,
											"end": 4586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4592,
											"end": 4714,
											"name": "tag",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 4592,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4665,
											"end": 4689,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 4683,
											"end": 4688,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4665,
											"end": 4689,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 4665,
											"end": 4689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4665,
											"end": 4689,
											"name": "tag",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 4665,
											"end": 4689,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4658,
											"end": 4663,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4655,
											"end": 4690,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4645,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 4645,
											"end": 4708,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4704,
											"end": 4705,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 4702,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4694,
											"end": 4706,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4645,
											"end": 4708,
											"name": "tag",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 4645,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4592,
											"end": 4714,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4592,
											"end": 4714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4720,
											"end": 4859,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 4720,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4766,
											"end": 4771,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4804,
											"end": 4810,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4791,
											"end": 4811,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4782,
											"end": 4811,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4782,
											"end": 4811,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4820,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 4847,
											"end": 4852,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4820,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 4820,
											"end": 4853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4820,
											"end": 4853,
											"name": "tag",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 4820,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4720,
											"end": 4859,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4720,
											"end": 4859,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4720,
											"end": 4859,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4720,
											"end": 4859,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4720,
											"end": 4859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 5194,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 4865,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4924,
											"end": 4930,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 4975,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4961,
											"end": 4970,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4952,
											"end": 4959,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4948,
											"end": 4971,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4944,
											"end": 4976,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4941,
											"end": 5060,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4941,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 4941,
											"end": 5060,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4979,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 4979,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 4979,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4979,
											"end": 5058,
											"name": "tag",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 4979,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4941,
											"end": 5060,
											"name": "tag",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 4941,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5099,
											"end": 5100,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5124,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 5169,
											"end": 5176,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5160,
											"end": 5166,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5149,
											"end": 5158,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5145,
											"end": 5167,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5124,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 5124,
											"end": 5177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5124,
											"end": 5177,
											"name": "tag",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 5124,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5114,
											"end": 5177,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5114,
											"end": 5177,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5070,
											"end": 5187,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 5194,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 5194,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 5194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 5194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 5194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5200,
											"end": 5318,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 5200,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 5305,
											"end": 5310,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 5287,
											"end": 5311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "tag",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 5287,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5282,
											"end": 5285,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5275,
											"end": 5312,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5200,
											"end": 5318,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5200,
											"end": 5318,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5200,
											"end": 5318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5324,
											"end": 5546,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5324,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5417,
											"end": 5421,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5457,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5444,
											"end": 5453,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5440,
											"end": 5458,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5432,
											"end": 5458,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5432,
											"end": 5458,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5468,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5521,
											"end": 5538,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5512,
											"end": 5518,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5468,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 5468,
											"end": 5539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5468,
											"end": 5539,
											"name": "tag",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 5468,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5324,
											"end": 5546,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5324,
											"end": 5546,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5324,
											"end": 5546,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5324,
											"end": 5546,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5324,
											"end": 5546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5552,
											"end": 5648,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 5552,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5589,
											"end": 5596,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5618,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 5636,
											"end": 5641,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5618,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 5618,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5618,
											"end": 5642,
											"name": "tag",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 5618,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5607,
											"end": 5642,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5607,
											"end": 5642,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5552,
											"end": 5648,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5552,
											"end": 5648,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5552,
											"end": 5648,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5552,
											"end": 5648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5776,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 5654,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5727,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 5745,
											"end": 5750,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5727,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 5727,
											"end": 5751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5727,
											"end": 5751,
											"name": "tag",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 5727,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5720,
											"end": 5725,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5717,
											"end": 5752,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 5707,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 5707,
											"end": 5770,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5766,
											"end": 5767,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 5764,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5756,
											"end": 5768,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5707,
											"end": 5770,
											"name": "tag",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 5707,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5776,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5782,
											"end": 5921,
											"name": "tag",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 5782,
											"end": 5921,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5828,
											"end": 5833,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5866,
											"end": 5872,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5853,
											"end": 5873,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5844,
											"end": 5873,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5844,
											"end": 5873,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 5909,
											"end": 5914,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 5882,
											"end": 5915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5915,
											"name": "tag",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 5882,
											"end": 5915,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5782,
											"end": 5921,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5782,
											"end": 5921,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5782,
											"end": 5921,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5782,
											"end": 5921,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5782,
											"end": 5921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5927,
											"end": 6401,
											"name": "tag",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 5927,
											"end": 6401,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5995,
											"end": 6001,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6052,
											"end": 6054,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6027,
											"end": 6050,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6023,
											"end": 6055,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 6020,
											"end": 6139,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6020,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 6020,
											"end": 6139,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6058,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 6058,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 6058,
											"end": 6137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6058,
											"end": 6137,
											"name": "tag",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 6058,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6020,
											"end": 6139,
											"name": "tag",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 6020,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6179,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6203,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 6248,
											"end": 6255,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6239,
											"end": 6245,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6228,
											"end": 6237,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6224,
											"end": 6246,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6203,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 6203,
											"end": 6256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6203,
											"end": 6256,
											"name": "tag",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 6203,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6193,
											"end": 6256,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6193,
											"end": 6256,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6149,
											"end": 6266,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6305,
											"end": 6307,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6331,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 6376,
											"end": 6383,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6367,
											"end": 6373,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6356,
											"end": 6365,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6352,
											"end": 6374,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6331,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 6331,
											"end": 6384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6331,
											"end": 6384,
											"name": "tag",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 6331,
											"end": 6384,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6321,
											"end": 6384,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6321,
											"end": 6384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6276,
											"end": 6394,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5927,
											"end": 6401,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5927,
											"end": 6401,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5927,
											"end": 6401,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5927,
											"end": 6401,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5927,
											"end": 6401,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5927,
											"end": 6401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6407,
											"end": 6518,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 6407,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6466,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6488,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 6506,
											"end": 6511,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6488,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 6488,
											"end": 6512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6488,
											"end": 6512,
											"name": "tag",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 6488,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6477,
											"end": 6512,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6477,
											"end": 6512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6407,
											"end": 6518,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6407,
											"end": 6518,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6407,
											"end": 6518,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6407,
											"end": 6518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6524,
											"end": 6676,
											"name": "tag",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 6524,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6612,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 6645,
											"end": 6650,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6612,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 6612,
											"end": 6651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6612,
											"end": 6651,
											"name": "tag",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 6612,
											"end": 6651,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6605,
											"end": 6610,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6602,
											"end": 6652,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 6592,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 6592,
											"end": 6670,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6666,
											"end": 6667,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6663,
											"end": 6664,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6656,
											"end": 6668,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6592,
											"end": 6670,
											"name": "tag",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 6592,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6524,
											"end": 6676,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6524,
											"end": 6676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6682,
											"end": 6851,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 6682,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6743,
											"end": 6748,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6781,
											"end": 6787,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6768,
											"end": 6788,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 6759,
											"end": 6788,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6759,
											"end": 6788,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6797,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 6839,
											"end": 6844,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6797,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 6797,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6797,
											"end": 6845,
											"name": "tag",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 6797,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6682,
											"end": 6851,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6682,
											"end": 6851,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6682,
											"end": 6851,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6682,
											"end": 6851,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6682,
											"end": 6851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6857,
											"end": 6974,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 6857,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6966,
											"end": 6967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6963,
											"end": 6964,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6956,
											"end": 6968,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6980,
											"end": 7097,
											"name": "tag",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 6980,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7089,
											"end": 7090,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7086,
											"end": 7087,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7079,
											"end": 7091,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7103,
											"end": 7205,
											"name": "tag",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 7103,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7144,
											"end": 7150,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7195,
											"end": 7197,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 7191,
											"end": 7198,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 7186,
											"end": 7188,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 7179,
											"end": 7184,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7175,
											"end": 7189,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7171,
											"end": 7199,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7161,
											"end": 7199,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7161,
											"end": 7199,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7103,
											"end": 7205,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7103,
											"end": 7205,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7103,
											"end": 7205,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7103,
											"end": 7205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7211,
											"end": 7391,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 7211,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7259,
											"end": 7336,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7256,
											"end": 7257,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7337,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7356,
											"end": 7360,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 7353,
											"end": 7354,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7346,
											"end": 7361,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7380,
											"end": 7384,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7377,
											"end": 7378,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7370,
											"end": 7385,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7397,
											"end": 7678,
											"name": "tag",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 7397,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7480,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 7502,
											"end": 7506,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7480,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 7480,
											"end": 7507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7480,
											"end": 7507,
											"name": "tag",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 7480,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7472,
											"end": 7478,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7468,
											"end": 7508,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7610,
											"end": 7616,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7595,
											"end": 7617,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 7574,
											"end": 7592,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7562,
											"end": 7572,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7559,
											"end": 7593,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7556,
											"end": 7618,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 7553,
											"end": 7641,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7553,
											"end": 7641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 7553,
											"end": 7641,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7621,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 7621,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 7621,
											"end": 7639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7621,
											"end": 7639,
											"name": "tag",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 7621,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7553,
											"end": 7641,
											"name": "tag",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 7553,
											"end": 7641,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7661,
											"end": 7671,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7657,
											"end": 7659,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7650,
											"end": 7672,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7440,
											"end": 7678,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7397,
											"end": 7678,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7397,
											"end": 7678,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7397,
											"end": 7678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7684,
											"end": 7813,
											"name": "tag",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 7684,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7718,
											"end": 7724,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 7745,
											"end": 7765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "tag",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 7745,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7735,
											"end": 7765,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7735,
											"end": 7765,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7774,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 7802,
											"end": 7806,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7774,
											"end": 7807,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 7774,
											"end": 7807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7774,
											"end": 7807,
											"name": "tag",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 7774,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7684,
											"end": 7813,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7684,
											"end": 7813,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7684,
											"end": 7813,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7684,
											"end": 7813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7819,
											"end": 8127,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 7819,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7881,
											"end": 7885,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7963,
											"end": 7969,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7960,
											"end": 7990,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7957,
											"end": 8013,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7957,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 7957,
											"end": 8013,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7993,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 7993,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 7993,
											"end": 8011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7993,
											"end": 8011,
											"name": "tag",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 7993,
											"end": 8011,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7957,
											"end": 8013,
											"name": "tag",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 7957,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8031,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 8053,
											"end": 8059,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8031,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 8031,
											"end": 8060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8031,
											"end": 8060,
											"name": "tag",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 8031,
											"end": 8060,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8023,
											"end": 8060,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8023,
											"end": 8060,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8115,
											"end": 8119,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8109,
											"end": 8113,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8105,
											"end": 8120,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8097,
											"end": 8120,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8097,
											"end": 8120,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7819,
											"end": 8127,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7819,
											"end": 8127,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7819,
											"end": 8127,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7819,
											"end": 8127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8133,
											"end": 8279,
											"name": "tag",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 8133,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8230,
											"end": 8236,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8225,
											"end": 8228,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8220,
											"end": 8223,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8207,
											"end": 8237,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 8271,
											"end": 8272,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8262,
											"end": 8268,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8257,
											"end": 8260,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8253,
											"end": 8269,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8246,
											"end": 8273,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8133,
											"end": 8279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8133,
											"end": 8279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8133,
											"end": 8279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8133,
											"end": 8279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8285,
											"end": 8710,
											"name": "tag",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 8285,
											"end": 8710,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8363,
											"end": 8368,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8388,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 8404,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8404,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 8404,
											"end": 8453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8404,
											"end": 8453,
											"name": "tag",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 8404,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8388,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 8388,
											"end": 8454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8388,
											"end": 8454,
											"name": "tag",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 8388,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8379,
											"end": 8454,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8379,
											"end": 8454,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8477,
											"end": 8483,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8470,
											"end": 8475,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8463,
											"end": 8484,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8515,
											"end": 8519,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8508,
											"end": 8513,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8553,
											"end": 8556,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8544,
											"end": 8550,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8539,
											"end": 8542,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8535,
											"end": 8551,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8532,
											"end": 8557,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8529,
											"end": 8641,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8529,
											"end": 8641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 8529,
											"end": 8641,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8560,
											"end": 8639,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 8560,
											"end": 8639,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 8560,
											"end": 8639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8560,
											"end": 8639,
											"name": "tag",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 8560,
											"end": 8639,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8529,
											"end": 8641,
											"name": "tag",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 8529,
											"end": 8641,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8650,
											"end": 8704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 8697,
											"end": 8703,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8692,
											"end": 8695,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8687,
											"end": 8690,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8650,
											"end": 8704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 8650,
											"end": 8704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8650,
											"end": 8704,
											"name": "tag",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 8650,
											"end": 8704,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8369,
											"end": 8710,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8285,
											"end": 8710,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8285,
											"end": 8710,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8285,
											"end": 8710,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8285,
											"end": 8710,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8285,
											"end": 8710,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8285,
											"end": 8710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8730,
											"end": 9070,
											"name": "tag",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 8730,
											"end": 9070,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8786,
											"end": 8791,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8835,
											"end": 8838,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8828,
											"end": 8832,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 8820,
											"end": 8826,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8816,
											"end": 8833,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8812,
											"end": 8839,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8802,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 8802,
											"end": 8924,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8843,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "636"
										},
										{
											"begin": 8843,
											"end": 8922,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 8843,
											"end": 8922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8843,
											"end": 8922,
											"name": "tag",
											"source": 14,
											"value": "636"
										},
										{
											"begin": 8843,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8802,
											"end": 8924,
											"name": "tag",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 8802,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8960,
											"end": 8966,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8947,
											"end": 8967,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 8985,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 9060,
											"end": 9063,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9052,
											"end": 9058,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9045,
											"end": 9049,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9037,
											"end": 9043,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9033,
											"end": 9050,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8985,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 8985,
											"end": 9064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8985,
											"end": 9064,
											"name": "tag",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 8985,
											"end": 9064,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8976,
											"end": 9064,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8976,
											"end": 9064,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8792,
											"end": 9070,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8730,
											"end": 9070,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8730,
											"end": 9070,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8730,
											"end": 9070,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8730,
											"end": 9070,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8730,
											"end": 9070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9076,
											"end": 9192,
											"name": "tag",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 9076,
											"end": 9192,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9146,
											"end": 9167,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 9161,
											"end": 9166,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9146,
											"end": 9167,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 9146,
											"end": 9167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9146,
											"end": 9167,
											"name": "tag",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 9146,
											"end": 9167,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9139,
											"end": 9144,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9136,
											"end": 9168,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 9126,
											"end": 9186,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 9126,
											"end": 9186,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9182,
											"end": 9183,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9179,
											"end": 9180,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9172,
											"end": 9184,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9126,
											"end": 9186,
											"name": "tag",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 9126,
											"end": 9186,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9076,
											"end": 9192,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9076,
											"end": 9192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9198,
											"end": 9331,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 9198,
											"end": 9331,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9241,
											"end": 9246,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9279,
											"end": 9285,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9266,
											"end": 9286,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 9257,
											"end": 9286,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9257,
											"end": 9286,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9295,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9295,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 9295,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9295,
											"end": 9325,
											"name": "tag",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 9295,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9198,
											"end": 9331,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9198,
											"end": 9331,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9198,
											"end": 9331,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9198,
											"end": 9331,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9198,
											"end": 9331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9337,
											"end": 10306,
											"name": "tag",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 9337,
											"end": 10306,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9445,
											"end": 9451,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9453,
											"end": 9459,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9461,
											"end": 9467,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9469,
											"end": 9475,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9518,
											"end": 9521,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 9506,
											"end": 9515,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9497,
											"end": 9504,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9493,
											"end": 9516,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9489,
											"end": 9522,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9486,
											"end": 9606,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9486,
											"end": 9606,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "644"
										},
										{
											"begin": 9486,
											"end": 9606,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9525,
											"end": 9604,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 9525,
											"end": 9604,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 9525,
											"end": 9604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9525,
											"end": 9604,
											"name": "tag",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 9525,
											"end": 9604,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9486,
											"end": 9606,
											"name": "tag",
											"source": 14,
											"value": "644"
										},
										{
											"begin": 9486,
											"end": 9606,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9645,
											"end": 9646,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9670,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 9730,
											"end": 9737,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9721,
											"end": 9727,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9710,
											"end": 9719,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 9706,
											"end": 9728,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9670,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 9670,
											"end": 9738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9670,
											"end": 9738,
											"name": "tag",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 9670,
											"end": 9738,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9660,
											"end": 9738,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 9660,
											"end": 9738,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9616,
											"end": 9748,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9787,
											"end": 9789,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9813,
											"end": 9866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 9858,
											"end": 9865,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9849,
											"end": 9855,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9838,
											"end": 9847,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 9834,
											"end": 9856,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9813,
											"end": 9866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 9813,
											"end": 9866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9813,
											"end": 9866,
											"name": "tag",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 9813,
											"end": 9866,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9803,
											"end": 9866,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9803,
											"end": 9866,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9758,
											"end": 9876,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9943,
											"end": 9945,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9932,
											"end": 9941,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9928,
											"end": 9946,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9915,
											"end": 9947,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 9974,
											"end": 9992,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9966,
											"end": 9972,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9963,
											"end": 9993,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9960,
											"end": 10077,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9960,
											"end": 10077,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 9960,
											"end": 10077,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9996,
											"end": 10075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 9996,
											"end": 10075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 9996,
											"end": 10075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9996,
											"end": 10075,
											"name": "tag",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 9996,
											"end": 10075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9960,
											"end": 10077,
											"name": "tag",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 9960,
											"end": 10077,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10101,
											"end": 10164,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "650"
										},
										{
											"begin": 10156,
											"end": 10163,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10147,
											"end": 10153,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10136,
											"end": 10145,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10132,
											"end": 10154,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10101,
											"end": 10164,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 10101,
											"end": 10164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10101,
											"end": 10164,
											"name": "tag",
											"source": 14,
											"value": "650"
										},
										{
											"begin": 10101,
											"end": 10164,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10091,
											"end": 10164,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10091,
											"end": 10164,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9886,
											"end": 10174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10213,
											"end": 10215,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10239,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 10281,
											"end": 10288,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10272,
											"end": 10278,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10261,
											"end": 10270,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10257,
											"end": 10279,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10239,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 10239,
											"end": 10289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10239,
											"end": 10289,
											"name": "tag",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 10239,
											"end": 10289,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10229,
											"end": 10289,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10229,
											"end": 10289,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10184,
											"end": 10299,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9337,
											"end": 10306,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9337,
											"end": 10306,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 9337,
											"end": 10306,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9337,
											"end": 10306,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 9337,
											"end": 10306,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9337,
											"end": 10306,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9337,
											"end": 10306,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9337,
											"end": 10306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10312,
											"end": 10786,
											"name": "tag",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 10312,
											"end": 10786,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10380,
											"end": 10386,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10388,
											"end": 10394,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10437,
											"end": 10439,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10425,
											"end": 10434,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10416,
											"end": 10423,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10412,
											"end": 10435,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10408,
											"end": 10440,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10405,
											"end": 10524,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10405,
											"end": 10524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 10405,
											"end": 10524,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10443,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 10443,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 10443,
											"end": 10522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10443,
											"end": 10522,
											"name": "tag",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 10443,
											"end": 10522,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10405,
											"end": 10524,
											"name": "tag",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 10405,
											"end": 10524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10563,
											"end": 10564,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10588,
											"end": 10641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "655"
										},
										{
											"begin": 10633,
											"end": 10640,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10624,
											"end": 10630,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10613,
											"end": 10622,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10609,
											"end": 10631,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10588,
											"end": 10641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 10588,
											"end": 10641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10588,
											"end": 10641,
											"name": "tag",
											"source": 14,
											"value": "655"
										},
										{
											"begin": 10588,
											"end": 10641,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10578,
											"end": 10641,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10578,
											"end": 10641,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10534,
											"end": 10651,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10690,
											"end": 10692,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10716,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 10761,
											"end": 10768,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10752,
											"end": 10758,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10741,
											"end": 10750,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10737,
											"end": 10759,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10716,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 10716,
											"end": 10769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10716,
											"end": 10769,
											"name": "tag",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 10716,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10706,
											"end": 10769,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10706,
											"end": 10769,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10661,
											"end": 10779,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10312,
											"end": 10786,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10312,
											"end": 10786,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10312,
											"end": 10786,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10312,
											"end": 10786,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10312,
											"end": 10786,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10312,
											"end": 10786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10792,
											"end": 11041,
											"name": "tag",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 10792,
											"end": 11041,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10867,
											"end": 10871,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10957,
											"end": 10975,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10949,
											"end": 10955,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10946,
											"end": 10976,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10943,
											"end": 10999,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10943,
											"end": 10999,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 10943,
											"end": 10999,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10979,
											"end": 10997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 10979,
											"end": 10997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 10979,
											"end": 10997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10979,
											"end": 10997,
											"name": "tag",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 10979,
											"end": 10997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10943,
											"end": 10999,
											"name": "tag",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 10943,
											"end": 10999,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11029,
											"end": 11033,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11021,
											"end": 11027,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11017,
											"end": 11034,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 11009,
											"end": 11034,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11009,
											"end": 11034,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10792,
											"end": 11041,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10792,
											"end": 11041,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10792,
											"end": 11041,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10792,
											"end": 11041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11047,
											"end": 11164,
											"name": "tag",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 11047,
											"end": 11164,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11156,
											"end": 11157,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11153,
											"end": 11154,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11146,
											"end": 11158,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11188,
											"end": 11831,
											"name": "tag",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 11188,
											"end": 11831,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11282,
											"end": 11287,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11307,
											"end": 11386,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 11323,
											"end": 11385,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 11378,
											"end": 11384,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11323,
											"end": 11385,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 11323,
											"end": 11385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11323,
											"end": 11385,
											"name": "tag",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 11323,
											"end": 11385,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11307,
											"end": 11386,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 11307,
											"end": 11386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11307,
											"end": 11386,
											"name": "tag",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 11307,
											"end": 11386,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11298,
											"end": 11386,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11298,
											"end": 11386,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11406,
											"end": 11411,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11459,
											"end": 11463,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11447,
											"end": 11464,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 11439,
											"end": 11445,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11435,
											"end": 11465,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11488,
											"end": 11491,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11480,
											"end": 11486,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11477,
											"end": 11492,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11474,
											"end": 11596,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11474,
											"end": 11596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 11474,
											"end": 11596,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11507,
											"end": 11586,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 11507,
											"end": 11586,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 11507,
											"end": 11586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11507,
											"end": 11586,
											"name": "tag",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 11507,
											"end": 11586,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11474,
											"end": 11596,
											"name": "tag",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 11474,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11622,
											"end": 11628,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11605,
											"end": 11825,
											"name": "tag",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 11605,
											"end": 11825,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11639,
											"end": 11645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11634,
											"end": 11637,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11631,
											"end": 11646,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 11605,
											"end": 11825,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11605,
											"end": 11825,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 11605,
											"end": 11825,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11714,
											"end": 11717,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11743,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "669"
										},
										{
											"begin": 11776,
											"end": 11779,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11764,
											"end": 11774,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11743,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 11743,
											"end": 11780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11743,
											"end": 11780,
											"name": "tag",
											"source": 14,
											"value": "669"
										},
										{
											"begin": 11743,
											"end": 11780,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11738,
											"end": 11741,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11731,
											"end": 11781,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11810,
											"end": 11814,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11805,
											"end": 11808,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11801,
											"end": 11815,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11794,
											"end": 11815,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11794,
											"end": 11815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11681,
											"end": 11825,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11665,
											"end": 11669,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11660,
											"end": 11663,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11656,
											"end": 11670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11649,
											"end": 11670,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11649,
											"end": 11670,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11605,
											"end": 11825,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 11605,
											"end": 11825,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11605,
											"end": 11825,
											"name": "tag",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 11605,
											"end": 11825,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11609,
											"end": 11630,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11288,
											"end": 11831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11288,
											"end": 11831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11188,
											"end": 11831,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11188,
											"end": 11831,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11188,
											"end": 11831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11188,
											"end": 11831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11188,
											"end": 11831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11188,
											"end": 11831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11855,
											"end": 12194,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 11855,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11924,
											"end": 11929,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11973,
											"end": 11976,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11966,
											"end": 11970,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11958,
											"end": 11964,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11954,
											"end": 11971,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11950,
											"end": 11977,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11940,
											"end": 12062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "671"
										},
										{
											"begin": 11940,
											"end": 12062,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11981,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 11981,
											"end": 12060,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 11981,
											"end": 12060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11981,
											"end": 12060,
											"name": "tag",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 11981,
											"end": 12060,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11940,
											"end": 12062,
											"name": "tag",
											"source": 14,
											"value": "671"
										},
										{
											"begin": 11940,
											"end": 12062,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12085,
											"end": 12089,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 12107,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 12184,
											"end": 12187,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12176,
											"end": 12182,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12168,
											"end": 12174,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12107,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 12107,
											"end": 12188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12107,
											"end": 12188,
											"name": "tag",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 12107,
											"end": 12188,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12098,
											"end": 12188,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12098,
											"end": 12188,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11930,
											"end": 12194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11855,
											"end": 12194,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11855,
											"end": 12194,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11855,
											"end": 12194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11855,
											"end": 12194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11855,
											"end": 12194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12200,
											"end": 12867,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 12200,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12300,
											"end": 12306,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12308,
											"end": 12314,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12316,
											"end": 12322,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12365,
											"end": 12368,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12344,
											"end": 12351,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12340,
											"end": 12363,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12336,
											"end": 12369,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 12333,
											"end": 12453,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12333,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "675"
										},
										{
											"begin": 12333,
											"end": 12453,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12372,
											"end": 12451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 12372,
											"end": 12451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 12372,
											"end": 12451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12372,
											"end": 12451,
											"name": "tag",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 12372,
											"end": 12451,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12333,
											"end": 12453,
											"name": "tag",
											"source": 14,
											"value": "675"
										},
										{
											"begin": 12333,
											"end": 12453,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12492,
											"end": 12493,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12517,
											"end": 12570,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "677"
										},
										{
											"begin": 12562,
											"end": 12569,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12553,
											"end": 12559,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12542,
											"end": 12551,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 12538,
											"end": 12560,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12517,
											"end": 12570,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 12517,
											"end": 12570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12517,
											"end": 12570,
											"name": "tag",
											"source": 14,
											"value": "677"
										},
										{
											"begin": 12517,
											"end": 12570,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12507,
											"end": 12570,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 12507,
											"end": 12570,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12463,
											"end": 12580,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12619,
											"end": 12621,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12645,
											"end": 12721,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "678"
										},
										{
											"begin": 12713,
											"end": 12720,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12704,
											"end": 12710,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12693,
											"end": 12702,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 12689,
											"end": 12711,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12645,
											"end": 12721,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 12645,
											"end": 12721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12645,
											"end": 12721,
											"name": "tag",
											"source": 14,
											"value": "678"
										},
										{
											"begin": 12645,
											"end": 12721,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12635,
											"end": 12721,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12635,
											"end": 12721,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12590,
											"end": 12731,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12770,
											"end": 12773,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 12797,
											"end": 12850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 12842,
											"end": 12849,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12833,
											"end": 12839,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12822,
											"end": 12831,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 12818,
											"end": 12840,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12797,
											"end": 12850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 12797,
											"end": 12850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12797,
											"end": 12850,
											"name": "tag",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 12797,
											"end": 12850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12787,
											"end": 12850,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12787,
											"end": 12850,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12741,
											"end": 12860,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12200,
											"end": 12867,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12200,
											"end": 12867,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12200,
											"end": 12867,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12200,
											"end": 12867,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12200,
											"end": 12867,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12200,
											"end": 12867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12873,
											"end": 13347,
											"name": "tag",
											"source": 14,
											"value": "96"
										},
										{
											"begin": 12873,
											"end": 13347,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12941,
											"end": 12947,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12949,
											"end": 12955,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12998,
											"end": 13000,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12986,
											"end": 12995,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12977,
											"end": 12984,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12973,
											"end": 12996,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12969,
											"end": 13001,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 12966,
											"end": 13085,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12966,
											"end": 13085,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 12966,
											"end": 13085,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13004,
											"end": 13083,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 13004,
											"end": 13083,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 13004,
											"end": 13083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13004,
											"end": 13083,
											"name": "tag",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 13004,
											"end": 13083,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12966,
											"end": 13085,
											"name": "tag",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 12966,
											"end": 13085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13124,
											"end": 13125,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13149,
											"end": 13202,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 13194,
											"end": 13201,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13185,
											"end": 13191,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13174,
											"end": 13183,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13170,
											"end": 13192,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13149,
											"end": 13202,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 13149,
											"end": 13202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13149,
											"end": 13202,
											"name": "tag",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 13149,
											"end": 13202,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13139,
											"end": 13202,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13139,
											"end": 13202,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13095,
											"end": 13212,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13251,
											"end": 13253,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13277,
											"end": 13330,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "684"
										},
										{
											"begin": 13322,
											"end": 13329,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13313,
											"end": 13319,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13302,
											"end": 13311,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13298,
											"end": 13320,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13277,
											"end": 13330,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 13277,
											"end": 13330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13277,
											"end": 13330,
											"name": "tag",
											"source": 14,
											"value": "684"
										},
										{
											"begin": 13277,
											"end": 13330,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13267,
											"end": 13330,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13267,
											"end": 13330,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13222,
											"end": 13340,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12873,
											"end": 13347,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12873,
											"end": 13347,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12873,
											"end": 13347,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12873,
											"end": 13347,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12873,
											"end": 13347,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12873,
											"end": 13347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13353,
											"end": 13685,
											"name": "tag",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 13353,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13474,
											"end": 13478,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13512,
											"end": 13514,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13501,
											"end": 13510,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13497,
											"end": 13515,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13489,
											"end": 13515,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13489,
											"end": 13515,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13525,
											"end": 13596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "686"
										},
										{
											"begin": 13593,
											"end": 13594,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13582,
											"end": 13591,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13578,
											"end": 13595,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13569,
											"end": 13575,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13525,
											"end": 13596,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 13525,
											"end": 13596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13525,
											"end": 13596,
											"name": "tag",
											"source": 14,
											"value": "686"
										},
										{
											"begin": 13525,
											"end": 13596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13606,
											"end": 13678,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 13674,
											"end": 13676,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13663,
											"end": 13672,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13659,
											"end": 13677,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13650,
											"end": 13656,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13606,
											"end": 13678,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 13606,
											"end": 13678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13606,
											"end": 13678,
											"name": "tag",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 13606,
											"end": 13678,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13353,
											"end": 13685,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 13353,
											"end": 13685,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13353,
											"end": 13685,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13353,
											"end": 13685,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13353,
											"end": 13685,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13353,
											"end": 13685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13691,
											"end": 14304,
											"name": "tag",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 13691,
											"end": 14304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13765,
											"end": 13771,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13773,
											"end": 13779,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13781,
											"end": 13787,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13830,
											"end": 13832,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 13818,
											"end": 13827,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13809,
											"end": 13816,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13805,
											"end": 13828,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13801,
											"end": 13833,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13798,
											"end": 13917,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13798,
											"end": 13917,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "689"
										},
										{
											"begin": 13798,
											"end": 13917,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13836,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 13836,
											"end": 13915,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 13836,
											"end": 13915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13836,
											"end": 13915,
											"name": "tag",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 13836,
											"end": 13915,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13798,
											"end": 13917,
											"name": "tag",
											"source": 14,
											"value": "689"
										},
										{
											"begin": 13798,
											"end": 13917,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13956,
											"end": 13957,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13981,
											"end": 14034,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "691"
										},
										{
											"begin": 14026,
											"end": 14033,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 14017,
											"end": 14023,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14006,
											"end": 14015,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 14002,
											"end": 14024,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13981,
											"end": 14034,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 13981,
											"end": 14034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13981,
											"end": 14034,
											"name": "tag",
											"source": 14,
											"value": "691"
										},
										{
											"begin": 13981,
											"end": 14034,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13971,
											"end": 14034,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 13971,
											"end": 14034,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13927,
											"end": 14044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14083,
											"end": 14085,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14109,
											"end": 14162,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "692"
										},
										{
											"begin": 14154,
											"end": 14161,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 14145,
											"end": 14151,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14134,
											"end": 14143,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 14130,
											"end": 14152,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14109,
											"end": 14162,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 14109,
											"end": 14162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14109,
											"end": 14162,
											"name": "tag",
											"source": 14,
											"value": "692"
										},
										{
											"begin": 14109,
											"end": 14162,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14099,
											"end": 14162,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14099,
											"end": 14162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14054,
											"end": 14172,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14211,
											"end": 14213,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14237,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "693"
										},
										{
											"begin": 14279,
											"end": 14286,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 14270,
											"end": 14276,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14259,
											"end": 14268,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 14255,
											"end": 14277,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14237,
											"end": 14287,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 14237,
											"end": 14287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14237,
											"end": 14287,
											"name": "tag",
											"source": 14,
											"value": "693"
										},
										{
											"begin": 14237,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14227,
											"end": 14287,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14227,
											"end": 14287,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14182,
											"end": 14297,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13691,
											"end": 14304,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13691,
											"end": 14304,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13691,
											"end": 14304,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13691,
											"end": 14304,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13691,
											"end": 14304,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13691,
											"end": 14304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14310,
											"end": 14639,
											"name": "tag",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 14310,
											"end": 14639,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14369,
											"end": 14375,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14418,
											"end": 14420,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14406,
											"end": 14415,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14397,
											"end": 14404,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14393,
											"end": 14416,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14389,
											"end": 14421,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 14386,
											"end": 14505,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14386,
											"end": 14505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 14386,
											"end": 14505,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14424,
											"end": 14503,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 14424,
											"end": 14503,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 14424,
											"end": 14503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14424,
											"end": 14503,
											"name": "tag",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 14424,
											"end": 14503,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14386,
											"end": 14505,
											"name": "tag",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 14386,
											"end": 14505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14544,
											"end": 14545,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14569,
											"end": 14622,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14605,
											"end": 14611,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14594,
											"end": 14603,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14590,
											"end": 14612,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14569,
											"end": 14622,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 14569,
											"end": 14622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14569,
											"end": 14622,
											"name": "tag",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 14569,
											"end": 14622,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14559,
											"end": 14622,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14559,
											"end": 14622,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14515,
											"end": 14632,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14310,
											"end": 14639,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14310,
											"end": 14639,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14310,
											"end": 14639,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14310,
											"end": 14639,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14310,
											"end": 14639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14645,
											"end": 14814,
											"name": "tag",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 14645,
											"end": 14814,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14729,
											"end": 14740,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14763,
											"end": 14769,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14758,
											"end": 14761,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14751,
											"end": 14770,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14803,
											"end": 14807,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14798,
											"end": 14801,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14794,
											"end": 14808,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14779,
											"end": 14808,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14779,
											"end": 14808,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14645,
											"end": 14814,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14645,
											"end": 14814,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14645,
											"end": 14814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14645,
											"end": 14814,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14645,
											"end": 14814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14820,
											"end": 15054,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 14820,
											"end": 15054,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14960,
											"end": 14994,
											"name": "PUSH",
											"source": 14,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 14956,
											"end": 14957,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14948,
											"end": 14954,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14944,
											"end": 14958,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14937,
											"end": 14995,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15029,
											"end": 15046,
											"name": "PUSH",
											"source": 14,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 15024,
											"end": 15026,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15016,
											"end": 15022,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15012,
											"end": 15027,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15005,
											"end": 15047,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14820,
											"end": 15054,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14820,
											"end": 15054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15060,
											"end": 15426,
											"name": "tag",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 15060,
											"end": 15426,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15202,
											"end": 15205,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15223,
											"end": 15290,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 15287,
											"end": 15289,
											"name": "PUSH",
											"source": 14,
											"value": "2F"
										},
										{
											"begin": 15282,
											"end": 15285,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15223,
											"end": 15290,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 15223,
											"end": 15290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15223,
											"end": 15290,
											"name": "tag",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 15223,
											"end": 15290,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15216,
											"end": 15290,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15216,
											"end": 15290,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15299,
											"end": 15392,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "702"
										},
										{
											"begin": 15388,
											"end": 15391,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15299,
											"end": 15392,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 15299,
											"end": 15392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15299,
											"end": 15392,
											"name": "tag",
											"source": 14,
											"value": "702"
										},
										{
											"begin": 15299,
											"end": 15392,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15417,
											"end": 15419,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15412,
											"end": 15415,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15408,
											"end": 15420,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15401,
											"end": 15420,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15401,
											"end": 15420,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15060,
											"end": 15426,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15060,
											"end": 15426,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15060,
											"end": 15426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15060,
											"end": 15426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15432,
											"end": 15851,
											"name": "tag",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 15432,
											"end": 15851,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15598,
											"end": 15602,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15636,
											"end": 15638,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15625,
											"end": 15634,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15621,
											"end": 15639,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15613,
											"end": 15639,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15613,
											"end": 15639,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15685,
											"end": 15694,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15679,
											"end": 15683,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15675,
											"end": 15695,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15671,
											"end": 15672,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15660,
											"end": 15669,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15656,
											"end": 15673,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15649,
											"end": 15696,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15713,
											"end": 15844,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 15839,
											"end": 15843,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15713,
											"end": 15844,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 15713,
											"end": 15844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15713,
											"end": 15844,
											"name": "tag",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 15713,
											"end": 15844,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15705,
											"end": 15844,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15705,
											"end": 15844,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15432,
											"end": 15851,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15432,
											"end": 15851,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15432,
											"end": 15851,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15432,
											"end": 15851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15857,
											"end": 16005,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 15857,
											"end": 16005,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15959,
											"end": 15970,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15996,
											"end": 15999,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15857,
											"end": 16005,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15857,
											"end": 16005,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15857,
											"end": 16005,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15857,
											"end": 16005,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15857,
											"end": 16005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16011,
											"end": 16169,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 16011,
											"end": 16169,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16151,
											"end": 16161,
											"name": "PUSH",
											"source": 14,
											"value": "476F7665726E6F72000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16147,
											"end": 16148,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16139,
											"end": 16145,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16135,
											"end": 16149,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16128,
											"end": 16162,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16011,
											"end": 16169,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16011,
											"end": 16169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16175,
											"end": 16575,
											"name": "tag",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 16175,
											"end": 16575,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16335,
											"end": 16338,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16356,
											"end": 16440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 16438,
											"end": 16439,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 16433,
											"end": 16436,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16356,
											"end": 16440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 16356,
											"end": 16440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16356,
											"end": 16440,
											"name": "tag",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 16356,
											"end": 16440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16349,
											"end": 16440,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16349,
											"end": 16440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16449,
											"end": 16542,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 16538,
											"end": 16541,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16449,
											"end": 16542,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 16449,
											"end": 16542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16449,
											"end": 16542,
											"name": "tag",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 16449,
											"end": 16542,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16567,
											"end": 16568,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 16562,
											"end": 16565,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16558,
											"end": 16569,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16551,
											"end": 16569,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16551,
											"end": 16569,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16175,
											"end": 16575,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16175,
											"end": 16575,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16175,
											"end": 16575,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16175,
											"end": 16575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16581,
											"end": 16962,
											"name": "tag",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 16581,
											"end": 16962,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16766,
											"end": 16769,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16788,
											"end": 16936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "711"
										},
										{
											"begin": 16932,
											"end": 16935,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16788,
											"end": 16936,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 16788,
											"end": 16936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16788,
											"end": 16936,
											"name": "tag",
											"source": 14,
											"value": "711"
										},
										{
											"begin": 16788,
											"end": 16936,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16781,
											"end": 16936,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16781,
											"end": 16936,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16953,
											"end": 16956,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16946,
											"end": 16956,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16946,
											"end": 16956,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16581,
											"end": 16962,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16581,
											"end": 16962,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16581,
											"end": 16962,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16581,
											"end": 16962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16968,
											"end": 17148,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 16968,
											"end": 17148,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17016,
											"end": 17093,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17013,
											"end": 17014,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17006,
											"end": 17094,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17113,
											"end": 17117,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 17110,
											"end": 17111,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 17103,
											"end": 17118,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17137,
											"end": 17141,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 17134,
											"end": 17135,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17127,
											"end": 17142,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 17154,
											"end": 17345,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 17154,
											"end": 17345,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17194,
											"end": 17197,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17213,
											"end": 17233,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "714"
										},
										{
											"begin": 17231,
											"end": 17232,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17213,
											"end": 17233,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 17213,
											"end": 17233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17213,
											"end": 17233,
											"name": "tag",
											"source": 14,
											"value": "714"
										},
										{
											"begin": 17213,
											"end": 17233,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17208,
											"end": 17233,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17208,
											"end": 17233,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17247,
											"end": 17267,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "715"
										},
										{
											"begin": 17265,
											"end": 17266,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17247,
											"end": 17267,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 17247,
											"end": 17267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17247,
											"end": 17267,
											"name": "tag",
											"source": 14,
											"value": "715"
										},
										{
											"begin": 17247,
											"end": 17267,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17242,
											"end": 17267,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17242,
											"end": 17267,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17290,
											"end": 17291,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17287,
											"end": 17288,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17283,
											"end": 17292,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17276,
											"end": 17292,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17276,
											"end": 17292,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17311,
											"end": 17314,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17308,
											"end": 17309,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17305,
											"end": 17315,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 17302,
											"end": 17338,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17302,
											"end": 17338,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "716"
										},
										{
											"begin": 17302,
											"end": 17338,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17318,
											"end": 17336,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "717"
										},
										{
											"begin": 17318,
											"end": 17336,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 17318,
											"end": 17336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17318,
											"end": 17336,
											"name": "tag",
											"source": 14,
											"value": "717"
										},
										{
											"begin": 17318,
											"end": 17336,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17302,
											"end": 17338,
											"name": "tag",
											"source": 14,
											"value": "716"
										},
										{
											"begin": 17302,
											"end": 17338,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17154,
											"end": 17345,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17154,
											"end": 17345,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17154,
											"end": 17345,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17154,
											"end": 17345,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17154,
											"end": 17345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17351,
											"end": 17531,
											"name": "tag",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 17351,
											"end": 17531,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17399,
											"end": 17476,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17396,
											"end": 17397,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17389,
											"end": 17477,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17496,
											"end": 17500,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 17493,
											"end": 17494,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 17486,
											"end": 17501,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17520,
											"end": 17524,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 17517,
											"end": 17518,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17510,
											"end": 17525,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 17537,
											"end": 17701,
											"name": "tag",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 17537,
											"end": 17701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17677,
											"end": 17693,
											"name": "PUSH",
											"source": 14,
											"value": "4661726D3A206E6F7420676F6F64000000000000000000000000000000000000"
										},
										{
											"begin": 17673,
											"end": 17674,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17665,
											"end": 17671,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17661,
											"end": 17675,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17654,
											"end": 17694,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17537,
											"end": 17701,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17537,
											"end": 17701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17707,
											"end": 18073,
											"name": "tag",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 17707,
											"end": 18073,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17849,
											"end": 17852,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17870,
											"end": 17937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 17934,
											"end": 17936,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 17929,
											"end": 17932,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17870,
											"end": 17937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 17870,
											"end": 17937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17870,
											"end": 17937,
											"name": "tag",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 17870,
											"end": 17937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17863,
											"end": 17937,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17863,
											"end": 17937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17946,
											"end": 18039,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "722"
										},
										{
											"begin": 18035,
											"end": 18038,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17946,
											"end": 18039,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 17946,
											"end": 18039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17946,
											"end": 18039,
											"name": "tag",
											"source": 14,
											"value": "722"
										},
										{
											"begin": 17946,
											"end": 18039,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18064,
											"end": 18066,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18059,
											"end": 18062,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18055,
											"end": 18067,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18048,
											"end": 18067,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18048,
											"end": 18067,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17707,
											"end": 18073,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17707,
											"end": 18073,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17707,
											"end": 18073,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17707,
											"end": 18073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18079,
											"end": 18498,
											"name": "tag",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 18079,
											"end": 18498,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18245,
											"end": 18249,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18283,
											"end": 18285,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18272,
											"end": 18281,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18268,
											"end": 18286,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18260,
											"end": 18286,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18260,
											"end": 18286,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18332,
											"end": 18341,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18326,
											"end": 18330,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18322,
											"end": 18342,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18318,
											"end": 18319,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18307,
											"end": 18316,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18303,
											"end": 18320,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18296,
											"end": 18343,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18360,
											"end": 18491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "724"
										},
										{
											"begin": 18486,
											"end": 18490,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18360,
											"end": 18491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 18360,
											"end": 18491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18360,
											"end": 18491,
											"name": "tag",
											"source": 14,
											"value": "724"
										},
										{
											"begin": 18360,
											"end": 18491,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18352,
											"end": 18491,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18352,
											"end": 18491,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18079,
											"end": 18498,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18079,
											"end": 18498,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18079,
											"end": 18498,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18079,
											"end": 18498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18504,
											"end": 18914,
											"name": "tag",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 18504,
											"end": 18914,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18544,
											"end": 18551,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18567,
											"end": 18587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "726"
										},
										{
											"begin": 18585,
											"end": 18586,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18567,
											"end": 18587,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 18567,
											"end": 18587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18567,
											"end": 18587,
											"name": "tag",
											"source": 14,
											"value": "726"
										},
										{
											"begin": 18567,
											"end": 18587,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18562,
											"end": 18587,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18562,
											"end": 18587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18601,
											"end": 18621,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "727"
										},
										{
											"begin": 18619,
											"end": 18620,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18601,
											"end": 18621,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 18601,
											"end": 18621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18601,
											"end": 18621,
											"name": "tag",
											"source": 14,
											"value": "727"
										},
										{
											"begin": 18601,
											"end": 18621,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18596,
											"end": 18621,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18596,
											"end": 18621,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18656,
											"end": 18657,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18653,
											"end": 18654,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18649,
											"end": 18658,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 18678,
											"end": 18708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "728"
										},
										{
											"begin": 18696,
											"end": 18707,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18678,
											"end": 18708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 18678,
											"end": 18708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18678,
											"end": 18708,
											"name": "tag",
											"source": 14,
											"value": "728"
										},
										{
											"begin": 18678,
											"end": 18708,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18667,
											"end": 18708,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18667,
											"end": 18708,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18857,
											"end": 18858,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18848,
											"end": 18855,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18844,
											"end": 18859,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 18841,
											"end": 18842,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18838,
											"end": 18860,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18818,
											"end": 18819,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18811,
											"end": 18820,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18791,
											"end": 18874,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 18768,
											"end": 18907,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "729"
										},
										{
											"begin": 18768,
											"end": 18907,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18887,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "730"
										},
										{
											"begin": 18887,
											"end": 18905,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 18887,
											"end": 18905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18887,
											"end": 18905,
											"name": "tag",
											"source": 14,
											"value": "730"
										},
										{
											"begin": 18887,
											"end": 18905,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18768,
											"end": 18907,
											"name": "tag",
											"source": 14,
											"value": "729"
										},
										{
											"begin": 18768,
											"end": 18907,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18552,
											"end": 18914,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18504,
											"end": 18914,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18504,
											"end": 18914,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18504,
											"end": 18914,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18504,
											"end": 18914,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18504,
											"end": 18914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18920,
											"end": 19100,
											"name": "tag",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 18920,
											"end": 19100,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18968,
											"end": 19045,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18965,
											"end": 18966,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18958,
											"end": 19046,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19065,
											"end": 19069,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 19062,
											"end": 19063,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 19055,
											"end": 19070,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19089,
											"end": 19093,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 19086,
											"end": 19087,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19079,
											"end": 19094,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 19106,
											"end": 19291,
											"name": "tag",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 19106,
											"end": 19291,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19146,
											"end": 19147,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19163,
											"end": 19183,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "733"
										},
										{
											"begin": 19181,
											"end": 19182,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19163,
											"end": 19183,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 19163,
											"end": 19183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19163,
											"end": 19183,
											"name": "tag",
											"source": 14,
											"value": "733"
										},
										{
											"begin": 19163,
											"end": 19183,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19158,
											"end": 19183,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19158,
											"end": 19183,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19197,
											"end": 19217,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 19215,
											"end": 19216,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19197,
											"end": 19217,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 19197,
											"end": 19217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19197,
											"end": 19217,
											"name": "tag",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 19197,
											"end": 19217,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19192,
											"end": 19217,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19192,
											"end": 19217,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19236,
											"end": 19237,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19226,
											"end": 19261,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "735"
										},
										{
											"begin": 19226,
											"end": 19261,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19241,
											"end": 19259,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "736"
										},
										{
											"begin": 19241,
											"end": 19259,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 19241,
											"end": 19259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19241,
											"end": 19259,
											"name": "tag",
											"source": 14,
											"value": "736"
										},
										{
											"begin": 19241,
											"end": 19259,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19226,
											"end": 19261,
											"name": "tag",
											"source": 14,
											"value": "735"
										},
										{
											"begin": 19226,
											"end": 19261,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19283,
											"end": 19284,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19280,
											"end": 19281,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19276,
											"end": 19285,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19271,
											"end": 19285,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19106,
											"end": 19291,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19106,
											"end": 19291,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19106,
											"end": 19291,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19106,
											"end": 19291,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19106,
											"end": 19291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19297,
											"end": 19491,
											"name": "tag",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 19297,
											"end": 19491,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19337,
											"end": 19341,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19357,
											"end": 19377,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "738"
										},
										{
											"begin": 19375,
											"end": 19376,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19357,
											"end": 19377,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 19357,
											"end": 19377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19357,
											"end": 19377,
											"name": "tag",
											"source": 14,
											"value": "738"
										},
										{
											"begin": 19357,
											"end": 19377,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19352,
											"end": 19377,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19352,
											"end": 19377,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19391,
											"end": 19411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "739"
										},
										{
											"begin": 19409,
											"end": 19410,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19391,
											"end": 19411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 19391,
											"end": 19411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19391,
											"end": 19411,
											"name": "tag",
											"source": 14,
											"value": "739"
										},
										{
											"begin": 19391,
											"end": 19411,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19386,
											"end": 19411,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19386,
											"end": 19411,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19435,
											"end": 19436,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19432,
											"end": 19433,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19428,
											"end": 19437,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 19420,
											"end": 19437,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19420,
											"end": 19437,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19459,
											"end": 19460,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19453,
											"end": 19457,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19450,
											"end": 19461,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 19447,
											"end": 19484,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19447,
											"end": 19484,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "740"
										},
										{
											"begin": 19447,
											"end": 19484,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19464,
											"end": 19482,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "741"
										},
										{
											"begin": 19464,
											"end": 19482,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 19464,
											"end": 19482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19464,
											"end": 19482,
											"name": "tag",
											"source": 14,
											"value": "741"
										},
										{
											"begin": 19464,
											"end": 19482,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19447,
											"end": 19484,
											"name": "tag",
											"source": 14,
											"value": "740"
										},
										{
											"begin": 19447,
											"end": 19484,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19297,
											"end": 19491,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19297,
											"end": 19491,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19297,
											"end": 19491,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19297,
											"end": 19491,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19297,
											"end": 19491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19497,
											"end": 19615,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 19497,
											"end": 19615,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19584,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "743"
										},
										{
											"begin": 19602,
											"end": 19607,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19584,
											"end": 19608,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 19584,
											"end": 19608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19584,
											"end": 19608,
											"name": "tag",
											"source": 14,
											"value": "743"
										},
										{
											"begin": 19584,
											"end": 19608,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19579,
											"end": 19582,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19572,
											"end": 19609,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19497,
											"end": 19615,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19497,
											"end": 19615,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19497,
											"end": 19615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19621,
											"end": 19953,
											"name": "tag",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 19621,
											"end": 19953,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19742,
											"end": 19746,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19780,
											"end": 19782,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 19769,
											"end": 19778,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19765,
											"end": 19783,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19757,
											"end": 19783,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19757,
											"end": 19783,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19793,
											"end": 19864,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "745"
										},
										{
											"begin": 19861,
											"end": 19862,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19850,
											"end": 19859,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19846,
											"end": 19863,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19837,
											"end": 19843,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 19793,
											"end": 19864,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 19793,
											"end": 19864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19793,
											"end": 19864,
											"name": "tag",
											"source": 14,
											"value": "745"
										},
										{
											"begin": 19793,
											"end": 19864,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19874,
											"end": 19946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "746"
										},
										{
											"begin": 19942,
											"end": 19944,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19931,
											"end": 19940,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19927,
											"end": 19945,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19918,
											"end": 19924,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19874,
											"end": 19946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 19874,
											"end": 19946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19874,
											"end": 19946,
											"name": "tag",
											"source": 14,
											"value": "746"
										},
										{
											"begin": 19874,
											"end": 19946,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19621,
											"end": 19953,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 19621,
											"end": 19953,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19621,
											"end": 19953,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19621,
											"end": 19953,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19621,
											"end": 19953,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19621,
											"end": 19953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19959,
											"end": 20096,
											"name": "tag",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 19959,
											"end": 20096,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20013,
											"end": 20018,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20044,
											"end": 20050,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20038,
											"end": 20051,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 20029,
											"end": 20051,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20029,
											"end": 20051,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20060,
											"end": 20090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "748"
										},
										{
											"begin": 20084,
											"end": 20089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20060,
											"end": 20090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 20060,
											"end": 20090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20060,
											"end": 20090,
											"name": "tag",
											"source": 14,
											"value": "748"
										},
										{
											"begin": 20060,
											"end": 20090,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19959,
											"end": 20096,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19959,
											"end": 20096,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19959,
											"end": 20096,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19959,
											"end": 20096,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19959,
											"end": 20096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20102,
											"end": 20447,
											"name": "tag",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 20102,
											"end": 20447,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20169,
											"end": 20175,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20218,
											"end": 20220,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20206,
											"end": 20215,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20197,
											"end": 20204,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20193,
											"end": 20216,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20189,
											"end": 20221,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 20186,
											"end": 20305,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 20186,
											"end": 20305,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "750"
										},
										{
											"begin": 20186,
											"end": 20305,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20224,
											"end": 20303,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "751"
										},
										{
											"begin": 20224,
											"end": 20303,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 20224,
											"end": 20303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20224,
											"end": 20303,
											"name": "tag",
											"source": 14,
											"value": "751"
										},
										{
											"begin": 20224,
											"end": 20303,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20186,
											"end": 20305,
											"name": "tag",
											"source": 14,
											"value": "750"
										},
										{
											"begin": 20186,
											"end": 20305,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20344,
											"end": 20345,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20369,
											"end": 20430,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "752"
										},
										{
											"begin": 20422,
											"end": 20429,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20413,
											"end": 20419,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20402,
											"end": 20411,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 20398,
											"end": 20420,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20369,
											"end": 20430,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 20369,
											"end": 20430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20369,
											"end": 20430,
											"name": "tag",
											"source": 14,
											"value": "752"
										},
										{
											"begin": 20369,
											"end": 20430,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20359,
											"end": 20430,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20359,
											"end": 20430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20315,
											"end": 20440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20102,
											"end": 20447,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20102,
											"end": 20447,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20102,
											"end": 20447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20102,
											"end": 20447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20102,
											"end": 20447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20453,
											"end": 20675,
											"name": "tag",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 20453,
											"end": 20675,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20546,
											"end": 20550,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20584,
											"end": 20586,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20573,
											"end": 20582,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20569,
											"end": 20587,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20561,
											"end": 20587,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20561,
											"end": 20587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20597,
											"end": 20668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "754"
										},
										{
											"begin": 20665,
											"end": 20666,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20654,
											"end": 20663,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20650,
											"end": 20667,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20641,
											"end": 20647,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20597,
											"end": 20668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 20597,
											"end": 20668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20597,
											"end": 20668,
											"name": "tag",
											"source": 14,
											"value": "754"
										},
										{
											"begin": 20597,
											"end": 20668,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20453,
											"end": 20675,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20453,
											"end": 20675,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20453,
											"end": 20675,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20453,
											"end": 20675,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20453,
											"end": 20675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20681,
											"end": 20824,
											"name": "tag",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 20681,
											"end": 20824,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20738,
											"end": 20743,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20769,
											"end": 20775,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20763,
											"end": 20776,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 20754,
											"end": 20776,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20754,
											"end": 20776,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20785,
											"end": 20818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "756"
										},
										{
											"begin": 20812,
											"end": 20817,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20785,
											"end": 20818,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 20785,
											"end": 20818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20785,
											"end": 20818,
											"name": "tag",
											"source": 14,
											"value": "756"
										},
										{
											"begin": 20785,
											"end": 20818,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20681,
											"end": 20824,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20681,
											"end": 20824,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20681,
											"end": 20824,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20681,
											"end": 20824,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20681,
											"end": 20824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20830,
											"end": 21181,
											"name": "tag",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 20830,
											"end": 21181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20900,
											"end": 20906,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20949,
											"end": 20951,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20937,
											"end": 20946,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20928,
											"end": 20935,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20924,
											"end": 20947,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20920,
											"end": 20952,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 20917,
											"end": 21036,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 20917,
											"end": 21036,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "758"
										},
										{
											"begin": 20917,
											"end": 21036,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20955,
											"end": 21034,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "759"
										},
										{
											"begin": 20955,
											"end": 21034,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 20955,
											"end": 21034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20955,
											"end": 21034,
											"name": "tag",
											"source": 14,
											"value": "759"
										},
										{
											"begin": 20955,
											"end": 21034,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20917,
											"end": 21036,
											"name": "tag",
											"source": 14,
											"value": "758"
										},
										{
											"begin": 20917,
											"end": 21036,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21075,
											"end": 21076,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21100,
											"end": 21164,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "760"
										},
										{
											"begin": 21156,
											"end": 21163,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 21147,
											"end": 21153,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21136,
											"end": 21145,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 21132,
											"end": 21154,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21100,
											"end": 21164,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 21100,
											"end": 21164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21100,
											"end": 21164,
											"name": "tag",
											"source": 14,
											"value": "760"
										},
										{
											"begin": 21100,
											"end": 21164,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21090,
											"end": 21164,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21090,
											"end": 21164,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21046,
											"end": 21174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20830,
											"end": 21181,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20830,
											"end": 21181,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20830,
											"end": 21181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20830,
											"end": 21181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20830,
											"end": 21181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21187,
											"end": 21409,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 21187,
											"end": 21409,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21327,
											"end": 21361,
											"name": "PUSH",
											"source": 14,
											"value": "4661726D3A2063616C6C6572206973206E6F742074686520696E697469616C69"
										},
										{
											"begin": 21323,
											"end": 21324,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21315,
											"end": 21321,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21311,
											"end": 21325,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21304,
											"end": 21362,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21396,
											"end": 21401,
											"name": "PUSH",
											"source": 14,
											"value": "7A65720000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21391,
											"end": 21393,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21383,
											"end": 21389,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21379,
											"end": 21394,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21372,
											"end": 21402,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21187,
											"end": 21409,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21187,
											"end": 21409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21415,
											"end": 21781,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 21415,
											"end": 21781,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21557,
											"end": 21560,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21578,
											"end": 21645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "763"
										},
										{
											"begin": 21642,
											"end": 21644,
											"name": "PUSH",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 21637,
											"end": 21640,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21578,
											"end": 21645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 21578,
											"end": 21645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21578,
											"end": 21645,
											"name": "tag",
											"source": 14,
											"value": "763"
										},
										{
											"begin": 21578,
											"end": 21645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21571,
											"end": 21645,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21571,
											"end": 21645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21654,
											"end": 21747,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "764"
										},
										{
											"begin": 21743,
											"end": 21746,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21654,
											"end": 21747,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 21654,
											"end": 21747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21654,
											"end": 21747,
											"name": "tag",
											"source": 14,
											"value": "764"
										},
										{
											"begin": 21654,
											"end": 21747,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21772,
											"end": 21774,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 21767,
											"end": 21770,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21763,
											"end": 21775,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21756,
											"end": 21775,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21756,
											"end": 21775,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21415,
											"end": 21781,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21415,
											"end": 21781,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21415,
											"end": 21781,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21415,
											"end": 21781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21787,
											"end": 22206,
											"name": "tag",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 21787,
											"end": 22206,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21953,
											"end": 21957,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21991,
											"end": 21993,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21980,
											"end": 21989,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21976,
											"end": 21994,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21968,
											"end": 21994,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21968,
											"end": 21994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22040,
											"end": 22049,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22034,
											"end": 22038,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22030,
											"end": 22050,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 22026,
											"end": 22027,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22015,
											"end": 22024,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22011,
											"end": 22028,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22004,
											"end": 22051,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22068,
											"end": 22199,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "766"
										},
										{
											"begin": 22194,
											"end": 22198,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22068,
											"end": 22199,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 22068,
											"end": 22199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22068,
											"end": 22199,
											"name": "tag",
											"source": 14,
											"value": "766"
										},
										{
											"begin": 22068,
											"end": 22199,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22060,
											"end": 22199,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22060,
											"end": 22199,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21787,
											"end": 22206,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21787,
											"end": 22206,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21787,
											"end": 22206,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21787,
											"end": 22206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22212,
											"end": 22388,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 22212,
											"end": 22388,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22352,
											"end": 22380,
											"name": "PUSH",
											"source": 14,
											"value": "4661726D3A20696E76616C696420485947542061646472657373000000000000"
										},
										{
											"begin": 22348,
											"end": 22349,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22340,
											"end": 22346,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22336,
											"end": 22350,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22329,
											"end": 22381,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22212,
											"end": 22388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22212,
											"end": 22388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22394,
											"end": 22760,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 22394,
											"end": 22760,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22536,
											"end": 22539,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22557,
											"end": 22624,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "769"
										},
										{
											"begin": 22621,
											"end": 22623,
											"name": "PUSH",
											"source": 14,
											"value": "1A"
										},
										{
											"begin": 22616,
											"end": 22619,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22557,
											"end": 22624,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 22557,
											"end": 22624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22557,
											"end": 22624,
											"name": "tag",
											"source": 14,
											"value": "769"
										},
										{
											"begin": 22557,
											"end": 22624,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22550,
											"end": 22624,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22550,
											"end": 22624,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22633,
											"end": 22726,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "770"
										},
										{
											"begin": 22722,
											"end": 22725,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22633,
											"end": 22726,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 22633,
											"end": 22726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22633,
											"end": 22726,
											"name": "tag",
											"source": 14,
											"value": "770"
										},
										{
											"begin": 22633,
											"end": 22726,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22751,
											"end": 22753,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22746,
											"end": 22749,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22742,
											"end": 22754,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22735,
											"end": 22754,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22735,
											"end": 22754,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22394,
											"end": 22760,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22394,
											"end": 22760,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22394,
											"end": 22760,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22394,
											"end": 22760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22766,
											"end": 23185,
											"name": "tag",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 22766,
											"end": 23185,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22932,
											"end": 22936,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22970,
											"end": 22972,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22959,
											"end": 22968,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22955,
											"end": 22973,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22947,
											"end": 22973,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22947,
											"end": 22973,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23019,
											"end": 23028,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23013,
											"end": 23017,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23009,
											"end": 23029,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 23005,
											"end": 23006,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22994,
											"end": 23003,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22990,
											"end": 23007,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22983,
											"end": 23030,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23047,
											"end": 23178,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "772"
										},
										{
											"begin": 23173,
											"end": 23177,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23047,
											"end": 23178,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 23047,
											"end": 23178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23047,
											"end": 23178,
											"name": "tag",
											"source": 14,
											"value": "772"
										},
										{
											"begin": 23047,
											"end": 23178,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23039,
											"end": 23178,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23039,
											"end": 23178,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22766,
											"end": 23185,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22766,
											"end": 23185,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22766,
											"end": 23185,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22766,
											"end": 23185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23191,
											"end": 23424,
											"name": "tag",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 23191,
											"end": 23424,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23230,
											"end": 23233,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23253,
											"end": 23277,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "774"
										},
										{
											"begin": 23271,
											"end": 23276,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23253,
											"end": 23277,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 23253,
											"end": 23277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23253,
											"end": 23277,
											"name": "tag",
											"source": 14,
											"value": "774"
										},
										{
											"begin": 23253,
											"end": 23277,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23244,
											"end": 23277,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23244,
											"end": 23277,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23299,
											"end": 23365,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23292,
											"end": 23297,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23289,
											"end": 23366,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 23286,
											"end": 23389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "775"
										},
										{
											"begin": 23286,
											"end": 23389,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 23369,
											"end": 23387,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "776"
										},
										{
											"begin": 23369,
											"end": 23387,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 23369,
											"end": 23387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23369,
											"end": 23387,
											"name": "tag",
											"source": 14,
											"value": "776"
										},
										{
											"begin": 23369,
											"end": 23387,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23286,
											"end": 23389,
											"name": "tag",
											"source": 14,
											"value": "775"
										},
										{
											"begin": 23286,
											"end": 23389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23416,
											"end": 23417,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 23409,
											"end": 23414,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23405,
											"end": 23418,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23398,
											"end": 23418,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23398,
											"end": 23418,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23191,
											"end": 23424,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23191,
											"end": 23424,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23191,
											"end": 23424,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23191,
											"end": 23424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23430,
											"end": 23529,
											"name": "tag",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 23430,
											"end": 23529,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23482,
											"end": 23488,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23516,
											"end": 23521,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23510,
											"end": 23522,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 23500,
											"end": 23522,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23500,
											"end": 23522,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23430,
											"end": 23529,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23430,
											"end": 23529,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23430,
											"end": 23529,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23430,
											"end": 23529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23535,
											"end": 23781,
											"name": "tag",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 23535,
											"end": 23781,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23616,
											"end": 23617,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23626,
											"end": 23739,
											"name": "tag",
											"source": 14,
											"value": "779"
										},
										{
											"begin": 23626,
											"end": 23739,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23640,
											"end": 23646,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23637,
											"end": 23638,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23634,
											"end": 23647,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 23626,
											"end": 23739,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 23626,
											"end": 23739,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "781"
										},
										{
											"begin": 23626,
											"end": 23739,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 23725,
											"end": 23726,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 23720,
											"end": 23723,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23716,
											"end": 23727,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23710,
											"end": 23728,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 23706,
											"end": 23707,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23701,
											"end": 23704,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23697,
											"end": 23708,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23690,
											"end": 23729,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23662,
											"end": 23664,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23659,
											"end": 23660,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23655,
											"end": 23665,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23650,
											"end": 23665,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23650,
											"end": 23665,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23626,
											"end": 23739,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "779"
										},
										{
											"begin": 23626,
											"end": 23739,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23626,
											"end": 23739,
											"name": "tag",
											"source": 14,
											"value": "781"
										},
										{
											"begin": 23626,
											"end": 23739,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23773,
											"end": 23774,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23764,
											"end": 23770,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23759,
											"end": 23762,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23755,
											"end": 23771,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23748,
											"end": 23775,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23597,
											"end": 23781,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23535,
											"end": 23781,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23535,
											"end": 23781,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23535,
											"end": 23781,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23535,
											"end": 23781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23787,
											"end": 24164,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 23787,
											"end": 24164,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23875,
											"end": 23878,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23903,
											"end": 23942,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "783"
										},
										{
											"begin": 23936,
											"end": 23941,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23903,
											"end": 23942,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 23903,
											"end": 23942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23903,
											"end": 23942,
											"name": "tag",
											"source": 14,
											"value": "783"
										},
										{
											"begin": 23903,
											"end": 23942,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23958,
											"end": 24029,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "784"
										},
										{
											"begin": 24022,
											"end": 24028,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24017,
											"end": 24020,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 23958,
											"end": 24029,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 23958,
											"end": 24029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23958,
											"end": 24029,
											"name": "tag",
											"source": 14,
											"value": "784"
										},
										{
											"begin": 23958,
											"end": 24029,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23951,
											"end": 24029,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 23951,
											"end": 24029,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24038,
											"end": 24103,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "785"
										},
										{
											"begin": 24096,
											"end": 24102,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24091,
											"end": 24094,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 24084,
											"end": 24088,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24077,
											"end": 24082,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 24073,
											"end": 24089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24038,
											"end": 24103,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 24038,
											"end": 24103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24038,
											"end": 24103,
											"name": "tag",
											"source": 14,
											"value": "785"
										},
										{
											"begin": 24038,
											"end": 24103,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24128,
											"end": 24157,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "786"
										},
										{
											"begin": 24150,
											"end": 24156,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24128,
											"end": 24157,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 24128,
											"end": 24157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24128,
											"end": 24157,
											"name": "tag",
											"source": 14,
											"value": "786"
										},
										{
											"begin": 24128,
											"end": 24157,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24123,
											"end": 24126,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24119,
											"end": 24158,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24112,
											"end": 24158,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24112,
											"end": 24158,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23879,
											"end": 24164,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23787,
											"end": 24164,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23787,
											"end": 24164,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23787,
											"end": 24164,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23787,
											"end": 24164,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23787,
											"end": 24164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24170,
											"end": 24703,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 24170,
											"end": 24703,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24339,
											"end": 24343,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24377,
											"end": 24379,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 24366,
											"end": 24375,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24362,
											"end": 24380,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24354,
											"end": 24380,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24354,
											"end": 24380,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24390,
											"end": 24461,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "788"
										},
										{
											"begin": 24458,
											"end": 24459,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24447,
											"end": 24456,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24443,
											"end": 24460,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24434,
											"end": 24440,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 24390,
											"end": 24461,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 24390,
											"end": 24461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24390,
											"end": 24461,
											"name": "tag",
											"source": 14,
											"value": "788"
										},
										{
											"begin": 24390,
											"end": 24461,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24508,
											"end": 24517,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24502,
											"end": 24506,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24498,
											"end": 24518,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 24493,
											"end": 24495,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24482,
											"end": 24491,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24478,
											"end": 24496,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24471,
											"end": 24519,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24536,
											"end": 24614,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "789"
										},
										{
											"begin": 24609,
											"end": 24613,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24600,
											"end": 24606,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 24536,
											"end": 24614,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 24536,
											"end": 24614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24536,
											"end": 24614,
											"name": "tag",
											"source": 14,
											"value": "789"
										},
										{
											"begin": 24536,
											"end": 24614,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24528,
											"end": 24614,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24528,
											"end": 24614,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24624,
											"end": 24696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "790"
										},
										{
											"begin": 24692,
											"end": 24694,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 24681,
											"end": 24690,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24677,
											"end": 24695,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24668,
											"end": 24674,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24624,
											"end": 24696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 24624,
											"end": 24696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24624,
											"end": 24696,
											"name": "tag",
											"source": 14,
											"value": "790"
										},
										{
											"begin": 24624,
											"end": 24696,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24170,
											"end": 24703,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 24170,
											"end": 24703,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 24170,
											"end": 24703,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24170,
											"end": 24703,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24170,
											"end": 24703,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24170,
											"end": 24703,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24170,
											"end": 24703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24709,
											"end": 25151,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 24709,
											"end": 25151,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24858,
											"end": 24862,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24896,
											"end": 24898,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 24885,
											"end": 24894,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24881,
											"end": 24899,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24873,
											"end": 24899,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24873,
											"end": 24899,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24909,
											"end": 24980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "792"
										},
										{
											"begin": 24977,
											"end": 24978,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24966,
											"end": 24975,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24962,
											"end": 24979,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24953,
											"end": 24959,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 24909,
											"end": 24980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 24909,
											"end": 24980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24909,
											"end": 24980,
											"name": "tag",
											"source": 14,
											"value": "792"
										},
										{
											"begin": 24909,
											"end": 24980,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24990,
											"end": 25062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "793"
										},
										{
											"begin": 25058,
											"end": 25060,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 25047,
											"end": 25056,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25043,
											"end": 25061,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25034,
											"end": 25040,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 24990,
											"end": 25062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 24990,
											"end": 25062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24990,
											"end": 25062,
											"name": "tag",
											"source": 14,
											"value": "793"
										},
										{
											"begin": 24990,
											"end": 25062,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25072,
											"end": 25144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "794"
										},
										{
											"begin": 25140,
											"end": 25142,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 25129,
											"end": 25138,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25125,
											"end": 25143,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25116,
											"end": 25122,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25072,
											"end": 25144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 25072,
											"end": 25144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25072,
											"end": 25144,
											"name": "tag",
											"source": 14,
											"value": "794"
										},
										{
											"begin": 25072,
											"end": 25144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24709,
											"end": 25151,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 24709,
											"end": 25151,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 24709,
											"end": 25151,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24709,
											"end": 25151,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24709,
											"end": 25151,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24709,
											"end": 25151,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24709,
											"end": 25151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25157,
											"end": 25330,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 25157,
											"end": 25330,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25297,
											"end": 25322,
											"name": "PUSH",
											"source": 14,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 25293,
											"end": 25294,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25285,
											"end": 25291,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25281,
											"end": 25295,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25274,
											"end": 25323,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 25157,
											"end": 25330,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25157,
											"end": 25330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25336,
											"end": 25738,
											"name": "tag",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 25336,
											"end": 25738,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25496,
											"end": 25499,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25517,
											"end": 25602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "797"
										},
										{
											"begin": 25599,
											"end": 25601,
											"name": "PUSH",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 25594,
											"end": 25597,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25517,
											"end": 25602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 25517,
											"end": 25602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25517,
											"end": 25602,
											"name": "tag",
											"source": 14,
											"value": "797"
										},
										{
											"begin": 25517,
											"end": 25602,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25510,
											"end": 25602,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25510,
											"end": 25602,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25611,
											"end": 25704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "798"
										},
										{
											"begin": 25700,
											"end": 25703,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25611,
											"end": 25704,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 25611,
											"end": 25704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25611,
											"end": 25704,
											"name": "tag",
											"source": 14,
											"value": "798"
										},
										{
											"begin": 25611,
											"end": 25704,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25729,
											"end": 25731,
											"name": "PUSH",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 25724,
											"end": 25727,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25720,
											"end": 25732,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25713,
											"end": 25732,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25713,
											"end": 25732,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25336,
											"end": 25738,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25336,
											"end": 25738,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25336,
											"end": 25738,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25336,
											"end": 25738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25744,
											"end": 26134,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 25744,
											"end": 26134,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25850,
											"end": 25853,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25878,
											"end": 25917,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "800"
										},
										{
											"begin": 25911,
											"end": 25916,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25878,
											"end": 25917,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 25878,
											"end": 25917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25878,
											"end": 25917,
											"name": "tag",
											"source": 14,
											"value": "800"
										},
										{
											"begin": 25878,
											"end": 25917,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25933,
											"end": 26022,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "801"
										},
										{
											"begin": 26015,
											"end": 26021,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26010,
											"end": 26013,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 25933,
											"end": 26022,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 25933,
											"end": 26022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25933,
											"end": 26022,
											"name": "tag",
											"source": 14,
											"value": "801"
										},
										{
											"begin": 25933,
											"end": 26022,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25926,
											"end": 26022,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 25926,
											"end": 26022,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26031,
											"end": 26096,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "802"
										},
										{
											"begin": 26089,
											"end": 26095,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26084,
											"end": 26087,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 26077,
											"end": 26081,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 26070,
											"end": 26075,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 26066,
											"end": 26082,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26031,
											"end": 26096,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 26031,
											"end": 26096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26031,
											"end": 26096,
											"name": "tag",
											"source": 14,
											"value": "802"
										},
										{
											"begin": 26031,
											"end": 26096,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26121,
											"end": 26127,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 26116,
											"end": 26119,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 26112,
											"end": 26128,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26105,
											"end": 26128,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26105,
											"end": 26128,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25854,
											"end": 26134,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25744,
											"end": 26134,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 25744,
											"end": 26134,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25744,
											"end": 26134,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25744,
											"end": 26134,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25744,
											"end": 26134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26140,
											"end": 26307,
											"name": "tag",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 26140,
											"end": 26307,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26280,
											"end": 26299,
											"name": "PUSH",
											"source": 14,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 26276,
											"end": 26277,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26268,
											"end": 26274,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26264,
											"end": 26278,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26257,
											"end": 26300,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 26140,
											"end": 26307,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26140,
											"end": 26307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26313,
											"end": 26715,
											"name": "tag",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 26313,
											"end": 26715,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26473,
											"end": 26476,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26494,
											"end": 26579,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "805"
										},
										{
											"begin": 26576,
											"end": 26578,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 26571,
											"end": 26574,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26494,
											"end": 26579,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 26494,
											"end": 26579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26494,
											"end": 26579,
											"name": "tag",
											"source": 14,
											"value": "805"
										},
										{
											"begin": 26494,
											"end": 26579,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26487,
											"end": 26579,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26487,
											"end": 26579,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26588,
											"end": 26681,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "806"
										},
										{
											"begin": 26677,
											"end": 26680,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26588,
											"end": 26681,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 26588,
											"end": 26681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26588,
											"end": 26681,
											"name": "tag",
											"source": 14,
											"value": "806"
										},
										{
											"begin": 26588,
											"end": 26681,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26706,
											"end": 26708,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 26701,
											"end": 26704,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26697,
											"end": 26709,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26690,
											"end": 26709,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26690,
											"end": 26709,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26313,
											"end": 26715,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26313,
											"end": 26715,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26313,
											"end": 26715,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26313,
											"end": 26715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26721,
											"end": 27688,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 26721,
											"end": 27688,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27103,
											"end": 27106,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27125,
											"end": 27273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "808"
										},
										{
											"begin": 27269,
											"end": 27272,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27125,
											"end": 27273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 27125,
											"end": 27273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27125,
											"end": 27273,
											"name": "tag",
											"source": 14,
											"value": "808"
										},
										{
											"begin": 27125,
											"end": 27273,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27118,
											"end": 27273,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27118,
											"end": 27273,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27290,
											"end": 27385,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "809"
										},
										{
											"begin": 27381,
											"end": 27384,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27372,
											"end": 27378,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 27290,
											"end": 27385,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 27290,
											"end": 27385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27290,
											"end": 27385,
											"name": "tag",
											"source": 14,
											"value": "809"
										},
										{
											"begin": 27290,
											"end": 27385,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27283,
											"end": 27385,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27283,
											"end": 27385,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27402,
											"end": 27550,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "810"
										},
										{
											"begin": 27546,
											"end": 27549,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27402,
											"end": 27550,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 27402,
											"end": 27550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27402,
											"end": 27550,
											"name": "tag",
											"source": 14,
											"value": "810"
										},
										{
											"begin": 27402,
											"end": 27550,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27395,
											"end": 27550,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27395,
											"end": 27550,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27567,
											"end": 27662,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "811"
										},
										{
											"begin": 27658,
											"end": 27661,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27649,
											"end": 27655,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 27567,
											"end": 27662,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 27567,
											"end": 27662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27567,
											"end": 27662,
											"name": "tag",
											"source": 14,
											"value": "811"
										},
										{
											"begin": 27567,
											"end": 27662,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27560,
											"end": 27662,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27560,
											"end": 27662,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27679,
											"end": 27682,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27672,
											"end": 27682,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27672,
											"end": 27682,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26721,
											"end": 27688,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 26721,
											"end": 27688,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26721,
											"end": 27688,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26721,
											"end": 27688,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26721,
											"end": 27688,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26721,
											"end": 27688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27694,
											"end": 28007,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 27694,
											"end": 28007,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27807,
											"end": 27811,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27845,
											"end": 27847,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 27834,
											"end": 27843,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27830,
											"end": 27848,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27822,
											"end": 27848,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27822,
											"end": 27848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27894,
											"end": 27903,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27888,
											"end": 27892,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27884,
											"end": 27904,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 27880,
											"end": 27881,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27869,
											"end": 27878,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27865,
											"end": 27882,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27858,
											"end": 27905,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 27922,
											"end": 28000,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "813"
										},
										{
											"begin": 27995,
											"end": 27999,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27986,
											"end": 27992,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 27922,
											"end": 28000,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 27922,
											"end": 28000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27922,
											"end": 28000,
											"name": "tag",
											"source": 14,
											"value": "813"
										},
										{
											"begin": 27922,
											"end": 28000,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27914,
											"end": 28000,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27914,
											"end": 28000,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27694,
											"end": 28007,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 27694,
											"end": 28007,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27694,
											"end": 28007,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27694,
											"end": 28007,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27694,
											"end": 28007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28013,
											"end": 28242,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 28013,
											"end": 28242,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28153,
											"end": 28187,
											"name": "PUSH",
											"source": 14,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 28149,
											"end": 28150,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28141,
											"end": 28147,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28137,
											"end": 28151,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28130,
											"end": 28188,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 28222,
											"end": 28234,
											"name": "PUSH",
											"source": 14,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 28217,
											"end": 28219,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28209,
											"end": 28215,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28205,
											"end": 28220,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28198,
											"end": 28235,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 28013,
											"end": 28242,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28013,
											"end": 28242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28248,
											"end": 28614,
											"name": "tag",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 28248,
											"end": 28614,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28390,
											"end": 28393,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28411,
											"end": 28478,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "816"
										},
										{
											"begin": 28475,
											"end": 28477,
											"name": "PUSH",
											"source": 14,
											"value": "2A"
										},
										{
											"begin": 28470,
											"end": 28473,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28411,
											"end": 28478,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 28411,
											"end": 28478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28411,
											"end": 28478,
											"name": "tag",
											"source": 14,
											"value": "816"
										},
										{
											"begin": 28411,
											"end": 28478,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28404,
											"end": 28478,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 28404,
											"end": 28478,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28487,
											"end": 28580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "817"
										},
										{
											"begin": 28576,
											"end": 28579,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28487,
											"end": 28580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 28487,
											"end": 28580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28487,
											"end": 28580,
											"name": "tag",
											"source": 14,
											"value": "817"
										},
										{
											"begin": 28487,
											"end": 28580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28605,
											"end": 28607,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 28600,
											"end": 28603,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28596,
											"end": 28608,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28589,
											"end": 28608,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28589,
											"end": 28608,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28248,
											"end": 28614,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 28248,
											"end": 28614,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28248,
											"end": 28614,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28248,
											"end": 28614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28620,
											"end": 29039,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 28620,
											"end": 29039,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28786,
											"end": 28790,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28824,
											"end": 28826,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28813,
											"end": 28822,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28809,
											"end": 28827,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28801,
											"end": 28827,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28801,
											"end": 28827,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28873,
											"end": 28882,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28867,
											"end": 28871,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28863,
											"end": 28883,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 28859,
											"end": 28860,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28848,
											"end": 28857,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28844,
											"end": 28861,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28837,
											"end": 28884,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 28901,
											"end": 29032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "819"
										},
										{
											"begin": 29027,
											"end": 29031,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28901,
											"end": 29032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 28901,
											"end": 29032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28901,
											"end": 29032,
											"name": "tag",
											"source": 14,
											"value": "819"
										},
										{
											"begin": 28901,
											"end": 29032,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28893,
											"end": 29032,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28893,
											"end": 29032,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28620,
											"end": 29039,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 28620,
											"end": 29039,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28620,
											"end": 29039,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28620,
											"end": 29039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29045,
											"end": 29216,
											"name": "tag",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 29045,
											"end": 29216,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29084,
											"end": 29087,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29107,
											"end": 29131,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "821"
										},
										{
											"begin": 29125,
											"end": 29130,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29107,
											"end": 29131,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 29107,
											"end": 29131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29107,
											"end": 29131,
											"name": "tag",
											"source": 14,
											"value": "821"
										},
										{
											"begin": 29107,
											"end": 29131,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29098,
											"end": 29131,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29098,
											"end": 29131,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29153,
											"end": 29157,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29146,
											"end": 29151,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29143,
											"end": 29158,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 29140,
											"end": 29181,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "822"
										},
										{
											"begin": 29140,
											"end": 29181,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 29161,
											"end": 29179,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "823"
										},
										{
											"begin": 29161,
											"end": 29179,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 29161,
											"end": 29179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29161,
											"end": 29179,
											"name": "tag",
											"source": 14,
											"value": "823"
										},
										{
											"begin": 29161,
											"end": 29179,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29140,
											"end": 29181,
											"name": "tag",
											"source": 14,
											"value": "822"
										},
										{
											"begin": 29140,
											"end": 29181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29208,
											"end": 29209,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 29201,
											"end": 29206,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29197,
											"end": 29210,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 29190,
											"end": 29210,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29190,
											"end": 29210,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29045,
											"end": 29216,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29045,
											"end": 29216,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29045,
											"end": 29216,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29045,
											"end": 29216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29222,
											"end": 29404,
											"name": "tag",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 29222,
											"end": 29404,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29362,
											"end": 29396,
											"name": "PUSH",
											"source": 14,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 29358,
											"end": 29359,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29350,
											"end": 29356,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29346,
											"end": 29360,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29339,
											"end": 29397,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 29222,
											"end": 29404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29222,
											"end": 29404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29410,
											"end": 29776,
											"name": "tag",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 29410,
											"end": 29776,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29552,
											"end": 29555,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29573,
											"end": 29640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "826"
										},
										{
											"begin": 29637,
											"end": 29639,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29632,
											"end": 29635,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29573,
											"end": 29640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 29573,
											"end": 29640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29573,
											"end": 29640,
											"name": "tag",
											"source": 14,
											"value": "826"
										},
										{
											"begin": 29573,
											"end": 29640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29566,
											"end": 29640,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29566,
											"end": 29640,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29649,
											"end": 29742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "827"
										},
										{
											"begin": 29738,
											"end": 29741,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29649,
											"end": 29742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 29649,
											"end": 29742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29649,
											"end": 29742,
											"name": "tag",
											"source": 14,
											"value": "827"
										},
										{
											"begin": 29649,
											"end": 29742,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29767,
											"end": 29769,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29762,
											"end": 29765,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29758,
											"end": 29770,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29751,
											"end": 29770,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29751,
											"end": 29770,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29410,
											"end": 29776,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29410,
											"end": 29776,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29410,
											"end": 29776,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29410,
											"end": 29776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29782,
											"end": 30201,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 29782,
											"end": 30201,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29948,
											"end": 29952,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29986,
											"end": 29988,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29975,
											"end": 29984,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29971,
											"end": 29989,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29963,
											"end": 29989,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29963,
											"end": 29989,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30035,
											"end": 30044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30029,
											"end": 30033,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30025,
											"end": 30045,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 30021,
											"end": 30022,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30010,
											"end": 30019,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30006,
											"end": 30023,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29999,
											"end": 30046,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 30063,
											"end": 30194,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "829"
										},
										{
											"begin": 30189,
											"end": 30193,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30063,
											"end": 30194,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 30063,
											"end": 30194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30063,
											"end": 30194,
											"name": "tag",
											"source": 14,
											"value": "829"
										},
										{
											"begin": 30063,
											"end": 30194,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30055,
											"end": 30194,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30055,
											"end": 30194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29782,
											"end": 30201,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29782,
											"end": 30201,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29782,
											"end": 30201,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29782,
											"end": 30201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30207,
											"end": 30432,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 30207,
											"end": 30432,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30347,
											"end": 30381,
											"name": "PUSH",
											"source": 14,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 30343,
											"end": 30344,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30335,
											"end": 30341,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30331,
											"end": 30345,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30324,
											"end": 30382,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 30416,
											"end": 30424,
											"name": "PUSH",
											"source": 14,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30411,
											"end": 30413,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 30403,
											"end": 30409,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30399,
											"end": 30414,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30392,
											"end": 30425,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 30207,
											"end": 30432,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30207,
											"end": 30432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30438,
											"end": 30804,
											"name": "tag",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 30438,
											"end": 30804,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30580,
											"end": 30583,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30601,
											"end": 30668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "832"
										},
										{
											"begin": 30665,
											"end": 30667,
											"name": "PUSH",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 30660,
											"end": 30663,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30601,
											"end": 30668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 30601,
											"end": 30668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30601,
											"end": 30668,
											"name": "tag",
											"source": 14,
											"value": "832"
										},
										{
											"begin": 30601,
											"end": 30668,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30594,
											"end": 30668,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30594,
											"end": 30668,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30677,
											"end": 30770,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "833"
										},
										{
											"begin": 30766,
											"end": 30769,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30677,
											"end": 30770,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 30677,
											"end": 30770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30677,
											"end": 30770,
											"name": "tag",
											"source": 14,
											"value": "833"
										},
										{
											"begin": 30677,
											"end": 30770,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30795,
											"end": 30797,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 30790,
											"end": 30793,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30786,
											"end": 30798,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30779,
											"end": 30798,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30779,
											"end": 30798,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30438,
											"end": 30804,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30438,
											"end": 30804,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30438,
											"end": 30804,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30438,
											"end": 30804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30810,
											"end": 31229,
											"name": "tag",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 30810,
											"end": 31229,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30976,
											"end": 30980,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31014,
											"end": 31016,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 31003,
											"end": 31012,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30999,
											"end": 31017,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30991,
											"end": 31017,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30991,
											"end": 31017,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31063,
											"end": 31072,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31057,
											"end": 31061,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31053,
											"end": 31073,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 31049,
											"end": 31050,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31038,
											"end": 31047,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 31034,
											"end": 31051,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31027,
											"end": 31074,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31091,
											"end": 31222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "835"
										},
										{
											"begin": 31217,
											"end": 31221,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31091,
											"end": 31222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 31091,
											"end": 31222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31091,
											"end": 31222,
											"name": "tag",
											"source": 14,
											"value": "835"
										},
										{
											"begin": 31091,
											"end": 31222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31083,
											"end": 31222,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31083,
											"end": 31222,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30810,
											"end": 31229,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30810,
											"end": 31229,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30810,
											"end": 31229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30810,
											"end": 31229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31235,
											"end": 31333,
											"name": "tag",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 31235,
											"end": 31333,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31286,
											"end": 31292,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31320,
											"end": 31325,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31314,
											"end": 31326,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 31304,
											"end": 31326,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31304,
											"end": 31326,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31235,
											"end": 31333,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31235,
											"end": 31333,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31235,
											"end": 31333,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31235,
											"end": 31333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31339,
											"end": 31486,
											"name": "tag",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 31339,
											"end": 31486,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31440,
											"end": 31451,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31477,
											"end": 31480,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31462,
											"end": 31480,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31462,
											"end": 31480,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31339,
											"end": 31486,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 31339,
											"end": 31486,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31339,
											"end": 31486,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31339,
											"end": 31486,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31339,
											"end": 31486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31492,
											"end": 31878,
											"name": "tag",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 31492,
											"end": 31878,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31596,
											"end": 31599,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31624,
											"end": 31662,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "839"
										},
										{
											"begin": 31656,
											"end": 31661,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31624,
											"end": 31662,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 31624,
											"end": 31662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31624,
											"end": 31662,
											"name": "tag",
											"source": 14,
											"value": "839"
										},
										{
											"begin": 31624,
											"end": 31662,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31678,
											"end": 31766,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "840"
										},
										{
											"begin": 31759,
											"end": 31765,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31754,
											"end": 31757,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 31678,
											"end": 31766,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 31678,
											"end": 31766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31678,
											"end": 31766,
											"name": "tag",
											"source": 14,
											"value": "840"
										},
										{
											"begin": 31678,
											"end": 31766,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31671,
											"end": 31766,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 31671,
											"end": 31766,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31775,
											"end": 31840,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "841"
										},
										{
											"begin": 31833,
											"end": 31839,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31828,
											"end": 31831,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 31821,
											"end": 31825,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 31814,
											"end": 31819,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 31810,
											"end": 31826,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31775,
											"end": 31840,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 31775,
											"end": 31840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31775,
											"end": 31840,
											"name": "tag",
											"source": 14,
											"value": "841"
										},
										{
											"begin": 31775,
											"end": 31840,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31865,
											"end": 31871,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 31860,
											"end": 31863,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 31856,
											"end": 31872,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31849,
											"end": 31872,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31849,
											"end": 31872,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31600,
											"end": 31878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31492,
											"end": 31878,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 31492,
											"end": 31878,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31492,
											"end": 31878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31492,
											"end": 31878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31492,
											"end": 31878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31884,
											"end": 32155,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 31884,
											"end": 32155,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32014,
											"end": 32017,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32036,
											"end": 32129,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "843"
										},
										{
											"begin": 32125,
											"end": 32128,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32116,
											"end": 32122,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 32036,
											"end": 32129,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 32036,
											"end": 32129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32036,
											"end": 32129,
											"name": "tag",
											"source": 14,
											"value": "843"
										},
										{
											"begin": 32036,
											"end": 32129,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32029,
											"end": 32129,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32029,
											"end": 32129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32146,
											"end": 32149,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32139,
											"end": 32149,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32139,
											"end": 32149,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31884,
											"end": 32155,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 31884,
											"end": 32155,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31884,
											"end": 32155,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31884,
											"end": 32155,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31884,
											"end": 32155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32161,
											"end": 32340,
											"name": "tag",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 32161,
											"end": 32340,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32301,
											"end": 32332,
											"name": "PUSH",
											"source": 14,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 32297,
											"end": 32298,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32289,
											"end": 32295,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32285,
											"end": 32299,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32278,
											"end": 32333,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 32161,
											"end": 32340,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32161,
											"end": 32340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32346,
											"end": 32712,
											"name": "tag",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 32346,
											"end": 32712,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32488,
											"end": 32491,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32509,
											"end": 32576,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "846"
										},
										{
											"begin": 32573,
											"end": 32575,
											"name": "PUSH",
											"source": 14,
											"value": "1D"
										},
										{
											"begin": 32568,
											"end": 32571,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 32509,
											"end": 32576,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 32509,
											"end": 32576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32509,
											"end": 32576,
											"name": "tag",
											"source": 14,
											"value": "846"
										},
										{
											"begin": 32509,
											"end": 32576,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32502,
											"end": 32576,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32502,
											"end": 32576,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32585,
											"end": 32678,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "847"
										},
										{
											"begin": 32674,
											"end": 32677,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32585,
											"end": 32678,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 32585,
											"end": 32678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32585,
											"end": 32678,
											"name": "tag",
											"source": 14,
											"value": "847"
										},
										{
											"begin": 32585,
											"end": 32678,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32703,
											"end": 32705,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 32698,
											"end": 32701,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32694,
											"end": 32706,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32687,
											"end": 32706,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32687,
											"end": 32706,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32346,
											"end": 32712,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32346,
											"end": 32712,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32346,
											"end": 32712,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32346,
											"end": 32712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32718,
											"end": 33137,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 32718,
											"end": 33137,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32884,
											"end": 32888,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32922,
											"end": 32924,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 32911,
											"end": 32920,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32907,
											"end": 32925,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32899,
											"end": 32925,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32899,
											"end": 32925,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32971,
											"end": 32980,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32965,
											"end": 32969,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32961,
											"end": 32981,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 32957,
											"end": 32958,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32946,
											"end": 32955,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 32942,
											"end": 32959,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32935,
											"end": 32982,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 32999,
											"end": 33130,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "849"
										},
										{
											"begin": 33125,
											"end": 33129,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32999,
											"end": 33130,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 32999,
											"end": 33130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32999,
											"end": 33130,
											"name": "tag",
											"source": 14,
											"value": "849"
										},
										{
											"begin": 32999,
											"end": 33130,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32991,
											"end": 33130,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32991,
											"end": 33130,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32718,
											"end": 33137,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32718,
											"end": 33137,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32718,
											"end": 33137,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32718,
											"end": 33137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"src/Farm.sol",
								"src/interfaces/IAccessControl.sol",
								"src/interfaces/IERC165.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/IERC20Permit.sol",
								"src/interfaces/IHYGT.sol",
								"src/libraries/Address.sol",
								"src/libraries/Math.sol",
								"src/libraries/SafeERC20.sol",
								"src/libraries/SignedMath.sol",
								"src/libraries/Strings.sol",
								"src/utils/AccessControl.sol",
								"src/utils/Context.sol",
								"src/utils/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"GOVERNOR_ROLE()": "ccc57490",
							"HYGT()": "23c64ce1",
							"HYGTPerBlock()": "79838ef0",
							"addPool(address,uint256,string,bool)": "3a0618fd",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getPending(uint256,address)": "7f37df3b",
							"getPendingBatch(address)": "b3ecb623",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialize(address,address[3],uint256)": "5e3e1581",
							"massUpdatePools()": "630b5ba1",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"startBlock()": "48cd4cb1",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalAllocPoint()": "17caf6f1",
							"updateAllocation(uint256,uint256,bool)": "ad35e1cc",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"}],\"name\":\"AddPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAllocPoint\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldAllocPoint\",\"type\":\"uint256\"}],\"name\":\"UpdateAllocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GOVERNOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HYGT\",\"outputs\":[{\"internalType\":\"contract IHYGT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HYGTPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"withUpdate\",\"type\":\"bool\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPending\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPendingBatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hygt_\",\"type\":\"address\"},{\"internalType\":\"address[3]\",\"name\":\"lpTokens_\",\"type\":\"address[3]\"},{\"internalType\":\"uint256\",\"name\":\"initialMintStartTime_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accHYGTPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withUpdate\",\"type\":\"bool\"}],\"name\":\"updateAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"addPool(address,uint256,string,bool)\":{\"params\":{\"allocPoint\":\"The value for allocation points.\",\"lpToken\":\"The address of the `LP Token`.\",\"symbol\":\"The name for the pool.\",\"withUpdate\":\"Whether or not to update reward variables for all pools. May cause high gas spending.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,address[3],uint256)\":{\"details\":\"This function can only be called once.\",\"params\":{\"hygt_\":\"The address of the `HYGT` contract.\",\"initialMintStartTime_\":\"The unix timestamp at which initial minting will begin.\",\"lpTokens_\":\"The addresses of the first 3 `LP Tokens` to add to the farming pool.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateAllocation(uint256,uint256,bool)\":{\"params\":{\"allocPoint\":\"The new value for allocation points.\",\"pid\":\"The unique id of the pool.\",\"withUpdate\":\"Whether or not to update reward variables for all pools. May cause high gas spending.\"}},\"updatePool(uint256)\":{\"params\":{\"pid\":\"The unique id of the pool.\"}}},\"stateVariables\":{\"_initializer\":{\"details\":\"Initialization variables.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"HYGT()\":{\"notice\":\"The address of the primary governance token.\"},\"HYGTPerBlock()\":{\"notice\":\"HYGT tokens created per block.\"},\"addPool(address,uint256,string,bool)\":{\"notice\":\"Adds a new `LP Token` to the pool. Caller must have the `Governor` role. Assigns a unique id for the given `LP Token`. NOTE: The same `LP Token` must NOT be added more than once otherwise the reward calculation will be compromised.\"},\"emergencyWithdraw(uint256)\":{\"notice\":\"Withdraw all `LP Tokens` from the given pool without caring about rewards. NOTE: Emergency only.\"},\"getPending(uint256,address)\":{\"notice\":\"Gets all pending `HYGT` in a given pool for a given user.\"},\"getPendingBatch(address)\":{\"notice\":\"Gets all pending `HYGT` for a given user.\"},\"initialize(address,address[3],uint256)\":{\"notice\":\"Initializes external dependencies and state variables.\"},\"massUpdatePools()\":{\"notice\":\"Updates reward variables for all pools. NOTE: May cause high gas spending.\"},\"poolInfo(uint256)\":{\"notice\":\"Pool info.\"},\"poolLength()\":{\"notice\":\"Returns the number of pools.\"},\"startBlock()\":{\"notice\":\"The block number when HYGT mining starts.\"},\"totalAllocPoint()\":{\"notice\":\"Total allocation poitns. Must be the sum of all allocation points in all pools.\"},\"updateAllocation(uint256,uint256,bool)\":{\"notice\":\"Updates the given pool's HYGT allocation point. Caller must have the `Governor` role.\"},\"updatePool(uint256)\":{\"notice\":\"Updates reward variables of the given pool to be up-to-date.\"},\"userInfo(uint256,address)\":{\"notice\":\"User info for each corresponding pool.\"},\"withdraw(uint256,uint256)\":{\"notice\":\"Withdraw a certain amount of `LP Tokens` from the given pool.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Farm.sol\":\"Farm\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Farm.sol\":{\"keccak256\":\"0x7448cbf2caa2dcacdbe688f710630c0aafd6190f470eb87cfdd0f95f7f644b61\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://8df1a26246262b9f766369bd071c2ab98925b09978f45d0a252ae190a1e2ebb0\",\"dweb:/ipfs/QmZSTVJ45qvf4pfXgduM6aNyU2kW4Mr5rGKAa1sGpuRPm4\"]},\"src/interfaces/IAccessControl.sol\":{\"keccak256\":\"0x89c6c2a63dc6c357c6108de150ab329ad7f847f3ff00a35bcd55f769f4ebcad4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cadec590da43255289e7db8e08a0760869efa64c543dbd8af46690ce5295d497\",\"dweb:/ipfs/QmZsPSyWeA3aZgDgtXMMx11wvTadrf5FzrxkWDbUfM11Ue\"]},\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0xd49070e01df31c9f39ed67f7cb2844d842b5fc4c07048156f77f1ac06956a223\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7a56689e6a846ee765a66e30a816b0fe65eba41d2f16beb5bd57a7f7daf1027\",\"dweb:/ipfs/QmduVybj3AaRyHwRRnmjxsG5jPERmFBEUH9EcXwVM5kPyC\"]},\"src/interfaces/IERC20Permit.sol\":{\"keccak256\":\"0x7593e149ceb83bfb0b3ef1252be3d79f784eb46fa74fa8ee72a5782803e7056a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25f85848e1c684f9c1cad51d1603d608116b14e54e191f3383ddd431d46e1b93\",\"dweb:/ipfs/QmQnmnPtFGYcbAjc5HL9F5UxytDSFqSDLeBoXYJXyPMdvR\"]},\"src/interfaces/IHYGT.sol\":{\"keccak256\":\"0x4fcf60fe5c55a47ff3e09e0bd1e0f7d6f3eb702fdece7bf42557addc06c560b9\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://4dd8c8386ff0b453060dde1c14df745a01b223ebee009bffa60fd7db12b60bf6\",\"dweb:/ipfs/QmSbZNSDekfnkuntfMs8DokKkwdGrkmM3KDtkEYDS8X4pT\"]},\"src/libraries/Address.sol\":{\"keccak256\":\"0x9d0843efe7418f685e662378051ca0572b56e8ed4e87b97197fb535839d0e2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0692e4d4981ff36bf331a6dda3f60abe2debce9233df65e807639dc7cda713\",\"dweb:/ipfs/QmeKRcBH8LegzqrtdTtEhZLyYeb7PFkAtChNbLA3fTkbKW\"]},\"src/libraries/Math.sol\":{\"keccak256\":\"0xfc18275f00047f613f761247e4f3ec788843036f7f426b3fd3b74e251e45f7ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acc7cebc92fed34db103599e2bde11669280f6e9062fc42d000969ee0e9e8443\",\"dweb:/ipfs/QmQh4ArebQ7tuHEEPyHfeZKctXbC6zPRRnZ7bZM5GNkgh7\"]},\"src/libraries/SafeERC20.sol\":{\"keccak256\":\"0xa8c1f46f93b6cccaeaaa524410469e9def8bd3f175f40e4bb5fc5f421a637642\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e948f1c56dfeb52151186a6e4fe04a2318130fdba505280253911ce69cad122b\",\"dweb:/ipfs/QmShmatc9g1jToX7Uj5aNUHpAUYwd7zjthdrkeySMChMJE\"]},\"src/libraries/SignedMath.sol\":{\"keccak256\":\"0xb4a5f5f5222294665d6241a5c06558d4939617ebd0a49d1eb9c0e193fd19bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be7f6a069d156446211053299916948102d357d813be42c5f1614885e71d81b3\",\"dweb:/ipfs/QmfT2fs3cDWvfoekdfkUQ3ZMz4f8tc2hqnabipbfzW3Xqb\"]},\"src/libraries/Strings.sol\":{\"keccak256\":\"0xaa9c663292d9142e4f463d0f876b1b3813e409bdeb321470fb20573d9a68012b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f7892745f43559c7f4351120ca6829fb71d40ea286268174dd84128657ee915\",\"dweb:/ipfs/QmeT6d7KBXrNcyLGhtj6a5LLHbYHiVVXqQYA6pSNnp8ecH\"]},\"src/utils/AccessControl.sol\":{\"keccak256\":\"0x9e9604e591c7f14ea0f18f906494192375b28f2d614279f1dda876de4ee240b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e1e5fa779889491b77f631f931fad6ba3b10907766b41d56c42a37fbcbbc664\",\"dweb:/ipfs/QmadpbPf3XFvdH1CVD17VcTmf7ScynmnjEwePFs2WBmGmU\"]},\"src/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]},\"src/utils/ERC165.sol\":{\"keccak256\":\"0x0ce3f9c6ef779f4e44ea727f31300501bf3c19af2b27264e1932aef9c70f9300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://850c17304062747f819d5c5b30e0f004ad3f36aa55d8407883311bf2fd68caee\",\"dweb:/ipfs/QmZcbvqF24EBStFacFZcganjH7f6Et4RGWYHjy4M5nHiHM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3012,
								"contract": "src/Farm.sol:Farm",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)3007_storage)"
							},
							{
								"astId": 21,
								"contract": "src/Farm.sol:Farm",
								"label": "HYGT",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IHYGT)1176"
							},
							{
								"astId": 24,
								"contract": "src/Farm.sol:Farm",
								"label": "HYGTPerBlock",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 27,
								"contract": "src/Farm.sol:Farm",
								"label": "startBlock",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 30,
								"contract": "src/Farm.sol:Farm",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 35,
								"contract": "src/Farm.sol:Farm",
								"label": "_isInitialized",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 56,
								"contract": "src/Farm.sol:Farm",
								"label": "poolInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(PoolInfo)51_storage)dyn_storage"
							},
							{
								"astId": 64,
								"contract": "src/Farm.sol:Farm",
								"label": "userInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)40_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)51_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)51_storage",
								"encoding": "dynamic_array",
								"label": "struct Farm.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)1083": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IHYGT)1176": {
								"encoding": "inplace",
								"label": "contract IHYGT",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(UserInfo)40_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Farm.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)40_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)3007_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)3007_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)40_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct Farm.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)40_storage)"
							},
							"t_struct(PoolInfo)51_storage": {
								"encoding": "inplace",
								"label": "struct Farm.PoolInfo",
								"members": [
									{
										"astId": 43,
										"contract": "src/Farm.sol:Farm",
										"label": "lpToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)1083"
									},
									{
										"astId": 45,
										"contract": "src/Farm.sol:Farm",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 47,
										"contract": "src/Farm.sol:Farm",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 50,
										"contract": "src/Farm.sol:Farm",
										"label": "accHYGTPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(RoleData)3007_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 3004,
										"contract": "src/Farm.sol:Farm",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 3006,
										"contract": "src/Farm.sol:Farm",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserInfo)40_storage": {
								"encoding": "inplace",
								"label": "struct Farm.UserInfo",
								"members": [
									{
										"astId": 37,
										"contract": "src/Farm.sol:Farm",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 39,
										"contract": "src/Farm.sol:Farm",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"HYGT()": {
								"notice": "The address of the primary governance token."
							},
							"HYGTPerBlock()": {
								"notice": "HYGT tokens created per block."
							},
							"addPool(address,uint256,string,bool)": {
								"notice": "Adds a new `LP Token` to the pool. Caller must have the `Governor` role. Assigns a unique id for the given `LP Token`. NOTE: The same `LP Token` must NOT be added more than once otherwise the reward calculation will be compromised."
							},
							"emergencyWithdraw(uint256)": {
								"notice": "Withdraw all `LP Tokens` from the given pool without caring about rewards. NOTE: Emergency only."
							},
							"getPending(uint256,address)": {
								"notice": "Gets all pending `HYGT` in a given pool for a given user."
							},
							"getPendingBatch(address)": {
								"notice": "Gets all pending `HYGT` for a given user."
							},
							"initialize(address,address[3],uint256)": {
								"notice": "Initializes external dependencies and state variables."
							},
							"massUpdatePools()": {
								"notice": "Updates reward variables for all pools. NOTE: May cause high gas spending."
							},
							"poolInfo(uint256)": {
								"notice": "Pool info."
							},
							"poolLength()": {
								"notice": "Returns the number of pools."
							},
							"startBlock()": {
								"notice": "The block number when HYGT mining starts."
							},
							"totalAllocPoint()": {
								"notice": "Total allocation poitns. Must be the sum of all allocation points in all pools."
							},
							"updateAllocation(uint256,uint256,bool)": {
								"notice": "Updates the given pool's HYGT allocation point. Caller must have the `Governor` role."
							},
							"updatePool(uint256)": {
								"notice": "Updates reward variables of the given pool to be up-to-date."
							},
							"userInfo(uint256,address)": {
								"notice": "User info for each corresponding pool."
							},
							"withdraw(uint256,uint256)": {
								"notice": "Withdraw a certain amount of `LP Tokens` from the given pool."
							}
						},
						"version": 1
					}
				}
			},
			"src/interfaces/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IAccessControl.sol\":{\"keccak256\":\"0x89c6c2a63dc6c357c6108de150ab329ad7f847f3ff00a35bcd55f769f4ebcad4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cadec590da43255289e7db8e08a0760869efa64c543dbd8af46690ce5295d497\",\"dweb:/ipfs/QmZsPSyWeA3aZgDgtXMMx11wvTadrf5FzrxkWDbUfM11Ue\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0xd49070e01df31c9f39ed67f7cb2844d842b5fc4c07048156f77f1ac06956a223\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7a56689e6a846ee765a66e30a816b0fe65eba41d2f16beb5bd57a7f7daf1027\",\"dweb:/ipfs/QmduVybj3AaRyHwRRnmjxsG5jPERmFBEUH9EcXwVM5kPyC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC20Permit.sol\":{\"keccak256\":\"0x7593e149ceb83bfb0b3ef1252be3d79f784eb46fa74fa8ee72a5782803e7056a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25f85848e1c684f9c1cad51d1603d608116b14e54e191f3383ddd431d46e1b93\",\"dweb:/ipfs/QmQnmnPtFGYcbAjc5HL9F5UxytDSFqSDLeBoXYJXyPMdvR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/IHYGT.sol": {
				"IHYGT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getCurrentVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "getPriorVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"delegate(address)": "5c19a95c",
							"getCurrentVotes(address)": "b4b5ea57",
							"getPriorVotes(address,uint256)": "782d6fe1",
							"maxSupply()": "d5abeb01",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getCurrentVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPriorVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IHYGT.sol\":\"IHYGT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0xd49070e01df31c9f39ed67f7cb2844d842b5fc4c07048156f77f1ac06956a223\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7a56689e6a846ee765a66e30a816b0fe65eba41d2f16beb5bd57a7f7daf1027\",\"dweb:/ipfs/QmduVybj3AaRyHwRRnmjxsG5jPERmFBEUH9EcXwVM5kPyC\"]},\"src/interfaces/IHYGT.sol\":{\"keccak256\":\"0x4fcf60fe5c55a47ff3e09e0bd1e0f7d6f3eb702fdece7bf42557addc06c560b9\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://4dd8c8386ff0b453060dde1c14df745a01b223ebee009bffa60fd7db12b60bf6\",\"dweb:/ipfs/QmSbZNSDekfnkuntfMs8DokKkwdGrkmM3KDtkEYDS8X4pT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/libraries/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/libraries/Address.sol\":202:9607  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/libraries/Address.sol\":202:9607  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202cb88a588cd7d2f0a5108ed6aff6c21ea4705b8cf9fc52150a41f40858bc98a564736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202cb88a588cd7d2f0a5108ed6aff6c21ea4705b8cf9fc52150a41f40858bc98a564736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xB8 DUP11 PC DUP13 0xD7 0xD2 CREATE 0xA5 LT DUP15 0xD6 0xAF 0xF6 0xC2 0x1E LOG4 PUSH17 0x5B8CF9FC52150A41F40858BC98A564736F PUSH13 0x63430008130033000000000000 ",
							"sourceMap": "202:9405:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202cb88a588cd7d2f0a5108ed6aff6c21ea4705b8cf9fc52150a41f40858bc98a564736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xB8 DUP11 PC DUP13 0xD7 0xD2 CREATE 0xA5 LT DUP15 0xD6 0xAF 0xF6 0xC2 0x1E LOG4 PUSH17 0x5B8CF9FC52150A41F40858BC98A564736F PUSH13 0x63430008130033000000000000 ",
							"sourceMap": "202:9405:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 202,
									"end": 9607,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202cb88a588cd7d2f0a5108ed6aff6c21ea4705b8cf9fc52150a41f40858bc98a564736f6c63430008130033",
									".code": [
										{
											"begin": 202,
											"end": 9607,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 202,
											"end": 9607,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 202,
											"end": 9607,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 202,
											"end": 9607,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 9607,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 9607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 202,
											"end": 9607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 9607,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 202,
											"end": 9607,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"src/Farm.sol",
								"src/interfaces/IAccessControl.sol",
								"src/interfaces/IERC165.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/IERC20Permit.sol",
								"src/interfaces/IHYGT.sol",
								"src/libraries/Address.sol",
								"src/libraries/Math.sol",
								"src/libraries/SafeERC20.sol",
								"src/libraries/SignedMath.sol",
								"src/libraries/Strings.sol",
								"src/utils/AccessControl.sol",
								"src/utils/Context.sol",
								"src/utils/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/libraries/Address.sol\":{\"keccak256\":\"0x9d0843efe7418f685e662378051ca0572b56e8ed4e87b97197fb535839d0e2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0692e4d4981ff36bf331a6dda3f60abe2debce9233df65e807639dc7cda713\",\"dweb:/ipfs/QmeKRcBH8LegzqrtdTtEhZLyYeb7PFkAtChNbLA3fTkbKW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/libraries/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/libraries/Math.sol\":210:12826  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/libraries/Math.sol\":210:12826  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e8289e82efb2ebe04b130cf8aba07bec8341c55c1e488ff431f7ce193aaff6c264736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e8289e82efb2ebe04b130cf8aba07bec8341c55c1e488ff431f7ce193aaff6c264736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0x28 SWAP15 DUP3 0xEF 0xB2 0xEB 0xE0 0x4B SGT 0xC 0xF8 0xAB LOG0 PUSH28 0xEC8341C55C1E488FF431F7CE193AAFF6C264736F6C63430008130033 ",
							"sourceMap": "210:12616:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e8289e82efb2ebe04b130cf8aba07bec8341c55c1e488ff431f7ce193aaff6c264736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0x28 SWAP15 DUP3 0xEF 0xB2 0xEB 0xE0 0x4B SGT 0xC 0xF8 0xAB LOG0 PUSH28 0xEC8341C55C1E488FF431F7CE193AAFF6C264736F6C63430008130033 ",
							"sourceMap": "210:12616:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e8289e82efb2ebe04b130cf8aba07bec8341c55c1e488ff431f7ce193aaff6c264736f6c63430008130033",
									".code": [
										{
											"begin": 210,
											"end": 12826,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"src/Farm.sol",
								"src/interfaces/IAccessControl.sol",
								"src/interfaces/IERC165.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/IERC20Permit.sol",
								"src/interfaces/IHYGT.sol",
								"src/libraries/Address.sol",
								"src/libraries/Math.sol",
								"src/libraries/SafeERC20.sol",
								"src/libraries/SignedMath.sol",
								"src/libraries/Strings.sol",
								"src/utils/AccessControl.sol",
								"src/utils/Context.sol",
								"src/utils/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/libraries/Math.sol\":{\"keccak256\":\"0xfc18275f00047f613f761247e4f3ec788843036f7f426b3fd3b74e251e45f7ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acc7cebc92fed34db103599e2bde11669280f6e9062fc42d000969ee0e9e8443\",\"dweb:/ipfs/QmQh4ArebQ7tuHEEPyHfeZKctXbC6zPRRnZ7bZM5GNkgh7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/libraries/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/libraries/SafeERC20.sol\":717:4383  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/libraries/SafeERC20.sol\":717:4383  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ee4581ee5f663300599e002181af272dc299fbfdc970d83c4127b63d42e2c1c864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee4581ee5f663300599e002181af272dc299fbfdc970d83c4127b63d42e2c1c864736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE GASLIMIT DUP2 0xEE 0x5F PUSH7 0x3300599E002181 0xAF 0x27 0x2D 0xC2 SWAP10 0xFB REVERT 0xC9 PUSH17 0xD83C4127B63D42E2C1C864736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "717:3666:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee4581ee5f663300599e002181af272dc299fbfdc970d83c4127b63d42e2c1c864736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE GASLIMIT DUP2 0xEE 0x5F PUSH7 0x3300599E002181 0xAF 0x27 0x2D 0xC2 SWAP10 0xFB REVERT 0xC9 PUSH17 0xD83C4127B63D42E2C1C864736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "717:3666:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 717,
									"end": 4383,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 717,
									"end": 4383,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ee4581ee5f663300599e002181af272dc299fbfdc970d83c4127b63d42e2c1c864736f6c63430008130033",
									".code": [
										{
											"begin": 717,
											"end": 4383,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 717,
											"end": 4383,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 717,
											"end": 4383,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 717,
											"end": 4383,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 717,
											"end": 4383,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 4383,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 717,
											"end": 4383,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 4383,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 717,
											"end": 4383,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"src/Farm.sol",
								"src/interfaces/IAccessControl.sol",
								"src/interfaces/IERC165.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/IERC20Permit.sol",
								"src/interfaces/IHYGT.sol",
								"src/libraries/Address.sol",
								"src/libraries/Math.sol",
								"src/libraries/SafeERC20.sol",
								"src/libraries/SignedMath.sol",
								"src/libraries/Strings.sol",
								"src/utils/AccessControl.sol",
								"src/utils/Context.sol",
								"src/utils/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0xd49070e01df31c9f39ed67f7cb2844d842b5fc4c07048156f77f1ac06956a223\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7a56689e6a846ee765a66e30a816b0fe65eba41d2f16beb5bd57a7f7daf1027\",\"dweb:/ipfs/QmduVybj3AaRyHwRRnmjxsG5jPERmFBEUH9EcXwVM5kPyC\"]},\"src/interfaces/IERC20Permit.sol\":{\"keccak256\":\"0x7593e149ceb83bfb0b3ef1252be3d79f784eb46fa74fa8ee72a5782803e7056a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25f85848e1c684f9c1cad51d1603d608116b14e54e191f3383ddd431d46e1b93\",\"dweb:/ipfs/QmQnmnPtFGYcbAjc5HL9F5UxytDSFqSDLeBoXYJXyPMdvR\"]},\"src/libraries/Address.sol\":{\"keccak256\":\"0x9d0843efe7418f685e662378051ca0572b56e8ed4e87b97197fb535839d0e2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0692e4d4981ff36bf331a6dda3f60abe2debce9233df65e807639dc7cda713\",\"dweb:/ipfs/QmeKRcBH8LegzqrtdTtEhZLyYeb7PFkAtChNbLA3fTkbKW\"]},\"src/libraries/SafeERC20.sol\":{\"keccak256\":\"0xa8c1f46f93b6cccaeaaa524410469e9def8bd3f175f40e4bb5fc5f421a637642\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e948f1c56dfeb52151186a6e4fe04a2318130fdba505280253911ce69cad122b\",\"dweb:/ipfs/QmShmatc9g1jToX7Uj5aNUHpAUYwd7zjthdrkeySMChMJE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/libraries/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/libraries/SignedMath.sol\":223:1304  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/libraries/SignedMath.sol\":223:1304  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b38c7381e4a4018de2542bf0b230518ff46fef11da5c2f2791c87fc1e76c590764736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b38c7381e4a4018de2542bf0b230518ff46fef11da5c2f2791c87fc1e76c590764736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 DUP13 PUSH20 0x81E4A4018DE2542BF0B230518FF46FEF11DA5C2F 0x27 SWAP2 0xC8 PUSH32 0xC1E76C590764736F6C6343000813003300000000000000000000000000000000 ",
							"sourceMap": "223:1081:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b38c7381e4a4018de2542bf0b230518ff46fef11da5c2f2791c87fc1e76c590764736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 DUP13 PUSH20 0x81E4A4018DE2542BF0B230518FF46FEF11DA5C2F 0x27 SWAP2 0xC8 PUSH32 0xC1E76C590764736F6C6343000813003300000000000000000000000000000000 ",
							"sourceMap": "223:1081:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b38c7381e4a4018de2542bf0b230518ff46fef11da5c2f2791c87fc1e76c590764736f6c63430008130033",
									".code": [
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"src/Farm.sol",
								"src/interfaces/IAccessControl.sol",
								"src/interfaces/IERC165.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/IERC20Permit.sol",
								"src/interfaces/IHYGT.sol",
								"src/libraries/Address.sol",
								"src/libraries/Math.sol",
								"src/libraries/SafeERC20.sol",
								"src/libraries/SignedMath.sol",
								"src/libraries/Strings.sol",
								"src/utils/AccessControl.sol",
								"src/utils/Context.sol",
								"src/utils/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/libraries/SignedMath.sol\":{\"keccak256\":\"0xb4a5f5f5222294665d6241a5c06558d4939617ebd0a49d1eb9c0e193fd19bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be7f6a069d156446211053299916948102d357d813be42c5f1614885e71d81b3\",\"dweb:/ipfs/QmfT2fs3cDWvfoekdfkUQ3ZMz4f8tc2hqnabipbfzW3Xqb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/libraries/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/libraries/Strings.sol\":221:2853  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/libraries/Strings.sol\":221:2853  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202c91303457c6a2440b4eccc02db2c3ba638db837937c9397334079eabc3ef31c64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c91303457c6a2440b4eccc02db2c3ba638db837937c9397334079eabc3ef31c64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SWAP2 ADDRESS CALLVALUE JUMPI 0xC6 LOG2 PREVRANDAO SIGNEXTEND 0x4E 0xCC 0xC0 0x2D 0xB2 0xC3 0xBA PUSH4 0x8DB83793 PUSH29 0x9397334079EABC3EF31C64736F6C634300081300330000000000000000 ",
							"sourceMap": "221:2632:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c91303457c6a2440b4eccc02db2c3ba638db837937c9397334079eabc3ef31c64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SWAP2 ADDRESS CALLVALUE JUMPI 0xC6 LOG2 PREVRANDAO SIGNEXTEND 0x4E 0xCC 0xC0 0x2D 0xB2 0xC3 0xBA PUSH4 0x8DB83793 PUSH29 0x9397334079EABC3EF31C64736F6C634300081300330000000000000000 ",
							"sourceMap": "221:2632:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c91303457c6a2440b4eccc02db2c3ba638db837937c9397334079eabc3ef31c64736f6c63430008130033",
									".code": [
										{
											"begin": 221,
											"end": 2853,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"src/Farm.sol",
								"src/interfaces/IAccessControl.sol",
								"src/interfaces/IERC165.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/IERC20Permit.sol",
								"src/interfaces/IHYGT.sol",
								"src/libraries/Address.sol",
								"src/libraries/Math.sol",
								"src/libraries/SafeERC20.sol",
								"src/libraries/SignedMath.sol",
								"src/libraries/Strings.sol",
								"src/utils/AccessControl.sol",
								"src/utils/Context.sol",
								"src/utils/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/libraries/Math.sol\":{\"keccak256\":\"0xfc18275f00047f613f761247e4f3ec788843036f7f426b3fd3b74e251e45f7ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acc7cebc92fed34db103599e2bde11669280f6e9062fc42d000969ee0e9e8443\",\"dweb:/ipfs/QmQh4ArebQ7tuHEEPyHfeZKctXbC6zPRRnZ7bZM5GNkgh7\"]},\"src/libraries/SignedMath.sol\":{\"keccak256\":\"0xb4a5f5f5222294665d6241a5c06558d4939617ebd0a49d1eb9c0e193fd19bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be7f6a069d156446211053299916948102d357d813be42c5f1614885e71d81b3\",\"dweb:/ipfs/QmfT2fs3cDWvfoekdfkUQ3ZMz4f8tc2hqnabipbfzW3Xqb\"]},\"src/libraries/Strings.sol\":{\"keccak256\":\"0xaa9c663292d9142e4f463d0f876b1b3813e409bdeb321470fb20573d9a68012b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f7892745f43559c7f4351120ca6829fb71d40ea286268174dd84128657ee915\",\"dweb:/ipfs/QmeT6d7KBXrNcyLGhtj6a5LLHbYHiVVXqQYA6pSNnp8ecH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/utils/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IAccessControl.sol\":{\"keccak256\":\"0x89c6c2a63dc6c357c6108de150ab329ad7f847f3ff00a35bcd55f769f4ebcad4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cadec590da43255289e7db8e08a0760869efa64c543dbd8af46690ce5295d497\",\"dweb:/ipfs/QmZsPSyWeA3aZgDgtXMMx11wvTadrf5FzrxkWDbUfM11Ue\"]},\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]},\"src/libraries/Math.sol\":{\"keccak256\":\"0xfc18275f00047f613f761247e4f3ec788843036f7f426b3fd3b74e251e45f7ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acc7cebc92fed34db103599e2bde11669280f6e9062fc42d000969ee0e9e8443\",\"dweb:/ipfs/QmQh4ArebQ7tuHEEPyHfeZKctXbC6zPRRnZ7bZM5GNkgh7\"]},\"src/libraries/SignedMath.sol\":{\"keccak256\":\"0xb4a5f5f5222294665d6241a5c06558d4939617ebd0a49d1eb9c0e193fd19bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be7f6a069d156446211053299916948102d357d813be42c5f1614885e71d81b3\",\"dweb:/ipfs/QmfT2fs3cDWvfoekdfkUQ3ZMz4f8tc2hqnabipbfzW3Xqb\"]},\"src/libraries/Strings.sol\":{\"keccak256\":\"0xaa9c663292d9142e4f463d0f876b1b3813e409bdeb321470fb20573d9a68012b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f7892745f43559c7f4351120ca6829fb71d40ea286268174dd84128657ee915\",\"dweb:/ipfs/QmeT6d7KBXrNcyLGhtj6a5LLHbYHiVVXqQYA6pSNnp8ecH\"]},\"src/utils/AccessControl.sol\":{\"keccak256\":\"0x9e9604e591c7f14ea0f18f906494192375b28f2d614279f1dda876de4ee240b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e1e5fa779889491b77f631f931fad6ba3b10907766b41d56c42a37fbcbbc664\",\"dweb:/ipfs/QmadpbPf3XFvdH1CVD17VcTmf7ScynmnjEwePFs2WBmGmU\"]},\"src/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]},\"src/utils/ERC165.sol\":{\"keccak256\":\"0x0ce3f9c6ef779f4e44ea727f31300501bf3c19af2b27264e1932aef9c70f9300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://850c17304062747f819d5c5b30e0f004ad3f36aa55d8407883311bf2fd68caee\",\"dweb:/ipfs/QmZcbvqF24EBStFacFZcganjH7f6Et4RGWYHjy4M5nHiHM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3012,
								"contract": "src/utils/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)3007_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)3007_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)3007_storage"
							},
							"t_struct(RoleData)3007_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 3004,
										"contract": "src/utils/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 3006,
										"contract": "src/utils/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/utils/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]},\"src/utils/ERC165.sol\":{\"keccak256\":\"0x0ce3f9c6ef779f4e44ea727f31300501bf3c19af2b27264e1932aef9c70f9300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://850c17304062747f819d5c5b30e0f004ad3f36aa55d8407883311bf2fd68caee\",\"dweb:/ipfs/QmZcbvqF24EBStFacFZcganjH7f6Et4RGWYHjy4M5nHiHM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/Farm.sol": {
				"ast": {
					"absolutePath": "src/Farm.sol",
					"exportedSymbols": {
						"AccessControl": [
							3303
						],
						"Address": [
							1506
						],
						"Context": [
							3325
						],
						"ERC165": [
							3349
						],
						"Farm": [
							920
						],
						"IAccessControl": [
							993
						],
						"IERC165": [
							1005
						],
						"IERC20": [
							1083
						],
						"IERC20Permit": [
							1119
						],
						"IHYGT": [
							1176
						],
						"Math": [
							2372
						],
						"SafeERC20": [
							2653
						],
						"SignedMath": [
							2758
						],
						"Strings": [
							2987
						]
					},
					"id": 921,
					"license": "GNU GPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:0"
						},
						{
							"absolutePath": "src/interfaces/IHYGT.sol",
							"file": "./interfaces/IHYGT.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 921,
							"sourceUnit": 1177,
							"src": "68:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/libraries/SafeERC20.sol",
							"file": "./libraries/SafeERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 921,
							"sourceUnit": 2654,
							"src": "104:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/utils/AccessControl.sol",
							"file": "./utils/AccessControl.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 921,
							"sourceUnit": 3304,
							"src": "143:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "AccessControl",
										"nameLocations": [
											"199:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3303,
										"src": "199:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "199:13:0"
								}
							],
							"canonicalName": "Farm",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 920,
							"linearizedBaseContracts": [
								920,
								3303,
								3349,
								1005,
								993,
								3325
							],
							"name": "Farm",
							"nameLocation": "191:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "ccc57490",
									"id": 14,
									"mutability": "constant",
									"name": "GOVERNOR_ROLE",
									"nameLocation": "297:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 920,
									"src": "273:79:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 7,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "476f7665726e6f72",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "340:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_d0990c50b6714f222e6fd1faaf5345bf1aa2867d2861fc2cc43b364e7d948647",
															"typeString": "literal_string \"Governor\""
														},
														"value": "Governor"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_stringliteral_d0990c50b6714f222e6fd1faaf5345bf1aa2867d2861fc2cc43b364e7d948647",
															"typeString": "literal_string \"Governor\""
														}
													],
													"expression": {
														"id": 9,
														"name": "abi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967295,
														"src": "323:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_abi",
															"typeString": "abi"
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "327:12:0",
													"memberName": "encodePacked",
													"nodeType": "MemberAccess",
													"src": "323:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
														"typeString": "function () pure returns (bytes memory)"
													}
												},
												"id": 12,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "323:28:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											],
											"id": 8,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "313:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "313:39:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "ONE_MONTH_TIME",
									"nameLocation": "407:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 920,
									"src": "382:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 15,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "382:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31383030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "424:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1800_by_1",
											"typeString": "int_const 1800"
										},
										"value": "1800"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "496:56:0",
										"text": "@notice The address of the primary governance token."
									},
									"functionSelector": "23c64ce1",
									"id": 21,
									"mutability": "mutable",
									"name": "HYGT",
									"nameLocation": "571:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 920,
									"src": "558:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IHYGT_$1176",
										"typeString": "contract IHYGT"
									},
									"typeName": {
										"id": 20,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 19,
											"name": "IHYGT",
											"nameLocations": [
												"558:5:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1176,
											"src": "558:5:0"
										},
										"referencedDeclaration": 1176,
										"src": "558:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IHYGT_$1176",
											"typeString": "contract IHYGT"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "584:42:0",
										"text": "@notice HYGT tokens created per block."
									},
									"functionSelector": "79838ef0",
									"id": 24,
									"mutability": "mutable",
									"name": "HYGTPerBlock",
									"nameLocation": "647:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 920,
									"src": "632:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 23,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "632:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "666:53:0",
										"text": "@notice The block number when HYGT mining starts."
									},
									"functionSelector": "48cd4cb1",
									"id": 27,
									"mutability": "mutable",
									"name": "startBlock",
									"nameLocation": "740:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 920,
									"src": "725:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 26,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "725:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "757:91:0",
										"text": "@notice Total allocation poitns. Must be the sum of all allocation points in all pools."
									},
									"functionSelector": "17caf6f1",
									"id": 30,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "869:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 920,
									"src": "854:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 29,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "854:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "893:34:0",
										"text": "@dev Initialization variables."
									},
									"id": 33,
									"mutability": "immutable",
									"name": "_initializer",
									"nameLocation": "959:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 920,
									"src": "933:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 32,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "933:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "_isInitialized",
									"nameLocation": "991:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 920,
									"src": "978:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 34,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "978:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "Farm.UserInfo",
									"id": 40,
									"members": [
										{
											"constant": false,
											"id": 37,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1092:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 40,
											"src": "1084:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 36,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1084:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 39,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "1117:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 40,
											"src": "1109:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 38,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1109:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "1064:8:0",
									"nodeType": "StructDefinition",
									"scope": 920,
									"src": "1057:78:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Farm.PoolInfo",
									"id": 51,
									"members": [
										{
											"constant": false,
											"id": 43,
											"mutability": "mutable",
											"name": "lpToken",
											"nameLocation": "1177:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 51,
											"src": "1170:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1083",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 42,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 41,
													"name": "IERC20",
													"nameLocations": [
														"1170:6:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1083,
													"src": "1170:6:0"
												},
												"referencedDeclaration": 1083,
												"src": "1170:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1083",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 45,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "1203:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 51,
											"src": "1195:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 44,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1195:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 47,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nameLocation": "1232:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 51,
											"src": "1224:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 46,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1224:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 50,
											"mutability": "mutable",
											"name": "accHYGTPerShare",
											"nameLocation": "1339:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 51,
											"src": "1331:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 49,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1331:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "1150:8:0",
									"nodeType": "StructDefinition",
									"scope": 920,
									"src": "1143:219:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "1370:22:0",
										"text": "@notice Pool info."
									},
									"functionSelector": "1526fe27",
									"id": 56,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "1416:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 920,
									"src": "1398:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage",
										"typeString": "struct Farm.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 54,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 53,
												"name": "PoolInfo",
												"nameLocations": [
													"1398:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "1398:8:0"
											},
											"referencedDeclaration": 51,
											"src": "1398:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
												"typeString": "struct Farm.PoolInfo"
											}
										},
										"id": 55,
										"nodeType": "ArrayTypeName",
										"src": "1398:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage_ptr",
											"typeString": "struct Farm.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "1431:50:0",
										"text": "@notice User info for each corresponding pool."
									},
									"functionSelector": "93f1a40b",
									"id": 64,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "1545:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 920,
									"src": "1487:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct Farm.UserInfo))"
									},
									"typeName": {
										"id": 63,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 58,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1496:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1487:50:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct Farm.UserInfo))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 62,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 59,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1516:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1507:29:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
												"typeString": "mapping(address => struct Farm.UserInfo)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 61,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 60,
													"name": "UserInfo",
													"nameLocations": [
														"1527:8:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 40,
													"src": "1527:8:0"
												},
												"referencedDeclaration": 40,
												"src": "1527:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
													"typeString": "struct Farm.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1fcb86d005de4723e36a6d74eeeb8529bac339b94c9241aed56567a2d214f105",
									"id": 74,
									"name": "AddPool",
									"nameLocation": "1610:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "1634:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1618:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": false,
												"mutability": "mutable",
												"name": "lpToken",
												"nameLocation": "1647:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1639:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"indexed": false,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1663:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1656:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 69,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1656:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": false,
												"mutability": "mutable",
												"name": "allocPoint",
												"nameLocation": "1679:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1671:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1617:73:0"
									},
									"src": "1604:87:0"
								},
								{
									"anonymous": false,
									"eventSelector": "5b051d9271f3dacc9672ca07af039f84d81b973ee9174797456dd6238bf18fef",
									"id": 82,
									"name": "UpdateAllocation",
									"nameLocation": "1703:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "1736:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1720:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAllocPoint",
												"nameLocation": "1749:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1741:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldAllocPoint",
												"nameLocation": "1772:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1764:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1719:67:0"
									},
									"src": "1697:90:0"
								},
								{
									"anonymous": false,
									"eventSelector": "90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15",
									"id": 90,
									"name": "Deposit",
									"nameLocation": "1799:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1823:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1807:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "1845:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1829:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1858:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1850:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1806:59:0"
									},
									"src": "1793:73:0"
								},
								{
									"anonymous": false,
									"eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
									"id": 98,
									"name": "Withdraw",
									"nameLocation": "1878:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1903:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1887:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "1925:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1909:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1938:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1930:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1886:59:0"
									},
									"src": "1872:74:0"
								},
								{
									"anonymous": false,
									"eventSelector": "bb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595",
									"id": 106,
									"name": "EmergencyWithdraw",
									"nameLocation": "1958:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1992:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1976:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "2014:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1998:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2027:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "2019:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1975:59:0"
									},
									"src": "1952:83:0"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2104:46:0",
										"statements": [
											{
												"expression": {
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 109,
														"name": "_initializer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "2115:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 110,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3315,
															"src": "2130:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2130:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2115:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2115:27:0"
											}
										]
									},
									"id": 115,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2104:0:0"
									},
									"scope": 920,
									"src": "2090:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "2693:1271:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 128,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3315,
																	"src": "2712:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2712:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 130,
																"name": "_initializer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "2728:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2712:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661726d3a2063616c6c6572206973206e6f742074686520696e697469616c697a6572",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2742:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e44769768d03ec3c3ea627eef9905a5a2b1a1882e0c31c77df1d668d8a68193",
																"typeString": "literal_string \"Farm: caller is not the initializer\""
															},
															"value": "Farm: caller is not the initializer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e44769768d03ec3c3ea627eef9905a5a2b1a1882e0c31c77df1d668d8a68193",
																"typeString": "literal_string \"Farm: caller is not the initializer\""
															}
														],
														"id": 127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2704:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2704:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "2704:76:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 136,
																"name": "hygt_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "2895:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2912:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2904:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 137,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2904:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2904:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2895:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661726d3a20696e76616c696420485947542061646472657373",
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2916:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0441d385a0111946137fe922aa6443c7191a75eba4f870fbd5b5fb2578d76e5",
																"typeString": "literal_string \"Farm: invalid HYGT address\""
															},
															"value": "Farm: invalid HYGT address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0441d385a0111946137fe922aa6443c7191a75eba4f870fbd5b5fb2578d76e5",
																"typeString": "literal_string \"Farm: invalid HYGT address\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2887:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2887:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "2887:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"name": "GOVERNOR_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "3058:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 147,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3315,
																"src": "3073:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3073:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 145,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3271,
														"src": "3047:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3047:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "3047:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3015,
															"src": "3149:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 153,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3315,
																"src": "3169:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3169:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 151,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3271,
														"src": "3138:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3138:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "3138:44:0"
											},
											{
												"expression": {
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "HYGT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "3195:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IHYGT_$1176",
															"typeString": "contract IHYGT"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 159,
																"name": "hygt_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "3208:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 158,
															"name": "IHYGT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "3202:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IHYGT_$1176_$",
																"typeString": "type(contract IHYGT)"
															}
														},
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3202:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IHYGT_$1176",
															"typeString": "contract IHYGT"
														}
													},
													"src": "3195:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IHYGT_$1176",
														"typeString": "contract IHYGT"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3195:19:0"
											},
											{
												"expression": {
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 163,
														"name": "HYGTPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3227:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_2000000000000000000_by_1",
															"typeString": "int_const 2000000000000000000"
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3242:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "3242:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2000000000000000000_by_1",
															"typeString": "int_const 2000000000000000000"
														}
													},
													"src": "3227:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "3227:23:0"
											},
											{
												"assignments": [
													170
												],
												"declarations": [
													{
														"constant": false,
														"id": 170,
														"mutability": "mutable",
														"name": "averageBlockTime",
														"nameLocation": "3310:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 240,
														"src": "3302:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 169,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3302:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 172,
												"initialValue": {
													"hexValue": "3132",
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3329:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_12_by_1",
														"typeString": "int_const 12"
													},
													"value": "12"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3302:29:0"
											},
											{
												"assignments": [
													174
												],
												"declarations": [
													{
														"constant": false,
														"id": 174,
														"mutability": "mutable",
														"name": "dBlocks",
														"nameLocation": "3350:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 240,
														"src": "3342:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 173,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3342:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 185,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 175,
																				"name": "initialMintStartTime_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 124,
																				"src": "3362:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 176,
																				"name": "ONE_MONTH_TIME",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 17,
																				"src": "3386:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3362:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 178,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3361:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 179,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3404:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3410:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3404:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3361:58:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 182,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3360:60:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 183,
														"name": "averageBlockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "3423:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3360:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3342:97:0"
											},
											{
												"expression": {
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 186,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3450:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 187,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3463:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:6:0",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "3463:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 189,
															"name": "dBlocks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "3478:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3463:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3450:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "3450:35:0"
											},
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "3496:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3514:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "3496:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "3496:22:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 197,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3608:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage",
																"typeString": "struct Farm.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3617:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3608:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3627:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3608:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "@dev Initial farm pools.",
												"id": 235,
												"nodeType": "IfStatement",
												"src": "3604:319:0",
												"trueBody": {
													"id": 234,
													"nodeType": "Block",
													"src": "3630:293:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 203,
																					"name": "lpTokens_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 122,
																					"src": "3661:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$3_memory_ptr",
																						"typeString": "address[3] memory"
																					}
																				},
																				"id": 205,
																				"indexExpression": {
																					"hexValue": "30",
																					"id": 204,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3671:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3661:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 202,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1083,
																			"src": "3654:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1083_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3654:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1083",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"hexValue": "343030",
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3676:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_400_by_1",
																			"typeString": "int_const 400"
																		},
																		"value": "400"
																	},
																	{
																		"hexValue": "485944542d424e42",
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3681:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d19cc5297b02cd890b418361b85d1e4c0b6367b12ef4624dcb860cbb941b7c0a",
																			"typeString": "literal_string \"HYDT-BNB\""
																		},
																		"value": "HYDT-BNB"
																	},
																	{
																		"id": 209,
																		"name": "startBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "3693:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1083",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_rational_400_by_1",
																			"typeString": "int_const 400"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d19cc5297b02cd890b418361b85d1e4c0b6367b12ef4624dcb860cbb941b7c0a",
																			"typeString": "literal_string \"HYDT-BNB\""
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 201,
																	"name": "_addPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "3645:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1083_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,uint256,string memory,uint256)"
																	}
																},
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3645:59:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 211,
															"nodeType": "ExpressionStatement",
															"src": "3645:59:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 214,
																					"name": "lpTokens_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 122,
																					"src": "3754:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$3_memory_ptr",
																						"typeString": "address[3] memory"
																					}
																				},
																				"id": 216,
																				"indexExpression": {
																					"hexValue": "31",
																					"id": 215,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3764:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3754:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 213,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1083,
																			"src": "3747:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1083_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3747:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1083",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"hexValue": "343030",
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3769:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_400_by_1",
																			"typeString": "int_const 400"
																		},
																		"value": "400"
																	},
																	{
																		"hexValue": "485944542d55534454",
																		"id": 219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3774:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f05605dc275742c7d17290ed1fc451451fa3c4d6946e5ebf5db22d4a1e6ef81d",
																			"typeString": "literal_string \"HYDT-USDT\""
																		},
																		"value": "HYDT-USDT"
																	},
																	{
																		"id": 220,
																		"name": "startBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "3787:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1083",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_rational_400_by_1",
																			"typeString": "int_const 400"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_f05605dc275742c7d17290ed1fc451451fa3c4d6946e5ebf5db22d4a1e6ef81d",
																			"typeString": "literal_string \"HYDT-USDT\""
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 212,
																	"name": "_addPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "3738:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1083_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,uint256,string memory,uint256)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3738:60:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 222,
															"nodeType": "ExpressionStatement",
															"src": "3738:60:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 225,
																					"name": "lpTokens_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 122,
																					"src": "3848:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$3_memory_ptr",
																						"typeString": "address[3] memory"
																					}
																				},
																				"id": 227,
																				"indexExpression": {
																					"hexValue": "32",
																					"id": 226,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3858:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3848:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 224,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1083,
																			"src": "3841:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1083_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3841:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1083",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"hexValue": "323030",
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3863:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"hexValue": "485944542d48594754",
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3868:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e80ec8905fc2a1aa770a449b5974c31b149c384fa35148cc34823c4728166216",
																			"typeString": "literal_string \"HYDT-HYGT\""
																		},
																		"value": "HYDT-HYGT"
																	},
																	{
																		"id": 231,
																		"name": "startBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "3881:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1083",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e80ec8905fc2a1aa770a449b5974c31b149c384fa35148cc34823c4728166216",
																			"typeString": "literal_string \"HYDT-HYGT\""
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 223,
																	"name": "_addPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "3832:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1083_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,uint256,string memory,uint256)"
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3832:60:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 233,
															"nodeType": "ExpressionStatement",
															"src": "3832:60:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 236,
														"name": "_isInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "3935:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3952:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3935:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "3935:21:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "2204:379:0",
										"text": " @notice Initializes external dependencies and state variables.\n @dev This function can only be called once.\n @param hygt_ The address of the `HYGT` contract.\n @param lpTokens_ The addresses of the first 3 `LP Tokens` to add to the farming pool.\n @param initialMintStartTime_ The unix timestamp at which initial minting will begin."
									},
									"functionSelector": "5e3e1581",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "2598:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "hygt_",
												"nameLocation": "2617:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2609:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "lpTokens_",
												"nameLocation": "2642:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2624:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$3_memory_ptr",
													"typeString": "address[3]"
												},
												"typeName": {
													"baseType": {
														"id": 119,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2624:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 121,
													"length": {
														"hexValue": "33",
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2632:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "ArrayTypeName",
													"src": "2624:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$3_storage_ptr",
														"typeString": "address[3]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "initialMintStartTime_",
												"nameLocation": "2661:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2653:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:75:0"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2693:0:0"
									},
									"scope": 920,
									"src": "2589:1375:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "4760:41:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 247,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "4778:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage",
															"typeString": "struct Farm.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4787:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4778:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 249,
												"nodeType": "Return",
												"src": "4771:22:0"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "4643:57:0",
										"text": " @notice Returns the number of pools."
									},
									"functionSelector": "081e3eda",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "4715:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4725:2:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "4751:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4750:9:0"
									},
									"scope": 920,
									"src": "4706:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "5494:273:0",
										"statements": [
											{
												"condition": {
													"id": 267,
													"name": "withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 261,
													"src": "5509:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 272,
												"nodeType": "IfStatement",
												"src": "5505:60:0",
												"trueBody": {
													"id": 271,
													"nodeType": "Block",
													"src": "5521:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 268,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "5536:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5536:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 270,
															"nodeType": "ExpressionStatement",
															"src": "5536:17:0"
														}
													]
												}
											},
											{
												"assignments": [
													274
												],
												"declarations": [
													{
														"constant": false,
														"id": 274,
														"mutability": "mutable",
														"name": "lastRewardBlock",
														"nameLocation": "5583:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 295,
														"src": "5575:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 273,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5575:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 275,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5601:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5607:6:0",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "5601:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 277,
															"name": "startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "5616:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5601:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 281,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "5644:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5601:53:0",
													"trueExpression": {
														"expression": {
															"id": 279,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5629:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5635:6:0",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "5629:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5575:79:0"
											},
											{
												"expression": {
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 284,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "5665:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 285,
														"name": "allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "5684:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5665:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "5665:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 289,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "5714:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1083",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 290,
															"name": "allocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "5723:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 291,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "5735:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 292,
															"name": "lastRewardBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "5743:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1083",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 288,
														"name": "_addPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "5705:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1083_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,uint256,string memory,uint256)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5705:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "5705:54:0"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "4809:554:0",
										"text": " @notice Adds a new `LP Token` to the pool. Caller must have the `Governor` role. Assigns a unique id for the given `LP Token`.\n NOTE: The same `LP Token` must NOT be added more than once otherwise the reward calculation will be compromised.\n @param lpToken The address of the `LP Token`.\n @param allocPoint The value for allocation points.\n @param symbol The name for the pool.\n @param withUpdate Whether or not to update reward variables for all pools. May cause high gas spending."
									},
									"functionSelector": "3a0618fd",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 264,
													"name": "GOVERNOR_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 14,
													"src": "5479:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 265,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 263,
												"name": "onlyRole",
												"nameLocations": [
													"5470:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3026,
												"src": "5470:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5470:23:0"
										}
									],
									"name": "addPool",
									"nameLocation": "5378:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "lpToken",
												"nameLocation": "5393:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "5386:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1083",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 254,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 253,
														"name": "IERC20",
														"nameLocations": [
															"5386:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1083,
														"src": "5386:6:0"
													},
													"referencedDeclaration": 1083,
													"src": "5386:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1083",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "allocPoint",
												"nameLocation": "5410:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "5402:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "5436:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "5422:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 258,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5422:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "withUpdate",
												"nameLocation": "5449:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "5444:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5444:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5385:75:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5494:0:0"
									},
									"scope": 920,
									"src": "5369:398:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "5885:320:0",
										"statements": [
											{
												"assignments": [
													310
												],
												"declarations": [
													{
														"constant": false,
														"id": 310,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "5912:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 351,
														"src": "5896:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$51_memory_ptr",
															"typeString": "struct Farm.PoolInfo"
														},
														"typeName": {
															"id": 309,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 308,
																"name": "PoolInfo",
																"nameLocations": [
																	"5896:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 51,
																"src": "5896:8:0"
															},
															"referencedDeclaration": 51,
															"src": "5896:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																"typeString": "struct Farm.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 311,
												"nodeType": "VariableDeclarationStatement",
												"src": "5896:20:0"
											},
											{
												"expression": {
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 312,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "5927:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$51_memory_ptr",
																"typeString": "struct Farm.PoolInfo memory"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5932:7:0",
														"memberName": "lpToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 43,
														"src": "5927:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1083",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 316,
																"name": "lpToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "5949:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1083",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$1083",
																	"typeString": "contract IERC20"
																}
															],
															"id": 315,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "5942:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1083_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5942:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1083",
															"typeString": "contract IERC20"
														}
													},
													"src": "5927:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1083",
														"typeString": "contract IERC20"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "5927:30:0"
											},
											{
												"expression": {
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 320,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "5968:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$51_memory_ptr",
																"typeString": "struct Farm.PoolInfo memory"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5973:10:0",
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 45,
														"src": "5968:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 323,
														"name": "allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "5986:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5968:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "5968:28:0"
											},
											{
												"expression": {
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 326,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "6007:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$51_memory_ptr",
																"typeString": "struct Farm.PoolInfo memory"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6012:15:0",
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 47,
														"src": "6007:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 329,
														"name": "lastRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6030:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6007:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "6007:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 335,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "6108:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$51_memory_ptr",
																"typeString": "struct Farm.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$51_memory_ptr",
																"typeString": "struct Farm.PoolInfo memory"
															}
														],
														"expression": {
															"id": 332,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "6094:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage",
																"typeString": "struct Farm.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6103:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6094:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$51_storage_$returns$__$attached_to$_t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Farm.PoolInfo storage ref[] storage pointer,struct Farm.PoolInfo storage ref)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6094:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "6094:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 339,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "6139:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage",
																		"typeString": "struct Farm.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6148:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6139:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6157:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "6139:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 345,
																	"name": "lpToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "6168:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1083",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1083",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6160:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 343,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6160:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6160:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "6178:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 348,
															"name": "allocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "6186:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 338,
														"name": "AddPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "6131:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,string memory,uint256)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "EmitStatement",
												"src": "6126:71:0"
											}
										]
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addPool",
									"nameLocation": "5784:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "lpToken",
												"nameLocation": "5800:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "5793:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1083",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 298,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 297,
														"name": "IERC20",
														"nameLocations": [
															"5793:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1083,
														"src": "5793:6:0"
													},
													"referencedDeclaration": 1083,
													"src": "5793:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1083",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "allocPoint",
												"nameLocation": "5817:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "5809:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "5843:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "5829:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 302,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5829:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "lastRewardBlock",
												"nameLocation": "5859:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "5851:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5792:83:0"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5885:0:0"
									},
									"scope": 920,
									"src": "5775:430:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "6663:337:0",
										"statements": [
											{
												"condition": {
													"id": 365,
													"name": "withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 359,
													"src": "6678:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 370,
												"nodeType": "IfStatement",
												"src": "6674:60:0",
												"trueBody": {
													"id": 369,
													"nodeType": "Block",
													"src": "6690:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 366,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "6705:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6705:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 368,
															"nodeType": "ExpressionStatement",
															"src": "6705:17:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 371,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "6744:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 372,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 30,
																		"src": "6763:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 373,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 56,
																				"src": "6781:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage",
																					"typeString": "struct Farm.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 375,
																			"indexExpression": {
																				"id": 374,
																				"name": "pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 355,
																				"src": "6790:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6781:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$51_storage",
																				"typeString": "struct Farm.PoolInfo storage ref"
																			}
																		},
																		"id": 376,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6795:10:0",
																		"memberName": "allocPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 45,
																		"src": "6781:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6763:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 378,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6762:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 379,
															"name": "allocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "6809:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6762:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6744:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "6744:75:0"
											},
											{
												"assignments": [
													384
												],
												"declarations": [
													{
														"constant": false,
														"id": 384,
														"mutability": "mutable",
														"name": "oldAllocPoint",
														"nameLocation": "6838:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "6830:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6830:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 389,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 385,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "6854:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage",
																"typeString": "struct Farm.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 387,
														"indexExpression": {
															"id": 386,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6863:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6854:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$51_storage",
															"typeString": "struct Farm.PoolInfo storage ref"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6868:10:0",
													"memberName": "allocPoint",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 45,
													"src": "6854:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6830:48:0"
											},
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 390,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "6889:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage",
																	"typeString": "struct Farm.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 392,
															"indexExpression": {
																"id": 391,
																"name": "pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "6898:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6889:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$51_storage",
																"typeString": "struct Farm.PoolInfo storage ref"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6903:10:0",
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 45,
														"src": "6889:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 394,
														"name": "allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "6916:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6889:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "6889:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 398,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6961:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 399,
															"name": "allocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "6966:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 400,
															"name": "oldAllocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6978:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 397,
														"name": "UpdateAllocation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "6944:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6944:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "EmitStatement",
												"src": "6939:53:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "6213:335:0",
										"text": " @notice Updates the given pool's HYGT allocation point. Caller must have the `Governor` role.\n @param pid The unique id of the pool.\n @param allocPoint The new value for allocation points.\n @param withUpdate Whether or not to update reward variables for all pools. May cause high gas spending."
									},
									"functionSelector": "ad35e1cc",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 362,
													"name": "GOVERNOR_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 14,
													"src": "6648:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 361,
												"name": "onlyRole",
												"nameLocations": [
													"6639:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3026,
												"src": "6639:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6639:23:0"
										}
									],
									"name": "updateAllocation",
									"nameLocation": "6563:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "6588:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "6580:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "allocPoint",
												"nameLocation": "6601:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "6593:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "withUpdate",
												"nameLocation": "6618:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "6613:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6613:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6579:50:0"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6663:0:0"
									},
									"scope": 920,
									"src": "6554:446:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "7167:148:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "7186:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 429,
														"src": "7178:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 408,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7178:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"expression": {
														"id": 410,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "7195:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage",
															"typeString": "struct Farm.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7204:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "7195:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7178:32:0"
											},
											{
												"body": {
													"id": 427,
													"nodeType": "Block",
													"src": "7266:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 424,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "7292:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 423,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "7281:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7281:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 426,
															"nodeType": "ExpressionStatement",
															"src": "7281:15:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 417,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "7245:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 418,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "7251:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7245:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 428,
												"initializationExpression": {
													"assignments": [
														414
													],
													"declarations": [
														{
															"constant": false,
															"id": 414,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "7236:3:0",
															"nodeType": "VariableDeclaration",
															"scope": 428,
															"src": "7228:11:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 413,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7228:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 416,
													"initialValue": {
														"hexValue": "30",
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7242:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7228:15:0"
												},
												"loopExpression": {
													"expression": {
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "7259:5:0",
														"subExpression": {
															"id": 420,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "7261:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 422,
													"nodeType": "ExpressionStatement",
													"src": "7259:5:0"
												},
												"nodeType": "ForStatement",
												"src": "7223:85:0"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "7008:119:0",
										"text": " @notice Updates reward variables for all pools.\n NOTE: May cause high gas spending."
									},
									"functionSelector": "630b5ba1",
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "7142:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7157:2:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7167:0:0"
									},
									"scope": 920,
									"src": "7133:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "7477:191:0",
										"statements": [
											{
												"assignments": [
													439
												],
												"declarations": [
													{
														"constant": false,
														"id": 439,
														"mutability": "mutable",
														"name": "totalPending",
														"nameLocation": "7496:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 463,
														"src": "7488:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 438,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7488:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"nodeType": "VariableDeclarationStatement",
												"src": "7488:20:0"
											},
											{
												"body": {
													"id": 459,
													"nodeType": "Block",
													"src": "7569:62:0",
													"statements": [
														{
															"expression": {
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 452,
																	"name": "totalPending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "7584:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 454,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 442,
																			"src": "7611:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 455,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "7614:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 453,
																		"name": "getPending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 564,
																		"src": "7600:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (uint256,address) view returns (uint256)"
																		}
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7600:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7584:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 458,
															"nodeType": "ExpressionStatement",
															"src": "7584:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 445,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "7542:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 446,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "7546:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage",
																"typeString": "struct Farm.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7555:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7546:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7542:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"initializationExpression": {
													"assignments": [
														442
													],
													"declarations": [
														{
															"constant": false,
															"id": 442,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7534:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 460,
															"src": "7526:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 441,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7526:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 444,
													"initialValue": {
														"hexValue": "30",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7538:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7526:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7564:3:0",
														"subExpression": {
															"id": 449,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "7564:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 451,
													"nodeType": "ExpressionStatement",
													"src": "7564:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7521:110:0"
											},
											{
												"expression": {
													"id": 461,
													"name": "totalPending",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 439,
													"src": "7648:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 437,
												"id": 462,
												"nodeType": "Return",
												"src": "7641:19:0"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "7330:70:0",
										"text": " @notice Gets all pending `HYGT` for a given user."
									},
									"functionSelector": "b3ecb623",
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPendingBatch",
									"nameLocation": "7415:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7439:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "7431:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7431:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7430:14:0"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "7468:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7467:9:0"
									},
									"scope": 920,
									"src": "7406:262:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "7845:682:0",
										"statements": [
											{
												"assignments": [
													476
												],
												"declarations": [
													{
														"constant": false,
														"id": 476,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "7872:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "7856:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$51_memory_ptr",
															"typeString": "struct Farm.PoolInfo"
														},
														"typeName": {
															"id": 475,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 474,
																"name": "PoolInfo",
																"nameLocations": [
																	"7856:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 51,
																"src": "7856:8:0"
															},
															"referencedDeclaration": 51,
															"src": "7856:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																"typeString": "struct Farm.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"baseExpression": {
														"id": 477,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "7879:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage",
															"typeString": "struct Farm.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 479,
													"indexExpression": {
														"id": 478,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "7888:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7879:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$51_storage",
														"typeString": "struct Farm.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7856:36:0"
											},
											{
												"assignments": [
													483
												],
												"declarations": [
													{
														"constant": false,
														"id": 483,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "7919:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "7903:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$40_memory_ptr",
															"typeString": "struct Farm.UserInfo"
														},
														"typeName": {
															"id": 482,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 481,
																"name": "UserInfo",
																"nameLocations": [
																	"7903:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 40,
																"src": "7903:8:0"
															},
															"referencedDeclaration": 40,
															"src": "7903:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																"typeString": "struct Farm.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 484,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "7930:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct Farm.UserInfo storage ref))"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "7939:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7930:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
															"typeString": "mapping(address => struct Farm.UserInfo storage ref)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "7944:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7930:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$40_storage",
														"typeString": "struct Farm.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7903:46:0"
											},
											{
												"assignments": [
													491
												],
												"declarations": [
													{
														"constant": false,
														"id": 491,
														"mutability": "mutable",
														"name": "accHYGTPerShare",
														"nameLocation": "7968:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "7960:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7960:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 494,
												"initialValue": {
													"expression": {
														"id": 492,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "7986:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$51_memory_ptr",
															"typeString": "struct Farm.PoolInfo memory"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7991:15:0",
													"memberName": "accHYGTPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 50,
													"src": "7986:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7960:46:0"
											},
											{
												"assignments": [
													496
												],
												"declarations": [
													{
														"constant": false,
														"id": 496,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "8025:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "8017:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 495,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8017:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 502,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8067:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farm_$920",
																		"typeString": "contract Farm"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farm_$920",
																		"typeString": "contract Farm"
																	}
																],
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8059:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 500,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8059:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8059:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 497,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "8036:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$51_memory_ptr",
																	"typeString": "struct Farm.PoolInfo memory"
																}
															},
															"id": 498,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8041:7:0",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 43,
															"src": "8036:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1083",
																"typeString": "contract IERC20"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8049:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1040,
														"src": "8036:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8036:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8017:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 506,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "8090:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8096:6:0",
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "8090:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 508,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "8105:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$51_memory_ptr",
																	"typeString": "struct Farm.PoolInfo memory"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8110:15:0",
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 47,
															"src": "8105:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8090:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 511,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8129:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8141:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8129:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8090:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 546,
												"nodeType": "IfStatement",
												"src": "8086:314:0",
												"trueBody": {
													"id": 545,
													"nodeType": "Block",
													"src": "8144:256:0",
													"statements": [
														{
															"assignments": [
																516
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 516,
																	"mutability": "mutable",
																	"name": "numberOfBlocks",
																	"nameLocation": "8167:14:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 545,
																	"src": "8159:22:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 515,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8159:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 522,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 517,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "8184:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8190:6:0",
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "8184:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 519,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "8199:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$51_memory_ptr",
																			"typeString": "struct Farm.PoolInfo memory"
																		}
																	},
																	"id": 520,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8204:15:0",
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 47,
																	"src": "8199:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8184:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8159:60:0"
														},
														{
															"assignments": [
																524
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 524,
																	"mutability": "mutable",
																	"name": "HYGTReward",
																	"nameLocation": "8242:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 545,
																	"src": "8234:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 523,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8234:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 534,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 525,
																					"name": "numberOfBlocks",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 516,
																					"src": "8256:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 526,
																					"name": "HYGTPerBlock",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 24,
																					"src": "8273:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8256:29:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"expression": {
																					"id": 528,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 476,
																					"src": "8288:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$51_memory_ptr",
																						"typeString": "struct Farm.PoolInfo memory"
																					}
																				},
																				"id": 529,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8293:10:0",
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 45,
																				"src": "8288:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8256:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 531,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8255:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 532,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "8307:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8255:67:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8234:88:0"
														},
														{
															"expression": {
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 535,
																	"name": "accHYGTPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "8337:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 538,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 536,
																							"name": "HYGTReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 524,
																							"src": "8358:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "31653132",
																							"id": 537,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8371:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						},
																						"src": "8358:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 539,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "8357:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 540,
																				"name": "lpSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 496,
																				"src": "8379:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8357:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 542,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8356:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8337:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 544,
															"nodeType": "ExpressionStatement",
															"src": "8337:51:0"
														}
													]
												}
											},
											{
												"assignments": [
													548
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "8418:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "8410:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 547,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 560,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 549,
																					"name": "userData",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 483,
																					"src": "8430:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$40_memory_ptr",
																						"typeString": "struct Farm.UserInfo memory"
																					}
																				},
																				"id": 550,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8439:6:0",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 37,
																				"src": "8430:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 551,
																				"name": "accHYGTPerShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "8448:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8430:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 553,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8429:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31653132",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8467:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																},
																"src": "8429:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 556,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8428:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 557,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "8475:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$40_memory_ptr",
																"typeString": "struct Farm.UserInfo memory"
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8484:10:0",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "8475:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8428:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8410:84:0"
											},
											{
												"expression": {
													"id": 561,
													"name": "pending",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "8512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 473,
												"id": 562,
												"nodeType": "Return",
												"src": "8505:14:0"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "7676:86:0",
										"text": " @notice Gets all pending `HYGT` in a given pool for a given user."
									},
									"functionSelector": "7f37df3b",
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPending",
									"nameLocation": "7777:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "7796:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "7788:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7809:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "7801:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7801:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7787:27:0"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "7836:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7835:9:0"
									},
									"scope": 920,
									"src": "7768:759:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "8804:607:0",
										"statements": [
											{
												"assignments": [
													572
												],
												"declarations": [
													{
														"constant": false,
														"id": 572,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "8832:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "8815:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
															"typeString": "struct Farm.PoolInfo"
														},
														"typeName": {
															"id": 571,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 570,
																"name": "PoolInfo",
																"nameLocations": [
																	"8815:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 51,
																"src": "8815:8:0"
															},
															"referencedDeclaration": 51,
															"src": "8815:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																"typeString": "struct Farm.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 576,
												"initialValue": {
													"baseExpression": {
														"id": 573,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "8839:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage",
															"typeString": "struct Farm.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 575,
													"indexExpression": {
														"id": 574,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "8848:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8839:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$51_storage",
														"typeString": "struct Farm.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8815:37:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 577,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8869:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8875:6:0",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "8869:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 579,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "8885:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																"typeString": "struct Farm.PoolInfo storage pointer"
															}
														},
														"id": 580,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8890:15:0",
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 47,
														"src": "8885:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8869:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 584,
												"nodeType": "IfStatement",
												"src": "8865:75:0",
												"trueBody": {
													"id": 583,
													"nodeType": "Block",
													"src": "8907:33:0",
													"statements": [
														{
															"functionReturnParameters": 569,
															"id": 582,
															"nodeType": "Return",
															"src": "8922:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													586
												],
												"declarations": [
													{
														"constant": false,
														"id": 586,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "8958:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "8950:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 585,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8950:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 595,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 592,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9000:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farm_$920",
																		"typeString": "contract Farm"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farm_$920",
																		"typeString": "contract Farm"
																	}
																],
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8992:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 590,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8992:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8992:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 587,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "8969:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																	"typeString": "struct Farm.PoolInfo storage pointer"
																}
															},
															"id": 588,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8974:7:0",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 43,
															"src": "8969:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1083",
																"typeString": "contract IERC20"
															}
														},
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8982:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1040,
														"src": "8969:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8969:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8950:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 596,
														"name": "lpSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "9023:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9035:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9023:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 608,
												"nodeType": "IfStatement",
												"src": "9019:102:0",
												"trueBody": {
													"id": 607,
													"nodeType": "Block",
													"src": "9038:83:0",
													"statements": [
														{
															"expression": {
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 599,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "9053:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																			"typeString": "struct Farm.PoolInfo storage pointer"
																		}
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "9058:15:0",
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 47,
																	"src": "9053:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 602,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "9076:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9082:6:0",
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "9076:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9053:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 605,
															"nodeType": "ExpressionStatement",
															"src": "9053:35:0"
														},
														{
															"functionReturnParameters": 569,
															"id": 606,
															"nodeType": "Return",
															"src": "9103:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													610
												],
												"declarations": [
													{
														"constant": false,
														"id": 610,
														"mutability": "mutable",
														"name": "numberOfBlocks",
														"nameLocation": "9139:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "9131:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 609,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9131:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 616,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 611,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9156:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9162:6:0",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "9156:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 613,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "9171:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																"typeString": "struct Farm.PoolInfo storage pointer"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9176:15:0",
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 47,
														"src": "9171:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9156:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9131:60:0"
											},
											{
												"assignments": [
													618
												],
												"declarations": [
													{
														"constant": false,
														"id": 618,
														"mutability": "mutable",
														"name": "HYGTReward",
														"nameLocation": "9210:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "9202:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 617,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9202:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 628,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 619,
																		"name": "numberOfBlocks",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "9224:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 620,
																		"name": "HYGTPerBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 24,
																		"src": "9241:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9224:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"id": 622,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "9256:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																			"typeString": "struct Farm.PoolInfo storage pointer"
																		}
																	},
																	"id": 623,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9261:10:0",
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 45,
																	"src": "9256:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9224:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 625,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9223:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 626,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "9275:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9223:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9202:88:0"
											},
											{
												"expression": {
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 629,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "9301:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																"typeString": "struct Farm.PoolInfo storage pointer"
															}
														},
														"id": 631,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9306:15:0",
														"memberName": "accHYGTPerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 50,
														"src": "9301:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 632,
																				"name": "HYGTReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 618,
																				"src": "9327:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "31653132",
																				"id": 633,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9340:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			},
																			"src": "9327:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 635,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9326:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 636,
																	"name": "lpSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "9348:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9326:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 638,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9325:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9301:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "9301:56:0"
											},
											{
												"expression": {
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 641,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "9368:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																"typeString": "struct Farm.PoolInfo storage pointer"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9373:15:0",
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 47,
														"src": "9368:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 644,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9391:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9397:6:0",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "9391:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9368:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "9368:35:0"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "8623:135:0",
										"text": " @notice Updates reward variables of the given pool to be up-to-date.\n @param pid The unique id of the pool."
									},
									"functionSelector": "51eb05a6",
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "8773:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "8792:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "8784:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8783:13:0"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8804:0:0"
									},
									"scope": 920,
									"src": "8764:647:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "9474:702:0",
										"statements": [
											{
												"assignments": [
													658
												],
												"declarations": [
													{
														"constant": false,
														"id": 658,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "9502:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "9485:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
															"typeString": "struct Farm.PoolInfo"
														},
														"typeName": {
															"id": 657,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 656,
																"name": "PoolInfo",
																"nameLocations": [
																	"9485:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 51,
																"src": "9485:8:0"
															},
															"referencedDeclaration": 51,
															"src": "9485:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																"typeString": "struct Farm.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 662,
												"initialValue": {
													"baseExpression": {
														"id": 659,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "9509:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage",
															"typeString": "struct Farm.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 661,
													"indexExpression": {
														"id": 660,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "9518:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9509:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$51_storage",
														"typeString": "struct Farm.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9485:37:0"
											},
											{
												"assignments": [
													665
												],
												"declarations": [
													{
														"constant": false,
														"id": 665,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "9550:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "9533:25:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
															"typeString": "struct Farm.UserInfo"
														},
														"typeName": {
															"id": 664,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 663,
																"name": "UserInfo",
																"nameLocations": [
																	"9533:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 40,
																"src": "9533:8:0"
															},
															"referencedDeclaration": 40,
															"src": "9533:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																"typeString": "struct Farm.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 672,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 666,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "9561:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct Farm.UserInfo storage ref))"
															}
														},
														"id": 668,
														"indexExpression": {
															"id": 667,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "9570:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9561:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
															"typeString": "mapping(address => struct Farm.UserInfo storage ref)"
														}
													},
													"id": 671,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 669,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3315,
															"src": "9575:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9575:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9561:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$40_storage",
														"typeString": "struct Farm.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9533:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 674,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "9610:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 673,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "9599:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9599:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "9599:15:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 677,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "9631:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																"typeString": "struct Farm.UserInfo storage pointer"
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9640:6:0",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "9631:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9649:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9631:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 710,
												"nodeType": "IfStatement",
												"src": "9627:240:0",
												"trueBody": {
													"id": 709,
													"nodeType": "Block",
													"src": "9652:215:0",
													"statements": [
														{
															"assignments": [
																682
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 682,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "9675:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 709,
																	"src": "9667:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 681,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9667:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 695,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 687,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 683,
																								"name": "userData",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 665,
																								"src": "9687:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																									"typeString": "struct Farm.UserInfo storage pointer"
																								}
																							},
																							"id": 684,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "9696:6:0",
																							"memberName": "amount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 37,
																							"src": "9687:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"id": 685,
																								"name": "pool",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 658,
																								"src": "9705:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																									"typeString": "struct Farm.PoolInfo storage pointer"
																								}
																							},
																							"id": 686,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "9710:15:0",
																							"memberName": "accHYGTPerShare",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 50,
																							"src": "9705:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "9687:38:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 688,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "9686:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "31653132",
																				"id": 689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9729:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			},
																			"src": "9686:47:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 691,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9685:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 692,
																		"name": "userData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "9737:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																			"typeString": "struct Farm.UserInfo storage pointer"
																		}
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9746:10:0",
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 39,
																	"src": "9737:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9685:71:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9667:89:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 696,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "9776:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9786:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9776:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 708,
															"nodeType": "IfStatement",
															"src": "9773:83:0",
															"trueBody": {
																"id": 707,
																"nodeType": "Block",
																"src": "9789:67:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 702,
																						"name": "_msgSender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3315,
																						"src": "9818:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																							"typeString": "function () view returns (address)"
																						}
																					},
																					"id": 703,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "9818:12:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 704,
																					"name": "pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 682,
																					"src": "9832:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 699,
																					"name": "HYGT",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 21,
																					"src": "9808:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IHYGT_$1176",
																						"typeString": "contract IHYGT"
																					}
																				},
																				"id": 701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9813:4:0",
																				"memberName": "mint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1138,
																				"src": "9808:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9808:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 706,
																		"nodeType": "ExpressionStatement",
																		"src": "9808:32:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 711,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "9881:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9890:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9881:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "IfStatement",
												"src": "9877:160:0",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "9893:144:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 717,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 658,
																			"src": "9935:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																				"typeString": "struct Farm.PoolInfo storage pointer"
																			}
																		},
																		"id": 718,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9940:7:0",
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 43,
																		"src": "9935:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1083",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 719,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3315,
																			"src": "9949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 723,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "9971:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Farm_$920",
																					"typeString": "contract Farm"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Farm_$920",
																					"typeString": "contract Farm"
																				}
																			],
																			"id": 722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9963:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 721,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9963:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9963:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 725,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 653,
																		"src": "9978:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1083",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 714,
																		"name": "SafeERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2653,
																		"src": "9908:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeERC20_$2653_$",
																			"typeString": "type(library SafeERC20)"
																		}
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9918:16:0",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2430,
																	"src": "9908:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1083_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9908:77:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 727,
															"nodeType": "ExpressionStatement",
															"src": "9908:77:0"
														},
														{
															"expression": {
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 728,
																		"name": "userData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "10000:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																			"typeString": "struct Farm.UserInfo storage pointer"
																		}
																	},
																	"id": 730,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "10009:6:0",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 37,
																	"src": "10000:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 731,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "10019:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10000:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 733,
															"nodeType": "ExpressionStatement",
															"src": "10000:25:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 736,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10047:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																"typeString": "struct Farm.UserInfo storage pointer"
															}
														},
														"id": 738,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10056:10:0",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "10047:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 739,
																			"name": "userData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "10070:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																				"typeString": "struct Farm.UserInfo storage pointer"
																			}
																		},
																		"id": 740,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10079:6:0",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 37,
																		"src": "10070:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 741,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 658,
																			"src": "10088:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																				"typeString": "struct Farm.PoolInfo storage pointer"
																			}
																		},
																		"id": 742,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10093:15:0",
																		"memberName": "accHYGTPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 50,
																		"src": "10088:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10070:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 744,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10069:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653132",
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10112:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"value": "1e12"
														},
														"src": "10069:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10047:69:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "10047:69:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 750,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3315,
																"src": "10142:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10142:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 752,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "10156:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 753,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "10161:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 749,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "10134:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10134:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "EmitStatement",
												"src": "10129:39:0"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "9428:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "9444:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "9436:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9457:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "9449:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9435:29:0"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9474:0:0"
									},
									"scope": 920,
									"src": "9419:757:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "10336:681:0",
										"statements": [
											{
												"assignments": [
													767
												],
												"declarations": [
													{
														"constant": false,
														"id": 767,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "10364:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 863,
														"src": "10347:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
															"typeString": "struct Farm.PoolInfo"
														},
														"typeName": {
															"id": 766,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 765,
																"name": "PoolInfo",
																"nameLocations": [
																	"10347:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 51,
																"src": "10347:8:0"
															},
															"referencedDeclaration": 51,
															"src": "10347:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																"typeString": "struct Farm.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 771,
												"initialValue": {
													"baseExpression": {
														"id": 768,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "10371:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage",
															"typeString": "struct Farm.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 770,
													"indexExpression": {
														"id": 769,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "10380:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10371:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$51_storage",
														"typeString": "struct Farm.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10347:37:0"
											},
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "10412:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 863,
														"src": "10395:25:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
															"typeString": "struct Farm.UserInfo"
														},
														"typeName": {
															"id": 773,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 772,
																"name": "UserInfo",
																"nameLocations": [
																	"10395:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 40,
																"src": "10395:8:0"
															},
															"referencedDeclaration": 40,
															"src": "10395:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																"typeString": "struct Farm.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 781,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 775,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "10423:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct Farm.UserInfo storage ref))"
															}
														},
														"id": 777,
														"indexExpression": {
															"id": 776,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10432:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10423:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
															"typeString": "mapping(address => struct Farm.UserInfo storage ref)"
														}
													},
													"id": 780,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 778,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3315,
															"src": "10437:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10437:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10423:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$40_storage",
														"typeString": "struct Farm.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10395:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 783,
																	"name": "userData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "10469:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																		"typeString": "struct Farm.UserInfo storage pointer"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10478:6:0",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 37,
																"src": "10469:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 785,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "10488:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10469:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661726d3a206e6f7420676f6f64",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10496:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_19f3453e52ae10a360d9e48db78d5d4e6a706bf3acf6c2436b95797b32ab141c",
																"typeString": "literal_string \"Farm: not good\""
															},
															"value": "Farm: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_19f3453e52ae10a360d9e48db78d5d4e6a706bf3acf6c2436b95797b32ab141c",
																"typeString": "literal_string \"Farm: not good\""
															}
														],
														"id": 782,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10461:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10461:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "10461:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10535:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 790,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "10524:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10524:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "10524:15:0"
											},
											{
												"assignments": [
													795
												],
												"declarations": [
													{
														"constant": false,
														"id": 795,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "10558:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 863,
														"src": "10550:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 794,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10550:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 808,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 796,
																					"name": "userData",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 774,
																					"src": "10570:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																						"typeString": "struct Farm.UserInfo storage pointer"
																					}
																				},
																				"id": 797,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10579:6:0",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 37,
																				"src": "10570:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"expression": {
																					"id": 798,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "10588:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																						"typeString": "struct Farm.PoolInfo storage pointer"
																					}
																				},
																				"id": 799,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10593:15:0",
																				"memberName": "accHYGTPerShare",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 50,
																				"src": "10588:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10570:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 801,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10569:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31653132",
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10612:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																},
																"src": "10569:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 804,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10568:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 805,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "10620:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																"typeString": "struct Farm.UserInfo storage pointer"
															}
														},
														"id": 806,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10629:10:0",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "10620:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10568:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10550:89:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 809,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "10655:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10665:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10655:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 821,
												"nodeType": "IfStatement",
												"src": "10652:75:0",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "10668:59:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 815,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3315,
																			"src": "10693:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10693:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 817,
																		"name": "pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 795,
																		"src": "10707:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 812,
																		"name": "HYGT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 21,
																		"src": "10683:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IHYGT_$1176",
																			"typeString": "contract IHYGT"
																		}
																	},
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10688:4:0",
																	"memberName": "mint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1138,
																	"src": "10683:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10683:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 819,
															"nodeType": "ExpressionStatement",
															"src": "10683:32:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 822,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10740:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10749:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10740:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 842,
												"nodeType": "IfStatement",
												"src": "10737:140:0",
												"trueBody": {
													"id": 841,
													"nodeType": "Block",
													"src": "10752:125:0",
													"statements": [
														{
															"expression": {
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 825,
																		"name": "userData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "10767:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																			"typeString": "struct Farm.UserInfo storage pointer"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "10776:6:0",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 37,
																	"src": "10767:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 828,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "10786:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10767:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 830,
															"nodeType": "ExpressionStatement",
															"src": "10767:25:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 834,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "10830:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																				"typeString": "struct Farm.PoolInfo storage pointer"
																			}
																		},
																		"id": 835,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10835:7:0",
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 43,
																		"src": "10830:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1083",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 836,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3315,
																			"src": "10844:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10844:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 838,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "10858:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1083",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 831,
																		"name": "SafeERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2653,
																		"src": "10807:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeERC20_$2653_$",
																			"typeString": "type(library SafeERC20)"
																		}
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10817:12:0",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2404,
																	"src": "10807:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1083_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10807:58:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 840,
															"nodeType": "ExpressionStatement",
															"src": "10807:58:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 843,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "10887:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																"typeString": "struct Farm.UserInfo storage pointer"
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10896:10:0",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "10887:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 846,
																			"name": "userData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 774,
																			"src": "10910:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																				"typeString": "struct Farm.UserInfo storage pointer"
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10919:6:0",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 37,
																		"src": "10910:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 848,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "10928:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																				"typeString": "struct Farm.PoolInfo storage pointer"
																			}
																		},
																		"id": 849,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10933:15:0",
																		"memberName": "accHYGTPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 50,
																		"src": "10928:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10910:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 851,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10909:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653132",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10952:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000_by_1",
																"typeString": "int_const 1000000000000"
															},
															"value": "1e12"
														},
														"src": "10909:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10887:69:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "10887:69:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 857,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3315,
																"src": "10983:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10983:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10997:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 860,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "11002:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 856,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "10974:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10974:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "EmitStatement",
												"src": "10969:40:0"
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "10184:90:0",
										"text": " @notice Withdraw a certain amount of `LP Tokens` from the given pool."
									},
									"functionSelector": "441a3e70",
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "10289:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "10306:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "10298:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10298:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10319:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "10311:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10297:29:0"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10336:0:0"
									},
									"scope": 920,
									"src": "10280:737:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "11219:337:0",
										"statements": [
											{
												"assignments": [
													872
												],
												"declarations": [
													{
														"constant": false,
														"id": 872,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "11247:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 918,
														"src": "11230:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
															"typeString": "struct Farm.PoolInfo"
														},
														"typeName": {
															"id": 871,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 870,
																"name": "PoolInfo",
																"nameLocations": [
																	"11230:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 51,
																"src": "11230:8:0"
															},
															"referencedDeclaration": 51,
															"src": "11230:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																"typeString": "struct Farm.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 876,
												"initialValue": {
													"baseExpression": {
														"id": 873,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "11254:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$51_storage_$dyn_storage",
															"typeString": "struct Farm.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 875,
													"indexExpression": {
														"id": 874,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "11263:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11254:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$51_storage",
														"typeString": "struct Farm.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11230:37:0"
											},
											{
												"assignments": [
													879
												],
												"declarations": [
													{
														"constant": false,
														"id": 879,
														"mutability": "mutable",
														"name": "userData",
														"nameLocation": "11295:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 918,
														"src": "11278:25:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
															"typeString": "struct Farm.UserInfo"
														},
														"typeName": {
															"id": 878,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 877,
																"name": "UserInfo",
																"nameLocations": [
																	"11278:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 40,
																"src": "11278:8:0"
															},
															"referencedDeclaration": 40,
															"src": "11278:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																"typeString": "struct Farm.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 886,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 880,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "11306:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct Farm.UserInfo storage ref))"
															}
														},
														"id": 882,
														"indexExpression": {
															"id": 881,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "11315:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11306:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$40_storage_$",
															"typeString": "mapping(address => struct Farm.UserInfo storage ref)"
														}
													},
													"id": 885,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 883,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3315,
															"src": "11320:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11320:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11306:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$40_storage",
														"typeString": "struct Farm.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11278:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 890,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "11367:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$51_storage_ptr",
																	"typeString": "struct Farm.PoolInfo storage pointer"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11372:7:0",
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 43,
															"src": "11367:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1083",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 892,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3315,
																"src": "11381:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11381:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 894,
																"name": "userData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "11395:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																	"typeString": "struct Farm.UserInfo storage pointer"
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11404:6:0",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 37,
															"src": "11395:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1083",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 887,
															"name": "SafeERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2653,
															"src": "11344:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeERC20_$2653_$",
																"typeString": "type(library SafeERC20)"
															}
														},
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11354:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2404,
														"src": "11344:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1083_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11344:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "11344:67:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 899,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3315,
																"src": "11447:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11447:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 901,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "11461:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 902,
																"name": "userData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 879,
																"src": "11466:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																	"typeString": "struct Farm.UserInfo storage pointer"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11475:6:0",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 37,
															"src": "11466:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 898,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "11429:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11429:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "EmitStatement",
												"src": "11424:58:0"
											},
											{
												"expression": {
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 906,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "11495:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																"typeString": "struct Farm.UserInfo storage pointer"
															}
														},
														"id": 908,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11504:6:0",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 37,
														"src": "11495:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11513:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11495:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "11495:19:0"
											},
											{
												"expression": {
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 912,
															"name": "userData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "11525:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$40_storage_ptr",
																"typeString": "struct Farm.UserInfo storage pointer"
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11534:10:0",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "11525:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11547:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11525:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "11525:23:0"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "11025:141:0",
										"text": " @notice Withdraw all `LP Tokens` from the given pool without caring about rewards.\n NOTE: Emergency only."
									},
									"functionSelector": "5312ea8e",
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nameLocation": "11181:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "11207:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "11199:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11198:13:0"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11219:0:0"
									},
									"scope": 920,
									"src": "11172:384:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 921,
							"src": "182:11377:0",
							"usedErrors": []
						}
					],
					"src": "41:11518:0"
				},
				"id": 0
			},
			"src/interfaces/IAccessControl.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							993
						]
					},
					"id": 994,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 922,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 923,
								"nodeType": "StructuredDocumentation",
								"src": "124:91:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 993,
							"linearizedBaseContracts": [
								993
							],
							"name": "IAccessControl",
							"nameLocation": "227:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "249:299:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 932,
									"name": "RoleAdminChanged",
									"nameLocation": "560:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "593:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "577:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 925,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "615:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "599:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 927,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "650:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "634:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 929,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "576:87:1"
									},
									"src": "554:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "672:217:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 941,
									"name": "RoleGranted",
									"nameLocation": "901:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "929:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "913:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 934,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "951:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "935:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "976:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "960:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "912:71:1"
									},
									"src": "895:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "992:281:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 950,
									"name": "RoleRevoked",
									"nameLocation": "1285:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1313:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1297:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 943,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1335:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1319:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1360:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1344:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:71:1"
									},
									"src": "1279:89:1"
								},
								{
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "1376:78:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 960,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1469:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1485:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1477:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 952,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1499:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1491:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1476:31:1"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1531:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 957,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1531:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1530:6:1"
									},
									"scope": 993,
									"src": "1460:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "1545:189:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 968,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1749:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1770:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1762:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 962,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:14:1"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1799:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 965,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:1"
									},
									"scope": 993,
									"src": "1740:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "1816:248:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 976,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2079:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2097:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2089:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 970,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2089:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2111:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2103:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2088:31:1"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2128:0:1"
									},
									"scope": 993,
									"src": "2070:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "2137:231:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2383:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2402:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2394:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 978,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2416:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2408:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:31:1"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2433:0:1"
									},
									"scope": 993,
									"src": "2374:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "2442:493:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 992,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2950:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2971:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "2963:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 986,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2963:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2985:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "2977:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2977:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2962:31:1"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3002:0:1"
									},
									"scope": 993,
									"src": "2941:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 994,
							"src": "217:2789:1",
							"usedErrors": []
						}
					],
					"src": "97:2909:1"
				},
				"id": 1
			},
			"src/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1005
						]
					},
					"id": 1006,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 995,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 996,
								"nodeType": "StructuredDocumentation",
								"src": "130:287:2",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1005,
							"linearizedBaseContracts": [
								1005
							],
							"name": "IERC165",
							"nameLocation": "429:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "444:347:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "806:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "831:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "824:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 998,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:20:2"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "867:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1001,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "867:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:6:2"
									},
									"scope": 1005,
									"src": "797:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1006,
							"src": "419:457:2",
							"usedErrors": []
						}
					],
					"src": "103:773:2"
				},
				"id": 2
			},
			"src/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1083
						]
					},
					"id": 1084,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1007,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1008,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1083,
							"linearizedBaseContracts": [
								1083
							],
							"name": "IERC20",
							"nameLocation": "220:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1017,
									"name": "Transfer",
									"nameLocation": "409:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "418:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "440:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "460:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:3"
									},
									"src": "403:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1026,
									"name": "Approval",
									"nameLocation": "646:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "655:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "678:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "703:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:3"
									},
									"src": "640:78:3"
								},
								{
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:3"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "846:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:3"
									},
									"scope": 1083,
									"src": "800:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1040,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "962:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:3"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "1002:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:3"
									},
									"scope": 1083,
									"src": "943:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1242:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1259:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1251:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1271:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1263:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:3"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1297:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1047,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:3"
									},
									"scope": 1083,
									"src": "1233:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1596:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1614:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "1606:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1629:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "1621:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:3"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "1661:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:3"
									},
									"scope": 1083,
									"src": "1587:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2348:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "2356:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2381:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "2373:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:3"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "2407:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1067,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:3"
									},
									"scope": 1083,
									"src": "2339:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1082,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2731:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2752:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2744:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2766:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2758:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2778:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2770:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:42:3"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2804:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1079,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2804:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2803:6:3"
									},
									"scope": 1083,
									"src": "2722:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1084,
							"src": "210:2603:3",
							"usedErrors": []
						}
					],
					"src": "109:2704:3"
				},
				"id": 3
			},
			"src/interfaces/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							1119
						]
					},
					"id": 1120,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1085,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "111:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1086,
								"nodeType": "StructuredDocumentation",
								"src": "138:487:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 1119,
							"linearizedBaseContracts": [
								1119
							],
							"name": "IERC20Permit",
							"nameLocation": "637:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1087,
										"nodeType": "StructuredDocumentation",
										"src": "657:812:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 1104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1484:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1509:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1501:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1533:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1525:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1525:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1559:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1551:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1583:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1575:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1575:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1608:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1602:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1096,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1602:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1628:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1620:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1098,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1620:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1648:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "1640:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1100,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1490:166:4"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:4"
									},
									"scope": 1119,
									"src": "1475:191:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "1674:300:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1989:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2004:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "1996:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:15:4"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2034:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2033:9:4"
									},
									"scope": 1119,
									"src": "1980:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "2051:130:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2250:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2266:2:4"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2292:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1115,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2292:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2291:9:4"
									},
									"scope": 1119,
									"src": "2241:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1120,
							"src": "627:1677:4",
							"usedErrors": []
						}
					],
					"src": "111:2193:4"
				},
				"id": 4
			},
			"src/interfaces/IHYGT.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IHYGT.sol",
					"exportedSymbols": {
						"IERC20": [
							1083
						],
						"IHYGT": [
							1176
						]
					},
					"id": 1177,
					"license": "GNU GPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1121,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:5"
						},
						{
							"absolutePath": "src/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1122,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1177,
							"sourceUnit": 1084,
							"src": "68:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1123,
										"name": "IERC20",
										"nameLocations": [
											"113:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1083,
										"src": "113:6:5"
									},
									"id": 1124,
									"nodeType": "InheritanceSpecifier",
									"src": "113:6:5"
								}
							],
							"canonicalName": "IHYGT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1176,
							"linearizedBaseContracts": [
								1176,
								1083
							],
							"name": "IHYGT",
							"nameLocation": "104:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d5abeb01",
									"id": 1129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxSupply",
									"nameLocation": "138:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "147:2:5"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "173:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "173:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "172:9:5"
									},
									"scope": 1176,
									"src": "129:53:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 1138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "199:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "212:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "204:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "224:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "216:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "216:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:28:5"
									},
									"returnParameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "250:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "249:6:5"
									},
									"scope": 1176,
									"src": "190:66:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 1145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "273:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "286:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "278:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "277:16:5"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "312:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "312:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:6:5"
									},
									"scope": 1176,
									"src": "264:54:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79cc6790",
									"id": 1154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "335:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "352:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "344:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "344:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "366:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "358:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "343:30:5"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "392:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "392:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "391:6:5"
									},
									"scope": 1176,
									"src": "326:72:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c19a95c",
									"id": 1159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nameLocation": "415:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "432:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "424:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:19:5"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:0:5"
									},
									"scope": 1176,
									"src": "406:46:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b4b5ea57",
									"id": 1166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentVotes",
									"nameLocation": "469:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "493:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "485:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:17:5"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "525:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:9:5"
									},
									"scope": 1176,
									"src": "460:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "782d6fe1",
									"id": 1175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriorVotes",
									"nameLocation": "551:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "573:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "565:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "590:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "582:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:38:5"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "626:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:9:5"
									},
									"scope": 1176,
									"src": "542:93:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1177,
							"src": "94:544:5",
							"usedErrors": []
						}
					],
					"src": "41:597:5"
				},
				"id": 5
			},
			"src/libraries/Address.sol": {
				"ast": {
					"absolutePath": "src/libraries/Address.sol",
					"exportedSymbols": {
						"Address": [
							1506
						]
					},
					"id": 1507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1178,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1179,
								"nodeType": "StructuredDocumentation",
								"src": "131:69:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1506,
							"linearizedBaseContracts": [
								1506
							],
							"name": "Address",
							"nameLocation": "210:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "1517:260:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1187,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "1746:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1754:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1746:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1759:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1746:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1768:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1746:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1186,
												"id": 1192,
												"nodeType": "Return",
												"src": "1739:30:6"
											}
										]
									},
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "225:1220:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1460:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1479:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "1471:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:17:6"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "1511:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1511:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:6:6"
									},
									"scope": 1506,
									"src": "1451:326:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "2782:246:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1205,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2809:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1506",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1506",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2801:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1203,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2801:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2801:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2815:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2801:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1208,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "2826:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2801:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2834:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2793:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2793:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "2793:73:6"
											},
											{
												"assignments": [
													1214,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1214,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2885:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "2880:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1213,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2880:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1221,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2928:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1215,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "2898:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2908:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2898:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1217,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "2920:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2898:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2879:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1223,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "2950:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2959:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2942:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2942:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "2942:78:6"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "1785:920:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2720:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2746:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "2730:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2730:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2765:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "2757:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2757:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:43:6"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:6"
									},
									"scope": 1506,
									"src": "2711:317:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "3879:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1239,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "3919:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1240,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "3927:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3933:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3936:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1238,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1286,
															1330
														],
														"referencedDeclaration": 1330,
														"src": "3897:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3897:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1237,
												"id": 1244,
												"nodeType": "Return",
												"src": "3890:79:6"
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "3036:748:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3799:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3820:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "3812:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3841:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "3828:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1232,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3828:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3811:35:6"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "3865:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3865:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:14:6"
									},
									"scope": 1506,
									"src": "3790:187:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "4358:78:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1259,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "4398:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1260,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "4406:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4412:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1262,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "4415:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1258,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1286,
															1330
														],
														"referencedDeclaration": 1330,
														"src": "4376:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4376:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1257,
												"id": 1264,
												"nodeType": "Return",
												"src": "4369:59:6"
											}
										]
									},
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "3985:216:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4216:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4247:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "4239:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4277:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "4264:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1250,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4264:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4306:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "4292:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1252,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4292:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4228:97:6"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "4344:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4344:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4343:14:6"
									},
									"scope": 1506,
									"src": "4207:229:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "4924:113:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1279,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "4964:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1280,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "4972:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1281,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "4978:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4985:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1278,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1286,
															1330
														],
														"referencedDeclaration": 1330,
														"src": "4942:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4942:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1277,
												"id": 1284,
												"nodeType": "Return",
												"src": "4935:94:6"
											}
										]
									},
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "4444:361:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4820:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4850:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "4842:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4871:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "4858:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4858:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4885:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "4877:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4877:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4841:50:6"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "4910:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4910:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4909:14:6"
									},
									"scope": 1506,
									"src": "4811:226:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "5477:271:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1303,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5504:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1506",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1506",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5496:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1301,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5496:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5496:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5510:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5496:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1306,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "5521:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5496:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5528:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1300,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5488:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5488:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "5488:81:6"
											},
											{
												"assignments": [
													1312,
													1314
												],
												"declarations": [
													{
														"constant": false,
														"id": 1312,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5586:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1329,
														"src": "5581:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1311,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5581:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1314,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5608:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1329,
														"src": "5595:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1313,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5595:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1321,
												"initialValue": {
													"arguments": [
														{
															"id": 1319,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "5648:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1315,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "5622:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5629:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5622:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1317,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "5641:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5622:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5622:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5580:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1323,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "5698:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1324,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "5706:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1325,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "5715:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1326,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "5727:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1322,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "5671:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1328,
												"nodeType": "Return",
												"src": "5664:76:6"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "5045:242:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5302:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5342:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5334:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5334:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5372:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5359:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1290,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5359:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5395:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5387:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5387:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5425:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5411:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1294,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5411:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5323:121:6"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5463:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5463:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5462:14:6"
									},
									"scope": 1506,
									"src": "5293:455:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "6033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1341,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "6070:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1342,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "6078:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6084:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1340,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1347,
															1376
														],
														"referencedDeclaration": 1376,
														"src": "6051:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6051:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1339,
												"id": 1345,
												"nodeType": "Return",
												"src": "6044:80:6"
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "5756:171:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5942:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5969:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "5961:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5990:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "5977:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1334,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5977:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:35:6"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "6019:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1337,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6019:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6018:14:6"
									},
									"scope": 1506,
									"src": "5933:199:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "6486:171:6",
										"statements": [
											{
												"assignments": [
													1360,
													1362
												],
												"declarations": [
													{
														"constant": false,
														"id": 1360,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6503:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "6498:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1359,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6498:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1362,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6525:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "6512:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1361,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6512:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1367,
												"initialValue": {
													"arguments": [
														{
															"id": 1365,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "6557:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1363,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "6539:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6546:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6539:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6539:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6497:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1369,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "6607:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1370,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "6615:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1371,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "6624:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1372,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "6636:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1368,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "6580:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6580:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1358,
												"id": 1374,
												"nodeType": "Return",
												"src": "6573:76:6"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "6140:178:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6333:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6370:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "6362:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6362:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6400:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "6387:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6387:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6429:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "6415:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1353,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6415:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6351:97:6"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "6472:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6472:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6471:14:6"
									},
									"scope": 1506,
									"src": "6324:333:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "6941:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1387,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "6980:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1388,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "6988:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6994:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1386,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1393,
															1422
														],
														"referencedDeclaration": 1422,
														"src": "6959:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6959:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1385,
												"id": 1391,
												"nodeType": "Return",
												"src": "6952:84:6"
											}
										]
									},
									"documentation": {
										"id": 1377,
										"nodeType": "StructuredDocumentation",
										"src": "6665:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6853:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6882:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "6874:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6874:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6903:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "6890:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1380,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6890:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6873:35:6"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "6927:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6927:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6926:14:6"
									},
									"scope": 1506,
									"src": "6844:200:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1421,
										"nodeType": "Block",
										"src": "7397:173:6",
										"statements": [
											{
												"assignments": [
													1406,
													1408
												],
												"declarations": [
													{
														"constant": false,
														"id": 1406,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7414:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1421,
														"src": "7409:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1405,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7409:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1408,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7436:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1421,
														"src": "7423:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1407,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7423:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1413,
												"initialValue": {
													"arguments": [
														{
															"id": 1411,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "7470:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1409,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "7450:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7457:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7450:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7450:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7408:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1415,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "7520:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1416,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "7528:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1417,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "7537:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1418,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "7549:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1414,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "7493:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7493:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1404,
												"id": 1420,
												"nodeType": "Return",
												"src": "7486:76:6"
											}
										]
									},
									"documentation": {
										"id": 1394,
										"nodeType": "StructuredDocumentation",
										"src": "7052:180:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7247:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7286:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "7278:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7278:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7316:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "7303:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7303:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7345:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "7331:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1399,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7331:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7267:97:6"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "7383:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7383:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7382:14:6"
									},
									"scope": 1506,
									"src": "7238:332:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "8065:445:6",
										"statements": [
											{
												"condition": {
													"id": 1436,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1427,
													"src": "8080:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1458,
													"nodeType": "Block",
													"src": "8443:60:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1454,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1429,
																		"src": "8466:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1455,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1431,
																		"src": "8478:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1453,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "8458:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8458:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1457,
															"nodeType": "ExpressionStatement",
															"src": "8458:33:6"
														}
													]
												},
												"id": 1459,
												"nodeType": "IfStatement",
												"src": "8076:427:6",
												"trueBody": {
													"id": 1452,
													"nodeType": "Block",
													"src": "8089:348:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1437,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1429,
																		"src": "8108:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8119:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8108:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8129:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8108:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1449,
															"nodeType": "IfStatement",
															"src": "8104:290:6",
															"trueBody": {
																"id": 1448,
																"nodeType": "Block",
																"src": "8132:262:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1443,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1425,
																							"src": "8337:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1442,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1194,
																						"src": "8326:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1444,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8326:18:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1445,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8346:31:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1441,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8318:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8318:60:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1447,
																		"nodeType": "ExpressionStatement",
																		"src": "8318:60:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1450,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1429,
																"src": "8415:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1435,
															"id": 1451,
															"nodeType": "Return",
															"src": "8408:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1423,
										"nodeType": "StructuredDocumentation",
										"src": "7578:282:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7875:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7920:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "7912:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7912:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7942:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "7937:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7937:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7973:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "7960:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7960:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8008:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "7994:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1430,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7994:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7901:126:6"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "8051:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1433,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8051:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8050:14:6"
									},
									"scope": 1506,
									"src": "7866:644:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "8903:141:6",
										"statements": [
											{
												"condition": {
													"id": 1473,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1464,
													"src": "8918:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1482,
													"nodeType": "Block",
													"src": "8977:60:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1478,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "9000:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1479,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1468,
																		"src": "9012:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1477,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1505,
																	"src": "8992:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8992:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1481,
															"nodeType": "ExpressionStatement",
															"src": "8992:33:6"
														}
													]
												},
												"id": 1483,
												"nodeType": "IfStatement",
												"src": "8914:123:6",
												"trueBody": {
													"id": 1476,
													"nodeType": "Block",
													"src": "8927:44:6",
													"statements": [
														{
															"expression": {
																"id": 1474,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "8949:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1472,
															"id": 1475,
															"nodeType": "Return",
															"src": "8942:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "8518:215:6",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8748:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8780:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "8775:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1463,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8775:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8811:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "8798:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8798:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8846:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "8832:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8832:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8764:101:6"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "8889:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8889:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8888:14:6"
									},
									"scope": 1506,
									"src": "8739:305:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1504,
										"nodeType": "Block",
										"src": "9135:469:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1492,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "9213:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9224:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9213:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9233:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9213:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1502,
													"nodeType": "Block",
													"src": "9550:47:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1499,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1489,
																		"src": "9572:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1498,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9565:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9565:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1501,
															"nodeType": "ExpressionStatement",
															"src": "9565:20:6"
														}
													]
												},
												"id": 1503,
												"nodeType": "IfStatement",
												"src": "9209:388:6",
												"trueBody": {
													"id": 1497,
													"nodeType": "Block",
													"src": "9236:308:6",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9397:136:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9416:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9445:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9439:5:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9439:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9420:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9485:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9489:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9481:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9481:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9502:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9474:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9474:44:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9474:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1487,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9445:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 1487,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9489:10:6",
																	"valueSize": 1
																}
															],
															"id": 1496,
															"nodeType": "InlineAssembly",
															"src": "9388:145:6"
														}
													]
												}
											}
										]
									},
									"id": 1505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "9061:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "9082:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "9069:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9069:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9108:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "9094:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1488,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9094:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9068:53:6"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9135:0:6"
									},
									"scope": 1506,
									"src": "9052:552:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1507,
							"src": "202:9405:6",
							"usedErrors": []
						}
					],
					"src": "104:9505:6"
				},
				"id": 6
			},
			"src/libraries/Math.sol": {
				"ast": {
					"absolutePath": "src/libraries/Math.sol",
					"exportedSymbols": {
						"Math": [
							2372
						]
					},
					"id": 2373,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1508,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1509,
								"nodeType": "StructuredDocumentation",
								"src": "133:75:7",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2372,
							"linearizedBaseContracts": [
								2372
							],
							"name": "Math",
							"nameLocation": "218:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1513,
									"members": [
										{
											"id": 1510,
											"name": "Down",
											"nameLocation": "255:4:7",
											"nodeType": "EnumValue",
											"src": "255:4:7"
										},
										{
											"id": 1511,
											"name": "Up",
											"nameLocation": "298:2:7",
											"nodeType": "EnumValue",
											"src": "298:2:7"
										},
										{
											"id": 1512,
											"name": "Zero",
											"nameLocation": "330:4:7",
											"nodeType": "EnumValue",
											"src": "330:4:7"
										}
									],
									"name": "Rounding",
									"nameLocation": "235:8:7",
									"nodeType": "EnumDefinition",
									"src": "230:126:7"
								},
								{
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "498:39:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1523,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "516:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1524,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "520:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "516:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1527,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "528:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "516:13:7",
													"trueExpression": {
														"id": 1526,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "524:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1522,
												"id": 1529,
												"nodeType": "Return",
												"src": "509:20:7"
											}
										]
									},
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "364:61:7",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "440:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "452:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "444:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "463:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "455:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:22:7"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "489:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:9:7"
									},
									"scope": 2372,
									"src": "431:106:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "680:39:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1541,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "698:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1542,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "702:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "698:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1545,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "710:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "698:13:7",
													"trueExpression": {
														"id": 1544,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "706:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1540,
												"id": 1547,
												"nodeType": "Return",
												"src": "691:20:7"
											}
										]
									},
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "545:62:7",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "622:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "634:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "626:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "645:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "637:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:22:7"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "671:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "670:9:7"
									},
									"scope": 2372,
									"src": "613:106:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "909:85:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1559,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1552,
																	"src": "966:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1560,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1554,
																	"src": "970:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "966:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1562,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "965:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1563,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1552,
																		"src": "976:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1564,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1554,
																		"src": "980:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "976:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1566,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "975:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "985:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "975:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "965:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1558,
												"id": 1570,
												"nodeType": "Return",
												"src": "958:28:7"
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "727:105:7",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "847:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "863:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "855:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "874:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "866:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:22:7"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "900:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:9:7"
									},
									"scope": 2372,
									"src": "838:156:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "1272:126:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1582,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "1362:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1367:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1362:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1586,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1575,
																			"src": "1376:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1380:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1376:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1589,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1375:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1590,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "1385:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1375:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1389:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1375:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1362:28:7",
													"trueExpression": {
														"hexValue": "30",
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1371:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1581,
												"id": 1595,
												"nodeType": "Return",
												"src": "1355:35:7"
											}
										]
									},
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "1002:193:7",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1210:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1226:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1218:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1218:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1237:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1229:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1217:22:7"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "1263:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:9:7"
									},
									"scope": 2372,
									"src": "1201:197:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "1819:3898:7",
										"statements": [
											{
												"id": 1718,
												"nodeType": "UncheckedBlock",
												"src": "1830:3880:7",
												"statements": [
													{
														"assignments": [
															1610
														],
														"declarations": [
															{
																"constant": false,
																"id": 1610,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2163:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 1718,
																"src": "2155:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1609,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2155:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1611,
														"nodeType": "VariableDeclarationStatement",
														"src": "2155:13:7"
													},
													{
														"assignments": [
															1613
														],
														"declarations": [
															{
																"constant": false,
																"id": 1613,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2236:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 1718,
																"src": "2228:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1612,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2228:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1614,
														"nodeType": "VariableDeclarationStatement",
														"src": "2228:13:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2309:161:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2328:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2345:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2348:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2355:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2351:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2351:6:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2338:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2338:20:7"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2332:2:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2376:18:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2389:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2392:1:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2385:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2385:9:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2376:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2412:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2429:2:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2433:5:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2425:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2425:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2444:2:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2448:5:7"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2441:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2441:13:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2421:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2421:34:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2412:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1610,
																"isOffset": false,
																"isSlot": false,
																"src": "2376:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1610,
																"isOffset": false,
																"isSlot": false,
																"src": "2433:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1610,
																"isOffset": false,
																"isSlot": false,
																"src": "2448:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1613,
																"isOffset": false,
																"isSlot": false,
																"src": "2412:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1600,
																"isOffset": false,
																"isSlot": false,
																"src": "2345:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1600,
																"isOffset": false,
																"isSlot": false,
																"src": "2389:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1602,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1602,
																"isOffset": false,
																"isSlot": false,
																"src": "2392:1:7",
																"valueSize": 1
															}
														],
														"id": 1615,
														"nodeType": "InlineAssembly",
														"src": "2300:170:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1616,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1613,
																"src": "2554:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2563:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2554:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1624,
														"nodeType": "IfStatement",
														"src": "2550:77:7",
														"trueBody": {
															"id": 1623,
															"nodeType": "Block",
															"src": "2566:61:7",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1619,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1610,
																			"src": "2592:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1620,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "2600:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2592:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1608,
																	"id": 1622,
																	"nodeType": "Return",
																	"src": "2585:26:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1626,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "2740:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1627,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1613,
																		"src": "2754:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2740:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2761:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1625,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2732:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2732:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1631,
														"nodeType": "ExpressionStatement",
														"src": "2732:53:7"
													},
													{
														"assignments": [
															1633
														],
														"declarations": [
															{
																"constant": false,
																"id": 1633,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3056:9:7",
																"nodeType": "VariableDeclaration",
																"scope": 1718,
																"src": "3048:17:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1632,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3048:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1634,
														"nodeType": "VariableDeclarationStatement",
														"src": "3048:17:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3089:298:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3160:38:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3180:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3183:1:7"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3186:11:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3173:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3173:25:7"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3160:9:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3283:41:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3296:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3306:9:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3317:5:7"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3303:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3303:20:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3292:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3292:32:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3283:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3342:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3355:5:7"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3362:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:21:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3342:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1604,
																"isOffset": false,
																"isSlot": false,
																"src": "3186:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1610,
																"isOffset": false,
																"isSlot": false,
																"src": "3317:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1610,
																"isOffset": false,
																"isSlot": false,
																"src": "3342:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1610,
																"isOffset": false,
																"isSlot": false,
																"src": "3355:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1613,
																"isOffset": false,
																"isSlot": false,
																"src": "3283:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1613,
																"isOffset": false,
																"isSlot": false,
																"src": "3296:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1633,
																"isOffset": false,
																"isSlot": false,
																"src": "3160:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1633,
																"isOffset": false,
																"isSlot": false,
																"src": "3306:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1633,
																"isOffset": false,
																"isSlot": false,
																"src": "3362:9:7",
																"valueSize": 1
															},
															{
																"declaration": 1600,
																"isOffset": false,
																"isSlot": false,
																"src": "3180:1:7",
																"valueSize": 1
															},
															{
																"declaration": 1602,
																"isOffset": false,
																"isSlot": false,
																"src": "3183:1:7",
																"valueSize": 1
															}
														],
														"id": 1635,
														"nodeType": "InlineAssembly",
														"src": "3080:307:7"
													},
													{
														"assignments": [
															1637
														],
														"declarations": [
															{
																"constant": false,
																"id": 1637,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3708:4:7",
																"nodeType": "VariableDeclaration",
																"scope": 1718,
																"src": "3700:12:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1636,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3700:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1645,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1638,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "3715:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3730:12:7",
																			"subExpression": {
																				"id": 1639,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1604,
																				"src": "3731:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3745:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3730:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1643,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3729:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3715:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3700:47:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3771:371:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3838:37:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3857:11:7"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3853:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3853:22:7"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3838:11:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3945:25:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3958:5:7"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3965:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3954:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3954:16:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3945:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4088:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4108:1:7",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4111:4:7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4104:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4104:12:7"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4118:4:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4100:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4100:23:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4096:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4096:31:7"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4088:4:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1604,
																"isOffset": false,
																"isSlot": false,
																"src": "3838:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1604,
																"isOffset": false,
																"isSlot": false,
																"src": "3857:11:7",
																"valueSize": 1
															},
															{
																"declaration": 1610,
																"isOffset": false,
																"isSlot": false,
																"src": "3945:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1610,
																"isOffset": false,
																"isSlot": false,
																"src": "3958:5:7",
																"valueSize": 1
															},
															{
																"declaration": 1637,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1637,
																"isOffset": false,
																"isSlot": false,
																"src": "3965:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1637,
																"isOffset": false,
																"isSlot": false,
																"src": "4088:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1637,
																"isOffset": false,
																"isSlot": false,
																"src": "4111:4:7",
																"valueSize": 1
															},
															{
																"declaration": 1637,
																"isOffset": false,
																"isSlot": false,
																"src": "4118:4:7",
																"valueSize": 1
															}
														],
														"id": 1646,
														"nodeType": "InlineAssembly",
														"src": "3762:380:7"
													},
													{
														"expression": {
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1647,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1610,
																"src": "4211:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1648,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "4220:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1649,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1637,
																	"src": "4228:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4220:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4211:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1652,
														"nodeType": "ExpressionStatement",
														"src": "4211:21:7"
													},
													{
														"assignments": [
															1654
														],
														"declarations": [
															{
																"constant": false,
																"id": 1654,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4563:7:7",
																"nodeType": "VariableDeclaration",
																"scope": 1718,
																"src": "4555:15:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1653,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4555:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1661,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4574:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1656,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "4578:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4574:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1658,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4573:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4593:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4573:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4555:39:7"
													},
													{
														"expression": {
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1662,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "4815:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4826:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1664,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "4830:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1665,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1654,
																		"src": "4844:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4830:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4826:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4815:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1669,
														"nodeType": "ExpressionStatement",
														"src": "4815:36:7"
													},
													{
														"expression": {
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1670,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "4885:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4896:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1672,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "4900:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1673,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1654,
																		"src": "4914:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4900:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4896:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4885:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1677,
														"nodeType": "ExpressionStatement",
														"src": "4885:36:7"
													},
													{
														"expression": {
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1678,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "4956:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4967:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1680,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "4971:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1681,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1654,
																		"src": "4985:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4971:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4967:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4956:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1685,
														"nodeType": "ExpressionStatement",
														"src": "4956:36:7"
													},
													{
														"expression": {
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1686,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "5027:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5038:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1688,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "5042:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1689,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1654,
																		"src": "5056:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5042:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5038:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5027:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1693,
														"nodeType": "ExpressionStatement",
														"src": "5027:36:7"
													},
													{
														"expression": {
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1694,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "5098:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5109:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1696,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "5113:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1697,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1654,
																		"src": "5127:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5113:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5109:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5098:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1701,
														"nodeType": "ExpressionStatement",
														"src": "5098:36:7"
													},
													{
														"expression": {
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1702,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "5170:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5181:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1704,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "5185:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1705,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1654,
																		"src": "5199:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5185:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5181:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5170:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1709,
														"nodeType": "ExpressionStatement",
														"src": "5170:36:7"
													},
													{
														"expression": {
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1710,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1607,
																"src": "5646:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1711,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1610,
																	"src": "5655:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1712,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "5663:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5655:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5646:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1715,
														"nodeType": "ExpressionStatement",
														"src": "5646:24:7"
													},
													{
														"expression": {
															"id": 1716,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "5692:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1608,
														"id": 1717,
														"nodeType": "Return",
														"src": "5685:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1598,
										"nodeType": "StructuredDocumentation",
										"src": "1406:309:7",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1730:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1745:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "1737:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1756:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "1748:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1767:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "1759:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1736:43:7"
									},
									"returnParameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1811:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "1803:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1802:16:7"
									},
									"scope": 2372,
									"src": "1721:3996:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "5964:195:7",
										"statements": [
											{
												"assignments": [
													1736
												],
												"declarations": [
													{
														"constant": false,
														"id": 1736,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5983:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1763,
														"src": "5975:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1735,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5975:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1742,
												"initialValue": {
													"arguments": [
														{
															"id": 1738,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "5999:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1739,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1725,
															"src": "6002:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1740,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "6005:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1737,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1720,
															1764
														],
														"referencedDeclaration": 1720,
														"src": "5992:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5992:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5975:42:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1513",
															"typeString": "enum Math.Rounding"
														},
														"id": 1746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1743,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1730,
															"src": "6032:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1513",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1744,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "6044:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1513_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6053:2:7",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1511,
															"src": "6044:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1513",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6032:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1748,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1723,
																	"src": "6066:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1749,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "6069:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1750,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1727,
																	"src": "6072:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1747,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6059:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6059:25:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6087:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6059:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6032:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1760,
												"nodeType": "IfStatement",
												"src": "6028:100:7",
												"trueBody": {
													"id": 1759,
													"nodeType": "Block",
													"src": "6090:38:7",
													"statements": [
														{
															"expression": {
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1755,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "6105:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6115:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6105:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1758,
															"nodeType": "ExpressionStatement",
															"src": "6105:11:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1761,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1736,
													"src": "6145:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1734,
												"id": 1762,
												"nodeType": "Return",
												"src": "6138:13:7"
											}
										]
									},
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "5725:123:7",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5863:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5878:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "5870:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5870:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5889:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "5881:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5900:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "5892:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5922:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "5913:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1513",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1729,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1728,
														"name": "Rounding",
														"nameLocations": [
															"5913:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1513,
														"src": "5913:8:7"
													},
													"referencedDeclaration": 1513,
													"src": "5913:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1513",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5869:62:7"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "5955:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5954:9:7"
									},
									"scope": 2372,
									"src": "5854:305:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1875,
										"nodeType": "Block",
										"src": "6442:1616:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1772,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "6457:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6462:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6457:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1778,
												"nodeType": "IfStatement",
												"src": "6453:47:7",
												"trueBody": {
													"id": 1777,
													"nodeType": "Block",
													"src": "6465:35:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6487:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1771,
															"id": 1776,
															"nodeType": "Return",
															"src": "6480:8:7"
														}
													]
												}
											},
											{
												"assignments": [
													1780
												],
												"declarations": [
													{
														"constant": false,
														"id": 1780,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7199:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1875,
														"src": "7191:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1779,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7191:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1789,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7208:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1783,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1767,
																			"src": "7219:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1782,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2044,
																			2080
																		],
																		"referencedDeclaration": 2044,
																		"src": "7214:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7214:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7225:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7214:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1787,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7213:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7208:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7191:36:7"
											},
											{
												"id": 1874,
												"nodeType": "UncheckedBlock",
												"src": "7634:417:7",
												"statements": [
													{
														"expression": {
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1790,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "7659:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1791,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1780,
																				"src": "7669:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1794,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1792,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1767,
																					"src": "7678:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1793,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1780,
																					"src": "7682:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7678:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7669:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1796,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7668:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7693:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7668:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7659:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1800,
														"nodeType": "ExpressionStatement",
														"src": "7659:35:7"
													},
													{
														"expression": {
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1801,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "7709:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1802,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1780,
																				"src": "7719:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1805,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1803,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1767,
																					"src": "7728:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1804,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1780,
																					"src": "7732:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7728:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7719:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1807,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7718:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7743:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7718:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7709:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1811,
														"nodeType": "ExpressionStatement",
														"src": "7709:35:7"
													},
													{
														"expression": {
															"id": 1821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1812,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "7759:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1813,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1780,
																				"src": "7769:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1814,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1767,
																					"src": "7778:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1815,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1780,
																					"src": "7782:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7778:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7769:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1818,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7768:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7793:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7768:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7759:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1822,
														"nodeType": "ExpressionStatement",
														"src": "7759:35:7"
													},
													{
														"expression": {
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1823,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "7809:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1824,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1780,
																				"src": "7819:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1827,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1825,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1767,
																					"src": "7828:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1826,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1780,
																					"src": "7832:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7828:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7819:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1829,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7818:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7843:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7818:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7809:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1833,
														"nodeType": "ExpressionStatement",
														"src": "7809:35:7"
													},
													{
														"expression": {
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1834,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "7859:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1835,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1780,
																				"src": "7869:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1836,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1767,
																					"src": "7878:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1837,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1780,
																					"src": "7882:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7878:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7869:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1840,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7868:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7893:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7868:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7859:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1844,
														"nodeType": "ExpressionStatement",
														"src": "7859:35:7"
													},
													{
														"expression": {
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1845,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "7909:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1846,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1780,
																				"src": "7919:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1847,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1767,
																					"src": "7928:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1848,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1780,
																					"src": "7932:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7928:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7919:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1851,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7918:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7943:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7918:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7909:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1855,
														"nodeType": "ExpressionStatement",
														"src": "7909:35:7"
													},
													{
														"expression": {
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1856,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "7959:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1857,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1780,
																				"src": "7969:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1860,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1858,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1767,
																					"src": "7978:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1859,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1780,
																					"src": "7982:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7978:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7969:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1862,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7968:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7993:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7968:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7959:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1866,
														"nodeType": "ExpressionStatement",
														"src": "7959:35:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1868,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1780,
																	"src": "8020:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1869,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1767,
																		"src": "8028:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1870,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1780,
																		"src": "8032:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8028:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1867,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1549,
																"src": "8016:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8016:23:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1771,
														"id": 1873,
														"nodeType": "Return",
														"src": "8009:30:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1765,
										"nodeType": "StructuredDocumentation",
										"src": "6167:212:7",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6394:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6407:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "6399:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:11:7"
									},
									"returnParameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "6433:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6433:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6432:9:7"
									},
									"scope": 2372,
									"src": "6385:1673:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1911,
										"nodeType": "Block",
										"src": "8239:166:7",
										"statements": [
											{
												"id": 1910,
												"nodeType": "UncheckedBlock",
												"src": "8250:148:7",
												"statements": [
													{
														"assignments": [
															1888
														],
														"declarations": [
															{
																"constant": false,
																"id": 1888,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8283:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1910,
																"src": "8275:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1887,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8275:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1892,
														"initialValue": {
															"arguments": [
																{
																	"id": 1890,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1879,
																	"src": "8297:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1889,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1876,
																	1912
																],
																"referencedDeclaration": 1876,
																"src": "8292:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8292:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8275:24:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1893,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1888,
																"src": "8321:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1513",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1897,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1894,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1882,
																					"src": "8331:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1513",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1895,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1513,
																						"src": "8343:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1513_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1896,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8352:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1511,
																					"src": "8343:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1513",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8331:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1900,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1898,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1888,
																						"src": "8358:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1899,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1888,
																						"src": "8367:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8358:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1901,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1879,
																					"src": "8376:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8358:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8331:46:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8384:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8331:54:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8380:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1907,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8330:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8321:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1886,
														"id": 1909,
														"nodeType": "Return",
														"src": "8314:72:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1877,
										"nodeType": "StructuredDocumentation",
										"src": "8066:91:7",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8172:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8185:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "8177:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8177:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8197:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "8188:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1513",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1881,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1880,
														"name": "Rounding",
														"nameLocations": [
															"8188:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1513,
														"src": "8188:8:7"
													},
													"referencedDeclaration": 1513,
													"src": "8188:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1513",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8176:30:7"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "8230:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8230:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8229:9:7"
									},
									"scope": 2372,
									"src": "8163:242:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "8596:958:7",
										"statements": [
											{
												"assignments": [
													1921
												],
												"declarations": [
													{
														"constant": false,
														"id": 1921,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8615:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2043,
														"src": "8607:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1920,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8607:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1923,
												"initialValue": {
													"hexValue": "30",
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8624:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8607:18:7"
											},
											{
												"id": 2040,
												"nodeType": "UncheckedBlock",
												"src": "8636:887:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1924,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "8665:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8674:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8665:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8680:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8665:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1938,
														"nodeType": "IfStatement",
														"src": "8661:102:7",
														"trueBody": {
															"id": 1937,
															"nodeType": "Block",
															"src": "8683:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 1931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1929,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1915,
																			"src": "8702:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8712:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8702:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1932,
																	"nodeType": "ExpressionStatement",
																	"src": "8702:13:7"
																},
																{
																	"expression": {
																		"id": 1935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1933,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1921,
																			"src": "8734:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8744:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8734:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1936,
																	"nodeType": "ExpressionStatement",
																	"src": "8734:13:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1939,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "8781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8790:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8781:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8795:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8781:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1953,
														"nodeType": "IfStatement",
														"src": "8777:99:7",
														"trueBody": {
															"id": 1952,
															"nodeType": "Block",
															"src": "8798:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1944,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1915,
																			"src": "8817:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8827:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8817:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1947,
																	"nodeType": "ExpressionStatement",
																	"src": "8817:12:7"
																},
																{
																	"expression": {
																		"id": 1950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1948,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1921,
																			"src": "8848:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8858:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8848:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1951,
																	"nodeType": "ExpressionStatement",
																	"src": "8848:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1954,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "8894:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8903:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8894:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8908:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8894:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1968,
														"nodeType": "IfStatement",
														"src": "8890:99:7",
														"trueBody": {
															"id": 1967,
															"nodeType": "Block",
															"src": "8911:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1959,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1915,
																			"src": "8930:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8940:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8930:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1962,
																	"nodeType": "ExpressionStatement",
																	"src": "8930:12:7"
																},
																{
																	"expression": {
																		"id": 1965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1963,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1921,
																			"src": "8961:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8971:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8961:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1966,
																	"nodeType": "ExpressionStatement",
																	"src": "8961:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1969,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "9007:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9016:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9007:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9021:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9007:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1983,
														"nodeType": "IfStatement",
														"src": "9003:99:7",
														"trueBody": {
															"id": 1982,
															"nodeType": "Block",
															"src": "9024:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1974,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1915,
																			"src": "9043:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9053:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9043:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1977,
																	"nodeType": "ExpressionStatement",
																	"src": "9043:12:7"
																},
																{
																	"expression": {
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1978,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1921,
																			"src": "9074:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9084:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9074:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1981,
																	"nodeType": "ExpressionStatement",
																	"src": "9074:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1984,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "9120:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9129:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9120:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9133:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9120:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1998,
														"nodeType": "IfStatement",
														"src": "9116:96:7",
														"trueBody": {
															"id": 1997,
															"nodeType": "Block",
															"src": "9136:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 1991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1989,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1915,
																			"src": "9155:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9155:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1992,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:11:7"
																},
																{
																	"expression": {
																		"id": 1995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1993,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1921,
																			"src": "9185:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9195:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9185:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1996,
																	"nodeType": "ExpressionStatement",
																	"src": "9185:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1999,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "9230:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9239:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9230:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9243:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9230:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2013,
														"nodeType": "IfStatement",
														"src": "9226:96:7",
														"trueBody": {
															"id": 2012,
															"nodeType": "Block",
															"src": "9246:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 2006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2004,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1915,
																			"src": "9265:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9275:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9265:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2007,
																	"nodeType": "ExpressionStatement",
																	"src": "9265:11:7"
																},
																{
																	"expression": {
																		"id": 2010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2008,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1921,
																			"src": "9295:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9305:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9295:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2011,
																	"nodeType": "ExpressionStatement",
																	"src": "9295:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2014,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "9340:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9349:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9340:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9353:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9340:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2028,
														"nodeType": "IfStatement",
														"src": "9336:96:7",
														"trueBody": {
															"id": 2027,
															"nodeType": "Block",
															"src": "9356:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2019,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1915,
																			"src": "9375:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9385:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9375:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2022,
																	"nodeType": "ExpressionStatement",
																	"src": "9375:11:7"
																},
																{
																	"expression": {
																		"id": 2025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2023,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1921,
																			"src": "9405:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9415:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9405:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2026,
																	"nodeType": "ExpressionStatement",
																	"src": "9405:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2029,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "9450:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9459:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9450:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9463:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9450:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2039,
														"nodeType": "IfStatement",
														"src": "9446:66:7",
														"trueBody": {
															"id": 2038,
															"nodeType": "Block",
															"src": "9466:46:7",
															"statements": [
																{
																	"expression": {
																		"id": 2036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2034,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1921,
																			"src": "9485:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9495:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9485:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2037,
																	"nodeType": "ExpressionStatement",
																	"src": "9485:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2041,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1921,
													"src": "9540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1919,
												"id": 2042,
												"nodeType": "Return",
												"src": "9533:13:7"
											}
										]
									},
									"documentation": {
										"id": 1913,
										"nodeType": "StructuredDocumentation",
										"src": "8413:116:7",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8544:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8557:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "8549:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8549:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8548:15:7"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "8587:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8587:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8586:9:7"
									},
									"scope": 2372,
									"src": "8535:1019:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2079,
										"nodeType": "Block",
										"src": "9793:170:7",
										"statements": [
											{
												"id": 2078,
												"nodeType": "UncheckedBlock",
												"src": "9804:152:7",
												"statements": [
													{
														"assignments": [
															2056
														],
														"declarations": [
															{
																"constant": false,
																"id": 2056,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9837:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 2078,
																"src": "9829:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2055,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9829:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2060,
														"initialValue": {
															"arguments": [
																{
																	"id": 2058,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2047,
																	"src": "9851:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2057,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2044,
																	2080
																],
																"referencedDeclaration": 2044,
																"src": "9846:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9846:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9829:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2061,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2056,
																"src": "9879:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1513",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2062,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2050,
																					"src": "9889:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1513",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2063,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1513,
																						"src": "9901:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1513_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2064,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9910:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1511,
																					"src": "9901:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1513",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9889:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2068,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2066,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9916:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2067,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2056,
																						"src": "9921:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9916:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2069,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2047,
																					"src": "9930:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9916:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9889:46:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9942:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9889:54:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9938:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2075,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9888:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9879:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2054,
														"id": 2077,
														"nodeType": "Return",
														"src": "9872:72:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "9562:145:7",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9722:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9735:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "9727:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9727:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9751:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "9742:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1513",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2049,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2048,
														"name": "Rounding",
														"nameLocations": [
															"9742:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1513,
														"src": "9742:8:7"
													},
													"referencedDeclaration": 1513,
													"src": "9742:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1513",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9726:34:7"
									},
									"returnParameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "9784:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9784:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9783:9:7"
									},
									"scope": 2372,
									"src": "9713:250:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2208,
										"nodeType": "Block",
										"src": "10156:886:7",
										"statements": [
											{
												"assignments": [
													2089
												],
												"declarations": [
													{
														"constant": false,
														"id": 2089,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10175:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2208,
														"src": "10167:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2088,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10167:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2091,
												"initialValue": {
													"hexValue": "30",
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10184:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10167:18:7"
											},
											{
												"id": 2205,
												"nodeType": "UncheckedBlock",
												"src": "10196:815:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2092,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "10225:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10234:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10240:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10234:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10225:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2108,
														"nodeType": "IfStatement",
														"src": "10221:106:7",
														"trueBody": {
															"id": 2107,
															"nodeType": "Block",
															"src": "10244:83:7",
															"statements": [
																{
																	"expression": {
																		"id": 2101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2097,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "10263:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2098,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10272:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2099,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10278:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10272:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10263:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2102,
																	"nodeType": "ExpressionStatement",
																	"src": "10263:17:7"
																},
																{
																	"expression": {
																		"id": 2105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2103,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "10299:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10309:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10299:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2106,
																	"nodeType": "ExpressionStatement",
																	"src": "10299:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2109,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "10345:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10354:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10360:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10354:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10345:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2125,
														"nodeType": "IfStatement",
														"src": "10341:106:7",
														"trueBody": {
															"id": 2124,
															"nodeType": "Block",
															"src": "10364:83:7",
															"statements": [
																{
																	"expression": {
																		"id": 2118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2114,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "10383:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10392:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10398:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10392:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10383:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2119,
																	"nodeType": "ExpressionStatement",
																	"src": "10383:17:7"
																},
																{
																	"expression": {
																		"id": 2122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2120,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "10419:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10419:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2123,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2126,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "10465:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10474:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10480:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10474:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10465:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2142,
														"nodeType": "IfStatement",
														"src": "10461:106:7",
														"trueBody": {
															"id": 2141,
															"nodeType": "Block",
															"src": "10484:83:7",
															"statements": [
																{
																	"expression": {
																		"id": 2135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2131,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "10503:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2132,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10512:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10518:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10512:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10503:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2136,
																	"nodeType": "ExpressionStatement",
																	"src": "10503:17:7"
																},
																{
																	"expression": {
																		"id": 2139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2137,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "10539:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10549:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10539:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2140,
																	"nodeType": "ExpressionStatement",
																	"src": "10539:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2143,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "10585:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10594:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10600:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10594:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10585:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2159,
														"nodeType": "IfStatement",
														"src": "10581:103:7",
														"trueBody": {
															"id": 2158,
															"nodeType": "Block",
															"src": "10603:81:7",
															"statements": [
																{
																	"expression": {
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2148,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "10622:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2149,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10631:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2150,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10637:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10631:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10622:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2153,
																	"nodeType": "ExpressionStatement",
																	"src": "10622:16:7"
																},
																{
																	"expression": {
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2154,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "10657:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10667:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10657:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2157,
																	"nodeType": "ExpressionStatement",
																	"src": "10657:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2160,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "10702:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10711:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10717:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10711:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10702:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2176,
														"nodeType": "IfStatement",
														"src": "10698:103:7",
														"trueBody": {
															"id": 2175,
															"nodeType": "Block",
															"src": "10720:81:7",
															"statements": [
																{
																	"expression": {
																		"id": 2169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2165,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "10739:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10748:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10754:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10748:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10739:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2170,
																	"nodeType": "ExpressionStatement",
																	"src": "10739:16:7"
																},
																{
																	"expression": {
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2171,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "10774:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10784:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10774:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2174,
																	"nodeType": "ExpressionStatement",
																	"src": "10774:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2177,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "10819:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10828:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10834:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10828:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10819:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2193,
														"nodeType": "IfStatement",
														"src": "10815:103:7",
														"trueBody": {
															"id": 2192,
															"nodeType": "Block",
															"src": "10837:81:7",
															"statements": [
																{
																	"expression": {
																		"id": 2186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2182,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "10856:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2183,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10865:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10871:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10865:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10856:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2187,
																	"nodeType": "ExpressionStatement",
																	"src": "10856:16:7"
																},
																{
																	"expression": {
																		"id": 2190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2188,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "10891:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10901:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10891:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2191,
																	"nodeType": "ExpressionStatement",
																	"src": "10891:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2194,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "10936:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10945:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10951:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10945:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10936:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2204,
														"nodeType": "IfStatement",
														"src": "10932:68:7",
														"trueBody": {
															"id": 2203,
															"nodeType": "Block",
															"src": "10954:46:7",
															"statements": [
																{
																	"expression": {
																		"id": 2201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2199,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "10973:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10973:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2202,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2206,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2089,
													"src": "11028:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2087,
												"id": 2207,
												"nodeType": "Return",
												"src": "11021:13:7"
											}
										]
									},
									"documentation": {
										"id": 2081,
										"nodeType": "StructuredDocumentation",
										"src": "9971:117:7",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10103:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10117:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "10109:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10109:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10108:15:7"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "10147:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10147:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10146:9:7"
									},
									"scope": 2372,
									"src": "10094:948:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2244,
										"nodeType": "Block",
										"src": "11283:172:7",
										"statements": [
											{
												"id": 2243,
												"nodeType": "UncheckedBlock",
												"src": "11294:154:7",
												"statements": [
													{
														"assignments": [
															2221
														],
														"declarations": [
															{
																"constant": false,
																"id": 2221,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11327:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 2243,
																"src": "11319:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2220,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11319:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2225,
														"initialValue": {
															"arguments": [
																{
																	"id": 2223,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "11342:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2222,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2209,
																	2245
																],
																"referencedDeclaration": 2209,
																"src": "11336:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11336:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11319:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2226,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2221,
																"src": "11370:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1513",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2227,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2215,
																					"src": "11380:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1513",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2228,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1513,
																						"src": "11392:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1513_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2229,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11401:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1511,
																					"src": "11392:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1513",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11380:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2235,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2233,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11407:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2232,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2221,
																						"src": "11413:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11407:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2234,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2212,
																					"src": "11422:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11407:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11380:47:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11380:55:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11430:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2240,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11379:57:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11370:66:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2219,
														"id": 2242,
														"nodeType": "Return",
														"src": "11363:73:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2210,
										"nodeType": "StructuredDocumentation",
										"src": "11050:146:7",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11211:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11225:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "11217:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11217:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11241:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "11232:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1513",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2214,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2213,
														"name": "Rounding",
														"nameLocations": [
															"11232:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1513,
														"src": "11232:8:7"
													},
													"referencedDeclaration": 1513,
													"src": "11232:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1513",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11216:34:7"
									},
									"returnParameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "11274:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11274:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11273:9:7"
									},
									"scope": 2372,
									"src": "11202:253:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2331,
										"nodeType": "Block",
										"src": "11777:624:7",
										"statements": [
											{
												"assignments": [
													2254
												],
												"declarations": [
													{
														"constant": false,
														"id": 2254,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11796:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2331,
														"src": "11788:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2253,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11788:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2256,
												"initialValue": {
													"hexValue": "30",
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11805:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11788:18:7"
											},
											{
												"id": 2328,
												"nodeType": "UncheckedBlock",
												"src": "11817:553:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2257,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2248,
																	"src": "11846:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11855:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11846:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11861:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11846:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2271,
														"nodeType": "IfStatement",
														"src": "11842:101:7",
														"trueBody": {
															"id": 2270,
															"nodeType": "Block",
															"src": "11864:79:7",
															"statements": [
																{
																	"expression": {
																		"id": 2264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2262,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2248,
																			"src": "11883:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11893:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11883:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2265,
																	"nodeType": "ExpressionStatement",
																	"src": "11883:13:7"
																},
																{
																	"expression": {
																		"id": 2268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2266,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2254,
																			"src": "11915:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11925:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11915:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2269,
																	"nodeType": "ExpressionStatement",
																	"src": "11915:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2272,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2248,
																	"src": "11961:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11970:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11961:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11975:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11961:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2286,
														"nodeType": "IfStatement",
														"src": "11957:98:7",
														"trueBody": {
															"id": 2285,
															"nodeType": "Block",
															"src": "11978:77:7",
															"statements": [
																{
																	"expression": {
																		"id": 2279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2277,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2248,
																			"src": "11997:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12007:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11997:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2280,
																	"nodeType": "ExpressionStatement",
																	"src": "11997:12:7"
																},
																{
																	"expression": {
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2281,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2254,
																			"src": "12028:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12028:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2284,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2287,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2248,
																	"src": "12073:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12082:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12073:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12087:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12073:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2301,
														"nodeType": "IfStatement",
														"src": "12069:98:7",
														"trueBody": {
															"id": 2300,
															"nodeType": "Block",
															"src": "12090:77:7",
															"statements": [
																{
																	"expression": {
																		"id": 2294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2292,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2248,
																			"src": "12109:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12119:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12109:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2295,
																	"nodeType": "ExpressionStatement",
																	"src": "12109:12:7"
																},
																{
																	"expression": {
																		"id": 2298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2296,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2254,
																			"src": "12140:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12150:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12140:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2299,
																	"nodeType": "ExpressionStatement",
																	"src": "12140:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2302,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2248,
																	"src": "12185:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12194:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12185:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12199:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12185:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2316,
														"nodeType": "IfStatement",
														"src": "12181:98:7",
														"trueBody": {
															"id": 2315,
															"nodeType": "Block",
															"src": "12202:77:7",
															"statements": [
																{
																	"expression": {
																		"id": 2309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2307,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2248,
																			"src": "12221:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12231:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12221:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2310,
																	"nodeType": "ExpressionStatement",
																	"src": "12221:12:7"
																},
																{
																	"expression": {
																		"id": 2313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2311,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2254,
																			"src": "12252:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12262:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12252:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2314,
																	"nodeType": "ExpressionStatement",
																	"src": "12252:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2317,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2248,
																	"src": "12297:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12306:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12297:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12310:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12297:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2327,
														"nodeType": "IfStatement",
														"src": "12293:66:7",
														"trueBody": {
															"id": 2326,
															"nodeType": "Block",
															"src": "12313:46:7",
															"statements": [
																{
																	"expression": {
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2322,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2254,
																			"src": "12332:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12342:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12332:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2325,
																	"nodeType": "ExpressionStatement",
																	"src": "12332:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2329,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2254,
													"src": "12387:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2252,
												"id": 2330,
												"nodeType": "Return",
												"src": "12380:13:7"
											}
										]
									},
									"documentation": {
										"id": 2246,
										"nodeType": "StructuredDocumentation",
										"src": "11463:245:7",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11723:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11738:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "11730:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11729:15:7"
									},
									"returnParameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "11768:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11767:9:7"
									},
									"scope": 2372,
									"src": "11714:687:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2370,
										"nodeType": "Block",
										"src": "12644:179:7",
										"statements": [
											{
												"id": 2369,
												"nodeType": "UncheckedBlock",
												"src": "12655:161:7",
												"statements": [
													{
														"assignments": [
															2344
														],
														"declarations": [
															{
																"constant": false,
																"id": 2344,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12688:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 2369,
																"src": "12680:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2343,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12680:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2348,
														"initialValue": {
															"arguments": [
																{
																	"id": 2346,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2335,
																	"src": "12704:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2345,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2332,
																	2371
																],
																"referencedDeclaration": 2332,
																"src": "12697:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12697:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12680:30:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2349,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2344,
																"src": "12732:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1513",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2350,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2338,
																					"src": "12742:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1513",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2351,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1513,
																						"src": "12754:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1513_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2352,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12763:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1511,
																					"src": "12754:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1513",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12742:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2361,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2359,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2354,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12769:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2357,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2355,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2344,
																									"src": "12775:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2356,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12785:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12775:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2358,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12774:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12769:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2360,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2335,
																					"src": "12790:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12769:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12742:53:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12802:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12742:61:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12798:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2366,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12741:63:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12732:72:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2342,
														"id": 2368,
														"nodeType": "Return",
														"src": "12725:79:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2333,
										"nodeType": "StructuredDocumentation",
										"src": "12409:147:7",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12571:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12586:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "12578:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12578:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12602:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "12593:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1513",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2337,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2336,
														"name": "Rounding",
														"nameLocations": [
															"12593:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1513,
														"src": "12593:8:7"
													},
													"referencedDeclaration": 1513,
													"src": "12593:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1513",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12577:34:7"
									},
									"returnParameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "12635:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12635:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12634:9:7"
									},
									"scope": 2372,
									"src": "12562:261:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2373,
							"src": "210:12616:7",
							"usedErrors": []
						}
					],
					"src": "106:12720:7"
				},
				"id": 7
			},
			"src/libraries/SafeERC20.sol": {
				"ast": {
					"absolutePath": "src/libraries/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1506
						],
						"IERC20": [
							1083
						],
						"IERC20Permit": [
							1119
						],
						"SafeERC20": [
							2653
						]
					},
					"id": 2654,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2374,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:8"
						},
						{
							"absolutePath": "src/interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 2375,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2654,
							"sourceUnit": 1084,
							"src": "145:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/IERC20Permit.sol",
							"file": "../interfaces/IERC20Permit.sol",
							"id": 2376,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2654,
							"sourceUnit": 1120,
							"src": "181:40:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/libraries/Address.sol",
							"file": "./Address.sol",
							"id": 2377,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2654,
							"sourceUnit": 1507,
							"src": "223:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2378,
								"nodeType": "StructuredDocumentation",
								"src": "250:465:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2653,
							"linearizedBaseContracts": [
								2653
							],
							"name": "SafeERC20",
							"nameLocation": "725:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2381,
									"libraryName": {
										"id": 2379,
										"name": "Address",
										"nameLocations": [
											"748:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1506,
										"src": "748:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "742:26:8",
									"typeName": {
										"id": 2380,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "760:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 2403,
										"nodeType": "Block",
										"src": "848:105:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2392,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2384,
															"src": "879:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1083",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2395,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2384,
																			"src": "909:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1083",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "915:8:8",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1050,
																		"src": "909:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "924:8:8",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "909:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2398,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2386,
																	"src": "934:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2399,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2388,
																	"src": "938:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2393,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "886:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "890:18:8",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "886:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "886:58:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1083",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2391,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2652,
														"src": "859:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1083_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "859:86:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2402,
												"nodeType": "ExpressionStatement",
												"src": "859:86:8"
											}
										]
									},
									"id": 2404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "785:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "805:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "798:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1083",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2383,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2382,
														"name": "IERC20",
														"nameLocations": [
															"798:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1083,
														"src": "798:6:8"
													},
													"referencedDeclaration": 1083,
													"src": "798:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1083",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "820:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "812:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "832:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "824:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:41:8"
									},
									"returnParameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "848:0:8"
									},
									"scope": 2653,
									"src": "776:177:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2429,
										"nodeType": "Block",
										"src": "1051:115:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2417,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "1082:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1083",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2420,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2407,
																			"src": "1112:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1083",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1118:12:8",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1082,
																		"src": "1112:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1131:8:8",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1112:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2423,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2409,
																	"src": "1141:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2424,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2411,
																	"src": "1147:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2425,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2413,
																	"src": "1151:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2418,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1089:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1093:18:8",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1089:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1089:68:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1083",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2416,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2652,
														"src": "1062:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1083_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1062:96:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2428,
												"nodeType": "ExpressionStatement",
												"src": "1062:96:8"
											}
										]
									},
									"id": 2430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "970:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "994:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "987:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1083",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2405,
														"name": "IERC20",
														"nameLocations": [
															"987:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1083,
														"src": "987:6:8"
													},
													"referencedDeclaration": 1083,
													"src": "987:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1083",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1009:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "1001:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1023:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "1015:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1035:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "1027:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "986:55:8"
									},
									"returnParameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1051:0:8"
									},
									"scope": 2653,
									"src": "961:205:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2473,
										"nodeType": "Block",
										"src": "1511:506:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2442,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "1765:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1774:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1765:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2445,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1764:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2450,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1805:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$2653",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$2653",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 2449,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1797:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2448,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1797:7:8",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2451,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1797:13:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2452,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2436,
																					"src": "1812:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 2446,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2434,
																					"src": "1781:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1083",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1787:9:8",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1060,
																				"src": "1781:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 2453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1781:39:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1824:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1781:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2456,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1780:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1764:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 2458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:56:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 2441,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1742:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1742:166:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2460,
												"nodeType": "ExpressionStatement",
												"src": "1742:166:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2462,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2434,
															"src": "1939:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1083",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2465,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2434,
																			"src": "1969:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1083",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1975:7:8",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1070,
																		"src": "1969:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1983:8:8",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2468,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2436,
																	"src": "1993:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2469,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2438,
																	"src": "2002:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2463,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1950:18:8",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1083",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2461,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2652,
														"src": "1919:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1083_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2472,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:8"
											}
										]
									},
									"documentation": {
										"id": 2431,
										"nodeType": "StructuredDocumentation",
										"src": "1174:255:8",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 2474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1444:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1463:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "1456:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1083",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2433,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2432,
														"name": "IERC20",
														"nameLocations": [
															"1456:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1083,
														"src": "1456:6:8"
													},
													"referencedDeclaration": 1083,
													"src": "1456:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1083",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1478:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "1470:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1495:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "1487:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1455:46:8"
									},
									"returnParameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1511:0:8"
									},
									"scope": 2653,
									"src": "1435:582:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2509,
										"nodeType": "Block",
										"src": "2111:197:8",
										"statements": [
											{
												"assignments": [
													2485
												],
												"declarations": [
													{
														"constant": false,
														"id": 2485,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2130:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 2509,
														"src": "2122:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2484,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2122:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2496,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2490,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2169:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$2653",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$2653",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 2489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2161:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2488,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2161:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2161:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2492,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2479,
																"src": "2176:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2486,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2477,
																"src": "2145:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1083",
																	"typeString": "contract IERC20"
																}
															},
															"id": 2487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2151:9:8",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1060,
															"src": "2145:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 2493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2145:39:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2494,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2481,
														"src": "2187:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2145:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2122:70:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2498,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2477,
															"src": "2223:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1083",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2501,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2477,
																			"src": "2253:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1083",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2259:7:8",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1070,
																		"src": "2253:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2267:8:8",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2253:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2504,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2479,
																	"src": "2277:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2505,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2485,
																	"src": "2286:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2499,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2230:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2234:18:8",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2230:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2230:69:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1083",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2497,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2652,
														"src": "2203:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1083_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2203:97:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2508,
												"nodeType": "ExpressionStatement",
												"src": "2203:97:8"
											}
										]
									},
									"id": 2510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2034:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2063:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "2056:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1083",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2476,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2475,
														"name": "IERC20",
														"nameLocations": [
															"2056:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1083,
														"src": "2056:6:8"
													},
													"referencedDeclaration": 1083,
													"src": "2056:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1083",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2078:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "2070:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2095:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "2087:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2087:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2055:46:8"
									},
									"returnParameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2111:0:8"
									},
									"scope": 2653,
									"src": "2025:283:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2557,
										"nodeType": "Block",
										"src": "2402:377:8",
										"statements": [
											{
												"id": 2556,
												"nodeType": "UncheckedBlock",
												"src": "2413:359:8",
												"statements": [
													{
														"assignments": [
															2521
														],
														"declarations": [
															{
																"constant": false,
																"id": 2521,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2446:12:8",
																"nodeType": "VariableDeclaration",
																"scope": 2556,
																"src": "2438:20:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2520,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2438:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2530,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2526,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2485:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$2653",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$2653",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 2525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2477:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2524,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2477:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2477:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2528,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2515,
																	"src": "2492:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2522,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2513,
																	"src": "2461:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1083",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2467:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1060,
																"src": "2461:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2461:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2438:62:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2532,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2521,
																		"src": "2523:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 2533,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2517,
																		"src": "2539:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2523:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 2535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2546:43:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 2531,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2515:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2515:75:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2537,
														"nodeType": "ExpressionStatement",
														"src": "2515:75:8"
													},
													{
														"assignments": [
															2539
														],
														"declarations": [
															{
																"constant": false,
																"id": 2539,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2613:12:8",
																"nodeType": "VariableDeclaration",
																"scope": 2556,
																"src": "2605:20:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2538,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2605:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2543,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2540,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2521,
																"src": "2628:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2541,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "2643:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2628:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2605:43:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2545,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2513,
																	"src": "2683:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1083",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 2548,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2513,
																					"src": "2713:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1083",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2719:7:8",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1070,
																				"src": "2713:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 2550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2727:8:8",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2713:22:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 2551,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2515,
																			"src": "2737:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2552,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2539,
																			"src": "2746:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2546,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2690:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2694:18:8",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2690:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2690:69:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1083",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2544,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2652,
																"src": "2663:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1083_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 2554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2663:97:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2555,
														"nodeType": "ExpressionStatement",
														"src": "2663:97:8"
													}
												]
											}
										]
									},
									"id": 2558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2325:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2354:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "2347:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1083",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2512,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2511,
														"name": "IERC20",
														"nameLocations": [
															"2347:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1083,
														"src": "2347:6:8"
													},
													"referencedDeclaration": 1083,
													"src": "2347:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1083",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2369:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "2361:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2386:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "2378:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2378:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:46:8"
									},
									"returnParameters": {
										"id": 2519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2402:0:8"
									},
									"scope": 2653,
									"src": "2316:463:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2613,
										"nodeType": "Block",
										"src": "3011:262:8",
										"statements": [
											{
												"assignments": [
													2579
												],
												"declarations": [
													{
														"constant": false,
														"id": 2579,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3030:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 2613,
														"src": "3022:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2578,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3022:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2584,
												"initialValue": {
													"arguments": [
														{
															"id": 2582,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "3057:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2580,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2561,
															"src": "3044:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$1119",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 2581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3050:6:8",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1112,
														"src": "3044:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3044:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3022:41:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2588,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "3087:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2589,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2565,
															"src": "3094:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2567,
															"src": "3103:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2591,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2569,
															"src": "3110:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2592,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2571,
															"src": "3120:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2593,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2573,
															"src": "3123:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2594,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2575,
															"src": "3126:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2585,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2561,
															"src": "3074:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$1119",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 2587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3080:6:8",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1104,
														"src": "3074:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 2595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3074:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2596,
												"nodeType": "ExpressionStatement",
												"src": "3074:54:8"
											},
											{
												"assignments": [
													2598
												],
												"declarations": [
													{
														"constant": false,
														"id": 2598,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3147:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2613,
														"src": "3139:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2597,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3139:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2603,
												"initialValue": {
													"arguments": [
														{
															"id": 2601,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "3173:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2599,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2561,
															"src": "3160:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$1119",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 2600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3166:6:8",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1112,
														"src": "3160:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3160:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3139:40:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2605,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2598,
																"src": "3198:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2606,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2579,
																	"src": "3212:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3226:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3212:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3198:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 2610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 2604,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3190:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3190:75:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2612,
												"nodeType": "ExpressionStatement",
												"src": "3190:75:8"
											}
										]
									},
									"id": 2614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2796:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2830:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "2817:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$1119",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 2560,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2559,
														"name": "IERC20Permit",
														"nameLocations": [
															"2817:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1119,
														"src": "2817:12:8"
													},
													"referencedDeclaration": 1119,
													"src": "2817:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$1119",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2854:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "2846:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2878:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "2870:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2904:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "2896:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2896:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2928:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "2920:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2920:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "2953:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "2947:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2570,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2947:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2973:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "2965:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2572,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "2993:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "2985:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2574,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2985:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2806:195:8"
									},
									"returnParameters": {
										"id": 2577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3011:0:8"
									},
									"scope": 2653,
									"src": "2787:486:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2651,
										"nodeType": "Block",
										"src": "3734:646:8",
										"statements": [
											{
												"assignments": [
													2624
												],
												"declarations": [
													{
														"constant": false,
														"id": 2624,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4101:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2651,
														"src": "4088:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2623,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4088:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2633,
												"initialValue": {
													"arguments": [
														{
															"id": 2630,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2620,
															"src": "4142:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4148:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2627,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2618,
																	"src": "4122:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1083",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1083",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4114:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2625,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4114:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4114:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4129:12:8",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1266,
														"src": "4114:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4114:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4088:95:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2634,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2624,
															"src": "4198:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4209:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4198:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4218:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4198:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2650,
												"nodeType": "IfStatement",
												"src": "4194:179:8",
												"trueBody": {
													"id": 2649,
													"nodeType": "Block",
													"src": "4221:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2641,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2624,
																				"src": "4295:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 2643,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4308:4:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2642,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4308:4:8",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 2644,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4307:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 2639,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4284:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4288:6:8",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4284:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4284:30:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 2646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4316:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 2638,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4276:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:85:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2648,
															"nodeType": "ExpressionStatement",
															"src": "4276:85:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2615,
										"nodeType": "StructuredDocumentation",
										"src": "3281:377:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3673:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3700:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2652,
												"src": "3693:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1083",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2617,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2616,
														"name": "IERC20",
														"nameLocations": [
															"3693:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1083,
														"src": "3693:6:8"
													},
													"referencedDeclaration": 1083,
													"src": "3693:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1083",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3720:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2652,
												"src": "3707:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3707:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3692:33:8"
									},
									"returnParameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3734:0:8"
									},
									"scope": 2653,
									"src": "3664:716:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2654,
							"src": "717:3666:8",
							"usedErrors": []
						}
					],
					"src": "118:4267:8"
				},
				"id": 8
			},
			"src/libraries/SignedMath.sol": {
				"ast": {
					"absolutePath": "src/libraries/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2758
						]
					},
					"id": 2759,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2655,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2656,
								"nodeType": "StructuredDocumentation",
								"src": "139:82:9",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2758,
							"linearizedBaseContracts": [
								2758
							],
							"name": "SignedMath",
							"nameLocation": "231:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2673,
										"nodeType": "Block",
										"src": "387:39:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2666,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2659,
															"src": "405:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2667,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2661,
															"src": "409:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "405:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2670,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2661,
														"src": "417:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "405:13:9",
													"trueExpression": {
														"id": 2669,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2659,
														"src": "413:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2665,
												"id": 2672,
												"nodeType": "Return",
												"src": "398:20:9"
											}
										]
									},
									"documentation": {
										"id": 2657,
										"nodeType": "StructuredDocumentation",
										"src": "249:68:9",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "332:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "343:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "336:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2658,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "336:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "353:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "346:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2660,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "346:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "335:20:9"
									},
									"returnParameters": {
										"id": 2665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "379:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2663,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "379:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:8:9"
									},
									"scope": 2758,
									"src": "323:103:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2691,
										"nodeType": "Block",
										"src": "573:39:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2684,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2677,
															"src": "591:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2685,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2679,
															"src": "595:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "591:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2688,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2679,
														"src": "603:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "591:13:9",
													"trueExpression": {
														"id": 2687,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2677,
														"src": "599:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2683,
												"id": 2690,
												"nodeType": "Return",
												"src": "584:20:9"
											}
										]
									},
									"documentation": {
										"id": 2675,
										"nodeType": "StructuredDocumentation",
										"src": "434:69:9",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "518:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "529:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "522:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2676,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "522:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "539:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "532:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2678,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "532:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:20:9"
									},
									"returnParameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "565:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2681,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:8:9"
									},
									"scope": 2758,
									"src": "509:103:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2735,
										"nodeType": "Block",
										"src": "823:166:9",
										"statements": [
											{
												"assignments": [
													2703
												],
												"declarations": [
													{
														"constant": false,
														"id": 2703,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "894:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2735,
														"src": "887:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2702,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "887:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2716,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2704,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2695,
																	"src": "899:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2705,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2697,
																	"src": "903:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "899:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2707,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "898:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2708,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2695,
																				"src": "910:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2709,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2697,
																				"src": "914:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "910:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2711,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "909:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "920:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "909:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2714,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "908:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "898:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "887:35:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2717,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2703,
														"src": "940:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2722,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2703,
																						"src": "960:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2721,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "952:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2720,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "952:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2723,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "952:10:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2724,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "966:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "952:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "945:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2718,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "945:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "945:25:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2727,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2695,
																				"src": "974:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2728,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2697,
																				"src": "978:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "974:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2730,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "973:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "945:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2732,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "944:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "940:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2701,
												"id": 2734,
												"nodeType": "Return",
												"src": "933:48:9"
											}
										]
									},
									"documentation": {
										"id": 2693,
										"nodeType": "StructuredDocumentation",
										"src": "620:129:9",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "764:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "779:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "772:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2694,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "772:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "789:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "782:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2696,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "782:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:20:9"
									},
									"returnParameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "815:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2699,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "815:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:8:9"
									},
									"scope": 2758,
									"src": "755:234:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2756,
										"nodeType": "Block",
										"src": "1138:163:9",
										"statements": [
											{
												"id": 2755,
												"nodeType": "UncheckedBlock",
												"src": "1149:145:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2746,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2739,
																			"src": "1266:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1271:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1266:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1279:2:9",
																		"subExpression": {
																			"id": 2750,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2739,
																			"src": "1280:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1266:15:9",
																	"trueExpression": {
																		"id": 2749,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2739,
																		"src": "1275:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1258:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2744,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1258:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1258:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2743,
														"id": 2754,
														"nodeType": "Return",
														"src": "1251:31:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2737,
										"nodeType": "StructuredDocumentation",
										"src": "997:80:9",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1092:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1103:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2757,
												"src": "1096:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2738,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1096:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:10:9"
									},
									"returnParameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2757,
												"src": "1129:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:9:9"
									},
									"scope": 2758,
									"src": "1083:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2759,
							"src": "223:1081:9",
							"usedErrors": []
						}
					],
					"src": "112:1192:9"
				},
				"id": 9
			},
			"src/libraries/Strings.sol": {
				"ast": {
					"absolutePath": "src/libraries/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2372
						],
						"SignedMath": [
							2758
						],
						"Strings": [
							2987
						]
					},
					"id": 2988,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2760,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:10"
						},
						{
							"absolutePath": "src/libraries/Math.sol",
							"file": "./Math.sol",
							"id": 2761,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2988,
							"sourceUnit": 2373,
							"src": "131:20:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/libraries/SignedMath.sol",
							"file": "./SignedMath.sol",
							"id": 2762,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2988,
							"sourceUnit": 2759,
							"src": "153:26:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2763,
								"nodeType": "StructuredDocumentation",
								"src": "183:36:10",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2987,
							"linearizedBaseContracts": [
								2987
							],
							"name": "Strings",
							"nameLocation": "229:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2766,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "269:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 2987,
									"src": "244:54:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2764,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "244:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2765,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "280:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 2769,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "328:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 2987,
									"src": "305:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2767,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "305:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 2768,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "346:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2816,
										"nodeType": "Block",
										"src": "526:645:10",
										"statements": [
											{
												"id": 2815,
												"nodeType": "UncheckedBlock",
												"src": "537:627:10",
												"statements": [
													{
														"assignments": [
															2778
														],
														"declarations": [
															{
																"constant": false,
																"id": 2778,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "570:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2815,
																"src": "562:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2777,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "562:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2785,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2781,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2772,
																		"src": "590:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2779,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2372,
																		"src": "579:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2372_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "584:5:10",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2209,
																	"src": "579:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 2782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "579:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 2783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "599:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "579:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "562:38:10"
													},
													{
														"assignments": [
															2787
														],
														"declarations": [
															{
																"constant": false,
																"id": 2787,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "629:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2815,
																"src": "615:20:10",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 2786,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "615:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2792,
														"initialValue": {
															"arguments": [
																{
																	"id": 2790,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2778,
																	"src": "649:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "638:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 2788,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "642:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 2791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "638:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "615:41:10"
													},
													{
														"assignments": [
															2794
														],
														"declarations": [
															{
																"constant": false,
																"id": 2794,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "679:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 2815,
																"src": "671:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2793,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "671:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2795,
														"nodeType": "VariableDeclarationStatement",
														"src": "671:11:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "754:69:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "773:35:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "784:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "796:2:10",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "800:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "792:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "792:15:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "780:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "780:28:10"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:10"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 2787,
																"isOffset": false,
																"isSlot": false,
																"src": "784:6:10",
																"valueSize": 1
															},
															{
																"declaration": 2778,
																"isOffset": false,
																"isSlot": false,
																"src": "800:6:10",
																"valueSize": 1
															},
															{
																"declaration": 2794,
																"isOffset": false,
																"isSlot": false,
																"src": "773:3:10",
																"valueSize": 1
															}
														],
														"id": 2796,
														"nodeType": "InlineAssembly",
														"src": "745:78:10"
													},
													{
														"body": {
															"id": 2811,
															"nodeType": "Block",
															"src": "850:275:10",
															"statements": [
																{
																	"expression": {
																		"id": 2799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "869:5:10",
																		"subExpression": {
																			"id": 2798,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2794,
																			"src": "869:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2800,
																	"nodeType": "ExpressionStatement",
																	"src": "869:5:10"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "954:86:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "985:3:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "999:5:10"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1006:2:10",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "995:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "995:14:10"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "1011:8:10"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "990:4:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "990:30:10"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "977:7:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "977:44:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "977:44:10"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 2766,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1011:8:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2794,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "985:3:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 2772,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "999:5:10",
																			"valueSize": 1
																		}
																	],
																	"id": 2801,
																	"nodeType": "InlineAssembly",
																	"src": "945:95:10"
																},
																{
																	"expression": {
																		"id": 2804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2802,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "1058:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 2803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1067:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1058:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2805,
																	"nodeType": "ExpressionStatement",
																	"src": "1058:11:10"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2806,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2772,
																			"src": "1092:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1101:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1092:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2810,
																	"nodeType": "IfStatement",
																	"src": "1088:21:10",
																	"trueBody": {
																		"id": 2809,
																		"nodeType": "Break",
																		"src": "1104:5:10"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 2797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "844:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 2812,
														"nodeType": "WhileStatement",
														"src": "837:288:10"
													},
													{
														"expression": {
															"id": 2813,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2787,
															"src": "1146:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2776,
														"id": 2814,
														"nodeType": "Return",
														"src": "1139:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2770,
										"nodeType": "StructuredDocumentation",
										"src": "357:92:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "464:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "481:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "473:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:10"
									},
									"returnParameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2817,
												"src": "511:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2774,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "511:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:15:10"
									},
									"scope": 2987,
									"src": "455:716:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2844,
										"nodeType": "Block",
										"src": "1346:105:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2829,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2820,
																			"src": "1388:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1396:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1388:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 2833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1406:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 2834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1388:20:10",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 2832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1400:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2838,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2820,
																					"src": "1434:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 2836,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2758,
																					"src": "1419:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2758_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 2837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1430:3:10",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2757,
																				"src": "1419:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 2839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1419:21:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2835,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2817,
																			2845
																		],
																		"referencedDeclaration": 2817,
																		"src": "1410:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 2840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1410:31:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 2827,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:12:10",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1371:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:71:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1364:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2825,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1364:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1364:79:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2824,
												"id": 2843,
												"nodeType": "Return",
												"src": "1357:86:10"
											}
										]
									},
									"documentation": {
										"id": 2818,
										"nodeType": "StructuredDocumentation",
										"src": "1179:91:10",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 2845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1285:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1301:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "1294:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2819,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1294:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:14:10"
									},
									"returnParameters": {
										"id": 2824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "1331:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2822,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1331:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1330:15:10"
									},
									"scope": 2987,
									"src": "1276:175:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2864,
										"nodeType": "Block",
										"src": "1635:104:10",
										"statements": [
											{
												"id": 2863,
												"nodeType": "UncheckedBlock",
												"src": "1646:86:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2854,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2848,
																	"src": "1690:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2857,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2848,
																				"src": "1709:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2855,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2372,
																				"src": "1697:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2372_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1702:6:10",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2332,
																			"src": "1697:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1697:18:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1718:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1697:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2853,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2865,
																	2941,
																	2961
																],
																"referencedDeclaration": 2941,
																"src": "1678:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1678:42:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2852,
														"id": 2862,
														"nodeType": "Return",
														"src": "1671:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2846,
										"nodeType": "StructuredDocumentation",
										"src": "1459:96:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1570:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1590:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2865,
												"src": "1582:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1581:15:10"
									},
									"returnParameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2865,
												"src": "1620:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2850,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1620:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1619:15:10"
									},
									"scope": 2987,
									"src": "1561:178:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2940,
										"nodeType": "Block",
										"src": "1957:357:10",
										"statements": [
											{
												"assignments": [
													2876
												],
												"declarations": [
													{
														"constant": false,
														"id": 2876,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1981:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2940,
														"src": "1968:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2875,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1968:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2885,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2000:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2880,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2870,
																	"src": "2004:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2000:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2013:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2000:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1990:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2877,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1994:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1990:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1968:47:10"
											},
											{
												"expression": {
													"id": 2890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2886,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2876,
															"src": "2026:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2888,
														"indexExpression": {
															"hexValue": "30",
															"id": 2887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2033:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2026:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2038:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2026:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2891,
												"nodeType": "ExpressionStatement",
												"src": "2026:15:10"
											},
											{
												"expression": {
													"id": 2896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2892,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2876,
															"src": "2052:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2894,
														"indexExpression": {
															"hexValue": "31",
															"id": 2893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2059:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2052:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2064:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2052:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2897,
												"nodeType": "ExpressionStatement",
												"src": "2052:15:10"
											},
											{
												"body": {
													"id": 2926,
													"nodeType": "Block",
													"src": "2123:86:10",
													"statements": [
														{
															"expression": {
																"id": 2920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2912,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2876,
																		"src": "2138:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2914,
																	"indexExpression": {
																		"id": 2913,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2899,
																		"src": "2145:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2138:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2915,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2766,
																		"src": "2150:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2919,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2916,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2868,
																			"src": "2159:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2167:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2159:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2150:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2138:33:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2921,
															"nodeType": "ExpressionStatement",
															"src": "2138:33:10"
														},
														{
															"expression": {
																"id": 2924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2922,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2868,
																	"src": "2186:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2196:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2186:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2925,
															"nodeType": "ExpressionStatement",
															"src": "2186:11:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2906,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2899,
														"src": "2111:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2907,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2115:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2111:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2927,
												"initializationExpression": {
													"assignments": [
														2899
													],
													"declarations": [
														{
															"constant": false,
															"id": 2899,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2091:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2927,
															"src": "2083:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2898,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2083:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2905,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2904,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2095:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2901,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2870,
																"src": "2099:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2095:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2108:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2095:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2083:26:10"
												},
												"loopExpression": {
													"expression": {
														"id": 2910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2118:3:10",
														"subExpression": {
															"id": 2909,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2899,
															"src": "2120:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2911,
													"nodeType": "ExpressionStatement",
													"src": "2118:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2078:131:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2929,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2868,
																"src": "2227:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2236:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2227:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2239:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2928,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2219:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2219:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2934,
												"nodeType": "ExpressionStatement",
												"src": "2219:55:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2937,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2876,
															"src": "2299:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2292:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2935,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2292:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2874,
												"id": 2939,
												"nodeType": "Return",
												"src": "2285:21:10"
											}
										]
									},
									"documentation": {
										"id": 2866,
										"nodeType": "StructuredDocumentation",
										"src": "1747:114:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1876:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1896:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2941,
												"src": "1888:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1911:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2941,
												"src": "1903:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:31:10"
									},
									"returnParameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2941,
												"src": "1942:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2872,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1942:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1941:15:10"
									},
									"scope": 2987,
									"src": "1867:447:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2960,
										"nodeType": "Block",
										"src": "2544:78:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2954,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2944,
																			"src": "2590:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2582:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2952,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2582:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2582:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2574:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2950,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2574:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2574:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2957,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2769,
															"src": "2598:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2949,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2865,
															2941,
															2961
														],
														"referencedDeclaration": 2941,
														"src": "2562:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2562:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2948,
												"id": 2959,
												"nodeType": "Return",
												"src": "2555:59:10"
											}
										]
									},
									"documentation": {
										"id": 2942,
										"nodeType": "StructuredDocumentation",
										"src": "2322:143:10",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 2961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2480:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2944,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2500:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "2492:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2491:14:10"
									},
									"returnParameters": {
										"id": 2948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "2529:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2946,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2529:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2528:15:10"
									},
									"scope": 2987,
									"src": "2471:151:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2985,
										"nodeType": "Block",
										"src": "2782:68:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 2983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2974,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2964,
																		"src": "2816:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2810:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2972,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2810:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2810:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2971,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2800:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2800:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2980,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2966,
																		"src": "2839:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2833:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2978,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2833:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2833:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2977,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2823:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2823:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2800:42:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2970,
												"id": 2984,
												"nodeType": "Return",
												"src": "2793:49:10"
											}
										]
									},
									"documentation": {
										"id": 2962,
										"nodeType": "StructuredDocumentation",
										"src": "2630:68:10",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2713:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2733:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "2719:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2963,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2719:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2966,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2750:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "2736:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2965,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2736:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:34:10"
									},
									"returnParameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "2776:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2968,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2776:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2775:6:10"
									},
									"scope": 2987,
									"src": "2704:146:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2988,
							"src": "221:2632:10",
							"usedErrors": []
						}
					],
					"src": "104:2749:10"
				},
				"id": 10
			},
			"src/utils/AccessControl.sol": {
				"ast": {
					"absolutePath": "src/utils/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							3303
						],
						"Context": [
							3325
						],
						"ERC165": [
							3349
						],
						"IAccessControl": [
							993
						],
						"IERC165": [
							1005
						],
						"Math": [
							2372
						],
						"SignedMath": [
							2758
						],
						"Strings": [
							2987
						]
					},
					"id": 3304,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2989,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "111:23:11"
						},
						{
							"absolutePath": "src/interfaces/IAccessControl.sol",
							"file": "../interfaces/IAccessControl.sol",
							"id": 2990,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3304,
							"sourceUnit": 994,
							"src": "138:42:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/utils/Context.sol",
							"file": "./Context.sol",
							"id": 2991,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3304,
							"sourceUnit": 3326,
							"src": "182:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/libraries/Strings.sol",
							"file": "../libraries/Strings.sol",
							"id": 2992,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3304,
							"sourceUnit": 2988,
							"src": "207:34:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/utils/ERC165.sol",
							"file": "./ERC165.sol",
							"id": 2993,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3304,
							"sourceUnit": 3350,
							"src": "243:22:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2995,
										"name": "Context",
										"nameLocations": [
											"1893:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3325,
										"src": "1893:7:11"
									},
									"id": 2996,
									"nodeType": "InheritanceSpecifier",
									"src": "1893:7:11"
								},
								{
									"baseName": {
										"id": 2997,
										"name": "IAccessControl",
										"nameLocations": [
											"1902:14:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 993,
										"src": "1902:14:11"
									},
									"id": 2998,
									"nodeType": "InheritanceSpecifier",
									"src": "1902:14:11"
								},
								{
									"baseName": {
										"id": 2999,
										"name": "ERC165",
										"nameLocations": [
											"1918:6:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3349,
										"src": "1918:6:11"
									},
									"id": 3000,
									"nodeType": "InheritanceSpecifier",
									"src": "1918:6:11"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2994,
								"nodeType": "StructuredDocumentation",
								"src": "269:1587:11",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 3303,
							"linearizedBaseContracts": [
								3303,
								3349,
								1005,
								993,
								3325
							],
							"name": "AccessControl",
							"nameLocation": "1876:13:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 3007,
									"members": [
										{
											"constant": false,
											"id": 3004,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1984:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 3007,
											"src": "1959:32:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 3003,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 3001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1967:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1959:24:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 3002,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3006,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2010:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 3007,
											"src": "2002:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 3005,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2002:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1939:8:11",
									"nodeType": "StructDefinition",
									"scope": 3303,
									"src": "1932:95:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3012,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2072:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 3303,
									"src": "2035:43:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$3007_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 3011,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3008,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2043:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2035:28:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$3007_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3010,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3009,
												"name": "RoleData",
												"nameLocations": [
													"2054:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3007,
												"src": "2054:8:11"
											},
											"referencedDeclaration": 3007,
											"src": "2054:8:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$3007_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 3015,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2111:18:11",
									"nodeType": "VariableDeclaration",
									"scope": 3303,
									"src": "2087:49:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3013,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2087:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 3014,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2132:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3025,
										"nodeType": "Block",
										"src": "2567:47:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3021,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3018,
															"src": "2589:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3020,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3080,
															3119
														],
														"referencedDeclaration": 3080,
														"src": "2578:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 3022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2578:16:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3023,
												"nodeType": "ExpressionStatement",
												"src": "2578:16:11"
											},
											{
												"id": 3024,
												"nodeType": "PlaceholderStatement",
												"src": "2605:1:11"
											}
										]
									},
									"documentation": {
										"id": 3016,
										"nodeType": "StructuredDocumentation",
										"src": "2145:384:11",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 3026,
									"name": "onlyRole",
									"nameLocation": "2544:8:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3018,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2561:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3026,
												"src": "2553:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3017,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2553:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2552:14:11"
									},
									"src": "2535:79:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										3348
									],
									"body": {
										"id": 3047,
										"nodeType": "Block",
										"src": "2777:113:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 3040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3035,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3029,
															"src": "2795:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 3037,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "2815:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$993_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$993_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 3036,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2810:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 3038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2810:20:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$993",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 3039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2831:11:11",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2810:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2795:47:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 3043,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3029,
																"src": "2870:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 3041,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2846:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$3303_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 3042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:17:11",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3348,
															"src": "2846:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 3044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2846:36:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2795:87:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3034,
												"id": 3046,
												"nodeType": "Return",
												"src": "2788:94:11"
											}
										]
									},
									"documentation": {
										"id": 3027,
										"nodeType": "StructuredDocumentation",
										"src": "2622:58:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 3048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2695:17:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3031,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2753:8:11"
									},
									"parameters": {
										"id": 3030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3029,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2720:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 3048,
												"src": "2713:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3028,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2713:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:20:11"
									},
									"returnParameters": {
										"id": 3034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3048,
												"src": "2771:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3032,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:11"
									},
									"scope": 3303,
									"src": "2686:204:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										960
									],
									"body": {
										"id": 3066,
										"nodeType": "Block",
										"src": "3074:55:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 3059,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3012,
																"src": "3092:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$3007_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 3061,
															"indexExpression": {
																"id": 3060,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3051,
																"src": "3099:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3092:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$3007_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 3062,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3105:7:11",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3004,
														"src": "3092:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3064,
													"indexExpression": {
														"id": 3063,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3053,
														"src": "3113:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3092:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3058,
												"id": 3065,
												"nodeType": "Return",
												"src": "3085:36:11"
											}
										]
									},
									"documentation": {
										"id": 3049,
										"nodeType": "StructuredDocumentation",
										"src": "2898:78:11",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 3067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2991:7:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3055,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3050:8:11"
									},
									"parameters": {
										"id": 3054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3051,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3007:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "2999:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3050,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2999:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3053,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3021:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "3013:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3013:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2998:31:11"
									},
									"returnParameters": {
										"id": 3058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "3068:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3056,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3068:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3067:6:11"
									},
									"scope": 3303,
									"src": "2982:147:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3079,
										"nodeType": "Block",
										"src": "3489:49:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3074,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3070,
															"src": "3511:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3075,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3315,
																"src": "3517:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3517:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3073,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3080,
															3119
														],
														"referencedDeclaration": 3119,
														"src": "3500:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 3077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3500:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3078,
												"nodeType": "ExpressionStatement",
												"src": "3500:30:11"
											}
										]
									},
									"documentation": {
										"id": 3068,
										"nodeType": "StructuredDocumentation",
										"src": "3137:290:11",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 3080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3442:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3070,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3461:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3080,
												"src": "3453:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3069,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3452:14:11"
									},
									"returnParameters": {
										"id": 3072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3489:0:11"
									},
									"scope": 3303,
									"src": "3433:105:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3118,
										"nodeType": "Block",
										"src": "3901:419:11",
										"statements": [
											{
												"condition": {
													"id": 3092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3916:23:11",
													"subExpression": {
														"arguments": [
															{
																"id": 3089,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3083,
																"src": "3925:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 3090,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3085,
																"src": "3931:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3088,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3067,
															"src": "3917:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 3091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3917:22:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3117,
												"nodeType": "IfStatement",
												"src": "3912:401:11",
												"trueBody": {
													"id": 3116,
													"nodeType": "Block",
													"src": "3941:372:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 3098,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4053:25:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 3101,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3085,
																								"src": "4125:7:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 3099,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2987,
																								"src": "4105:7:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$2987_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 3100,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4113:11:11",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2961,
																							"src": "4105:19:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 3102,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4105:28:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 3103,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4160:19:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 3108,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3083,
																										"src": "4234:4:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 3107,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4226:7:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 3106,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4226:7:11",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 3109,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4226:13:11",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 3110,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4241:2:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 3104,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2987,
																								"src": "4206:7:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$2987_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 3105,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4214:11:11",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2941,
																							"src": "4206:19:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 3111,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4206:38:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 3096,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4010:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 3097,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4014:12:11",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4010:16:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 3112,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4010:257:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 3095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3981:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 3094,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3981:6:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3981:305:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3093,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3956:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 3114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3956:345:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3115,
															"nodeType": "ExpressionStatement",
															"src": "3956:345:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3081,
										"nodeType": "StructuredDocumentation",
										"src": "3546:276:11",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 3119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3837:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3856:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3119,
												"src": "3848:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3082,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3085,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3870:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3119,
												"src": "3862:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3862:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:31:11"
									},
									"returnParameters": {
										"id": 3087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3901:0:11"
									},
									"scope": 3303,
									"src": "3828:492:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										968
									],
									"body": {
										"id": 3133,
										"nodeType": "Block",
										"src": "4592:48:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 3128,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3012,
															"src": "4610:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$3007_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 3130,
														"indexExpression": {
															"id": 3129,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3122,
															"src": "4617:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4610:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$3007_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 3131,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4623:9:11",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3006,
													"src": "4610:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3127,
												"id": 3132,
												"nodeType": "Return",
												"src": "4603:29:11"
											}
										]
									},
									"documentation": {
										"id": 3120,
										"nodeType": "StructuredDocumentation",
										"src": "4328:175:11",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 3134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4518:12:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3124,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4565:8:11"
									},
									"parameters": {
										"id": 3123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3122,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4539:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3134,
												"src": "4531:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3121,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4531:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4530:14:11"
									},
									"returnParameters": {
										"id": 3127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3134,
												"src": "4583:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3125,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4583:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4582:9:11"
									},
									"scope": 3303,
									"src": "4509:131:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										976
									],
									"body": {
										"id": 3153,
										"nodeType": "Block",
										"src": "5053:44:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3149,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3137,
															"src": "5075:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3150,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3139,
															"src": "5081:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3148,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3271,
														"src": "5064:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5064:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3152,
												"nodeType": "ExpressionStatement",
												"src": "5064:25:11"
											}
										]
									},
									"documentation": {
										"id": 3135,
										"nodeType": "StructuredDocumentation",
										"src": "4648:296:11",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 3154,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 3144,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3137,
															"src": "5046:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3143,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3134,
														"src": "5033:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 3145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5033:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3146,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3142,
												"name": "onlyRole",
												"nameLocations": [
													"5024:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3026,
												"src": "5024:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5024:28:11"
										}
									],
									"name": "grantRole",
									"nameLocation": "4959:9:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3141,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5015:8:11"
									},
									"parameters": {
										"id": 3140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3137,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4977:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3154,
												"src": "4969:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3136,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4969:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3139,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4991:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3154,
												"src": "4983:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:31:11"
									},
									"returnParameters": {
										"id": 3147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5053:0:11"
									},
									"scope": 3303,
									"src": "4950:147:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										984
									],
									"body": {
										"id": 3173,
										"nodeType": "Block",
										"src": "5494:45:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3169,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3157,
															"src": "5517:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3170,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3159,
															"src": "5523:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3168,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3302,
														"src": "5505:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3172,
												"nodeType": "ExpressionStatement",
												"src": "5505:26:11"
											}
										]
									},
									"documentation": {
										"id": 3155,
										"nodeType": "StructuredDocumentation",
										"src": "5105:279:11",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 3174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 3164,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3157,
															"src": "5487:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3163,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3134,
														"src": "5474:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 3165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5474:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3166,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3162,
												"name": "onlyRole",
												"nameLocations": [
													"5465:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3026,
												"src": "5465:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5465:28:11"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5399:10:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3161,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5456:8:11"
									},
									"parameters": {
										"id": 3160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5418:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3174,
												"src": "5410:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3156,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5410:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3159,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5432:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3174,
												"src": "5424:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5424:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5409:31:11"
									},
									"returnParameters": {
										"id": 3167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5494:0:11"
									},
									"scope": 3303,
									"src": "5390:149:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										992
									],
									"body": {
										"id": 3196,
										"nodeType": "Block",
										"src": "6171:141:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3184,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3179,
																"src": "6190:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3185,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3315,
																	"src": "6201:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 3186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6201:12:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6190:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 3188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6215:49:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 3183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6182:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6182:83:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3190,
												"nodeType": "ExpressionStatement",
												"src": "6182:83:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3192,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3177,
															"src": "6290:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3193,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3179,
															"src": "6296:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3191,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3302,
														"src": "6278:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6278:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3195,
												"nodeType": "ExpressionStatement",
												"src": "6278:26:11"
											}
										]
									},
									"documentation": {
										"id": 3175,
										"nodeType": "StructuredDocumentation",
										"src": "5547:541:11",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 3197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6103:12:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6162:8:11"
									},
									"parameters": {
										"id": 3180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3177,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6124:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3197,
												"src": "6116:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3176,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6116:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6138:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3197,
												"src": "6130:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6130:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6115:31:11"
									},
									"returnParameters": {
										"id": 3182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6171:0:11"
									},
									"scope": 3303,
									"src": "6094:218:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3210,
										"nodeType": "Block",
										"src": "7087:44:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3206,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3200,
															"src": "7109:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3207,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3202,
															"src": "7115:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3205,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3271,
														"src": "7098:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7098:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3209,
												"nodeType": "ExpressionStatement",
												"src": "7098:25:11"
											}
										]
									},
									"documentation": {
										"id": 3198,
										"nodeType": "StructuredDocumentation",
										"src": "6320:693:11",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 3211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "7028:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3200,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7047:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3211,
												"src": "7039:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3199,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7039:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3202,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7061:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3211,
												"src": "7053:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7053:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7038:31:11"
									},
									"returnParameters": {
										"id": 3204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7087:0:11"
									},
									"scope": 3303,
									"src": "7019:112:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3238,
										"nodeType": "Block",
										"src": "7336:178:11",
										"statements": [
											{
												"assignments": [
													3220
												],
												"declarations": [
													{
														"constant": false,
														"id": 3220,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7355:17:11",
														"nodeType": "VariableDeclaration",
														"scope": 3238,
														"src": "7347:25:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3219,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7347:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3224,
												"initialValue": {
													"arguments": [
														{
															"id": 3222,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3214,
															"src": "7388:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3221,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3134,
														"src": "7375:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 3223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7375:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7347:46:11"
											},
											{
												"expression": {
													"id": 3230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3225,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3012,
																"src": "7404:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$3007_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 3227,
															"indexExpression": {
																"id": 3226,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3214,
																"src": "7411:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7404:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$3007_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 3228,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7417:9:11",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3006,
														"src": "7404:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3229,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3216,
														"src": "7429:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7404:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3231,
												"nodeType": "ExpressionStatement",
												"src": "7404:34:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3233,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3214,
															"src": "7471:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3234,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3220,
															"src": "7477:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3235,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3216,
															"src": "7496:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3232,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "7454:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 3236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7454:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3237,
												"nodeType": "EmitStatement",
												"src": "7449:57:11"
											}
										]
									},
									"documentation": {
										"id": 3212,
										"nodeType": "StructuredDocumentation",
										"src": "7139:118:11",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 3239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7272:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3214,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7294:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3239,
												"src": "7286:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3213,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7286:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3216,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7308:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 3239,
												"src": "7300:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7300:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7285:33:11"
									},
									"returnParameters": {
										"id": 3218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7336:0:11"
									},
									"scope": 3303,
									"src": "7263:251:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3270,
										"nodeType": "Block",
										"src": "7759:170:11",
										"statements": [
											{
												"condition": {
													"id": 3251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7774:23:11",
													"subExpression": {
														"arguments": [
															{
																"id": 3248,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3242,
																"src": "7783:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 3249,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3244,
																"src": "7789:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3247,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3067,
															"src": "7775:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 3250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7775:22:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3269,
												"nodeType": "IfStatement",
												"src": "7770:152:11",
												"trueBody": {
													"id": 3268,
													"nodeType": "Block",
													"src": "7799:123:11",
													"statements": [
														{
															"expression": {
																"id": 3259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3252,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3012,
																				"src": "7814:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$3007_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 3254,
																			"indexExpression": {
																				"id": 3253,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3242,
																				"src": "7821:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7814:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$3007_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 3255,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7827:7:11",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3004,
																		"src": "7814:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 3257,
																	"indexExpression": {
																		"id": 3256,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3244,
																		"src": "7835:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7814:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 3258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7846:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7814:36:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3260,
															"nodeType": "ExpressionStatement",
															"src": "7814:36:11"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3262,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3242,
																		"src": "7882:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 3263,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3244,
																		"src": "7888:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 3264,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3315,
																			"src": "7897:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 3265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7897:12:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3261,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "7870:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 3266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7870:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3267,
															"nodeType": "EmitStatement",
															"src": "7865:45:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3240,
										"nodeType": "StructuredDocumentation",
										"src": "7522:163:11",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 3271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7700:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3242,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7719:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3271,
												"src": "7711:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3241,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7711:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3244,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7733:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3271,
												"src": "7725:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7725:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7710:31:11"
									},
									"returnParameters": {
										"id": 3246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7759:0:11"
									},
									"scope": 3303,
									"src": "7691:238:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3301,
										"nodeType": "Block",
										"src": "8178:170:11",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 3280,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3274,
															"src": "8201:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3281,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3276,
															"src": "8207:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3279,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3067,
														"src": "8193:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 3282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8193:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3300,
												"nodeType": "IfStatement",
												"src": "8189:152:11",
												"trueBody": {
													"id": 3299,
													"nodeType": "Block",
													"src": "8217:124:11",
													"statements": [
														{
															"expression": {
																"id": 3290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3283,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3012,
																				"src": "8232:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$3007_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 3285,
																			"indexExpression": {
																				"id": 3284,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3274,
																				"src": "8239:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8232:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$3007_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 3286,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8245:7:11",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3004,
																		"src": "8232:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 3288,
																	"indexExpression": {
																		"id": 3287,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3276,
																		"src": "8253:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8232:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 3289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8264:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8232:37:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3291,
															"nodeType": "ExpressionStatement",
															"src": "8232:37:11"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3293,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3274,
																		"src": "8301:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 3294,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3276,
																		"src": "8307:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 3295,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3315,
																			"src": "8316:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 3296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8316:12:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3292,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "8289:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 3297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8289:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3298,
															"nodeType": "EmitStatement",
															"src": "8284:45:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3272,
										"nodeType": "StructuredDocumentation",
										"src": "7937:166:11",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 3302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "8118:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3274,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8138:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3302,
												"src": "8130:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3273,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8130:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3276,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8152:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3302,
												"src": "8144:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8144:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8129:31:11"
									},
									"returnParameters": {
										"id": 3278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8178:0:11"
									},
									"scope": 3303,
									"src": "8109:239:11",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3304,
							"src": "1858:6493:11",
							"usedErrors": []
						}
					],
					"src": "111:8240:11"
				},
				"id": 11
			},
			"src/utils/Context.sol": {
				"ast": {
					"absolutePath": "src/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							3325
						]
					},
					"id": 3326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3305,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:12"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3306,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:12",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 3325,
							"linearizedBaseContracts": [
								3325
							],
							"name": "Context",
							"nameLocation": "641:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3314,
										"nodeType": "Block",
										"src": "718:36:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3311,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "740:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3310,
												"id": 3313,
												"nodeType": "Return",
												"src": "729:17:12"
											}
										]
									},
									"id": 3315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:12"
									},
									"returnParameters": {
										"id": 3310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3315,
												"src": "709:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:12"
									},
									"scope": 3325,
									"src": "656:98:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3323,
										"nodeType": "Block",
										"src": "829:34:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3320,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "851:4:12",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 3319,
												"id": 3322,
												"nodeType": "Return",
												"src": "840:15:12"
											}
										]
									},
									"id": 3324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:12"
									},
									"returnParameters": {
										"id": 3319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3324,
												"src": "813:14:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:12"
									},
									"scope": 3325,
									"src": "762:101:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3326,
							"src": "623:243:12",
							"usedErrors": []
						}
					],
					"src": "89:777:12"
				},
				"id": 12
			},
			"src/utils/ERC165.sol": {
				"ast": {
					"absolutePath": "src/utils/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							3349
						],
						"IERC165": [
							1005
						]
					},
					"id": 3350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:13"
						},
						{
							"absolutePath": "src/interfaces/IERC165.sol",
							"file": "../interfaces/IERC165.sol",
							"id": 3328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3350,
							"sourceUnit": 1006,
							"src": "129:35:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3330,
										"name": "IERC165",
										"nameLocations": [
											"787:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1005,
										"src": "787:7:13"
									},
									"id": 3331,
									"nodeType": "InheritanceSpecifier",
									"src": "787:7:13"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3329,
								"nodeType": "StructuredDocumentation",
								"src": "168:589:13",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 3349,
							"linearizedBaseContracts": [
								3349,
								1005
							],
							"name": "ERC165",
							"nameLocation": "777:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1004
									],
									"body": {
										"id": 3347,
										"nodeType": "Block",
										"src": "957:66:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 3345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3340,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3334,
														"src": "975:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3342,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "995:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1005_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1005_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 3341,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "990:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "990:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1005",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 3344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1004:11:13",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "990:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "975:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3339,
												"id": 3346,
												"nodeType": "Return",
												"src": "968:47:13"
											}
										]
									},
									"documentation": {
										"id": 3332,
										"nodeType": "StructuredDocumentation",
										"src": "802:58:13",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 3348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "875:17:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3336,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "933:8:13"
									},
									"parameters": {
										"id": 3335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3334,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "900:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 3348,
												"src": "893:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3333,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "893:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "892:20:13"
									},
									"returnParameters": {
										"id": 3339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3348,
												"src": "951:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "951:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:6:13"
									},
									"scope": 3349,
									"src": "866:157:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3350,
							"src": "759:267:13",
							"usedErrors": []
						}
					],
					"src": "102:924:13"
				},
				"id": 13
			}
		}
	}
}
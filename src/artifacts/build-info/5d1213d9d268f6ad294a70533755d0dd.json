{
	"id": "5d1213d9d268f6ad294a70533755d0dd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/sHYDT.sol": {
				"content": "// SPDX-License-Identifier: GNU GPLv3\r\n\r\npragma solidity 0.8.19;\r\n\r\nimport \"./extensions/ERC20.sol\";\r\n\r\nimport \"./interfaces/IsHYDT.sol\";\r\n\r\nimport \"./utils/AccessControl.sol\";\r\n\r\ncontract sHYDT is AccessControl, ERC20, IsHYDT {\r\n\r\n    /* ========== STATE VARIABLES ========== */\r\n\r\n    bytes32 public constant CALLER_ROLE = keccak256(abi.encodePacked(\"Caller\"));\r\n\r\n    /// @dev Initialization variables.\r\n    address private immutable _initializer;\r\n    bool private _isInitialized;\r\n\r\n    /* ========== CONSTRUCTOR ========== */\r\n\r\n    constructor()\r\n        ERC20(\"Staked High Yield Dollar Stable Token\", \"sHYDT\")\r\n    {\r\n        _initializer = _msgSender();\r\n    }\r\n\r\n    /* ========== INITIALIZE ========== */\r\n\r\n    /**\r\n     * @notice Initializes external dependencies and state variables.\r\n     * @dev This function can only be called once.\r\n     * @param earn_ The address of the `Earn` contract.\r\n     */\r\n    function initialize(address earn_) external {\r\n        require(_msgSender() == _initializer, \"sHYDT: caller is not the initializer\");\r\n        // TODO uncomment\r\n        // require(!_isInitialized, \"sHYDT: already initialized\");\r\n        require(earn_ != address(0), \"sHYDT: invalid Earn address\");\r\n        _grantRole(CALLER_ROLE, earn_);\r\n        // TODO future proofing needed?\r\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n        _isInitialized = true;\r\n    }\r\n\r\n    /* ========== FUNCTIONS ========== */\r\n\r\n    /**\r\n     * @dev See {ERC20-_mint}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have the `Caller` role.\r\n     */\r\n    function mint(address to, uint256 amount) external override onlyRole(CALLER_ROLE) returns (bool) {\r\n        _mint(to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {ERC20-_burn}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have the `Caller` role.\r\n     */\r\n    function burn(uint256 amount) external override returns (bool) {\r\n        address owner = _msgSender();\r\n        _burn(owner, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Destorys `amount` tokens from `from` using the allowance\r\n     * mechanism. `amount` is then deducted from the caller's allowance.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have the `Caller` role.\r\n     * - `from` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least `amount`.\r\n     */\r\n    function burnFrom(address from, uint256 amount) external override onlyRole(CALLER_ROLE) returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _burn(from, amount);\r\n        return true;\r\n    }\r\n}"
			},
			"src/utils/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../interfaces/IAccessControl.sol\";\r\nimport \"./Context.sol\";\r\nimport \"../libraries/Strings.sol\";\r\nimport \"./ERC165.sol\";\r\n\r\n/**\r\n * @dev Contract module that allows children to implement role-based access\r\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\r\n * members except through off-chain means by accessing the contract event logs. Some\r\n * applications may benefit from on-chain enumerability, for those cases see\r\n * {AccessControlEnumerable}.\r\n *\r\n * Roles are referred to by their `bytes32` identifier. These should be exposed\r\n * in the external API and be unique. The best way to achieve this is by\r\n * using `public constant` hash digests:\r\n *\r\n * ```solidity\r\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\r\n * ```\r\n *\r\n * Roles can be used to represent a set of permissions. To restrict access to a\r\n * function call, use {hasRole}:\r\n *\r\n * ```solidity\r\n * function foo() public {\r\n *     require(hasRole(MY_ROLE, msg.sender));\r\n *     ...\r\n * }\r\n * ```\r\n *\r\n * Roles can be granted and revoked dynamically via the {grantRole} and\r\n * {revokeRole} functions. Each role has an associated admin role, and only\r\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\r\n *\r\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\r\n * that only accounts with this role will be able to grant or revoke other\r\n * roles. More complex role relationships can be created by using\r\n * {_setRoleAdmin}.\r\n *\r\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\r\n * grant and revoke this role. Extra precautions should be taken to secure\r\n * accounts that have been granted it.\r\n */\r\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\r\n    struct RoleData {\r\n        mapping(address => bool) members;\r\n        bytes32 adminRole;\r\n    }\r\n\r\n    mapping(bytes32 => RoleData) private _roles;\r\n\r\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\r\n\r\n    /**\r\n     * @dev Modifier that checks that an account has a specific role. Reverts\r\n     * with a standardized message including the required role.\r\n     *\r\n     * The format of the revert reason is given by the following regular expression:\r\n     *\r\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\r\n     *\r\n     * _Available since v4.1._\r\n     */\r\n    modifier onlyRole(bytes32 role) {\r\n        _checkRole(role);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns `true` if `account` has been granted `role`.\r\n     */\r\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\r\n        return _roles[role].members[account];\r\n    }\r\n\r\n    /**\r\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\r\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\r\n     *\r\n     * Format of the revert message is described in {_checkRole}.\r\n     *\r\n     * _Available since v4.6._\r\n     */\r\n    function _checkRole(bytes32 role) internal view virtual {\r\n        _checkRole(role, _msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Revert with a standard message if `account` is missing `role`.\r\n     *\r\n     * The format of the revert reason is given by the following regular expression:\r\n     *\r\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\r\n     */\r\n    function _checkRole(bytes32 role, address account) internal view virtual {\r\n        if (!hasRole(role, account)) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        \"AccessControl: account \",\r\n                        Strings.toHexString(account),\r\n                        \" is missing role \",\r\n                        Strings.toHexString(uint256(role), 32)\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\r\n     * {revokeRole}.\r\n     *\r\n     * To change a role's admin, use {_setRoleAdmin}.\r\n     */\r\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\r\n        return _roles[role].adminRole;\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     *\r\n     * May emit a {RoleGranted} event.\r\n     */\r\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\r\n        _grantRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\r\n        _revokeRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from the calling account.\r\n     *\r\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\r\n     * purpose is to provide a mechanism for accounts to lose their privileges\r\n     * if they are compromised (such as when a trusted device is misplaced).\r\n     *\r\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be `account`.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function renounceRole(bytes32 role, address account) public virtual override {\r\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\r\n\r\n        _revokeRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event. Note that unlike {grantRole}, this function doesn't perform any\r\n     * checks on the calling account.\r\n     *\r\n     * May emit a {RoleGranted} event.\r\n     *\r\n     * [WARNING]\r\n     * ====\r\n     * This function should only be called from the constructor when setting\r\n     * up the initial roles for the system.\r\n     *\r\n     * Using this function in any other way is effectively circumventing the admin\r\n     * system imposed by {AccessControl}.\r\n     * ====\r\n     *\r\n     * NOTE: This function is deprecated in favor of {_grantRole}.\r\n     */\r\n    function _setupRole(bytes32 role, address account) internal virtual {\r\n        _grantRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `adminRole` as ``role``'s admin role.\r\n     *\r\n     * Emits a {RoleAdminChanged} event.\r\n     */\r\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\r\n        bytes32 previousAdminRole = getRoleAdmin(role);\r\n        _roles[role].adminRole = adminRole;\r\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * Internal function without access restriction.\r\n     *\r\n     * May emit a {RoleGranted} event.\r\n     */\r\n    function _grantRole(bytes32 role, address account) internal virtual {\r\n        if (!hasRole(role, account)) {\r\n            _roles[role].members[account] = true;\r\n            emit RoleGranted(role, account, _msgSender());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * Internal function without access restriction.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function _revokeRole(bytes32 role, address account) internal virtual {\r\n        if (hasRole(role, account)) {\r\n            _roles[role].members[account] = false;\r\n            emit RoleRevoked(role, account, _msgSender());\r\n        }\r\n    }\r\n}"
			},
			"src/interfaces/IsHYDT.sol": {
				"content": "// SPDX-License-Identifier: GNU GPLv3\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\ninterface IsHYDT is IERC20 {\r\n\r\n    function mint(address to, uint256 amount) external returns (bool);\r\n\r\n    function burn(uint256 amount) external returns (bool);\r\n\r\n    function burnFrom(address from, uint256 amount) external returns (bool);\r\n}"
			},
			"src/extensions/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../interfaces/IERC20.sol\";\r\nimport \"../interfaces/IERC20Metadata.sol\";\r\nimport \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * The default value of {decimals} is 18. To change this, you should override\r\n * this function so it returns a different value.\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the default value returned by this function, unless\r\n     * it's overridden.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(address from, address to, uint256 amount) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\r\n            // decrementing then incrementing.\r\n            _balances[to] += amount;\r\n        }\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        unchecked {\r\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\r\n            _balances[account] += amount;\r\n        }\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\r\n            _totalSupply -= amount;\r\n        }\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\r\n}"
			},
			"src/utils/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../interfaces/IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}"
			},
			"src/libraries/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Math.sol\";\r\nimport \"./SignedMath.sol\";\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\r\n    uint8 private constant _ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                /// @solidity memory-safe-assembly\r\n                assembly {\r\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(int256 value) internal pure returns (string memory) {\r\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = _SYMBOLS[value & 0xf];\r\n            value >>= 4;\r\n        }\r\n        require(value == 0, \"Strings: hex length insufficient\");\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the two strings are equal.\r\n     */\r\n    function equal(string memory a, string memory b) internal pure returns (bool) {\r\n        return keccak256(bytes(a)) == keccak256(bytes(b));\r\n    }\r\n}"
			},
			"src/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}"
			},
			"src/interfaces/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev External interface of AccessControl declared to support ERC165 detection.\r\n */\r\ninterface IAccessControl {\r\n    /**\r\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\r\n     *\r\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\r\n     * {RoleAdminChanged} not being emitted signaling this.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is granted `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call, an admin role\r\n     * bearer except when using {AccessControl-_setupRole}.\r\n     */\r\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is revoked `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call:\r\n     *   - if using `revokeRole`, it is the admin role bearer\r\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\r\n     */\r\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Returns `true` if `account` has been granted `role`.\r\n     */\r\n    function hasRole(bytes32 role, address account) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\r\n     * {revokeRole}.\r\n     *\r\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\r\n     */\r\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function grantRole(bytes32 role, address account) external;\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function revokeRole(bytes32 role, address account) external;\r\n\r\n    /**\r\n     * @dev Revokes `role` from the calling account.\r\n     *\r\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\r\n     * purpose is to provide a mechanism for accounts to lose their privileges\r\n     * if they are compromised (such as when a trusted device is misplaced).\r\n     *\r\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be `account`.\r\n     */\r\n    function renounceRole(bytes32 role, address account) external;\r\n}"
			},
			"src/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}"
			},
			"src/interfaces/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}"
			},
			"src/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}"
			},
			"src/libraries/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}"
			},
			"src/libraries/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    enum Rounding {\r\n        Down, // Toward negative infinity\r\n        Up, // Toward infinity\r\n        Zero // Toward zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds up instead\r\n     * of rounding down.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\r\n     * with further edits by Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod0 := mul(x, y)\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            require(denominator > prod1, \"Math: mulDiv overflow\");\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\r\n            // See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\r\n            uint256 twos = denominator & (~denominator + 1);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\r\n            // in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"src/extensions/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/extensions/ERC20.sol\":1579:13218  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"src/extensions/ERC20.sol\":2043:2159  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/extensions/ERC20.sol\":2118:2123  name_ */\n  dup2\n    /* \"src/extensions/ERC20.sol\":2110:2115  _name */\n  0x03\n    /* \"src/extensions/ERC20.sol\":2110:2123  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"src/extensions/ERC20.sol\":2144:2151  symbol_ */\n  dup1\n    /* \"src/extensions/ERC20.sol\":2134:2141  _symbol */\n  0x04\n    /* \"src/extensions/ERC20.sol\":2134:2151  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"src/extensions/ERC20.sol\":2043:2159  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"src/extensions/ERC20.sol\":1579:13218  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_20:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_62:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_21:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_66\n    /* \"#utility.yul\":1992:2041   */\n  tag_67\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_19\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1976:2042   */\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_69\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2229   */\ntag_68:\n    /* \"#utility.yul\":2238:2290   */\n  tag_70\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_22:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_73\n  tag_13\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2399:2521   */\ntag_72:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_74\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_77\n  tag_11\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2801:2920   */\ntag_76:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2996:3113   */\ntag_78:\n    /* \"#utility.yul\":3137:3211   */\n  tag_80\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_82\n  tag_12\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3298:3415   */\ntag_81:\n    /* \"#utility.yul\":3439:3513   */\n  tag_83\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_22\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_23:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_24:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_25:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_87:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_89\n  tag_24\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4057:4141   */\ntag_88:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_26:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_27:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_28:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_29:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_94\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_28\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4772:4811   */\n  tag_95\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_30:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_31:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_32:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_99\n    /* \"#utility.yul\":5161:5195   */\n  tag_100\n    /* \"#utility.yul\":5170:5194   */\n  tag_101\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5161:5195   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5143:5196   */\n  tag_30\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_33:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_34:\n    /* \"#utility.yul\":5399:5438   */\n  tag_104\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5460:5551   */\n  tag_105\n    /* \"#utility.yul\":5509:5550   */\n  tag_106\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_29\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_35:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_36:\n    /* \"#utility.yul\":5720:5752   */\n  tag_109\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5761:5826   */\n  tag_110\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_37:\n    /* \"#utility.yul\":5898:6018   */\ntag_112:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_115\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_36\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_38:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_118\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6249:6278   */\n  tag_119\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_120:\n    /* \"#utility.yul\":6476:6556   */\n  tag_121\n    /* \"#utility.yul\":6532:6554   */\n  tag_122\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_27\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_37\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_117:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_39:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_40:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_125\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_39\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_41:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_127\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_40\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_129\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_23\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_131\n  tag_16\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7381:7437   */\ntag_130:\n    /* \"#utility.yul\":7461:7499   */\n  tag_132\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_25\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7546:7613   */\n  tag_133\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_38\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_136:\n    /* \"#utility.yul\":8487:8554   */\n  tag_137\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_41\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_134)\n    /* \"#utility.yul\":7708:8326   */\ntag_135:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_138\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_26\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_139:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_143\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_40\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_142:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_134:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"src/extensions/ERC20.sol\":1579:13218  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/extensions/ERC20.sol\":1579:13218  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/extensions/ERC20.sol\":2229:2329  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":4589:4790  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":3358:3466  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":5370:5631  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":3200:3293  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":6040:6278  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":3529:3656  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":2448:2552  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":6781:7217  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":3862:4055  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":4118:4269  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":2229:2329  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"src/extensions/ERC20.sol\":2283:2296  string memory */\n      0x60\n        /* \"src/extensions/ERC20.sol\":2316:2321  _name */\n      0x03\n        /* \"src/extensions/ERC20.sol\":2309:2321  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":2229:2329  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":4589:4790  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"src/extensions/ERC20.sol\":4672:4676  bool */\n      0x00\n        /* \"src/extensions/ERC20.sol\":4689:4702  address owner */\n      dup1\n        /* \"src/extensions/ERC20.sol\":4705:4717  _msgSender() */\n      tag_71\n        /* \"src/extensions/ERC20.sol\":4705:4715  _msgSender */\n      tag_72\n        /* \"src/extensions/ERC20.sol\":4705:4717  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"src/extensions/ERC20.sol\":4689:4717  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":4728:4760  _approve(owner, spender, amount) */\n      tag_73\n        /* \"src/extensions/ERC20.sol\":4737:4742  owner */\n      dup2\n        /* \"src/extensions/ERC20.sol\":4744:4751  spender */\n      dup6\n        /* \"src/extensions/ERC20.sol\":4753:4759  amount */\n      dup6\n        /* \"src/extensions/ERC20.sol\":4728:4736  _approve */\n      tag_74\n        /* \"src/extensions/ERC20.sol\":4728:4760  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"src/extensions/ERC20.sol\":4778:4782  true */\n      0x01\n        /* \"src/extensions/ERC20.sol\":4771:4782  return true */\n      swap2\n      pop\n      pop\n        /* \"src/extensions/ERC20.sol\":4589:4790  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":3358:3466  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"src/extensions/ERC20.sol\":3419:3426  uint256 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":3446:3458  _totalSupply */\n      sload(0x02)\n        /* \"src/extensions/ERC20.sol\":3439:3458  return _totalSupply */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":3358:3466  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":5370:5631  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"src/extensions/ERC20.sol\":5467:5471  bool */\n      0x00\n        /* \"src/extensions/ERC20.sol\":5484:5499  address spender */\n      dup1\n        /* \"src/extensions/ERC20.sol\":5502:5514  _msgSender() */\n      tag_77\n        /* \"src/extensions/ERC20.sol\":5502:5512  _msgSender */\n      tag_72\n        /* \"src/extensions/ERC20.sol\":5502:5514  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"src/extensions/ERC20.sol\":5484:5514  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":5525:5563  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"src/extensions/ERC20.sol\":5541:5545  from */\n      dup6\n        /* \"src/extensions/ERC20.sol\":5547:5554  spender */\n      dup3\n        /* \"src/extensions/ERC20.sol\":5556:5562  amount */\n      dup6\n        /* \"src/extensions/ERC20.sol\":5525:5540  _spendAllowance */\n      tag_79\n        /* \"src/extensions/ERC20.sol\":5525:5563  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"src/extensions/ERC20.sol\":5574:5601  _transfer(from, to, amount) */\n      tag_80\n        /* \"src/extensions/ERC20.sol\":5584:5588  from */\n      dup6\n        /* \"src/extensions/ERC20.sol\":5590:5592  to */\n      dup6\n        /* \"src/extensions/ERC20.sol\":5594:5600  amount */\n      dup6\n        /* \"src/extensions/ERC20.sol\":5574:5583  _transfer */\n      tag_81\n        /* \"src/extensions/ERC20.sol\":5574:5601  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n        /* \"src/extensions/ERC20.sol\":5619:5623  true */\n      0x01\n        /* \"src/extensions/ERC20.sol\":5612:5623  return true */\n      swap2\n      pop\n      pop\n        /* \"src/extensions/ERC20.sol\":5370:5631  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":3200:3293  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"src/extensions/ERC20.sol\":3258:3263  uint8 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":3283:3285  18 */\n      0x12\n        /* \"src/extensions/ERC20.sol\":3276:3285  return 18 */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":3200:3293  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":6040:6278  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"src/extensions/ERC20.sol\":6128:6132  bool */\n      0x00\n        /* \"src/extensions/ERC20.sol\":6145:6158  address owner */\n      dup1\n        /* \"src/extensions/ERC20.sol\":6161:6173  _msgSender() */\n      tag_84\n        /* \"src/extensions/ERC20.sol\":6161:6171  _msgSender */\n      tag_72\n        /* \"src/extensions/ERC20.sol\":6161:6173  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"src/extensions/ERC20.sol\":6145:6173  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":6184:6248  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_85\n        /* \"src/extensions/ERC20.sol\":6193:6198  owner */\n      dup2\n        /* \"src/extensions/ERC20.sol\":6200:6207  spender */\n      dup6\n        /* \"src/extensions/ERC20.sol\":6237:6247  addedValue */\n      dup6\n        /* \"src/extensions/ERC20.sol\":6209:6234  allowance(owner, spender) */\n      tag_86\n        /* \"src/extensions/ERC20.sol\":6219:6224  owner */\n      dup6\n        /* \"src/extensions/ERC20.sol\":6226:6233  spender */\n      dup10\n        /* \"src/extensions/ERC20.sol\":6209:6218  allowance */\n      tag_61\n        /* \"src/extensions/ERC20.sol\":6209:6234  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"src/extensions/ERC20.sol\":6209:6247  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"src/extensions/ERC20.sol\":6184:6192  _approve */\n      tag_74\n        /* \"src/extensions/ERC20.sol\":6184:6248  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_85:\n        /* \"src/extensions/ERC20.sol\":6266:6270  true */\n      0x01\n        /* \"src/extensions/ERC20.sol\":6259:6270  return true */\n      swap2\n      pop\n      pop\n        /* \"src/extensions/ERC20.sol\":6040:6278  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":3529:3656  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"src/extensions/ERC20.sol\":3603:3610  uint256 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":3630:3639  _balances */\n      dup1\n        /* \"src/extensions/ERC20.sol\":3630:3648  _balances[account] */\n      0x00\n        /* \"src/extensions/ERC20.sol\":3640:3647  account */\n      dup4\n        /* \"src/extensions/ERC20.sol\":3630:3648  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/extensions/ERC20.sol\":3623:3648  return _balances[account] */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":3529:3656  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":2448:2552  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"src/extensions/ERC20.sol\":2504:2517  string memory */\n      0x60\n        /* \"src/extensions/ERC20.sol\":2537:2544  _symbol */\n      0x04\n        /* \"src/extensions/ERC20.sol\":2530:2544  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_65\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_65\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":2448:2552  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":6781:7217  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"src/extensions/ERC20.sol\":6874:6878  bool */\n      0x00\n        /* \"src/extensions/ERC20.sol\":6891:6904  address owner */\n      dup1\n        /* \"src/extensions/ERC20.sol\":6907:6919  _msgSender() */\n      tag_97\n        /* \"src/extensions/ERC20.sol\":6907:6917  _msgSender */\n      tag_72\n        /* \"src/extensions/ERC20.sol\":6907:6919  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"src/extensions/ERC20.sol\":6891:6919  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":6930:6954  uint256 currentAllowance */\n      0x00\n        /* \"src/extensions/ERC20.sol\":6957:6982  allowance(owner, spender) */\n      tag_98\n        /* \"src/extensions/ERC20.sol\":6967:6972  owner */\n      dup3\n        /* \"src/extensions/ERC20.sol\":6974:6981  spender */\n      dup7\n        /* \"src/extensions/ERC20.sol\":6957:6966  allowance */\n      tag_61\n        /* \"src/extensions/ERC20.sol\":6957:6982  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"src/extensions/ERC20.sol\":6930:6982  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":7021:7036  subtractedValue */\n      dup4\n        /* \"src/extensions/ERC20.sol\":7001:7017  currentAllowance */\n      dup2\n        /* \"src/extensions/ERC20.sol\":7001:7036  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"src/extensions/ERC20.sol\":6993:7078  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"src/extensions/ERC20.sol\":7114:7174  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_102\n        /* \"src/extensions/ERC20.sol\":7123:7128  owner */\n      dup3\n        /* \"src/extensions/ERC20.sol\":7130:7137  spender */\n      dup7\n        /* \"src/extensions/ERC20.sol\":7158:7173  subtractedValue */\n      dup7\n        /* \"src/extensions/ERC20.sol\":7139:7155  currentAllowance */\n      dup5\n        /* \"src/extensions/ERC20.sol\":7139:7173  currentAllowance - subtractedValue */\n      sub\n        /* \"src/extensions/ERC20.sol\":7114:7122  _approve */\n      tag_74\n        /* \"src/extensions/ERC20.sol\":7114:7174  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_102:\n        /* \"src/extensions/ERC20.sol\":7205:7209  true */\n      0x01\n        /* \"src/extensions/ERC20.sol\":7198:7209  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"src/extensions/ERC20.sol\":6781:7217  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":3862:4055  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"src/extensions/ERC20.sol\":3941:3945  bool */\n      0x00\n        /* \"src/extensions/ERC20.sol\":3958:3971  address owner */\n      dup1\n        /* \"src/extensions/ERC20.sol\":3974:3986  _msgSender() */\n      tag_104\n        /* \"src/extensions/ERC20.sol\":3974:3984  _msgSender */\n      tag_72\n        /* \"src/extensions/ERC20.sol\":3974:3986  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"src/extensions/ERC20.sol\":3958:3986  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":3997:4025  _transfer(owner, to, amount) */\n      tag_105\n        /* \"src/extensions/ERC20.sol\":4007:4012  owner */\n      dup2\n        /* \"src/extensions/ERC20.sol\":4014:4016  to */\n      dup6\n        /* \"src/extensions/ERC20.sol\":4018:4024  amount */\n      dup6\n        /* \"src/extensions/ERC20.sol\":3997:4006  _transfer */\n      tag_81\n        /* \"src/extensions/ERC20.sol\":3997:4025  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_105:\n        /* \"src/extensions/ERC20.sol\":4043:4047  true */\n      0x01\n        /* \"src/extensions/ERC20.sol\":4036:4047  return true */\n      swap2\n      pop\n      pop\n        /* \"src/extensions/ERC20.sol\":3862:4055  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":4118:4269  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \"src/extensions/ERC20.sol\":4207:4214  uint256 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":4234:4245  _allowances */\n      0x01\n        /* \"src/extensions/ERC20.sol\":4234:4252  _allowances[owner] */\n      0x00\n        /* \"src/extensions/ERC20.sol\":4246:4251  owner */\n      dup5\n        /* \"src/extensions/ERC20.sol\":4234:4252  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/extensions/ERC20.sol\":4234:4261  _allowances[owner][spender] */\n      0x00\n        /* \"src/extensions/ERC20.sol\":4253:4260  spender */\n      dup4\n        /* \"src/extensions/ERC20.sol\":4234:4261  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/extensions/ERC20.sol\":4227:4261  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":4118:4269  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"src/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"src/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"src/utils/Context.sol\":729:746  return msg.sender */\n      swap1\n      pop\n        /* \"src/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":10774:11120  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n        /* \"src/extensions/ERC20.sol\":10893:10894  0 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":10876:10895  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/extensions/ERC20.sol\":10876:10881  owner */\n      dup4\n        /* \"src/extensions/ERC20.sol\":10876:10895  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/extensions/ERC20.sol\":10868:10936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"src/extensions/ERC20.sol\":10974:10975  0 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":10955:10976  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/extensions/ERC20.sol\":10955:10962  spender */\n      dup3\n        /* \"src/extensions/ERC20.sol\":10955:10976  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/extensions/ERC20.sol\":10947:11015  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"src/extensions/ERC20.sol\":11058:11064  amount */\n      dup1\n        /* \"src/extensions/ERC20.sol\":11028:11039  _allowances */\n      0x01\n        /* \"src/extensions/ERC20.sol\":11028:11046  _allowances[owner] */\n      0x00\n        /* \"src/extensions/ERC20.sol\":11040:11045  owner */\n      dup6\n        /* \"src/extensions/ERC20.sol\":11028:11046  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/extensions/ERC20.sol\":11028:11055  _allowances[owner][spender] */\n      0x00\n        /* \"src/extensions/ERC20.sol\":11047:11054  spender */\n      dup5\n        /* \"src/extensions/ERC20.sol\":11028:11055  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/extensions/ERC20.sol\":11028:11064  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/extensions/ERC20.sol\":11096:11103  spender */\n      dup2\n        /* \"src/extensions/ERC20.sol\":11080:11112  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/extensions/ERC20.sol\":11089:11094  owner */\n      dup4\n        /* \"src/extensions/ERC20.sol\":11080:11112  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"src/extensions/ERC20.sol\":11105:11111  amount */\n      dup4\n        /* \"src/extensions/ERC20.sol\":11080:11112  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/extensions/ERC20.sol\":10774:11120  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":11411:11830  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"src/extensions/ERC20.sol\":11512:11536  uint256 currentAllowance */\n      0x00\n        /* \"src/extensions/ERC20.sol\":11539:11564  allowance(owner, spender) */\n      tag_117\n        /* \"src/extensions/ERC20.sol\":11549:11554  owner */\n      dup5\n        /* \"src/extensions/ERC20.sol\":11556:11563  spender */\n      dup5\n        /* \"src/extensions/ERC20.sol\":11539:11548  allowance */\n      tag_61\n        /* \"src/extensions/ERC20.sol\":11539:11564  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"src/extensions/ERC20.sol\":11512:11564  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":11599:11616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"src/extensions/ERC20.sol\":11579:11595  currentAllowance */\n      dup2\n        /* \"src/extensions/ERC20.sol\":11579:11616  currentAllowance != type(uint256).max */\n      eq\n        /* \"src/extensions/ERC20.sol\":11575:11823  if (currentAllowance != type(uint256).max) {... */\n      tag_118\n      jumpi\n        /* \"src/extensions/ERC20.sol\":11661:11667  amount */\n      dup2\n        /* \"src/extensions/ERC20.sol\":11641:11657  currentAllowance */\n      dup2\n        /* \"src/extensions/ERC20.sol\":11641:11667  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"src/extensions/ERC20.sol\":11633:11701  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"src/extensions/ERC20.sol\":11745:11796  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"src/extensions/ERC20.sol\":11754:11759  owner */\n      dup5\n        /* \"src/extensions/ERC20.sol\":11761:11768  spender */\n      dup5\n        /* \"src/extensions/ERC20.sol\":11789:11795  amount */\n      dup5\n        /* \"src/extensions/ERC20.sol\":11770:11786  currentAllowance */\n      dup5\n        /* \"src/extensions/ERC20.sol\":11770:11795  currentAllowance - amount */\n      sub\n        /* \"src/extensions/ERC20.sol\":11745:11753  _approve */\n      tag_74\n        /* \"src/extensions/ERC20.sol\":11745:11796  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"src/extensions/ERC20.sol\":11575:11823  if (currentAllowance != type(uint256).max) {... */\n    tag_118:\n        /* \"src/extensions/ERC20.sol\":11501:11830  {... */\n      pop\n        /* \"src/extensions/ERC20.sol\":11411:11830  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":7687:8493  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n        /* \"src/extensions/ERC20.sol\":7800:7801  0 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":7784:7802  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/extensions/ERC20.sol\":7784:7788  from */\n      dup4\n        /* \"src/extensions/ERC20.sol\":7784:7802  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/extensions/ERC20.sol\":7776:7844  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"src/extensions/ERC20.sol\":7877:7878  0 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":7863:7879  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/extensions/ERC20.sol\":7863:7865  to */\n      dup3\n        /* \"src/extensions/ERC20.sol\":7863:7879  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/extensions/ERC20.sol\":7855:7919  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"src/extensions/ERC20.sol\":7932:7970  _beforeTokenTransfer(from, to, amount) */\n      tag_130\n        /* \"src/extensions/ERC20.sol\":7953:7957  from */\n      dup4\n        /* \"src/extensions/ERC20.sol\":7959:7961  to */\n      dup4\n        /* \"src/extensions/ERC20.sol\":7963:7969  amount */\n      dup4\n        /* \"src/extensions/ERC20.sol\":7932:7952  _beforeTokenTransfer */\n      tag_131\n        /* \"src/extensions/ERC20.sol\":7932:7970  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_130:\n        /* \"src/extensions/ERC20.sol\":7983:8002  uint256 fromBalance */\n      0x00\n        /* \"src/extensions/ERC20.sol\":8005:8014  _balances */\n      dup1\n        /* \"src/extensions/ERC20.sol\":8005:8020  _balances[from] */\n      0x00\n        /* \"src/extensions/ERC20.sol\":8015:8019  from */\n      dup6\n        /* \"src/extensions/ERC20.sol\":8005:8020  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/extensions/ERC20.sol\":7983:8020  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":8054:8060  amount */\n      dup2\n        /* \"src/extensions/ERC20.sol\":8039:8050  fromBalance */\n      dup2\n        /* \"src/extensions/ERC20.sol\":8039:8060  fromBalance >= amount */\n      lt\n      iszero\n        /* \"src/extensions/ERC20.sol\":8031:8103  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"src/extensions/ERC20.sol\":8171:8177  amount */\n      dup2\n        /* \"src/extensions/ERC20.sol\":8157:8168  fromBalance */\n      dup2\n        /* \"src/extensions/ERC20.sol\":8157:8177  fromBalance - amount */\n      sub\n        /* \"src/extensions/ERC20.sol\":8139:8148  _balances */\n      0x00\n        /* \"src/extensions/ERC20.sol\":8139:8154  _balances[from] */\n      dup1\n        /* \"src/extensions/ERC20.sol\":8149:8153  from */\n      dup7\n        /* \"src/extensions/ERC20.sol\":8139:8154  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/extensions/ERC20.sol\":8139:8177  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/extensions/ERC20.sol\":8374:8380  amount */\n      dup2\n        /* \"src/extensions/ERC20.sol\":8357:8366  _balances */\n      0x00\n        /* \"src/extensions/ERC20.sol\":8357:8370  _balances[to] */\n      dup1\n        /* \"src/extensions/ERC20.sol\":8367:8369  to */\n      dup6\n        /* \"src/extensions/ERC20.sol\":8357:8370  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/extensions/ERC20.sol\":8357:8380  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/extensions/ERC20.sol\":8424:8426  to */\n      dup3\n        /* \"src/extensions/ERC20.sol\":8409:8435  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/extensions/ERC20.sol\":8418:8422  from */\n      dup5\n        /* \"src/extensions/ERC20.sol\":8409:8435  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"src/extensions/ERC20.sol\":8428:8434  amount */\n      dup5\n        /* \"src/extensions/ERC20.sol\":8409:8435  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/extensions/ERC20.sol\":8448:8485  _afterTokenTransfer(from, to, amount) */\n      tag_136\n        /* \"src/extensions/ERC20.sol\":8468:8472  from */\n      dup5\n        /* \"src/extensions/ERC20.sol\":8474:8476  to */\n      dup5\n        /* \"src/extensions/ERC20.sol\":8478:8484  amount */\n      dup5\n        /* \"src/extensions/ERC20.sol\":8448:8467  _afterTokenTransfer */\n      tag_137\n        /* \"src/extensions/ERC20.sol\":8448:8485  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_136:\n        /* \"src/extensions/ERC20.sol\":7765:8493  {... */\n      pop\n        /* \"src/extensions/ERC20.sol\":7687:8493  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":12430:12521  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_131:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":13125:13215  function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_137:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_140:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_141:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_142:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_180:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_180)\n    tag_182:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_143:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_144:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_185\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_140\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":818:889   */\n      tag_186\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_141\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_187\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_142\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":988:1017   */\n      tag_188\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_143\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_18:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_190\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_144\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_146:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_148:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_149:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_196\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_148\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_150:\n        /* \"#utility.yul\":1983:2007   */\n      tag_198\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_149\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_199\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_199:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_151:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_201\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_150\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_152:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_153:\n        /* \"#utility.yul\":2339:2363   */\n      tag_204\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_152\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_205\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_205:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_154:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_207\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_153\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_21:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_210\n      tag_146\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2632:2751   */\n    tag_209:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_211\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_151\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_212\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_154\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_155:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_156:\n        /* \"#utility.yul\":3196:3217   */\n      tag_215\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_155\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_24:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_217\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_156\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_157:\n        /* \"#utility.yul\":3533:3557   */\n      tag_219\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_152\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_28:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_221\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_157\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_31:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_224\n      tag_146\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3908:4027   */\n    tag_223:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_225\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_151\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_226\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_151\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_227\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_154\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_158:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_159:\n        /* \"#utility.yul\":4598:4620   */\n      tag_230\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_158\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_37:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_232\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_159\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_44:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_235\n      tag_146\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4929:5048   */\n    tag_234:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_236\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_151\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5662   */\n    tag_60:\n        /* \"#utility.yul\":5256:5262   */\n      0x00\n        /* \"#utility.yul\":5264:5270   */\n      dup1\n        /* \"#utility.yul\":5313:5315   */\n      0x40\n        /* \"#utility.yul\":5301:5310   */\n      dup4\n        /* \"#utility.yul\":5292:5299   */\n      dup6\n        /* \"#utility.yul\":5288:5311   */\n      sub\n        /* \"#utility.yul\":5284:5316   */\n      slt\n        /* \"#utility.yul\":5281:5400   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":5319:5398   */\n      tag_239\n      tag_146\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5281:5400   */\n    tag_238:\n        /* \"#utility.yul\":5439:5440   */\n      0x00\n        /* \"#utility.yul\":5464:5517   */\n      tag_240\n        /* \"#utility.yul\":5509:5516   */\n      dup6\n        /* \"#utility.yul\":5500:5506   */\n      dup3\n        /* \"#utility.yul\":5489:5498   */\n      dup7\n        /* \"#utility.yul\":5485:5507   */\n      add\n        /* \"#utility.yul\":5464:5517   */\n      tag_151\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5454:5517   */\n      swap3\n      pop\n        /* \"#utility.yul\":5410:5527   */\n      pop\n        /* \"#utility.yul\":5566:5568   */\n      0x20\n        /* \"#utility.yul\":5592:5645   */\n      tag_241\n        /* \"#utility.yul\":5637:5644   */\n      dup6\n        /* \"#utility.yul\":5628:5634   */\n      dup3\n        /* \"#utility.yul\":5617:5626   */\n      dup7\n        /* \"#utility.yul\":5613:5635   */\n      add\n        /* \"#utility.yul\":5592:5645   */\n      tag_151\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5582:5645   */\n      swap2\n      pop\n        /* \"#utility.yul\":5537:5655   */\n      pop\n        /* \"#utility.yul\":5188:5662   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5668:5848   */\n    tag_160:\n        /* \"#utility.yul\":5716:5793   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5713:5714   */\n      0x00\n        /* \"#utility.yul\":5706:5794   */\n      mstore\n        /* \"#utility.yul\":5813:5817   */\n      0x22\n        /* \"#utility.yul\":5810:5811   */\n      0x04\n        /* \"#utility.yul\":5803:5818   */\n      mstore\n        /* \"#utility.yul\":5837:5841   */\n      0x24\n        /* \"#utility.yul\":5834:5835   */\n      0x00\n        /* \"#utility.yul\":5827:5842   */\n      revert\n        /* \"#utility.yul\":5854:6174   */\n    tag_65:\n        /* \"#utility.yul\":5898:5904   */\n      0x00\n        /* \"#utility.yul\":5935:5936   */\n      0x02\n        /* \"#utility.yul\":5929:5933   */\n      dup3\n        /* \"#utility.yul\":5925:5937   */\n      div\n        /* \"#utility.yul\":5915:5937   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:5983   */\n      0x01\n        /* \"#utility.yul\":5976:5980   */\n      dup3\n        /* \"#utility.yul\":5972:5984   */\n      and\n        /* \"#utility.yul\":6003:6021   */\n      dup1\n        /* \"#utility.yul\":5993:6074   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":6059:6063   */\n      0x7f\n        /* \"#utility.yul\":6051:6057   */\n      dup3\n        /* \"#utility.yul\":6047:6064   */\n      and\n        /* \"#utility.yul\":6037:6064   */\n      swap2\n      pop\n        /* \"#utility.yul\":5993:6074   */\n    tag_244:\n        /* \"#utility.yul\":6121:6123   */\n      0x20\n        /* \"#utility.yul\":6113:6119   */\n      dup3\n        /* \"#utility.yul\":6110:6124   */\n      lt\n        /* \"#utility.yul\":6090:6108   */\n      dup2\n        /* \"#utility.yul\":6087:6125   */\n      sub\n        /* \"#utility.yul\":6084:6168   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":6140:6158   */\n      tag_246\n      tag_160\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6084:6168   */\n    tag_245:\n        /* \"#utility.yul\":5905:6174   */\n      pop\n        /* \"#utility.yul\":5854:6174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6180:6360   */\n    tag_161:\n        /* \"#utility.yul\":6228:6305   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6225:6226   */\n      0x00\n        /* \"#utility.yul\":6218:6306   */\n      mstore\n        /* \"#utility.yul\":6325:6329   */\n      0x11\n        /* \"#utility.yul\":6322:6323   */\n      0x04\n        /* \"#utility.yul\":6315:6330   */\n      mstore\n        /* \"#utility.yul\":6349:6353   */\n      0x24\n        /* \"#utility.yul\":6346:6347   */\n      0x00\n        /* \"#utility.yul\":6339:6354   */\n      revert\n        /* \"#utility.yul\":6366:6557   */\n    tag_88:\n        /* \"#utility.yul\":6406:6409   */\n      0x00\n        /* \"#utility.yul\":6425:6445   */\n      tag_249\n        /* \"#utility.yul\":6443:6444   */\n      dup3\n        /* \"#utility.yul\":6425:6445   */\n      tag_152\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":6420:6445   */\n      swap2\n      pop\n        /* \"#utility.yul\":6459:6479   */\n      tag_250\n        /* \"#utility.yul\":6477:6478   */\n      dup4\n        /* \"#utility.yul\":6459:6479   */\n      tag_152\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6454:6479   */\n      swap3\n      pop\n        /* \"#utility.yul\":6502:6503   */\n      dup3\n        /* \"#utility.yul\":6499:6500   */\n      dup3\n        /* \"#utility.yul\":6495:6504   */\n      add\n        /* \"#utility.yul\":6488:6504   */\n      swap1\n      pop\n        /* \"#utility.yul\":6523:6526   */\n      dup1\n        /* \"#utility.yul\":6520:6521   */\n      dup3\n        /* \"#utility.yul\":6517:6527   */\n      gt\n        /* \"#utility.yul\":6514:6550   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":6530:6548   */\n      tag_252\n      tag_161\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6514:6550   */\n    tag_251:\n        /* \"#utility.yul\":6366:6557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6563:6787   */\n    tag_162:\n        /* \"#utility.yul\":6703:6737   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6699:6700   */\n      0x00\n        /* \"#utility.yul\":6691:6697   */\n      dup3\n        /* \"#utility.yul\":6687:6701   */\n      add\n        /* \"#utility.yul\":6680:6738   */\n      mstore\n        /* \"#utility.yul\":6772:6779   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6767:6769   */\n      0x20\n        /* \"#utility.yul\":6759:6765   */\n      dup3\n        /* \"#utility.yul\":6755:6770   */\n      add\n        /* \"#utility.yul\":6748:6780   */\n      mstore\n        /* \"#utility.yul\":6563:6787   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6793:7159   */\n    tag_163:\n        /* \"#utility.yul\":6935:6938   */\n      0x00\n        /* \"#utility.yul\":6956:7023   */\n      tag_255\n        /* \"#utility.yul\":7020:7022   */\n      0x25\n        /* \"#utility.yul\":7015:7018   */\n      dup4\n        /* \"#utility.yul\":6956:7023   */\n      tag_141\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":6949:7023   */\n      swap2\n      pop\n        /* \"#utility.yul\":7032:7125   */\n      tag_256\n        /* \"#utility.yul\":7121:7124   */\n      dup3\n        /* \"#utility.yul\":7032:7125   */\n      tag_162\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":7150:7152   */\n      0x40\n        /* \"#utility.yul\":7145:7148   */\n      dup3\n        /* \"#utility.yul\":7141:7153   */\n      add\n        /* \"#utility.yul\":7134:7153   */\n      swap1\n      pop\n        /* \"#utility.yul\":6793:7159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7165:7584   */\n    tag_101:\n        /* \"#utility.yul\":7331:7335   */\n      0x00\n        /* \"#utility.yul\":7369:7371   */\n      0x20\n        /* \"#utility.yul\":7358:7367   */\n      dup3\n        /* \"#utility.yul\":7354:7372   */\n      add\n        /* \"#utility.yul\":7346:7372   */\n      swap1\n      pop\n        /* \"#utility.yul\":7418:7427   */\n      dup2\n        /* \"#utility.yul\":7412:7416   */\n      dup2\n        /* \"#utility.yul\":7408:7428   */\n      sub\n        /* \"#utility.yul\":7404:7405   */\n      0x00\n        /* \"#utility.yul\":7393:7402   */\n      dup4\n        /* \"#utility.yul\":7389:7406   */\n      add\n        /* \"#utility.yul\":7382:7429   */\n      mstore\n        /* \"#utility.yul\":7446:7577   */\n      tag_258\n        /* \"#utility.yul\":7572:7576   */\n      dup2\n        /* \"#utility.yul\":7446:7577   */\n      tag_163\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":7438:7577   */\n      swap1\n      pop\n        /* \"#utility.yul\":7165:7584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7590:7813   */\n    tag_164:\n        /* \"#utility.yul\":7730:7764   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":7726:7727   */\n      0x00\n        /* \"#utility.yul\":7718:7724   */\n      dup3\n        /* \"#utility.yul\":7714:7728   */\n      add\n        /* \"#utility.yul\":7707:7765   */\n      mstore\n        /* \"#utility.yul\":7799:7805   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7794:7796   */\n      0x20\n        /* \"#utility.yul\":7786:7792   */\n      dup3\n        /* \"#utility.yul\":7782:7797   */\n      add\n        /* \"#utility.yul\":7775:7806   */\n      mstore\n        /* \"#utility.yul\":7590:7813   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7819:8185   */\n    tag_165:\n        /* \"#utility.yul\":7961:7964   */\n      0x00\n        /* \"#utility.yul\":7982:8049   */\n      tag_261\n        /* \"#utility.yul\":8046:8048   */\n      0x24\n        /* \"#utility.yul\":8041:8044   */\n      dup4\n        /* \"#utility.yul\":7982:8049   */\n      tag_141\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":7975:8049   */\n      swap2\n      pop\n        /* \"#utility.yul\":8058:8151   */\n      tag_262\n        /* \"#utility.yul\":8147:8150   */\n      dup3\n        /* \"#utility.yul\":8058:8151   */\n      tag_164\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":8176:8178   */\n      0x40\n        /* \"#utility.yul\":8171:8174   */\n      dup3\n        /* \"#utility.yul\":8167:8179   */\n      add\n        /* \"#utility.yul\":8160:8179   */\n      swap1\n      pop\n        /* \"#utility.yul\":7819:8185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8191:8610   */\n    tag_111:\n        /* \"#utility.yul\":8357:8361   */\n      0x00\n        /* \"#utility.yul\":8395:8397   */\n      0x20\n        /* \"#utility.yul\":8384:8393   */\n      dup3\n        /* \"#utility.yul\":8380:8398   */\n      add\n        /* \"#utility.yul\":8372:8398   */\n      swap1\n      pop\n        /* \"#utility.yul\":8444:8453   */\n      dup2\n        /* \"#utility.yul\":8438:8442   */\n      dup2\n        /* \"#utility.yul\":8434:8454   */\n      sub\n        /* \"#utility.yul\":8430:8431   */\n      0x00\n        /* \"#utility.yul\":8419:8428   */\n      dup4\n        /* \"#utility.yul\":8415:8432   */\n      add\n        /* \"#utility.yul\":8408:8455   */\n      mstore\n        /* \"#utility.yul\":8472:8603   */\n      tag_264\n        /* \"#utility.yul\":8598:8602   */\n      dup2\n        /* \"#utility.yul\":8472:8603   */\n      tag_165\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8464:8603   */\n      swap1\n      pop\n        /* \"#utility.yul\":8191:8610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8616:8837   */\n    tag_166:\n        /* \"#utility.yul\":8756:8790   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":8752:8753   */\n      0x00\n        /* \"#utility.yul\":8744:8750   */\n      dup3\n        /* \"#utility.yul\":8740:8754   */\n      add\n        /* \"#utility.yul\":8733:8791   */\n      mstore\n        /* \"#utility.yul\":8825:8829   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8820:8822   */\n      0x20\n        /* \"#utility.yul\":8812:8818   */\n      dup3\n        /* \"#utility.yul\":8808:8823   */\n      add\n        /* \"#utility.yul\":8801:8830   */\n      mstore\n        /* \"#utility.yul\":8616:8837   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8843:9209   */\n    tag_167:\n        /* \"#utility.yul\":8985:8988   */\n      0x00\n        /* \"#utility.yul\":9006:9073   */\n      tag_267\n        /* \"#utility.yul\":9070:9072   */\n      0x22\n        /* \"#utility.yul\":9065:9068   */\n      dup4\n        /* \"#utility.yul\":9006:9073   */\n      tag_141\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":8999:9073   */\n      swap2\n      pop\n        /* \"#utility.yul\":9082:9175   */\n      tag_268\n        /* \"#utility.yul\":9171:9174   */\n      dup3\n        /* \"#utility.yul\":9082:9175   */\n      tag_166\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":9200:9202   */\n      0x40\n        /* \"#utility.yul\":9195:9198   */\n      dup3\n        /* \"#utility.yul\":9191:9203   */\n      add\n        /* \"#utility.yul\":9184:9203   */\n      swap1\n      pop\n        /* \"#utility.yul\":8843:9209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9215:9634   */\n    tag_114:\n        /* \"#utility.yul\":9381:9385   */\n      0x00\n        /* \"#utility.yul\":9419:9421   */\n      0x20\n        /* \"#utility.yul\":9408:9417   */\n      dup3\n        /* \"#utility.yul\":9404:9422   */\n      add\n        /* \"#utility.yul\":9396:9422   */\n      swap1\n      pop\n        /* \"#utility.yul\":9468:9477   */\n      dup2\n        /* \"#utility.yul\":9462:9466   */\n      dup2\n        /* \"#utility.yul\":9458:9478   */\n      sub\n        /* \"#utility.yul\":9454:9455   */\n      0x00\n        /* \"#utility.yul\":9443:9452   */\n      dup4\n        /* \"#utility.yul\":9439:9456   */\n      add\n        /* \"#utility.yul\":9432:9479   */\n      mstore\n        /* \"#utility.yul\":9496:9627   */\n      tag_270\n        /* \"#utility.yul\":9622:9626   */\n      dup2\n        /* \"#utility.yul\":9496:9627   */\n      tag_167\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9488:9627   */\n      swap1\n      pop\n        /* \"#utility.yul\":9215:9634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9640:9819   */\n    tag_168:\n        /* \"#utility.yul\":9780:9811   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":9776:9777   */\n      0x00\n        /* \"#utility.yul\":9768:9774   */\n      dup3\n        /* \"#utility.yul\":9764:9778   */\n      add\n        /* \"#utility.yul\":9757:9812   */\n      mstore\n        /* \"#utility.yul\":9640:9819   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9825:10191   */\n    tag_169:\n        /* \"#utility.yul\":9967:9970   */\n      0x00\n        /* \"#utility.yul\":9988:10055   */\n      tag_273\n        /* \"#utility.yul\":10052:10054   */\n      0x1d\n        /* \"#utility.yul\":10047:10050   */\n      dup4\n        /* \"#utility.yul\":9988:10055   */\n      tag_141\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":9981:10055   */\n      swap2\n      pop\n        /* \"#utility.yul\":10064:10157   */\n      tag_274\n        /* \"#utility.yul\":10153:10156   */\n      dup3\n        /* \"#utility.yul\":10064:10157   */\n      tag_168\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":10182:10184   */\n      0x20\n        /* \"#utility.yul\":10177:10180   */\n      dup3\n        /* \"#utility.yul\":10173:10185   */\n      add\n        /* \"#utility.yul\":10166:10185   */\n      swap1\n      pop\n        /* \"#utility.yul\":9825:10191   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10197:10616   */\n    tag_121:\n        /* \"#utility.yul\":10363:10367   */\n      0x00\n        /* \"#utility.yul\":10401:10403   */\n      0x20\n        /* \"#utility.yul\":10390:10399   */\n      dup3\n        /* \"#utility.yul\":10386:10404   */\n      add\n        /* \"#utility.yul\":10378:10404   */\n      swap1\n      pop\n        /* \"#utility.yul\":10450:10459   */\n      dup2\n        /* \"#utility.yul\":10444:10448   */\n      dup2\n        /* \"#utility.yul\":10440:10460   */\n      sub\n        /* \"#utility.yul\":10436:10437   */\n      0x00\n        /* \"#utility.yul\":10425:10434   */\n      dup4\n        /* \"#utility.yul\":10421:10438   */\n      add\n        /* \"#utility.yul\":10414:10461   */\n      mstore\n        /* \"#utility.yul\":10478:10609   */\n      tag_276\n        /* \"#utility.yul\":10604:10608   */\n      dup2\n        /* \"#utility.yul\":10478:10609   */\n      tag_169\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10470:10609   */\n      swap1\n      pop\n        /* \"#utility.yul\":10197:10616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10622:10846   */\n    tag_170:\n        /* \"#utility.yul\":10762:10796   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":10758:10759   */\n      0x00\n        /* \"#utility.yul\":10750:10756   */\n      dup3\n        /* \"#utility.yul\":10746:10760   */\n      add\n        /* \"#utility.yul\":10739:10797   */\n      mstore\n        /* \"#utility.yul\":10831:10838   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10826:10828   */\n      0x20\n        /* \"#utility.yul\":10818:10824   */\n      dup3\n        /* \"#utility.yul\":10814:10829   */\n      add\n        /* \"#utility.yul\":10807:10839   */\n      mstore\n        /* \"#utility.yul\":10622:10846   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10852:11218   */\n    tag_171:\n        /* \"#utility.yul\":10994:10997   */\n      0x00\n        /* \"#utility.yul\":11015:11082   */\n      tag_279\n        /* \"#utility.yul\":11079:11081   */\n      0x25\n        /* \"#utility.yul\":11074:11077   */\n      dup4\n        /* \"#utility.yul\":11015:11082   */\n      tag_141\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":11008:11082   */\n      swap2\n      pop\n        /* \"#utility.yul\":11091:11184   */\n      tag_280\n        /* \"#utility.yul\":11180:11183   */\n      dup3\n        /* \"#utility.yul\":11091:11184   */\n      tag_170\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":11209:11211   */\n      0x40\n        /* \"#utility.yul\":11204:11207   */\n      dup3\n        /* \"#utility.yul\":11200:11212   */\n      add\n        /* \"#utility.yul\":11193:11212   */\n      swap1\n      pop\n        /* \"#utility.yul\":10852:11218   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11224:11643   */\n    tag_126:\n        /* \"#utility.yul\":11390:11394   */\n      0x00\n        /* \"#utility.yul\":11428:11430   */\n      0x20\n        /* \"#utility.yul\":11417:11426   */\n      dup3\n        /* \"#utility.yul\":11413:11431   */\n      add\n        /* \"#utility.yul\":11405:11431   */\n      swap1\n      pop\n        /* \"#utility.yul\":11477:11486   */\n      dup2\n        /* \"#utility.yul\":11471:11475   */\n      dup2\n        /* \"#utility.yul\":11467:11487   */\n      sub\n        /* \"#utility.yul\":11463:11464   */\n      0x00\n        /* \"#utility.yul\":11452:11461   */\n      dup4\n        /* \"#utility.yul\":11448:11465   */\n      add\n        /* \"#utility.yul\":11441:11488   */\n      mstore\n        /* \"#utility.yul\":11505:11636   */\n      tag_282\n        /* \"#utility.yul\":11631:11635   */\n      dup2\n        /* \"#utility.yul\":11505:11636   */\n      tag_171\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":11497:11636   */\n      swap1\n      pop\n        /* \"#utility.yul\":11224:11643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11649:11871   */\n    tag_172:\n        /* \"#utility.yul\":11789:11823   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":11785:11786   */\n      0x00\n        /* \"#utility.yul\":11777:11783   */\n      dup3\n        /* \"#utility.yul\":11773:11787   */\n      add\n        /* \"#utility.yul\":11766:11824   */\n      mstore\n        /* \"#utility.yul\":11858:11863   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11853:11855   */\n      0x20\n        /* \"#utility.yul\":11845:11851   */\n      dup3\n        /* \"#utility.yul\":11841:11856   */\n      add\n        /* \"#utility.yul\":11834:11864   */\n      mstore\n        /* \"#utility.yul\":11649:11871   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11877:12243   */\n    tag_173:\n        /* \"#utility.yul\":12019:12022   */\n      0x00\n        /* \"#utility.yul\":12040:12107   */\n      tag_285\n        /* \"#utility.yul\":12104:12106   */\n      0x23\n        /* \"#utility.yul\":12099:12102   */\n      dup4\n        /* \"#utility.yul\":12040:12107   */\n      tag_141\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":12033:12107   */\n      swap2\n      pop\n        /* \"#utility.yul\":12116:12209   */\n      tag_286\n        /* \"#utility.yul\":12205:12208   */\n      dup3\n        /* \"#utility.yul\":12116:12209   */\n      tag_172\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":12234:12236   */\n      0x40\n        /* \"#utility.yul\":12229:12232   */\n      dup3\n        /* \"#utility.yul\":12225:12237   */\n      add\n        /* \"#utility.yul\":12218:12237   */\n      swap1\n      pop\n        /* \"#utility.yul\":11877:12243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12249:12668   */\n    tag_129:\n        /* \"#utility.yul\":12415:12419   */\n      0x00\n        /* \"#utility.yul\":12453:12455   */\n      0x20\n        /* \"#utility.yul\":12442:12451   */\n      dup3\n        /* \"#utility.yul\":12438:12456   */\n      add\n        /* \"#utility.yul\":12430:12456   */\n      swap1\n      pop\n        /* \"#utility.yul\":12502:12511   */\n      dup2\n        /* \"#utility.yul\":12496:12500   */\n      dup2\n        /* \"#utility.yul\":12492:12512   */\n      sub\n        /* \"#utility.yul\":12488:12489   */\n      0x00\n        /* \"#utility.yul\":12477:12486   */\n      dup4\n        /* \"#utility.yul\":12473:12490   */\n      add\n        /* \"#utility.yul\":12466:12513   */\n      mstore\n        /* \"#utility.yul\":12530:12661   */\n      tag_288\n        /* \"#utility.yul\":12656:12660   */\n      dup2\n        /* \"#utility.yul\":12530:12661   */\n      tag_173\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":12522:12661   */\n      swap1\n      pop\n        /* \"#utility.yul\":12249:12668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12674:12899   */\n    tag_174:\n        /* \"#utility.yul\":12814:12848   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":12810:12811   */\n      0x00\n        /* \"#utility.yul\":12802:12808   */\n      dup3\n        /* \"#utility.yul\":12798:12812   */\n      add\n        /* \"#utility.yul\":12791:12849   */\n      mstore\n        /* \"#utility.yul\":12883:12891   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12878:12880   */\n      0x20\n        /* \"#utility.yul\":12870:12876   */\n      dup3\n        /* \"#utility.yul\":12866:12881   */\n      add\n        /* \"#utility.yul\":12859:12892   */\n      mstore\n        /* \"#utility.yul\":12674:12899   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12905:13271   */\n    tag_175:\n        /* \"#utility.yul\":13047:13050   */\n      0x00\n        /* \"#utility.yul\":13068:13135   */\n      tag_291\n        /* \"#utility.yul\":13132:13134   */\n      0x26\n        /* \"#utility.yul\":13127:13130   */\n      dup4\n        /* \"#utility.yul\":13068:13135   */\n      tag_141\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":13061:13135   */\n      swap2\n      pop\n        /* \"#utility.yul\":13144:13237   */\n      tag_292\n        /* \"#utility.yul\":13233:13236   */\n      dup3\n        /* \"#utility.yul\":13144:13237   */\n      tag_174\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":13262:13264   */\n      0x40\n        /* \"#utility.yul\":13257:13260   */\n      dup3\n        /* \"#utility.yul\":13253:13265   */\n      add\n        /* \"#utility.yul\":13246:13265   */\n      swap1\n      pop\n        /* \"#utility.yul\":12905:13271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13277:13696   */\n    tag_134:\n        /* \"#utility.yul\":13443:13447   */\n      0x00\n        /* \"#utility.yul\":13481:13483   */\n      0x20\n        /* \"#utility.yul\":13470:13479   */\n      dup3\n        /* \"#utility.yul\":13466:13484   */\n      add\n        /* \"#utility.yul\":13458:13484   */\n      swap1\n      pop\n        /* \"#utility.yul\":13530:13539   */\n      dup2\n        /* \"#utility.yul\":13524:13528   */\n      dup2\n        /* \"#utility.yul\":13520:13540   */\n      sub\n        /* \"#utility.yul\":13516:13517   */\n      0x00\n        /* \"#utility.yul\":13505:13514   */\n      dup4\n        /* \"#utility.yul\":13501:13518   */\n      add\n        /* \"#utility.yul\":13494:13541   */\n      mstore\n        /* \"#utility.yul\":13558:13689   */\n      tag_294\n        /* \"#utility.yul\":13684:13688   */\n      dup2\n        /* \"#utility.yul\":13558:13689   */\n      tag_175\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":13550:13689   */\n      swap1\n      pop\n        /* \"#utility.yul\":13277:13696   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122056ddbaa6f176bb090aaa7ab1f60aa747f7685cb7bfeb29c84b94833756e04ce964736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 332,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:13",
														"type": ""
													}
												],
												"src": "580:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:13"
															},
															"nodeType": "YulIf",
															"src": "1030:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:13",
														"type": ""
													}
												],
												"src": "874:281:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:13"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:13",
														"type": ""
													}
												],
												"src": "1161:129:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:13"
															},
															"nodeType": "YulIf",
															"src": "1434:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:13",
														"type": ""
													}
												],
												"src": "1296:308:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:13",
																"statements": []
															},
															"src": "1701:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:13",
														"type": ""
													}
												],
												"src": "1610:246:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:13"
															},
															"nodeType": "YulIf",
															"src": "2117:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:13"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:13",
														"type": ""
													}
												],
												"src": "1862:434:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:13"
															},
															"nodeType": "YulIf",
															"src": "2399:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:13",
														"type": ""
													}
												],
												"src": "2316:355:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:13"
															},
															"nodeType": "YulIf",
															"src": "2801:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:13",
														"type": ""
													}
												],
												"src": "2677:853:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:13",
														"type": ""
													}
												],
												"src": "3536:99:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:13"
															},
															"nodeType": "YulIf",
															"src": "3966:81:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:13"
															},
															"nodeType": "YulIf",
															"src": "4057:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:13",
														"type": ""
													}
												],
												"src": "3827:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:13",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:13",
														"type": ""
													}
												],
												"src": "4153:141:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:13",
														"type": ""
													}
												],
												"src": "4300:93:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:13"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:13",
														"type": ""
													}
												],
												"src": "4399:107:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:13"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:13",
														"type": ""
													}
												],
												"src": "4512:393:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:13",
														"type": ""
													}
												],
												"src": "4911:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:13",
														"type": ""
													}
												],
												"src": "4994:60:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:13",
														"type": ""
													}
												],
												"src": "5060:142:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:13",
														"type": ""
													}
												],
												"src": "5208:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:13",
														"type": ""
													}
												],
												"src": "5289:269:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:13",
														"type": ""
													}
												],
												"src": "5564:73:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:13",
														"type": ""
													}
												],
												"src": "5643:189:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:13",
																"statements": []
															},
															"src": "5898:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:13",
														"type": ""
													}
												],
												"src": "5838:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:13",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:13",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:13"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:13"
															},
															"nodeType": "YulIf",
															"src": "6120:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:13",
														"type": ""
													}
												],
												"src": "6030:543:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:13"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:13",
														"type": ""
													}
												],
												"src": "6579:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:13"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:13",
														"type": ""
													}
												],
												"src": "6702:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:13"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:13",
														"type": ""
													}
												],
												"src": "6876:295:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:13"
															},
															"nodeType": "YulIf",
															"src": "7381:56:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:13"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:13"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:13"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:13"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:13",
																					"statements": []
																				},
																				"src": "7867:208:13"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:13",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:13"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:13"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:13"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:13"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:13"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:13"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:13"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:13",
														"type": ""
													}
												],
												"src": "7176:1395:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620017ec380380620017ec8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61122f80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea264697066735822122056ddbaa6f176bb090aaa7ab1f60aa747f7685cb7bfeb29c84b94833756e04ce964736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17EC CODESIZE SUB DUP1 PUSH3 0x17EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xDD 0xBA 0xA6 CALL PUSH23 0xBB090AAA7AB1F60AA747F7685CB7BFEB29C84B94833756 0xE0 0x4C 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1579:11639:0:-:0;;;2043:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2118:5;2110;:13;;;;;;:::i;:::-;;2144:7;2134;:17;;;;;;:::i;:::-;;2043:116;;1579:11639;;7:75:13;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1579:11639:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_585": {
									"entryPoint": 2679,
									"id": 585,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_520": {
									"entryPoint": 1447,
									"id": 520,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_574": {
									"entryPoint": 2674,
									"id": 574,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_2488": {
									"entryPoint": 1439,
									"id": 2488,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_563": {
									"entryPoint": 1904,
									"id": 563,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 2044,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 1304,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 776,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": 932,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": 868,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 1150,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 877,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 630,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 1004,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": 811,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 821,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 1269,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2712,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3518,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2862,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 3909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 4055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 4455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 4163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 3763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 3617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13699:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:13",
														"type": ""
													}
												],
												"src": "7:99:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:13",
														"type": ""
													}
												],
												"src": "112:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:13",
																"statements": []
															},
															"src": "378:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:13",
														"type": ""
													}
												],
												"src": "287:246:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:13",
														"type": ""
													}
												],
												"src": "539:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:13",
														"type": ""
													}
												],
												"src": "647:377:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:13",
														"type": ""
													}
												],
												"src": "1030:313:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:13",
														"type": ""
													}
												],
												"src": "1349:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:13",
														"type": ""
													}
												],
												"src": "1676:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:13",
														"type": ""
													}
												],
												"src": "1808:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:13"
															},
															"nodeType": "YulIf",
															"src": "1963:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:13",
														"type": ""
													}
												],
												"src": "1910:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:13",
														"type": ""
													}
												],
												"src": "2038:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:13",
														"type": ""
													}
												],
												"src": "2183:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:13"
															},
															"nodeType": "YulIf",
															"src": "2319:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:13",
														"type": ""
													}
												],
												"src": "2266:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:13",
														"type": ""
													}
												],
												"src": "2394:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:13"
															},
															"nodeType": "YulIf",
															"src": "2632:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:13",
														"type": ""
													}
												],
												"src": "2539:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:13",
														"type": ""
													}
												],
												"src": "3019:90:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:13",
														"type": ""
													}
												],
												"src": "3115:109:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:13",
														"type": ""
													}
												],
												"src": "3230:210:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:13",
														"type": ""
													}
												],
												"src": "3446:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:13",
														"type": ""
													}
												],
												"src": "3570:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:13"
															},
															"nodeType": "YulIf",
															"src": "3908:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:13",
														"type": ""
													}
												],
												"src": "3798:619:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:13",
														"type": ""
													}
												],
												"src": "4423:86:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:13",
														"type": ""
													}
												],
												"src": "4515:112:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:13",
														"type": ""
													}
												],
												"src": "4633:214:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:13"
															},
															"nodeType": "YulIf",
															"src": "4929:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:13",
														"type": ""
													}
												],
												"src": "4853:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5271:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5317:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5319:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5319:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5319:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5292:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5301:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5288:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5284:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5284:32:13"
															},
															"nodeType": "YulIf",
															"src": "5281:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "5410:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5425:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5439:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5429:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5454:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5489:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5500:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5485:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5485:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5509:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5464:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5464:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5454:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5537:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5552:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5566:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5556:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5582:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5617:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5628:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5613:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5613:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5637:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5592:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5592:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5582:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5233:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5244:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5256:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5264:6:13",
														"type": ""
													}
												],
												"src": "5188:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5713:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5716:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5706:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5706:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5803:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5803:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5803:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5834:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5827:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5827:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5827:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "5668:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5905:269:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5915:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5929:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5935:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5925:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5946:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5976:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5982:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5972:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5972:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5950:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6023:51:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6037:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6051:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6059:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6047:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6047:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6037:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6003:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:26:13"
															},
															"nodeType": "YulIf",
															"src": "5993:81:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6126:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6140:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6140:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6140:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6090:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6113:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6121:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6110:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6110:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6087:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:38:13"
															},
															"nodeType": "YulIf",
															"src": "6084:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5889:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5898:6:13",
														"type": ""
													}
												],
												"src": "5854:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6208:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6225:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6228:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6218:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6218:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6218:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6322:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6325:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6315:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6315:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6346:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6349:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6339:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6339:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6339:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6180:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6410:147:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6420:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6443:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6425:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6425:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6420:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6454:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6477:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6459:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6459:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6454:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6488:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6499:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6502:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6495:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6495:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6488:3:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6528:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6530:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6530:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6530:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6520:1:13"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6523:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6517:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6517:10:13"
															},
															"nodeType": "YulIf",
															"src": "6514:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6397:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6400:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6406:3:13",
														"type": ""
													}
												],
												"src": "6366:191:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6669:118:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6691:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6699:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6687:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6687:14:13"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6703:34:13",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6680:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6680:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6680:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6759:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6767:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6755:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6755:15:13"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6772:7:13",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6748:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6748:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6748:32:13"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6661:6:13",
														"type": ""
													}
												],
												"src": "6563:224:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6939:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6949:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7015:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7020:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6956:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6956:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7121:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "7032:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7032:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7134:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7145:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7150:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7141:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7141:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7134:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6927:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6935:3:13",
														"type": ""
													}
												],
												"src": "6793:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7336:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7346:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7358:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7369:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7354:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7354:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7346:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7393:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7404:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7389:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7389:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7412:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7418:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7408:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7408:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7382:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7382:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7382:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7438:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7572:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7446:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7446:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7438:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7316:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7331:4:13",
														"type": ""
													}
												],
												"src": "7165:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7696:117:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7718:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7726:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7714:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7714:14:13"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7730:34:13",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7707:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7707:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7786:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7794:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7782:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7782:15:13"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7799:6:13",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7775:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7775:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7775:31:13"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7688:6:13",
														"type": ""
													}
												],
												"src": "7590:223:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7965:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7975:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8041:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8046:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7982:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7982:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7975:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8147:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "8058:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8058:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8058:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8160:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8171:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8176:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8167:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8167:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8160:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7953:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7961:3:13",
														"type": ""
													}
												],
												"src": "7819:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8362:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8372:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8384:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8395:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8380:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8380:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8372:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8419:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8430:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8415:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8415:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8438:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8444:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8434:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8434:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8408:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8408:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8408:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8464:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8598:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8472:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8472:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8464:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8342:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8357:4:13",
														"type": ""
													}
												],
												"src": "8191:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8722:115:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8744:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8752:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8740:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8740:14:13"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8756:34:13",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8733:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8733:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8733:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8812:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8820:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8808:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8808:15:13"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8825:4:13",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8801:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8801:29:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8801:29:13"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8714:6:13",
														"type": ""
													}
												],
												"src": "8616:221:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8989:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8999:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9065:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9070:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9006:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9006:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8999:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9171:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "9082:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9082:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9082:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9184:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9195:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9200:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9191:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9191:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9184:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8977:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8985:3:13",
														"type": ""
													}
												],
												"src": "8843:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9386:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9396:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9408:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9419:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9404:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9404:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9396:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9443:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9454:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9439:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9439:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9462:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9468:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9458:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9458:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9432:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9432:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9432:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9488:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9622:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9496:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9496:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9488:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9366:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9381:4:13",
														"type": ""
													}
												],
												"src": "9215:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9746:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9768:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9776:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9764:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9764:14:13"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9780:31:13",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9757:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9757:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9757:55:13"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9738:6:13",
														"type": ""
													}
												],
												"src": "9640:179:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9971:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9981:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10047:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10052:2:13",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9988:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9988:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9981:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10153:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "10064:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10064:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10064:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10166:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10177:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10182:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10173:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10173:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10166:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9959:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9967:3:13",
														"type": ""
													}
												],
												"src": "9825:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10368:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10378:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10390:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10401:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10386:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10386:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10378:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10425:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10436:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10421:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10421:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10444:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10450:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10440:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10440:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10414:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10414:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10414:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10470:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10604:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10478:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10478:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10470:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10348:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10363:4:13",
														"type": ""
													}
												],
												"src": "10197:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10728:118:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10750:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10758:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10746:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10746:14:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10762:34:13",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10739:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10739:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10739:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10818:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10826:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10814:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10814:15:13"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10831:7:13",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10807:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10807:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10807:32:13"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10720:6:13",
														"type": ""
													}
												],
												"src": "10622:224:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10998:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11008:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11074:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11079:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11015:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11015:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11008:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11180:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "11091:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11091:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11091:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11193:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11204:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11209:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11200:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11200:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11193:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10986:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10994:3:13",
														"type": ""
													}
												],
												"src": "10852:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11395:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11405:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11417:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11428:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11413:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11413:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11405:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11452:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11463:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11448:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11448:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11471:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11477:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11467:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11467:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11441:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11441:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11441:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11497:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11631:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11505:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11505:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11497:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11375:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11390:4:13",
														"type": ""
													}
												],
												"src": "11224:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11755:116:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11777:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11785:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11773:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11773:14:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11789:34:13",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11766:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11766:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11766:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11845:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11853:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11841:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11841:15:13"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11858:5:13",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11834:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11834:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11834:30:13"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11747:6:13",
														"type": ""
													}
												],
												"src": "11649:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12023:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12033:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12099:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12104:2:13",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12040:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12040:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12033:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12205:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "12116:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12116:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12116:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12218:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12229:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12234:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12225:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12225:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12218:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12011:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12019:3:13",
														"type": ""
													}
												],
												"src": "11877:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12420:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12430:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12442:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12453:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12438:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12438:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12430:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12477:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12488:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12473:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12473:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12496:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12502:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12492:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12492:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12466:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12466:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12466:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12522:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12656:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12530:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12530:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12522:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12400:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12415:4:13",
														"type": ""
													}
												],
												"src": "12249:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12780:119:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12802:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12810:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12798:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12798:14:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12814:34:13",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12791:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12791:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12791:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12870:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12878:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12866:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12866:15:13"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12883:8:13",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12859:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12859:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12859:33:13"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12772:6:13",
														"type": ""
													}
												],
												"src": "12674:225:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13051:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13061:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13127:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13132:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13068:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13068:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13061:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13233:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "13144:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13144:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13144:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13246:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13257:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13262:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13253:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13253:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13246:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13039:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13047:3:13",
														"type": ""
													}
												],
												"src": "12905:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13448:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13458:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13470:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13481:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13466:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13466:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13458:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13505:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13516:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13501:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13501:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13524:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13530:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13520:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13520:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13494:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13494:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13494:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13550:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13684:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13558:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13558:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13550:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13428:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13443:4:13",
														"type": ""
													}
												],
												"src": "13277:419:13"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea264697066735822122056ddbaa6f176bb090aaa7ab1f60aa747f7685cb7bfeb29c84b94833756e04ce964736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xDD 0xBA 0xA6 CALL PUSH23 0xBB090AAA7AB1F60AA747F7685CB7BFEB29C84B94833756 0xE0 0x4C 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1579:11639:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2229:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4589:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3358:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5370:261;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3200:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6040:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3529:127;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2448:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6781:436;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3862:193;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4118:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2229:100;2283:13;2316:5;2309:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2229:100;:::o;4589:201::-;4672:4;4689:13;4705:12;:10;:12::i;:::-;4689:28;;4728:32;4737:5;4744:7;4753:6;4728:8;:32::i;:::-;4778:4;4771:11;;;4589:201;;;;:::o;3358:108::-;3419:7;3446:12;;3439:19;;3358:108;:::o;5370:261::-;5467:4;5484:15;5502:12;:10;:12::i;:::-;5484:30;;5525:38;5541:4;5547:7;5556:6;5525:15;:38::i;:::-;5574:27;5584:4;5590:2;5594:6;5574:9;:27::i;:::-;5619:4;5612:11;;;5370:261;;;;;:::o;3200:93::-;3258:5;3283:2;3276:9;;3200:93;:::o;6040:238::-;6128:4;6145:13;6161:12;:10;:12::i;:::-;6145:28;;6184:64;6193:5;6200:7;6237:10;6209:25;6219:5;6226:7;6209:9;:25::i;:::-;:38;;;;:::i;:::-;6184:8;:64::i;:::-;6266:4;6259:11;;;6040:238;;;;:::o;3529:127::-;3603:7;3630:9;:18;3640:7;3630:18;;;;;;;;;;;;;;;;3623:25;;3529:127;;;:::o;2448:104::-;2504:13;2537:7;2530:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2448:104;:::o;6781:436::-;6874:4;6891:13;6907:12;:10;:12::i;:::-;6891:28;;6930:24;6957:25;6967:5;6974:7;6957:9;:25::i;:::-;6930:52;;7021:15;7001:16;:35;;6993:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7114:60;7123:5;7130:7;7158:15;7139:16;:34;7114:8;:60::i;:::-;7205:4;7198:11;;;;6781:436;;;;:::o;3862:193::-;3941:4;3958:13;3974:12;:10;:12::i;:::-;3958:28;;3997;4007:5;4014:2;4018:6;3997:9;:28::i;:::-;4043:4;4036:11;;;3862:193;;;;:::o;4118:151::-;4207:7;4234:11;:18;4246:5;4234:18;;;;;;;;;;;;;;;:27;4253:7;4234:27;;;;;;;;;;;;;;;;4227:34;;4118:151;;;;:::o;656:98:11:-;709:7;736:10;729:17;;656:98;:::o;10774:346:0:-;10893:1;10876:19;;:5;:19;;;10868:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10974:1;10955:21;;:7;:21;;;10947:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11058:6;11028:11;:18;11040:5;11028:18;;;;;;;;;;;;;;;:27;11047:7;11028:27;;;;;;;;;;;;;;;:36;;;;11096:7;11080:32;;11089:5;11080:32;;;11105:6;11080:32;;;;;;:::i;:::-;;;;;;;;10774:346;;;:::o;11411:419::-;11512:24;11539:25;11549:5;11556:7;11539:9;:25::i;:::-;11512:52;;11599:17;11579:16;:37;11575:248;;11661:6;11641:16;:26;;11633:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11745:51;11754:5;11761:7;11789:6;11770:16;:25;11745:8;:51::i;:::-;11575:248;11501:329;11411:419;;;:::o;7687:806::-;7800:1;7784:18;;:4;:18;;;7776:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7877:1;7863:16;;:2;:16;;;7855:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7932:38;7953:4;7959:2;7963:6;7932:20;:38::i;:::-;7983:19;8005:9;:15;8015:4;8005:15;;;;;;;;;;;;;;;;7983:37;;8054:6;8039:11;:21;;8031:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8171:6;8157:11;:20;8139:9;:15;8149:4;8139:15;;;;;;;;;;;;;;;:38;;;;8374:6;8357:9;:13;8367:2;8357:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8424:2;8409:26;;8418:4;8409:26;;;8428:6;8409:26;;;;;;:::i;:::-;;;;;;;;8448:37;8468:4;8474:2;8478:6;8448:19;:37::i;:::-;7765:728;7687:806;;;:::o;12430:91::-;;;;:::o;13125:90::-;;;;:::o;7:99:13:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "931000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2863",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1579,
									"end": 13218,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1579,
									"end": 13218,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1579,
									"end": 13218,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2043,
									"end": 2159,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2118,
									"end": 2123,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2110,
									"end": 2115,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2110,
									"end": 2123,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2144,
									"end": 2151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2134,
									"end": 2141,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2134,
									"end": 2151,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1579,
									"end": 13218,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1579,
									"end": 13218,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 13,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1579,
									"end": 13218,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1579,
									"end": 13218,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1579,
									"end": 13218,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1579,
									"end": 13218,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1579,
									"end": 13218,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1579,
									"end": 13218,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1579,
									"end": 13218,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1579,
									"end": 13218,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1579,
									"end": 13218,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122056ddbaa6f176bb090aaa7ab1f60aa747f7685cb7bfeb29c84b94833756e04ce964736f6c63430008130033",
									".code": [
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1579,
											"end": 13218,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2229,
											"end": 2329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2229,
											"end": 2329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4589,
											"end": 4790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4589,
											"end": 4790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4589,
											"end": 4790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3358,
											"end": 3466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3358,
											"end": 3466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5370,
											"end": 5631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5370,
											"end": 5631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5370,
											"end": 5631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3200,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3200,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6040,
											"end": 6278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6040,
											"end": 6278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6040,
											"end": 6278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3529,
											"end": 3656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3529,
											"end": 3656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3529,
											"end": 3656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2448,
											"end": 2552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2448,
											"end": 2552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6781,
											"end": 7217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6781,
											"end": 7217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6781,
											"end": 7217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3862,
											"end": 4055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3862,
											"end": 4055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3862,
											"end": 4055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4118,
											"end": 4269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4118,
											"end": 4269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4118,
											"end": 4269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2309,
											"end": 2321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2309,
											"end": 2321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4672,
											"end": 4676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4705,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4705,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4705,
											"end": 4717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4705,
											"end": 4717,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4705,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4737,
											"end": 4742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4751,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4753,
											"end": 4759,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4728,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4778,
											"end": 4782,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4771,
											"end": 4782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3458,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3446,
											"end": 3458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3439,
											"end": 3458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3439,
											"end": 3458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5502,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5502,
											"end": 5514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5514,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5502,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5484,
											"end": 5514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5484,
											"end": 5514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5525,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5554,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5562,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5525,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5525,
											"end": 5563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5525,
											"end": 5563,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5525,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5584,
											"end": 5588,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5592,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5600,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5574,
											"end": 5601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5601,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5574,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5612,
											"end": 5623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5612,
											"end": 5623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5612,
											"end": 5623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3285,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3276,
											"end": 3285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6145,
											"end": 6158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6161,
											"end": 6173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6161,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 6161,
											"end": 6173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6161,
											"end": 6173,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6161,
											"end": 6173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6193,
											"end": 6198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6200,
											"end": 6207,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6237,
											"end": 6247,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6209,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6219,
											"end": 6224,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6226,
											"end": 6233,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6209,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6209,
											"end": 6234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6209,
											"end": 6234,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6209,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6209,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6209,
											"end": 6247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6209,
											"end": 6247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6209,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6209,
											"end": 6247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6209,
											"end": 6247,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6209,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6184,
											"end": 6248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6248,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6184,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6270,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6259,
											"end": 6270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6259,
											"end": 6270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6259,
											"end": 6270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3647,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3623,
											"end": 3648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3623,
											"end": 3648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2517,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2537,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2530,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2530,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6891,
											"end": 6904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6907,
											"end": 6917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 6907,
											"end": 6919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6919,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6907,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6891,
											"end": 6919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6891,
											"end": 6919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6957,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6967,
											"end": 6972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 6981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6957,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6957,
											"end": 6982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6957,
											"end": 6982,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6957,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7001,
											"end": 7017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7001,
											"end": 7036,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7001,
											"end": 7036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6993,
											"end": 7078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7114,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 7123,
											"end": 7128,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7130,
											"end": 7137,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7158,
											"end": 7173,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7139,
											"end": 7155,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7139,
											"end": 7173,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7114,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7114,
											"end": 7174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7114,
											"end": 7174,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 7114,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7205,
											"end": 7209,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7198,
											"end": 7209,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7198,
											"end": 7209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7198,
											"end": 7209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7198,
											"end": 7209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3958,
											"end": 3971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3974,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3974,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 3986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 3986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4007,
											"end": 4012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4016,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4024,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3997,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4025,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3997,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4043,
											"end": 4047,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4036,
											"end": 4047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4207,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4245,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4251,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4253,
											"end": 4260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 754,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 729,
											"end": 746,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 729,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 754,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 656,
											"end": 754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10774,
											"end": 11120,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10774,
											"end": 11120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10893,
											"end": 10894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10876,
											"end": 10895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10876,
											"end": 10895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10876,
											"end": 10895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10868,
											"end": 10936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 10975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10955,
											"end": 10976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10955,
											"end": 10976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10955,
											"end": 10962,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10955,
											"end": 10976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10955,
											"end": 10976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10955,
											"end": 10976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10947,
											"end": 11015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11039,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11040,
											"end": 11045,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11047,
											"end": 11054,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11064,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11089,
											"end": 11094,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11105,
											"end": 11111,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11080,
											"end": 11112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10774,
											"end": 11120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10774,
											"end": 11120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10774,
											"end": 11120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10774,
											"end": 11120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11411,
											"end": 11830,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11411,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11512,
											"end": 11536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11549,
											"end": 11554,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11556,
											"end": 11563,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11539,
											"end": 11548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11539,
											"end": 11564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11512,
											"end": 11564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11512,
											"end": 11564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11599,
											"end": 11616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11579,
											"end": 11595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11616,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11575,
											"end": 11823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11575,
											"end": 11823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11641,
											"end": 11667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11641,
											"end": 11667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11633,
											"end": 11701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11745,
											"end": 11796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11754,
											"end": 11759,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11761,
											"end": 11768,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11795,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11770,
											"end": 11786,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11770,
											"end": 11795,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11745,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11745,
											"end": 11796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11745,
											"end": 11796,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11745,
											"end": 11796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11575,
											"end": 11823,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11575,
											"end": 11823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11501,
											"end": 11830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11411,
											"end": 11830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11411,
											"end": 11830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11411,
											"end": 11830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11411,
											"end": 11830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 8493,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7687,
											"end": 8493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7788,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7776,
											"end": 7844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7863,
											"end": 7879,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7863,
											"end": 7879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7879,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7863,
											"end": 7879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7879,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 7855,
											"end": 7919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7953,
											"end": 7957,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7959,
											"end": 7961,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7963,
											"end": 7969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 7952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7932,
											"end": 7970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 7970,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7932,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7983,
											"end": 8002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8005,
											"end": 8014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8015,
											"end": 8019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7983,
											"end": 8020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7983,
											"end": 8020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8054,
											"end": 8060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8039,
											"end": 8050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8039,
											"end": 8060,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8039,
											"end": 8060,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8031,
											"end": 8103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8171,
											"end": 8177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8149,
											"end": 8153,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8177,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8367,
											"end": 8369,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8424,
											"end": 8426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8422,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8428,
											"end": 8434,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8409,
											"end": 8435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8448,
											"end": 8485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8468,
											"end": 8472,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8474,
											"end": 8476,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8478,
											"end": 8484,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8448,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8448,
											"end": 8485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8448,
											"end": 8485,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8448,
											"end": 8485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 8493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 8493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 8493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 8493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 8493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12430,
											"end": 12521,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12430,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12430,
											"end": 12521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12430,
											"end": 12521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12430,
											"end": 12521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12430,
											"end": 12521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13125,
											"end": 13215,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 13125,
											"end": 13215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13125,
											"end": 13215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13125,
											"end": 13215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13125,
											"end": 13215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13125,
											"end": 13215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5313,
											"end": 5315,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5301,
											"end": 5310,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5299,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5288,
											"end": 5311,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5284,
											"end": 5316,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 5319,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 5281,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5439,
											"end": 5440,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5485,
											"end": 5507,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 5464,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5454,
											"end": 5517,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5410,
											"end": 5527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5566,
											"end": 5568,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5628,
											"end": 5634,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5617,
											"end": 5626,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5613,
											"end": 5635,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 5592,
											"end": 5645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 5592,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5582,
											"end": 5645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5537,
											"end": 5655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5188,
											"end": 5662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5188,
											"end": 5662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 5668,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5793,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5794,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5803,
											"end": 5818,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5837,
											"end": 5841,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5834,
											"end": 5835,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5842,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5915,
											"end": 5937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5982,
											"end": 5983,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5976,
											"end": 5980,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6059,
											"end": 6063,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 6051,
											"end": 6057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6047,
											"end": 6064,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6037,
											"end": 6064,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 5993,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6121,
											"end": 6123,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6113,
											"end": 6119,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6110,
											"end": 6124,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6125,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 6140,
											"end": 6158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 6140,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 6084,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5905,
											"end": 6174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5854,
											"end": 6174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5854,
											"end": 6174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6180,
											"end": 6360,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 6180,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6228,
											"end": 6305,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6226,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6306,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6315,
											"end": 6330,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6349,
											"end": 6353,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6346,
											"end": 6347,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6339,
											"end": 6354,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6406,
											"end": 6409,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 6443,
											"end": 6444,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 6425,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 6425,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6420,
											"end": 6445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 6477,
											"end": 6478,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 6459,
											"end": 6479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 6459,
											"end": 6479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6454,
											"end": 6479,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6454,
											"end": 6479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6502,
											"end": 6503,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6499,
											"end": 6500,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6495,
											"end": 6504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6488,
											"end": 6504,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6523,
											"end": 6526,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6520,
											"end": 6521,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6517,
											"end": 6527,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 6530,
											"end": 6548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 6514,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 6557,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 6557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6563,
											"end": 6787,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 6563,
											"end": 6787,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6703,
											"end": 6737,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6699,
											"end": 6700,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6697,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6687,
											"end": 6701,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6680,
											"end": 6738,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6772,
											"end": 6779,
											"name": "PUSH",
											"source": 13,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6767,
											"end": 6769,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6759,
											"end": 6765,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6755,
											"end": 6770,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6748,
											"end": 6780,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6563,
											"end": 6787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6563,
											"end": 6787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6935,
											"end": 6938,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 7020,
											"end": 7022,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 7015,
											"end": 7018,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 6956,
											"end": 7023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 6956,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7023,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 7121,
											"end": 7124,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 7032,
											"end": 7125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 7032,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7150,
											"end": 7152,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7145,
											"end": 7148,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7153,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7134,
											"end": 7153,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7134,
											"end": 7153,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6793,
											"end": 7159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6793,
											"end": 7159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7331,
											"end": 7335,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7369,
											"end": 7371,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7367,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7354,
											"end": 7372,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7346,
											"end": 7372,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7346,
											"end": 7372,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7418,
											"end": 7427,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7412,
											"end": 7416,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7408,
											"end": 7428,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7404,
											"end": 7405,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7393,
											"end": 7402,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7389,
											"end": 7406,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7429,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 7572,
											"end": 7576,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 7446,
											"end": 7577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 7446,
											"end": 7577,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7438,
											"end": 7577,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7438,
											"end": 7577,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7165,
											"end": 7584,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7165,
											"end": 7584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7590,
											"end": 7813,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 7590,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7730,
											"end": 7764,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 7726,
											"end": 7727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7718,
											"end": 7724,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7728,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7707,
											"end": 7765,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7799,
											"end": 7805,
											"name": "PUSH",
											"source": 13,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7794,
											"end": 7796,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7786,
											"end": 7792,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7782,
											"end": 7797,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7775,
											"end": 7806,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7590,
											"end": 7813,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7590,
											"end": 7813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7961,
											"end": 7964,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 8046,
											"end": 8048,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8041,
											"end": 8044,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 7982,
											"end": 8049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 7982,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7975,
											"end": 8049,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7975,
											"end": 8049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 8147,
											"end": 8150,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 8058,
											"end": 8151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 8058,
											"end": 8151,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8176,
											"end": 8178,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8167,
											"end": 8179,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8179,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8179,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7819,
											"end": 8185,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7819,
											"end": 8185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8357,
											"end": 8361,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8395,
											"end": 8397,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8384,
											"end": 8393,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8380,
											"end": 8398,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8372,
											"end": 8398,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8372,
											"end": 8398,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8453,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8438,
											"end": 8442,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8434,
											"end": 8454,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8430,
											"end": 8431,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8419,
											"end": 8428,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8415,
											"end": 8432,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8408,
											"end": 8455,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 8598,
											"end": 8602,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 8472,
											"end": 8603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 8472,
											"end": 8603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8464,
											"end": 8603,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8464,
											"end": 8603,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8191,
											"end": 8610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8191,
											"end": 8610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8616,
											"end": 8837,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 8616,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8756,
											"end": 8790,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 8752,
											"end": 8753,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8744,
											"end": 8750,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8740,
											"end": 8754,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8733,
											"end": 8791,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8825,
											"end": 8829,
											"name": "PUSH",
											"source": 13,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8820,
											"end": 8822,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8812,
											"end": 8818,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8808,
											"end": 8823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8801,
											"end": 8830,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8616,
											"end": 8837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8616,
											"end": 8837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8985,
											"end": 8988,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 9070,
											"end": 9072,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 9065,
											"end": 9068,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 9006,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8999,
											"end": 9073,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8999,
											"end": 9073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 9171,
											"end": 9174,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 9082,
											"end": 9175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9200,
											"end": 9202,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9195,
											"end": 9198,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9191,
											"end": 9203,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8843,
											"end": 9209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9381,
											"end": 9385,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9421,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9408,
											"end": 9417,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9404,
											"end": 9422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9396,
											"end": 9422,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9396,
											"end": 9422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9468,
											"end": 9477,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9462,
											"end": 9466,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9458,
											"end": 9478,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9454,
											"end": 9455,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9443,
											"end": 9452,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9439,
											"end": 9456,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9432,
											"end": 9479,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 9496,
											"end": 9627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9488,
											"end": 9627,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9488,
											"end": 9627,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9215,
											"end": 9634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9640,
											"end": 9819,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 9640,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9780,
											"end": 9811,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 9776,
											"end": 9777,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9768,
											"end": 9774,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9764,
											"end": 9778,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9757,
											"end": 9812,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9640,
											"end": 9819,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9640,
											"end": 9819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9967,
											"end": 9970,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 10052,
											"end": 10054,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 10047,
											"end": 10050,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 9988,
											"end": 10055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 9988,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9981,
											"end": 10055,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9981,
											"end": 10055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 10153,
											"end": 10156,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 10064,
											"end": 10157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 10064,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10184,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10177,
											"end": 10180,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10173,
											"end": 10185,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10166,
											"end": 10185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10166,
											"end": 10185,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9825,
											"end": 10191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9825,
											"end": 10191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10363,
											"end": 10367,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10401,
											"end": 10403,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10399,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10386,
											"end": 10404,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10378,
											"end": 10404,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10378,
											"end": 10404,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10450,
											"end": 10459,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10444,
											"end": 10448,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10436,
											"end": 10437,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10434,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10421,
											"end": 10438,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10414,
											"end": 10461,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 10604,
											"end": 10608,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 10478,
											"end": 10609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 10478,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 10609,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 10609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10197,
											"end": 10616,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10197,
											"end": 10616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10622,
											"end": 10846,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 10622,
											"end": 10846,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10762,
											"end": 10796,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10758,
											"end": 10759,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10750,
											"end": 10756,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10746,
											"end": 10760,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10739,
											"end": 10797,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10831,
											"end": 10838,
											"name": "PUSH",
											"source": 13,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10826,
											"end": 10828,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10818,
											"end": 10824,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10807,
											"end": 10839,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10622,
											"end": 10846,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10622,
											"end": 10846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10994,
											"end": 10997,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 11079,
											"end": 11081,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 11074,
											"end": 11077,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 11015,
											"end": 11082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 11015,
											"end": 11082,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11008,
											"end": 11082,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11008,
											"end": 11082,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 11180,
											"end": 11183,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 11091,
											"end": 11184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 11091,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11209,
											"end": 11211,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11204,
											"end": 11207,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11200,
											"end": 11212,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11193,
											"end": 11212,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11193,
											"end": 11212,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10852,
											"end": 11218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10852,
											"end": 11218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11390,
											"end": 11394,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11428,
											"end": 11430,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11426,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11413,
											"end": 11431,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11405,
											"end": 11431,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11405,
											"end": 11431,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11477,
											"end": 11486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11471,
											"end": 11475,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11487,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11463,
											"end": 11464,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11452,
											"end": 11461,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11448,
											"end": 11465,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11441,
											"end": 11488,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 11631,
											"end": 11635,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 11505,
											"end": 11636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 11505,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11497,
											"end": 11636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11497,
											"end": 11636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11224,
											"end": 11643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11224,
											"end": 11643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11649,
											"end": 11871,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 11649,
											"end": 11871,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11789,
											"end": 11823,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 11785,
											"end": 11786,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11777,
											"end": 11783,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11773,
											"end": 11787,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11766,
											"end": 11824,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11858,
											"end": 11863,
											"name": "PUSH",
											"source": 13,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11853,
											"end": 11855,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11845,
											"end": 11851,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11841,
											"end": 11856,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11834,
											"end": 11864,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11649,
											"end": 11871,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11649,
											"end": 11871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12019,
											"end": 12022,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 12104,
											"end": 12106,
											"name": "PUSH",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 12099,
											"end": 12102,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 12040,
											"end": 12107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 12040,
											"end": 12107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12033,
											"end": 12107,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12033,
											"end": 12107,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 12205,
											"end": 12208,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 12116,
											"end": 12209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 12116,
											"end": 12209,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12234,
											"end": 12236,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12229,
											"end": 12232,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12225,
											"end": 12237,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12218,
											"end": 12237,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11877,
											"end": 12243,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11877,
											"end": 12243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12415,
											"end": 12419,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12453,
											"end": 12455,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12442,
											"end": 12451,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12438,
											"end": 12456,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12430,
											"end": 12456,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12430,
											"end": 12456,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12502,
											"end": 12511,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12496,
											"end": 12500,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12492,
											"end": 12512,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12488,
											"end": 12489,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12477,
											"end": 12486,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12473,
											"end": 12490,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12466,
											"end": 12513,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 12656,
											"end": 12660,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 12530,
											"end": 12661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 12530,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12522,
											"end": 12661,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12522,
											"end": 12661,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12249,
											"end": 12668,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12249,
											"end": 12668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12674,
											"end": 12899,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 12674,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12814,
											"end": 12848,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 12810,
											"end": 12811,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12802,
											"end": 12808,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12798,
											"end": 12812,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12791,
											"end": 12849,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12883,
											"end": 12891,
											"name": "PUSH",
											"source": 13,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12878,
											"end": 12880,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12870,
											"end": 12876,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12859,
											"end": 12892,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12674,
											"end": 12899,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12674,
											"end": 12899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13047,
											"end": 13050,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 13132,
											"end": 13134,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 13127,
											"end": 13130,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 13068,
											"end": 13135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 13068,
											"end": 13135,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13061,
											"end": 13135,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13061,
											"end": 13135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 13233,
											"end": 13236,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 13144,
											"end": 13237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 13144,
											"end": 13237,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13262,
											"end": 13264,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13257,
											"end": 13260,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13253,
											"end": 13265,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13246,
											"end": 13265,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13246,
											"end": 13265,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12905,
											"end": 13271,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12905,
											"end": 13271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13443,
											"end": 13447,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13483,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13470,
											"end": 13479,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13466,
											"end": 13484,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13458,
											"end": 13484,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13458,
											"end": 13484,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13530,
											"end": 13539,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13524,
											"end": 13528,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13520,
											"end": 13540,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13516,
											"end": 13517,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13505,
											"end": 13514,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13501,
											"end": 13518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13494,
											"end": 13541,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 13684,
											"end": 13688,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 13558,
											"end": 13689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 13558,
											"end": 13689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13550,
											"end": 13689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13550,
											"end": 13689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13277,
											"end": 13696,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13277,
											"end": 13696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"src/extensions/ERC20.sol",
								"src/interfaces/IAccessControl.sol",
								"src/interfaces/IERC165.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/IERC20Metadata.sol",
								"src/interfaces/IsHYDT.sol",
								"src/libraries/Math.sol",
								"src/libraries/SignedMath.sol",
								"src/libraries/Strings.sol",
								"src/sHYDT.sol",
								"src/utils/AccessControl.sol",
								"src/utils/Context.sol",
								"src/utils/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/extensions/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/extensions/ERC20.sol\":{\"keccak256\":\"0x1f261ff592653ece7a6b0560754694f968ece3892b1f749accf1640d4a9d6bb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://381451c7046c04bebfaba3ee44af65b3875c963467328c0018614120af871ec4\",\"dweb:/ipfs/QmZ12nHrE3d6Si4XYcN9SP8xB4hJJDx52MN4RkUzCCoEuj\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0xd49070e01df31c9f39ed67f7cb2844d842b5fc4c07048156f77f1ac06956a223\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7a56689e6a846ee765a66e30a816b0fe65eba41d2f16beb5bd57a7f7daf1027\",\"dweb:/ipfs/QmduVybj3AaRyHwRRnmjxsG5jPERmFBEUH9EcXwVM5kPyC\"]},\"src/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x1ffe2047e11fcdd75b2aca845ef3428d93765011f9bdb0ca7bf5d9f95f62656a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b608f183a24077b867dcf21b1e5956b431291324b6025cbb864eb295e005307\",\"dweb:/ipfs/QmPsgCmqe4HYkFpvYJGWWbkLoQEdhWDzmhG6Lv54FXua8W\"]},\"src/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "src/extensions/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "src/extensions/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "src/extensions/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "src/extensions/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "src/extensions/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IAccessControl.sol\":{\"keccak256\":\"0x89c6c2a63dc6c357c6108de150ab329ad7f847f3ff00a35bcd55f769f4ebcad4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cadec590da43255289e7db8e08a0760869efa64c543dbd8af46690ce5295d497\",\"dweb:/ipfs/QmZsPSyWeA3aZgDgtXMMx11wvTadrf5FzrxkWDbUfM11Ue\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0xd49070e01df31c9f39ed67f7cb2844d842b5fc4c07048156f77f1ac06956a223\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7a56689e6a846ee765a66e30a816b0fe65eba41d2f16beb5bd57a7f7daf1027\",\"dweb:/ipfs/QmduVybj3AaRyHwRRnmjxsG5jPERmFBEUH9EcXwVM5kPyC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0xd49070e01df31c9f39ed67f7cb2844d842b5fc4c07048156f77f1ac06956a223\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7a56689e6a846ee765a66e30a816b0fe65eba41d2f16beb5bd57a7f7daf1027\",\"dweb:/ipfs/QmduVybj3AaRyHwRRnmjxsG5jPERmFBEUH9EcXwVM5kPyC\"]},\"src/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x1ffe2047e11fcdd75b2aca845ef3428d93765011f9bdb0ca7bf5d9f95f62656a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b608f183a24077b867dcf21b1e5956b431291324b6025cbb864eb295e005307\",\"dweb:/ipfs/QmPsgCmqe4HYkFpvYJGWWbkLoQEdhWDzmhG6Lv54FXua8W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/IsHYDT.sol": {
				"IsHYDT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IsHYDT.sol\":\"IsHYDT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0xd49070e01df31c9f39ed67f7cb2844d842b5fc4c07048156f77f1ac06956a223\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7a56689e6a846ee765a66e30a816b0fe65eba41d2f16beb5bd57a7f7daf1027\",\"dweb:/ipfs/QmduVybj3AaRyHwRRnmjxsG5jPERmFBEUH9EcXwVM5kPyC\"]},\"src/interfaces/IsHYDT.sol\":{\"keccak256\":\"0x8750c2e56cafda7debad0ccf8e3a52e6d7e67675036ce5950fc4316c7d47a693\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://9fb98b3c75bbbb793905a2c6dc989a62d933ce7d88256c8365ded40249eda350\",\"dweb:/ipfs/QmVi7R1U6Kta1932mjQYLmCiqxP8F27ap4RmLsubscGK6A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/libraries/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/libraries/Math.sol\":210:12826  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/libraries/Math.sol\":210:12826  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e8289e82efb2ebe04b130cf8aba07bec8341c55c1e488ff431f7ce193aaff6c264736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e8289e82efb2ebe04b130cf8aba07bec8341c55c1e488ff431f7ce193aaff6c264736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0x28 SWAP15 DUP3 0xEF 0xB2 0xEB 0xE0 0x4B SGT 0xC 0xF8 0xAB LOG0 PUSH28 0xEC8341C55C1E488FF431F7CE193AAFF6C264736F6C63430008130033 ",
							"sourceMap": "210:12616:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e8289e82efb2ebe04b130cf8aba07bec8341c55c1e488ff431f7ce193aaff6c264736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 0x28 SWAP15 DUP3 0xEF 0xB2 0xEB 0xE0 0x4B SGT 0xC 0xF8 0xAB LOG0 PUSH28 0xEC8341C55C1E488FF431F7CE193AAFF6C264736F6C63430008130033 ",
							"sourceMap": "210:12616:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 210,
									"end": 12826,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e8289e82efb2ebe04b130cf8aba07bec8341c55c1e488ff431f7ce193aaff6c264736f6c63430008130033",
									".code": [
										{
											"begin": 210,
											"end": 12826,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 210,
											"end": 12826,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"src/extensions/ERC20.sol",
								"src/interfaces/IAccessControl.sol",
								"src/interfaces/IERC165.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/IERC20Metadata.sol",
								"src/interfaces/IsHYDT.sol",
								"src/libraries/Math.sol",
								"src/libraries/SignedMath.sol",
								"src/libraries/Strings.sol",
								"src/sHYDT.sol",
								"src/utils/AccessControl.sol",
								"src/utils/Context.sol",
								"src/utils/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/libraries/Math.sol\":{\"keccak256\":\"0xfc18275f00047f613f761247e4f3ec788843036f7f426b3fd3b74e251e45f7ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acc7cebc92fed34db103599e2bde11669280f6e9062fc42d000969ee0e9e8443\",\"dweb:/ipfs/QmQh4ArebQ7tuHEEPyHfeZKctXbC6zPRRnZ7bZM5GNkgh7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/libraries/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/libraries/SignedMath.sol\":223:1304  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/libraries/SignedMath.sol\":223:1304  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b38c7381e4a4018de2542bf0b230518ff46fef11da5c2f2791c87fc1e76c590764736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b38c7381e4a4018de2542bf0b230518ff46fef11da5c2f2791c87fc1e76c590764736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 DUP13 PUSH20 0x81E4A4018DE2542BF0B230518FF46FEF11DA5C2F 0x27 SWAP2 0xC8 PUSH32 0xC1E76C590764736F6C6343000813003300000000000000000000000000000000 ",
							"sourceMap": "223:1081:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b38c7381e4a4018de2542bf0b230518ff46fef11da5c2f2791c87fc1e76c590764736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 DUP13 PUSH20 0x81E4A4018DE2542BF0B230518FF46FEF11DA5C2F 0x27 SWAP2 0xC8 PUSH32 0xC1E76C590764736F6C6343000813003300000000000000000000000000000000 ",
							"sourceMap": "223:1081:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 223,
									"end": 1304,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b38c7381e4a4018de2542bf0b230518ff46fef11da5c2f2791c87fc1e76c590764736f6c63430008130033",
									".code": [
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 223,
											"end": 1304,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"src/extensions/ERC20.sol",
								"src/interfaces/IAccessControl.sol",
								"src/interfaces/IERC165.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/IERC20Metadata.sol",
								"src/interfaces/IsHYDT.sol",
								"src/libraries/Math.sol",
								"src/libraries/SignedMath.sol",
								"src/libraries/Strings.sol",
								"src/sHYDT.sol",
								"src/utils/AccessControl.sol",
								"src/utils/Context.sol",
								"src/utils/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/libraries/SignedMath.sol\":{\"keccak256\":\"0xb4a5f5f5222294665d6241a5c06558d4939617ebd0a49d1eb9c0e193fd19bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be7f6a069d156446211053299916948102d357d813be42c5f1614885e71d81b3\",\"dweb:/ipfs/QmfT2fs3cDWvfoekdfkUQ3ZMz4f8tc2hqnabipbfzW3Xqb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/libraries/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/libraries/Strings.sol\":221:2853  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/libraries/Strings.sol\":221:2853  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202c91303457c6a2440b4eccc02db2c3ba638db837937c9397334079eabc3ef31c64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c91303457c6a2440b4eccc02db2c3ba638db837937c9397334079eabc3ef31c64736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SWAP2 ADDRESS CALLVALUE JUMPI 0xC6 LOG2 PREVRANDAO SIGNEXTEND 0x4E 0xCC 0xC0 0x2D 0xB2 0xC3 0xBA PUSH4 0x8DB83793 PUSH29 0x9397334079EABC3EF31C64736F6C634300081300330000000000000000 ",
							"sourceMap": "221:2632:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c91303457c6a2440b4eccc02db2c3ba638db837937c9397334079eabc3ef31c64736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SWAP2 ADDRESS CALLVALUE JUMPI 0xC6 LOG2 PREVRANDAO SIGNEXTEND 0x4E 0xCC 0xC0 0x2D 0xB2 0xC3 0xBA PUSH4 0x8DB83793 PUSH29 0x9397334079EABC3EF31C64736F6C634300081300330000000000000000 ",
							"sourceMap": "221:2632:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 221,
									"end": 2853,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c91303457c6a2440b4eccc02db2c3ba638db837937c9397334079eabc3ef31c64736f6c63430008130033",
									".code": [
										{
											"begin": 221,
											"end": 2853,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 221,
											"end": 2853,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"src/extensions/ERC20.sol",
								"src/interfaces/IAccessControl.sol",
								"src/interfaces/IERC165.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/IERC20Metadata.sol",
								"src/interfaces/IsHYDT.sol",
								"src/libraries/Math.sol",
								"src/libraries/SignedMath.sol",
								"src/libraries/Strings.sol",
								"src/sHYDT.sol",
								"src/utils/AccessControl.sol",
								"src/utils/Context.sol",
								"src/utils/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/libraries/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/libraries/Math.sol\":{\"keccak256\":\"0xfc18275f00047f613f761247e4f3ec788843036f7f426b3fd3b74e251e45f7ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acc7cebc92fed34db103599e2bde11669280f6e9062fc42d000969ee0e9e8443\",\"dweb:/ipfs/QmQh4ArebQ7tuHEEPyHfeZKctXbC6zPRRnZ7bZM5GNkgh7\"]},\"src/libraries/SignedMath.sol\":{\"keccak256\":\"0xb4a5f5f5222294665d6241a5c06558d4939617ebd0a49d1eb9c0e193fd19bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be7f6a069d156446211053299916948102d357d813be42c5f1614885e71d81b3\",\"dweb:/ipfs/QmfT2fs3cDWvfoekdfkUQ3ZMz4f8tc2hqnabipbfzW3Xqb\"]},\"src/libraries/Strings.sol\":{\"keccak256\":\"0xaa9c663292d9142e4f463d0f876b1b3813e409bdeb321470fb20573d9a68012b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f7892745f43559c7f4351120ca6829fb71d40ea286268174dd84128657ee915\",\"dweb:/ipfs/QmeT6d7KBXrNcyLGhtj6a5LLHbYHiVVXqQYA6pSNnp8ecH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/sHYDT.sol": {
				"sHYDT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CALLER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "earn_",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "See {ERC20-_burn}. Requirements: - the caller must have the `Caller` role."
							},
							"burnFrom(address,uint256)": {
								"details": "Destorys `amount` tokens from `from` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Emits a {Transfer} event with `to` set to the zero address. Requirements: - the caller must have the `Caller` role. - `from` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"initialize(address)": {
								"details": "This function can only be called once.",
								"params": {
									"earn_": "The address of the `Earn` contract."
								}
							},
							"mint(address,uint256)": {
								"details": "See {ERC20-_mint}. Requirements: - the caller must have the `Caller` role."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"stateVariables": {
							"_initializer": {
								"details": "Initialization variables."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/sHYDT.sol\":180:3099  contract sHYDT is AccessControl, ERC20, IsHYDT {... */\n  mstore(0x40, 0xa0)\n    /* \"src/sHYDT.sol\":539:669  constructor()... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/extensions/ERC20.sol\":2043:2159  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x25\n  dup2\n  mstore\n  0x20\n  add\n  data_4be56b54bb0483f8c7decbfd8ea4b51bf9eda8402236441b22287bf2eafd554e\n  0x25\n  swap2\n  codecopy\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x7348594454000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"src/extensions/ERC20.sol\":2118:2123  name_ */\n  dup2\n    /* \"src/extensions/ERC20.sol\":2110:2115  _name */\n  0x04\n    /* \"src/extensions/ERC20.sol\":2110:2123  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"src/extensions/ERC20.sol\":2144:2151  symbol_ */\n  dup1\n    /* \"src/extensions/ERC20.sol\":2134:2141  _symbol */\n  0x05\n    /* \"src/extensions/ERC20.sol\":2134:2151  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"src/extensions/ERC20.sol\":2043:2159  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"src/sHYDT.sol\":649:661  _msgSender() */\n  tag_9\n    /* \"src/sHYDT.sol\":649:659  _msgSender */\n  shl(0x20, tag_10)\n    /* \"src/sHYDT.sol\":649:661  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"src/sHYDT.sol\":634:661  _initializer = _msgSender() */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/sHYDT.sol\":180:3099  contract sHYDT is AccessControl, ERC20, IsHYDT {... */\n  jump(tag_11)\n    /* \"src/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"src/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"src/utils/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"src/utils/Context.sol\":729:746  return msg.sender */\n  swap1\n  pop\n    /* \"src/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_13:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_14:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_15:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_16:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_38:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_40\n  tag_15\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":714:798   */\ntag_39:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_17:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_18:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_19:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_20:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_45\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_19\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1429:1468   */\n  tag_46\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_19\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_21:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_22:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_23:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_50\n    /* \"#utility.yul\":1818:1852   */\n  tag_51\n    /* \"#utility.yul\":1827:1851   */\n  tag_52\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_21\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1818:1852   */\n  tag_22\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1800:1853   */\n  tag_21\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_24:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_25:\n    /* \"#utility.yul\":2056:2095   */\n  tag_55\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_23\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2117:2208   */\n  tag_56\n    /* \"#utility.yul\":2166:2207   */\n  tag_57\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_24\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_26:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_27:\n    /* \"#utility.yul\":2377:2409   */\n  tag_60\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2418:2483   */\n  tag_61\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_25\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_28:\n    /* \"#utility.yul\":2555:2675   */\ntag_63:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_66\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_27\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_29:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_69\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_17\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2906:2935   */\n  tag_70\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_18\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_71:\n    /* \"#utility.yul\":3133:3213   */\n  tag_72\n    /* \"#utility.yul\":3189:3211   */\n  tag_73\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_18\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_28\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_68:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_30:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_31:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_76\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_30\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_32:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_78\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_31\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_80\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_82\n  tag_14\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4038:4094   */\ntag_81:\n    /* \"#utility.yul\":4118:4156   */\n  tag_83\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_16\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":4203:4270   */\n  tag_84\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_29\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_86\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_87:\n    /* \"#utility.yul\":5144:5211   */\n  tag_88\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_32\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_85)\n    /* \"#utility.yul\":4365:4983   */\ntag_86:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_89\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_17\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_90:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_90)\ntag_92:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_94\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_31\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_93:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_85:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"src/sHYDT.sol\":180:3099  contract sHYDT is AccessControl, ERC20, IsHYDT {... */\ntag_11:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xf22c5b16043446a68d62f47815793cbbc874be5b2e65e9e313507336d6583f6d\")\n  return(0x00, dataSize(sub_0))\nstop\ndata_4be56b54bb0483f8c7decbfd8ea4b51bf9eda8402236441b22287bf2eafd554e 5374616b65642048696768205969656c6420446f6c6c617220537461626c6520546f6b656e\n\nsub_0: assembly {\n        /* \"src/sHYDT.sol\":180:3099  contract sHYDT is AccessControl, ERC20, IsHYDT {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x42966c68\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x42966c68\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x774237fc\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x248a9ca3\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/utils/AccessControl.sol\":2686:2890  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":2229:2329  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":4589:4790  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":3358:3466  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":5370:5631  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_7:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/utils/AccessControl.sol\":4509:4640  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_8:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/utils/AccessControl.sol\":4950:5097  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"src/extensions/ERC20.sol\":3200:3293  function decimals() public view virtual override returns (uint8) {... */\n    tag_10:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/utils/AccessControl.sol\":6094:6312  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_11:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"src/extensions/ERC20.sol\":6040:6278  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_12:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/sHYDT.sol\":1586:1741  function mint(address to, uint256 amount) external override onlyRole(CALLER_ROLE) returns (bool) {... */\n    tag_13:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/sHYDT.sol\":1887:2050  function burn(uint256 amount) external override returns (bool) {... */\n    tag_14:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":3529:3656  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_15:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/sHYDT.sol\":287:362  bytes32 public constant CALLER_ROLE = keccak256(abi.encodePacked(\"Caller\")) */\n    tag_16:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/sHYDT.sol\":2843:3096  function burnFrom(address from, uint256 amount) external override onlyRole(CALLER_ROLE) returns (bool) {... */\n    tag_17:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/utils/AccessControl.sol\":2982:3129  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_18:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":2448:2552  function symbol() public view virtual override returns (string memory) {... */\n    tag_19:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/utils/AccessControl.sol\":2087:2136  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_20:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":6781:7217  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_21:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/extensions/ERC20.sol\":3862:4055  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/sHYDT.sol\":921:1395  function initialize(address earn_) external {... */\n    tag_23:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      stop\n        /* \"src/utils/AccessControl.sol\":5390:5539  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_24:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n    tag_116:\n      stop\n        /* \"src/extensions/ERC20.sol\":4118:4269  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_25:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      tag_122\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/utils/AccessControl.sol\":2686:2890  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_32:\n        /* \"src/utils/AccessControl.sol\":2771:2775  bool */\n      0x00\n        /* \"src/utils/AccessControl.sol\":2810:2842  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"src/utils/AccessControl.sol\":2795:2842  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"src/utils/AccessControl.sol\":2795:2806  interfaceId */\n      dup3\n        /* \"src/utils/AccessControl.sol\":2795:2842  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"src/utils/AccessControl.sol\":2795:2882  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_125\n      jumpi\n      pop\n        /* \"src/utils/AccessControl.sol\":2846:2882  super.supportsInterface(interfaceId) */\n      tag_126\n        /* \"src/utils/AccessControl.sol\":2870:2881  interfaceId */\n      dup3\n        /* \"src/utils/AccessControl.sol\":2846:2869  super.supportsInterface */\n      tag_127\n        /* \"src/utils/AccessControl.sol\":2846:2882  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_126:\n        /* \"src/utils/AccessControl.sol\":2795:2882  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_125:\n        /* \"src/utils/AccessControl.sol\":2788:2882  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"src/utils/AccessControl.sol\":2686:2890  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":2229:2329  function name() public view virtual override returns (string memory) {... */\n    tag_36:\n        /* \"src/extensions/ERC20.sol\":2283:2296  string memory */\n      0x60\n        /* \"src/extensions/ERC20.sol\":2316:2321  _name */\n      0x04\n        /* \"src/extensions/ERC20.sol\":2309:2321  return _name */\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_131\n      swap1\n      tag_130\n      jump\t// in\n    tag_131:\n      dup1\n      iszero\n      tag_132\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_133\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_132)\n    tag_133:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_134:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_134\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":2229:2329  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":4589:4790  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_42:\n        /* \"src/extensions/ERC20.sol\":4672:4676  bool */\n      0x00\n        /* \"src/extensions/ERC20.sol\":4689:4702  address owner */\n      dup1\n        /* \"src/extensions/ERC20.sol\":4705:4717  _msgSender() */\n      tag_136\n        /* \"src/extensions/ERC20.sol\":4705:4715  _msgSender */\n      tag_137\n        /* \"src/extensions/ERC20.sol\":4705:4717  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"src/extensions/ERC20.sol\":4689:4717  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":4728:4760  _approve(owner, spender, amount) */\n      tag_138\n        /* \"src/extensions/ERC20.sol\":4737:4742  owner */\n      dup2\n        /* \"src/extensions/ERC20.sol\":4744:4751  spender */\n      dup6\n        /* \"src/extensions/ERC20.sol\":4753:4759  amount */\n      dup6\n        /* \"src/extensions/ERC20.sol\":4728:4736  _approve */\n      tag_139\n        /* \"src/extensions/ERC20.sol\":4728:4760  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_138:\n        /* \"src/extensions/ERC20.sol\":4778:4782  true */\n      0x01\n        /* \"src/extensions/ERC20.sol\":4771:4782  return true */\n      swap2\n      pop\n      pop\n        /* \"src/extensions/ERC20.sol\":4589:4790  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":3358:3466  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"src/extensions/ERC20.sol\":3419:3426  uint256 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":3446:3458  _totalSupply */\n      sload(0x03)\n        /* \"src/extensions/ERC20.sol\":3439:3458  return _totalSupply */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":3358:3466  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":5370:5631  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_51:\n        /* \"src/extensions/ERC20.sol\":5467:5471  bool */\n      0x00\n        /* \"src/extensions/ERC20.sol\":5484:5499  address spender */\n      dup1\n        /* \"src/extensions/ERC20.sol\":5502:5514  _msgSender() */\n      tag_142\n        /* \"src/extensions/ERC20.sol\":5502:5512  _msgSender */\n      tag_137\n        /* \"src/extensions/ERC20.sol\":5502:5514  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"src/extensions/ERC20.sol\":5484:5514  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":5525:5563  _spendAllowance(from, spender, amount) */\n      tag_143\n        /* \"src/extensions/ERC20.sol\":5541:5545  from */\n      dup6\n        /* \"src/extensions/ERC20.sol\":5547:5554  spender */\n      dup3\n        /* \"src/extensions/ERC20.sol\":5556:5562  amount */\n      dup6\n        /* \"src/extensions/ERC20.sol\":5525:5540  _spendAllowance */\n      tag_144\n        /* \"src/extensions/ERC20.sol\":5525:5563  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_143:\n        /* \"src/extensions/ERC20.sol\":5574:5601  _transfer(from, to, amount) */\n      tag_145\n        /* \"src/extensions/ERC20.sol\":5584:5588  from */\n      dup6\n        /* \"src/extensions/ERC20.sol\":5590:5592  to */\n      dup6\n        /* \"src/extensions/ERC20.sol\":5594:5600  amount */\n      dup6\n        /* \"src/extensions/ERC20.sol\":5574:5583  _transfer */\n      tag_146\n        /* \"src/extensions/ERC20.sol\":5574:5601  _transfer(from, to, amount) */\n      jump\t// in\n    tag_145:\n        /* \"src/extensions/ERC20.sol\":5619:5623  true */\n      0x01\n        /* \"src/extensions/ERC20.sol\":5612:5623  return true */\n      swap2\n      pop\n      pop\n        /* \"src/extensions/ERC20.sol\":5370:5631  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":4509:4640  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_56:\n        /* \"src/utils/AccessControl.sol\":4583:4590  bytes32 */\n      0x00\n        /* \"src/utils/AccessControl.sol\":4610:4616  _roles */\n      dup1\n        /* \"src/utils/AccessControl.sol\":4610:4622  _roles[role] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":4617:4621  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":4610:4622  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/utils/AccessControl.sol\":4610:4632  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"src/utils/AccessControl.sol\":4603:4632  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"src/utils/AccessControl.sol\":4509:4640  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":4950:5097  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_62:\n        /* \"src/utils/AccessControl.sol\":5033:5051  getRoleAdmin(role) */\n      tag_148\n        /* \"src/utils/AccessControl.sol\":5046:5050  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":5033:5045  getRoleAdmin */\n      tag_56\n        /* \"src/utils/AccessControl.sol\":5033:5051  getRoleAdmin(role) */\n      jump\t// in\n    tag_148:\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      tag_150\n        /* \"src/utils/AccessControl.sol\":2589:2593  role */\n      dup2\n        /* \"src/utils/AccessControl.sol\":2578:2588  _checkRole */\n      tag_151\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      jump\t// in\n    tag_150:\n        /* \"src/utils/AccessControl.sol\":5064:5089  _grantRole(role, account) */\n      tag_153\n        /* \"src/utils/AccessControl.sol\":5075:5079  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":5081:5088  account */\n      dup4\n        /* \"src/utils/AccessControl.sol\":5064:5074  _grantRole */\n      tag_154\n        /* \"src/utils/AccessControl.sol\":5064:5089  _grantRole(role, account) */\n      jump\t// in\n    tag_153:\n        /* \"src/utils/AccessControl.sol\":4950:5097  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":3200:3293  function decimals() public view virtual override returns (uint8) {... */\n    tag_64:\n        /* \"src/extensions/ERC20.sol\":3258:3263  uint8 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":3283:3285  18 */\n      0x12\n        /* \"src/extensions/ERC20.sol\":3276:3285  return 18 */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":3200:3293  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":6094:6312  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_69:\n        /* \"src/utils/AccessControl.sol\":6201:6213  _msgSender() */\n      tag_157\n        /* \"src/utils/AccessControl.sol\":6201:6211  _msgSender */\n      tag_137\n        /* \"src/utils/AccessControl.sol\":6201:6213  _msgSender() */\n      jump\t// in\n    tag_157:\n        /* \"src/utils/AccessControl.sol\":6190:6213  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/utils/AccessControl.sol\":6190:6197  account */\n      dup2\n        /* \"src/utils/AccessControl.sol\":6190:6213  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/utils/AccessControl.sol\":6182:6265  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"src/utils/AccessControl.sol\":6278:6304  _revokeRole(role, account) */\n      tag_161\n        /* \"src/utils/AccessControl.sol\":6290:6294  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":6296:6303  account */\n      dup3\n        /* \"src/utils/AccessControl.sol\":6278:6289  _revokeRole */\n      tag_162\n        /* \"src/utils/AccessControl.sol\":6278:6304  _revokeRole(role, account) */\n      jump\t// in\n    tag_161:\n        /* \"src/utils/AccessControl.sol\":6094:6312  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":6040:6278  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_72:\n        /* \"src/extensions/ERC20.sol\":6128:6132  bool */\n      0x00\n        /* \"src/extensions/ERC20.sol\":6145:6158  address owner */\n      dup1\n        /* \"src/extensions/ERC20.sol\":6161:6173  _msgSender() */\n      tag_164\n        /* \"src/extensions/ERC20.sol\":6161:6171  _msgSender */\n      tag_137\n        /* \"src/extensions/ERC20.sol\":6161:6173  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"src/extensions/ERC20.sol\":6145:6173  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":6184:6248  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_165\n        /* \"src/extensions/ERC20.sol\":6193:6198  owner */\n      dup2\n        /* \"src/extensions/ERC20.sol\":6200:6207  spender */\n      dup6\n        /* \"src/extensions/ERC20.sol\":6237:6247  addedValue */\n      dup6\n        /* \"src/extensions/ERC20.sol\":6209:6234  allowance(owner, spender) */\n      tag_166\n        /* \"src/extensions/ERC20.sol\":6219:6224  owner */\n      dup6\n        /* \"src/extensions/ERC20.sol\":6226:6233  spender */\n      dup10\n        /* \"src/extensions/ERC20.sol\":6209:6218  allowance */\n      tag_122\n        /* \"src/extensions/ERC20.sol\":6209:6234  allowance(owner, spender) */\n      jump\t// in\n    tag_166:\n        /* \"src/extensions/ERC20.sol\":6209:6247  allowance(owner, spender) + addedValue */\n      tag_167\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"src/extensions/ERC20.sol\":6184:6192  _approve */\n      tag_139\n        /* \"src/extensions/ERC20.sol\":6184:6248  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_165:\n        /* \"src/extensions/ERC20.sol\":6266:6270  true */\n      0x01\n        /* \"src/extensions/ERC20.sol\":6259:6270  return true */\n      swap2\n      pop\n      pop\n        /* \"src/extensions/ERC20.sol\":6040:6278  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/sHYDT.sol\":1586:1741  function mint(address to, uint256 amount) external override onlyRole(CALLER_ROLE) returns (bool) {... */\n    tag_76:\n        /* \"src/sHYDT.sol\":1677:1681  bool */\n      0x00\n        /* \"src/sHYDT.sol\":335:361  abi.encodePacked(\"Caller\") */\n      add(0x20, mload(0x40))\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/sHYDT.sol\":325:362  keccak256(abi.encodePacked(\"Caller\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      tag_172\n        /* \"src/utils/AccessControl.sol\":2589:2593  role */\n      dup2\n        /* \"src/utils/AccessControl.sol\":2578:2588  _checkRole */\n      tag_151\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      jump\t// in\n    tag_172:\n        /* \"src/sHYDT.sol\":1694:1711  _mint(to, amount) */\n      tag_174\n        /* \"src/sHYDT.sol\":1700:1702  to */\n      dup5\n        /* \"src/sHYDT.sol\":1704:1710  amount */\n      dup5\n        /* \"src/sHYDT.sol\":1694:1699  _mint */\n      tag_175\n        /* \"src/sHYDT.sol\":1694:1711  _mint(to, amount) */\n      jump\t// in\n    tag_174:\n        /* \"src/sHYDT.sol\":1729:1733  true */\n      0x01\n        /* \"src/sHYDT.sol\":1722:1733  return true */\n      swap2\n      pop\n        /* \"src/sHYDT.sol\":1586:1741  function mint(address to, uint256 amount) external override onlyRole(CALLER_ROLE) returns (bool) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/sHYDT.sol\":1887:2050  function burn(uint256 amount) external override returns (bool) {... */\n    tag_81:\n        /* \"src/sHYDT.sol\":1944:1948  bool */\n      0x00\n        /* \"src/sHYDT.sol\":1961:1974  address owner */\n      dup1\n        /* \"src/sHYDT.sol\":1977:1989  _msgSender() */\n      tag_177\n        /* \"src/sHYDT.sol\":1977:1987  _msgSender */\n      tag_137\n        /* \"src/sHYDT.sol\":1977:1989  _msgSender() */\n      jump\t// in\n    tag_177:\n        /* \"src/sHYDT.sol\":1961:1989  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"src/sHYDT.sol\":2000:2020  _burn(owner, amount) */\n      tag_178\n        /* \"src/sHYDT.sol\":2006:2011  owner */\n      dup2\n        /* \"src/sHYDT.sol\":2013:2019  amount */\n      dup5\n        /* \"src/sHYDT.sol\":2000:2005  _burn */\n      tag_179\n        /* \"src/sHYDT.sol\":2000:2020  _burn(owner, amount) */\n      jump\t// in\n    tag_178:\n        /* \"src/sHYDT.sol\":2038:2042  true */\n      0x01\n        /* \"src/sHYDT.sol\":2031:2042  return true */\n      swap2\n      pop\n      pop\n        /* \"src/sHYDT.sol\":1887:2050  function burn(uint256 amount) external override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":3529:3656  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_86:\n        /* \"src/extensions/ERC20.sol\":3603:3610  uint256 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":3630:3639  _balances */\n      0x01\n        /* \"src/extensions/ERC20.sol\":3630:3648  _balances[account] */\n      0x00\n        /* \"src/extensions/ERC20.sol\":3640:3647  account */\n      dup4\n        /* \"src/extensions/ERC20.sol\":3630:3648  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/extensions/ERC20.sol\":3623:3648  return _balances[account] */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":3529:3656  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/sHYDT.sol\":287:362  bytes32 public constant CALLER_ROLE = keccak256(abi.encodePacked(\"Caller\")) */\n    tag_89:\n        /* \"src/sHYDT.sol\":335:361  abi.encodePacked(\"Caller\") */\n      add(0x20, mload(0x40))\n      tag_181\n      swap1\n      tag_170\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/sHYDT.sol\":325:362  keccak256(abi.encodePacked(\"Caller\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/sHYDT.sol\":287:362  bytes32 public constant CALLER_ROLE = keccak256(abi.encodePacked(\"Caller\")) */\n      dup2\n      jump\t// out\n        /* \"src/sHYDT.sol\":2843:3096  function burnFrom(address from, uint256 amount) external override onlyRole(CALLER_ROLE) returns (bool) {... */\n    tag_93:\n        /* \"src/sHYDT.sol\":2940:2944  bool */\n      0x00\n        /* \"src/sHYDT.sol\":335:361  abi.encodePacked(\"Caller\") */\n      add(0x20, mload(0x40))\n      tag_182\n      swap1\n      tag_170\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/sHYDT.sol\":325:362  keccak256(abi.encodePacked(\"Caller\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      tag_184\n        /* \"src/utils/AccessControl.sol\":2589:2593  role */\n      dup2\n        /* \"src/utils/AccessControl.sol\":2578:2588  _checkRole */\n      tag_151\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      jump\t// in\n    tag_184:\n        /* \"src/sHYDT.sol\":2957:2972  address spender */\n      0x00\n        /* \"src/sHYDT.sol\":2975:2987  _msgSender() */\n      tag_186\n        /* \"src/sHYDT.sol\":2975:2985  _msgSender */\n      tag_137\n        /* \"src/sHYDT.sol\":2975:2987  _msgSender() */\n      jump\t// in\n    tag_186:\n        /* \"src/sHYDT.sol\":2957:2987  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"src/sHYDT.sol\":2998:3036  _spendAllowance(from, spender, amount) */\n      tag_187\n        /* \"src/sHYDT.sol\":3014:3018  from */\n      dup6\n        /* \"src/sHYDT.sol\":3020:3027  spender */\n      dup3\n        /* \"src/sHYDT.sol\":3029:3035  amount */\n      dup7\n        /* \"src/sHYDT.sol\":2998:3013  _spendAllowance */\n      tag_144\n        /* \"src/sHYDT.sol\":2998:3036  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_187:\n        /* \"src/sHYDT.sol\":3047:3066  _burn(from, amount) */\n      tag_188\n        /* \"src/sHYDT.sol\":3053:3057  from */\n      dup6\n        /* \"src/sHYDT.sol\":3059:3065  amount */\n      dup6\n        /* \"src/sHYDT.sol\":3047:3052  _burn */\n      tag_179\n        /* \"src/sHYDT.sol\":3047:3066  _burn(from, amount) */\n      jump\t// in\n    tag_188:\n        /* \"src/sHYDT.sol\":3084:3088  true */\n      0x01\n        /* \"src/sHYDT.sol\":3077:3088  return true */\n      swap3\n      pop\n      pop\n        /* \"src/sHYDT.sol\":2843:3096  function burnFrom(address from, uint256 amount) external override onlyRole(CALLER_ROLE) returns (bool) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":2982:3129  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_97:\n        /* \"src/utils/AccessControl.sol\":3068:3072  bool */\n      0x00\n        /* \"src/utils/AccessControl.sol\":3092:3098  _roles */\n      dup1\n        /* \"src/utils/AccessControl.sol\":3092:3104  _roles[role] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":3099:3103  role */\n      dup5\n        /* \"src/utils/AccessControl.sol\":3092:3104  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/utils/AccessControl.sol\":3092:3112  _roles[role].members */\n      0x00\n      add\n        /* \"src/utils/AccessControl.sol\":3092:3121  _roles[role].members[account] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":3113:3120  account */\n      dup4\n        /* \"src/utils/AccessControl.sol\":3092:3121  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/utils/AccessControl.sol\":3085:3121  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"src/utils/AccessControl.sol\":2982:3129  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":2448:2552  function symbol() public view virtual override returns (string memory) {... */\n    tag_100:\n        /* \"src/extensions/ERC20.sol\":2504:2517  string memory */\n      0x60\n        /* \"src/extensions/ERC20.sol\":2537:2544  _symbol */\n      0x05\n        /* \"src/extensions/ERC20.sol\":2530:2544  return _symbol */\n      dup1\n      sload\n      tag_191\n      swap1\n      tag_130\n      jump\t// in\n    tag_191:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_192\n      swap1\n      tag_130\n      jump\t// in\n    tag_192:\n      dup1\n      iszero\n      tag_193\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_194\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_193)\n    tag_194:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_195:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_195\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_193:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":2448:2552  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":2087:2136  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_103:\n        /* \"src/utils/AccessControl.sol\":2132:2136  0x00 */\n      0x00\n        /* \"src/utils/AccessControl.sol\":2087:2136  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":6781:7217  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_107:\n        /* \"src/extensions/ERC20.sol\":6874:6878  bool */\n      0x00\n        /* \"src/extensions/ERC20.sol\":6891:6904  address owner */\n      dup1\n        /* \"src/extensions/ERC20.sol\":6907:6919  _msgSender() */\n      tag_197\n        /* \"src/extensions/ERC20.sol\":6907:6917  _msgSender */\n      tag_137\n        /* \"src/extensions/ERC20.sol\":6907:6919  _msgSender() */\n      jump\t// in\n    tag_197:\n        /* \"src/extensions/ERC20.sol\":6891:6919  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":6930:6954  uint256 currentAllowance */\n      0x00\n        /* \"src/extensions/ERC20.sol\":6957:6982  allowance(owner, spender) */\n      tag_198\n        /* \"src/extensions/ERC20.sol\":6967:6972  owner */\n      dup3\n        /* \"src/extensions/ERC20.sol\":6974:6981  spender */\n      dup7\n        /* \"src/extensions/ERC20.sol\":6957:6966  allowance */\n      tag_122\n        /* \"src/extensions/ERC20.sol\":6957:6982  allowance(owner, spender) */\n      jump\t// in\n    tag_198:\n        /* \"src/extensions/ERC20.sol\":6930:6982  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":7021:7036  subtractedValue */\n      dup4\n        /* \"src/extensions/ERC20.sol\":7001:7017  currentAllowance */\n      dup2\n        /* \"src/extensions/ERC20.sol\":7001:7036  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"src/extensions/ERC20.sol\":6993:7078  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"src/extensions/ERC20.sol\":7114:7174  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_202\n        /* \"src/extensions/ERC20.sol\":7123:7128  owner */\n      dup3\n        /* \"src/extensions/ERC20.sol\":7130:7137  spender */\n      dup7\n        /* \"src/extensions/ERC20.sol\":7158:7173  subtractedValue */\n      dup7\n        /* \"src/extensions/ERC20.sol\":7139:7155  currentAllowance */\n      dup5\n        /* \"src/extensions/ERC20.sol\":7139:7173  currentAllowance - subtractedValue */\n      sub\n        /* \"src/extensions/ERC20.sol\":7114:7122  _approve */\n      tag_139\n        /* \"src/extensions/ERC20.sol\":7114:7174  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_202:\n        /* \"src/extensions/ERC20.sol\":7205:7209  true */\n      0x01\n        /* \"src/extensions/ERC20.sol\":7198:7209  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"src/extensions/ERC20.sol\":6781:7217  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":3862:4055  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_111:\n        /* \"src/extensions/ERC20.sol\":3941:3945  bool */\n      0x00\n        /* \"src/extensions/ERC20.sol\":3958:3971  address owner */\n      dup1\n        /* \"src/extensions/ERC20.sol\":3974:3986  _msgSender() */\n      tag_204\n        /* \"src/extensions/ERC20.sol\":3974:3984  _msgSender */\n      tag_137\n        /* \"src/extensions/ERC20.sol\":3974:3986  _msgSender() */\n      jump\t// in\n    tag_204:\n        /* \"src/extensions/ERC20.sol\":3958:3986  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":3997:4025  _transfer(owner, to, amount) */\n      tag_205\n        /* \"src/extensions/ERC20.sol\":4007:4012  owner */\n      dup2\n        /* \"src/extensions/ERC20.sol\":4014:4016  to */\n      dup6\n        /* \"src/extensions/ERC20.sol\":4018:4024  amount */\n      dup6\n        /* \"src/extensions/ERC20.sol\":3997:4006  _transfer */\n      tag_146\n        /* \"src/extensions/ERC20.sol\":3997:4025  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_205:\n        /* \"src/extensions/ERC20.sol\":4043:4047  true */\n      0x01\n        /* \"src/extensions/ERC20.sol\":4036:4047  return true */\n      swap2\n      pop\n      pop\n        /* \"src/extensions/ERC20.sol\":3862:4055  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/sHYDT.sol\":921:1395  function initialize(address earn_) external {... */\n    tag_115:\n        /* \"src/sHYDT.sol\":1000:1012  _initializer */\n      immutable(\"0xf22c5b16043446a68d62f47815793cbbc874be5b2e65e9e313507336d6583f6d\")\n        /* \"src/sHYDT.sol\":984:1012  _msgSender() == _initializer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/sHYDT.sol\":984:996  _msgSender() */\n      tag_207\n        /* \"src/sHYDT.sol\":984:994  _msgSender */\n      tag_137\n        /* \"src/sHYDT.sol\":984:996  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"src/sHYDT.sol\":984:1012  _msgSender() == _initializer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/sHYDT.sol\":976:1053  require(_msgSender() == _initializer, \"sHYDT: caller is not the initializer\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"src/sHYDT.sol\":1184:1185  0 */\n      0x00\n        /* \"src/sHYDT.sol\":1167:1186  earn_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/sHYDT.sol\":1167:1172  earn_ */\n      dup2\n        /* \"src/sHYDT.sol\":1167:1186  earn_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/sHYDT.sol\":1159:1218  require(earn_ != address(0), \"sHYDT: invalid Earn address\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"src/sHYDT.sol\":1229:1259  _grantRole(CALLER_ROLE, earn_) */\n      tag_214\n        /* \"src/sHYDT.sol\":335:361  abi.encodePacked(\"Caller\") */\n      add(0x20, mload(0x40))\n      tag_215\n      swap1\n      tag_170\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/sHYDT.sol\":325:362  keccak256(abi.encodePacked(\"Caller\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/sHYDT.sol\":1253:1258  earn_ */\n      dup3\n        /* \"src/sHYDT.sol\":1229:1239  _grantRole */\n      tag_154\n        /* \"src/sHYDT.sol\":1229:1259  _grantRole(CALLER_ROLE, earn_) */\n      jump\t// in\n    tag_214:\n        /* \"src/sHYDT.sol\":1311:1355  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      tag_216\n        /* \"src/utils/AccessControl.sol\":2132:2136  0x00 */\n      0x00\n        /* \"src/sHYDT.sol\":1322:1340  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"src/sHYDT.sol\":1342:1354  _msgSender() */\n      tag_217\n        /* \"src/sHYDT.sol\":1342:1352  _msgSender */\n      tag_137\n        /* \"src/sHYDT.sol\":1342:1354  _msgSender() */\n      jump\t// in\n    tag_217:\n        /* \"src/sHYDT.sol\":1311:1321  _grantRole */\n      tag_154\n        /* \"src/sHYDT.sol\":1311:1355  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n      jump\t// in\n    tag_216:\n        /* \"src/sHYDT.sol\":1383:1387  true */\n      0x01\n        /* \"src/sHYDT.sol\":1366:1380  _isInitialized */\n      0x06\n      0x00\n        /* \"src/sHYDT.sol\":1366:1387  _isInitialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/sHYDT.sol\":921:1395  function initialize(address earn_) external {... */\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":5390:5539  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_118:\n        /* \"src/utils/AccessControl.sol\":5474:5492  getRoleAdmin(role) */\n      tag_218\n        /* \"src/utils/AccessControl.sol\":5487:5491  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":5474:5486  getRoleAdmin */\n      tag_56\n        /* \"src/utils/AccessControl.sol\":5474:5492  getRoleAdmin(role) */\n      jump\t// in\n    tag_218:\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      tag_220\n        /* \"src/utils/AccessControl.sol\":2589:2593  role */\n      dup2\n        /* \"src/utils/AccessControl.sol\":2578:2588  _checkRole */\n      tag_151\n        /* \"src/utils/AccessControl.sol\":2578:2594  _checkRole(role) */\n      jump\t// in\n    tag_220:\n        /* \"src/utils/AccessControl.sol\":5505:5531  _revokeRole(role, account) */\n      tag_222\n        /* \"src/utils/AccessControl.sol\":5517:5521  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":5523:5530  account */\n      dup4\n        /* \"src/utils/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_162\n        /* \"src/utils/AccessControl.sol\":5505:5531  _revokeRole(role, account) */\n      jump\t// in\n    tag_222:\n        /* \"src/utils/AccessControl.sol\":5390:5539  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":4118:4269  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_122:\n        /* \"src/extensions/ERC20.sol\":4207:4214  uint256 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":4234:4245  _allowances */\n      0x02\n        /* \"src/extensions/ERC20.sol\":4234:4252  _allowances[owner] */\n      0x00\n        /* \"src/extensions/ERC20.sol\":4246:4251  owner */\n      dup5\n        /* \"src/extensions/ERC20.sol\":4234:4252  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/extensions/ERC20.sol\":4234:4261  _allowances[owner][spender] */\n      0x00\n        /* \"src/extensions/ERC20.sol\":4253:4260  spender */\n      dup4\n        /* \"src/extensions/ERC20.sol\":4234:4261  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/extensions/ERC20.sol\":4227:4261  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":4118:4269  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/ERC165.sol\":866:1023  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_127:\n        /* \"src/utils/ERC165.sol\":951:955  bool */\n      0x00\n        /* \"src/utils/ERC165.sol\":990:1015  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"src/utils/ERC165.sol\":975:1015  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"src/utils/ERC165.sol\":975:986  interfaceId */\n      dup3\n        /* \"src/utils/ERC165.sol\":975:1015  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"src/utils/ERC165.sol\":968:1015  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"src/utils/ERC165.sol\":866:1023  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n    tag_137:\n        /* \"src/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"src/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"src/utils/Context.sol\":729:746  return msg.sender */\n      swap1\n      pop\n        /* \"src/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":10774:11120  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_139:\n        /* \"src/extensions/ERC20.sol\":10893:10894  0 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":10876:10895  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/extensions/ERC20.sol\":10876:10881  owner */\n      dup4\n        /* \"src/extensions/ERC20.sol\":10876:10895  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/extensions/ERC20.sol\":10868:10936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n        /* \"src/extensions/ERC20.sol\":10974:10975  0 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":10955:10976  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/extensions/ERC20.sol\":10955:10962  spender */\n      dup3\n        /* \"src/extensions/ERC20.sol\":10955:10976  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/extensions/ERC20.sol\":10947:11015  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"src/extensions/ERC20.sol\":11058:11064  amount */\n      dup1\n        /* \"src/extensions/ERC20.sol\":11028:11039  _allowances */\n      0x02\n        /* \"src/extensions/ERC20.sol\":11028:11046  _allowances[owner] */\n      0x00\n        /* \"src/extensions/ERC20.sol\":11040:11045  owner */\n      dup6\n        /* \"src/extensions/ERC20.sol\":11028:11046  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/extensions/ERC20.sol\":11028:11055  _allowances[owner][spender] */\n      0x00\n        /* \"src/extensions/ERC20.sol\":11047:11054  spender */\n      dup5\n        /* \"src/extensions/ERC20.sol\":11028:11055  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/extensions/ERC20.sol\":11028:11064  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/extensions/ERC20.sol\":11096:11103  spender */\n      dup2\n        /* \"src/extensions/ERC20.sol\":11080:11112  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/extensions/ERC20.sol\":11089:11094  owner */\n      dup4\n        /* \"src/extensions/ERC20.sol\":11080:11112  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"src/extensions/ERC20.sol\":11105:11111  amount */\n      dup4\n        /* \"src/extensions/ERC20.sol\":11080:11112  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_233\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/extensions/ERC20.sol\":10774:11120  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":11411:11830  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_144:\n        /* \"src/extensions/ERC20.sol\":11512:11536  uint256 currentAllowance */\n      0x00\n        /* \"src/extensions/ERC20.sol\":11539:11564  allowance(owner, spender) */\n      tag_235\n        /* \"src/extensions/ERC20.sol\":11549:11554  owner */\n      dup5\n        /* \"src/extensions/ERC20.sol\":11556:11563  spender */\n      dup5\n        /* \"src/extensions/ERC20.sol\":11539:11548  allowance */\n      tag_122\n        /* \"src/extensions/ERC20.sol\":11539:11564  allowance(owner, spender) */\n      jump\t// in\n    tag_235:\n        /* \"src/extensions/ERC20.sol\":11512:11564  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":11599:11616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"src/extensions/ERC20.sol\":11579:11595  currentAllowance */\n      dup2\n        /* \"src/extensions/ERC20.sol\":11579:11616  currentAllowance != type(uint256).max */\n      eq\n        /* \"src/extensions/ERC20.sol\":11575:11823  if (currentAllowance != type(uint256).max) {... */\n      tag_236\n      jumpi\n        /* \"src/extensions/ERC20.sol\":11661:11667  amount */\n      dup2\n        /* \"src/extensions/ERC20.sol\":11641:11657  currentAllowance */\n      dup2\n        /* \"src/extensions/ERC20.sol\":11641:11667  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"src/extensions/ERC20.sol\":11633:11701  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"src/extensions/ERC20.sol\":11745:11796  _approve(owner, spender, currentAllowance - amount) */\n      tag_240\n        /* \"src/extensions/ERC20.sol\":11754:11759  owner */\n      dup5\n        /* \"src/extensions/ERC20.sol\":11761:11768  spender */\n      dup5\n        /* \"src/extensions/ERC20.sol\":11789:11795  amount */\n      dup5\n        /* \"src/extensions/ERC20.sol\":11770:11786  currentAllowance */\n      dup5\n        /* \"src/extensions/ERC20.sol\":11770:11795  currentAllowance - amount */\n      sub\n        /* \"src/extensions/ERC20.sol\":11745:11753  _approve */\n      tag_139\n        /* \"src/extensions/ERC20.sol\":11745:11796  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_240:\n        /* \"src/extensions/ERC20.sol\":11575:11823  if (currentAllowance != type(uint256).max) {... */\n    tag_236:\n        /* \"src/extensions/ERC20.sol\":11501:11830  {... */\n      pop\n        /* \"src/extensions/ERC20.sol\":11411:11830  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":7687:8493  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_146:\n        /* \"src/extensions/ERC20.sol\":7800:7801  0 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":7784:7802  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/extensions/ERC20.sol\":7784:7788  from */\n      dup4\n        /* \"src/extensions/ERC20.sol\":7784:7802  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/extensions/ERC20.sol\":7776:7844  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"src/extensions/ERC20.sol\":7877:7878  0 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":7863:7879  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/extensions/ERC20.sol\":7863:7865  to */\n      dup3\n        /* \"src/extensions/ERC20.sol\":7863:7879  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/extensions/ERC20.sol\":7855:7919  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_245:\n        /* \"src/extensions/ERC20.sol\":7932:7970  _beforeTokenTransfer(from, to, amount) */\n      tag_248\n        /* \"src/extensions/ERC20.sol\":7953:7957  from */\n      dup4\n        /* \"src/extensions/ERC20.sol\":7959:7961  to */\n      dup4\n        /* \"src/extensions/ERC20.sol\":7963:7969  amount */\n      dup4\n        /* \"src/extensions/ERC20.sol\":7932:7952  _beforeTokenTransfer */\n      tag_249\n        /* \"src/extensions/ERC20.sol\":7932:7970  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_248:\n        /* \"src/extensions/ERC20.sol\":7983:8002  uint256 fromBalance */\n      0x00\n        /* \"src/extensions/ERC20.sol\":8005:8014  _balances */\n      0x01\n        /* \"src/extensions/ERC20.sol\":8005:8020  _balances[from] */\n      0x00\n        /* \"src/extensions/ERC20.sol\":8015:8019  from */\n      dup6\n        /* \"src/extensions/ERC20.sol\":8005:8020  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/extensions/ERC20.sol\":7983:8020  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":8054:8060  amount */\n      dup2\n        /* \"src/extensions/ERC20.sol\":8039:8050  fromBalance */\n      dup2\n        /* \"src/extensions/ERC20.sol\":8039:8060  fromBalance >= amount */\n      lt\n      iszero\n        /* \"src/extensions/ERC20.sol\":8031:8103  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n        /* \"src/extensions/ERC20.sol\":8171:8177  amount */\n      dup2\n        /* \"src/extensions/ERC20.sol\":8157:8168  fromBalance */\n      dup2\n        /* \"src/extensions/ERC20.sol\":8157:8177  fromBalance - amount */\n      sub\n        /* \"src/extensions/ERC20.sol\":8139:8148  _balances */\n      0x01\n        /* \"src/extensions/ERC20.sol\":8139:8154  _balances[from] */\n      0x00\n        /* \"src/extensions/ERC20.sol\":8149:8153  from */\n      dup7\n        /* \"src/extensions/ERC20.sol\":8139:8154  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/extensions/ERC20.sol\":8139:8177  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/extensions/ERC20.sol\":8374:8380  amount */\n      dup2\n        /* \"src/extensions/ERC20.sol\":8357:8366  _balances */\n      0x01\n        /* \"src/extensions/ERC20.sol\":8357:8370  _balances[to] */\n      0x00\n        /* \"src/extensions/ERC20.sol\":8367:8369  to */\n      dup6\n        /* \"src/extensions/ERC20.sol\":8357:8370  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/extensions/ERC20.sol\":8357:8380  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/extensions/ERC20.sol\":8424:8426  to */\n      dup3\n        /* \"src/extensions/ERC20.sol\":8409:8435  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/extensions/ERC20.sol\":8418:8422  from */\n      dup5\n        /* \"src/extensions/ERC20.sol\":8409:8435  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"src/extensions/ERC20.sol\":8428:8434  amount */\n      dup5\n        /* \"src/extensions/ERC20.sol\":8409:8435  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_253\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/extensions/ERC20.sol\":8448:8485  _afterTokenTransfer(from, to, amount) */\n      tag_254\n        /* \"src/extensions/ERC20.sol\":8468:8472  from */\n      dup5\n        /* \"src/extensions/ERC20.sol\":8474:8476  to */\n      dup5\n        /* \"src/extensions/ERC20.sol\":8478:8484  amount */\n      dup5\n        /* \"src/extensions/ERC20.sol\":8448:8467  _afterTokenTransfer */\n      tag_255\n        /* \"src/extensions/ERC20.sol\":8448:8485  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_254:\n        /* \"src/extensions/ERC20.sol\":7765:8493  {... */\n      pop\n        /* \"src/extensions/ERC20.sol\":7687:8493  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":3433:3538  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_151:\n        /* \"src/utils/AccessControl.sol\":3500:3530  _checkRole(role, _msgSender()) */\n      tag_257\n        /* \"src/utils/AccessControl.sol\":3511:3515  role */\n      dup2\n        /* \"src/utils/AccessControl.sol\":3517:3529  _msgSender() */\n      tag_258\n        /* \"src/utils/AccessControl.sol\":3517:3527  _msgSender */\n      tag_137\n        /* \"src/utils/AccessControl.sol\":3517:3529  _msgSender() */\n      jump\t// in\n    tag_258:\n        /* \"src/utils/AccessControl.sol\":3500:3510  _checkRole */\n      tag_259\n        /* \"src/utils/AccessControl.sol\":3500:3530  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_257:\n        /* \"src/utils/AccessControl.sol\":3433:3538  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":7691:7929  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_154:\n        /* \"src/utils/AccessControl.sol\":7775:7797  hasRole(role, account) */\n      tag_261\n        /* \"src/utils/AccessControl.sol\":7783:7787  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":7789:7796  account */\n      dup3\n        /* \"src/utils/AccessControl.sol\":7775:7782  hasRole */\n      tag_97\n        /* \"src/utils/AccessControl.sol\":7775:7797  hasRole(role, account) */\n      jump\t// in\n    tag_261:\n        /* \"src/utils/AccessControl.sol\":7770:7922  if (!hasRole(role, account)) {... */\n      tag_262\n      jumpi\n        /* \"src/utils/AccessControl.sol\":7846:7850  true */\n      0x01\n        /* \"src/utils/AccessControl.sol\":7814:7820  _roles */\n      0x00\n        /* \"src/utils/AccessControl.sol\":7814:7826  _roles[role] */\n      dup1\n        /* \"src/utils/AccessControl.sol\":7821:7825  role */\n      dup5\n        /* \"src/utils/AccessControl.sol\":7814:7826  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/utils/AccessControl.sol\":7814:7834  _roles[role].members */\n      0x00\n      add\n        /* \"src/utils/AccessControl.sol\":7814:7843  _roles[role].members[account] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":7835:7842  account */\n      dup4\n        /* \"src/utils/AccessControl.sol\":7814:7843  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/utils/AccessControl.sol\":7814:7850  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/utils/AccessControl.sol\":7897:7909  _msgSender() */\n      tag_263\n        /* \"src/utils/AccessControl.sol\":7897:7907  _msgSender */\n      tag_137\n        /* \"src/utils/AccessControl.sol\":7897:7909  _msgSender() */\n      jump\t// in\n    tag_263:\n        /* \"src/utils/AccessControl.sol\":7870:7910  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/utils/AccessControl.sol\":7888:7895  account */\n      dup2\n        /* \"src/utils/AccessControl.sol\":7870:7910  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/utils/AccessControl.sol\":7882:7886  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":7870:7910  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/utils/AccessControl.sol\":7770:7922  if (!hasRole(role, account)) {... */\n    tag_262:\n        /* \"src/utils/AccessControl.sol\":7691:7929  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":8109:8348  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_162:\n        /* \"src/utils/AccessControl.sol\":8193:8215  hasRole(role, account) */\n      tag_265\n        /* \"src/utils/AccessControl.sol\":8201:8205  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":8207:8214  account */\n      dup3\n        /* \"src/utils/AccessControl.sol\":8193:8200  hasRole */\n      tag_97\n        /* \"src/utils/AccessControl.sol\":8193:8215  hasRole(role, account) */\n      jump\t// in\n    tag_265:\n        /* \"src/utils/AccessControl.sol\":8189:8341  if (hasRole(role, account)) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"src/utils/AccessControl.sol\":8264:8269  false */\n      0x00\n        /* \"src/utils/AccessControl.sol\":8232:8238  _roles */\n      dup1\n        /* \"src/utils/AccessControl.sol\":8232:8244  _roles[role] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":8239:8243  role */\n      dup5\n        /* \"src/utils/AccessControl.sol\":8232:8244  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/utils/AccessControl.sol\":8232:8252  _roles[role].members */\n      0x00\n      add\n        /* \"src/utils/AccessControl.sol\":8232:8261  _roles[role].members[account] */\n      0x00\n        /* \"src/utils/AccessControl.sol\":8253:8260  account */\n      dup4\n        /* \"src/utils/AccessControl.sol\":8232:8261  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/utils/AccessControl.sol\":8232:8269  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/utils/AccessControl.sol\":8316:8328  _msgSender() */\n      tag_267\n        /* \"src/utils/AccessControl.sol\":8316:8326  _msgSender */\n      tag_137\n        /* \"src/utils/AccessControl.sol\":8316:8328  _msgSender() */\n      jump\t// in\n    tag_267:\n        /* \"src/utils/AccessControl.sol\":8289:8329  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/utils/AccessControl.sol\":8307:8314  account */\n      dup2\n        /* \"src/utils/AccessControl.sol\":8289:8329  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/utils/AccessControl.sol\":8301:8305  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":8289:8329  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/utils/AccessControl.sol\":8189:8341  if (hasRole(role, account)) {... */\n    tag_266:\n        /* \"src/utils/AccessControl.sol\":8109:8348  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":8780:9328  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_175:\n        /* \"src/extensions/ERC20.sol\":8883:8884  0 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":8864:8885  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/extensions/ERC20.sol\":8864:8871  account */\n      dup3\n        /* \"src/extensions/ERC20.sol\":8864:8885  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/extensions/ERC20.sol\":8856:8921  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_269:\n        /* \"src/extensions/ERC20.sol\":8934:8983  _beforeTokenTransfer(address(0), account, amount) */\n      tag_272\n        /* \"src/extensions/ERC20.sol\":8963:8964  0 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":8967:8974  account */\n      dup4\n        /* \"src/extensions/ERC20.sol\":8976:8982  amount */\n      dup4\n        /* \"src/extensions/ERC20.sol\":8934:8954  _beforeTokenTransfer */\n      tag_249\n        /* \"src/extensions/ERC20.sol\":8934:8983  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_272:\n        /* \"src/extensions/ERC20.sol\":9012:9018  amount */\n      dup1\n        /* \"src/extensions/ERC20.sol\":8996:9008  _totalSupply */\n      0x03\n      0x00\n        /* \"src/extensions/ERC20.sol\":8996:9018  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_273\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_273:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/extensions/ERC20.sol\":9189:9195  amount */\n      dup1\n        /* \"src/extensions/ERC20.sol\":9167:9176  _balances */\n      0x01\n        /* \"src/extensions/ERC20.sol\":9167:9185  _balances[account] */\n      0x00\n        /* \"src/extensions/ERC20.sol\":9177:9184  account */\n      dup5\n        /* \"src/extensions/ERC20.sol\":9167:9185  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/extensions/ERC20.sol\":9167:9195  _balances[account] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/extensions/ERC20.sol\":9243:9250  account */\n      dup2\n        /* \"src/extensions/ERC20.sol\":9222:9259  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/extensions/ERC20.sol\":9239:9240  0 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":9222:9259  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"src/extensions/ERC20.sol\":9252:9258  amount */\n      dup4\n        /* \"src/extensions/ERC20.sol\":9222:9259  Transfer(address(0), account, amount) */\n      mload(0x40)\n      tag_274\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/extensions/ERC20.sol\":9272:9320  _afterTokenTransfer(address(0), account, amount) */\n      tag_275\n        /* \"src/extensions/ERC20.sol\":9300:9301  0 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":9304:9311  account */\n      dup4\n        /* \"src/extensions/ERC20.sol\":9313:9319  amount */\n      dup4\n        /* \"src/extensions/ERC20.sol\":9272:9291  _afterTokenTransfer */\n      tag_255\n        /* \"src/extensions/ERC20.sol\":9272:9320  _afterTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_275:\n        /* \"src/extensions/ERC20.sol\":8780:9328  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":9661:10336  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_179:\n        /* \"src/extensions/ERC20.sol\":9764:9765  0 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":9745:9766  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/extensions/ERC20.sol\":9745:9752  account */\n      dup3\n        /* \"src/extensions/ERC20.sol\":9745:9766  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/extensions/ERC20.sol\":9737:9804  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"src/extensions/ERC20.sol\":9817:9866  _beforeTokenTransfer(account, address(0), amount) */\n      tag_280\n        /* \"src/extensions/ERC20.sol\":9838:9845  account */\n      dup3\n        /* \"src/extensions/ERC20.sol\":9855:9856  0 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":9859:9865  amount */\n      dup4\n        /* \"src/extensions/ERC20.sol\":9817:9837  _beforeTokenTransfer */\n      tag_249\n        /* \"src/extensions/ERC20.sol\":9817:9866  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_280:\n        /* \"src/extensions/ERC20.sol\":9879:9901  uint256 accountBalance */\n      0x00\n        /* \"src/extensions/ERC20.sol\":9904:9913  _balances */\n      0x01\n        /* \"src/extensions/ERC20.sol\":9904:9922  _balances[account] */\n      0x00\n        /* \"src/extensions/ERC20.sol\":9914:9921  account */\n      dup5\n        /* \"src/extensions/ERC20.sol\":9904:9922  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/extensions/ERC20.sol\":9879:9922  uint256 accountBalance = _balances[account] */\n      swap1\n      pop\n        /* \"src/extensions/ERC20.sol\":9959:9965  amount */\n      dup2\n        /* \"src/extensions/ERC20.sol\":9941:9955  accountBalance */\n      dup2\n        /* \"src/extensions/ERC20.sol\":9941:9965  accountBalance >= amount */\n      lt\n      iszero\n        /* \"src/extensions/ERC20.sol\":9933:10004  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_281:\n        /* \"src/extensions/ERC20.sol\":10078:10084  amount */\n      dup2\n        /* \"src/extensions/ERC20.sol\":10061:10075  accountBalance */\n      dup2\n        /* \"src/extensions/ERC20.sol\":10061:10084  accountBalance - amount */\n      sub\n        /* \"src/extensions/ERC20.sol\":10040:10049  _balances */\n      0x01\n        /* \"src/extensions/ERC20.sol\":10040:10058  _balances[account] */\n      0x00\n        /* \"src/extensions/ERC20.sol\":10050:10057  account */\n      dup6\n        /* \"src/extensions/ERC20.sol\":10040:10058  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/extensions/ERC20.sol\":10040:10084  _balances[account] = accountBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/extensions/ERC20.sol\":10195:10201  amount */\n      dup2\n        /* \"src/extensions/ERC20.sol\":10179:10191  _totalSupply */\n      0x03\n      0x00\n        /* \"src/extensions/ERC20.sol\":10179:10201  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/extensions/ERC20.sol\":10256:10257  0 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":10230:10267  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/extensions/ERC20.sol\":10239:10246  account */\n      dup4\n        /* \"src/extensions/ERC20.sol\":10230:10267  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"src/extensions/ERC20.sol\":10260:10266  amount */\n      dup5\n        /* \"src/extensions/ERC20.sol\":10230:10267  Transfer(account, address(0), amount) */\n      mload(0x40)\n      tag_284\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/extensions/ERC20.sol\":10280:10328  _afterTokenTransfer(account, address(0), amount) */\n      tag_285\n        /* \"src/extensions/ERC20.sol\":10300:10307  account */\n      dup4\n        /* \"src/extensions/ERC20.sol\":10317:10318  0 */\n      0x00\n        /* \"src/extensions/ERC20.sol\":10321:10327  amount */\n      dup5\n        /* \"src/extensions/ERC20.sol\":10280:10299  _afterTokenTransfer */\n      tag_255\n        /* \"src/extensions/ERC20.sol\":10280:10328  _afterTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_285:\n        /* \"src/extensions/ERC20.sol\":9726:10336  {... */\n      pop\n        /* \"src/extensions/ERC20.sol\":9661:10336  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":12430:12521  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_249:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/extensions/ERC20.sol\":13125:13215  function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_255:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/utils/AccessControl.sol\":3828:4320  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_259:\n        /* \"src/utils/AccessControl.sol\":3917:3939  hasRole(role, account) */\n      tag_289\n        /* \"src/utils/AccessControl.sol\":3925:3929  role */\n      dup3\n        /* \"src/utils/AccessControl.sol\":3931:3938  account */\n      dup3\n        /* \"src/utils/AccessControl.sol\":3917:3924  hasRole */\n      tag_97\n        /* \"src/utils/AccessControl.sol\":3917:3939  hasRole(role, account) */\n      jump\t// in\n    tag_289:\n        /* \"src/utils/AccessControl.sol\":3912:4313  if (!hasRole(role, account)) {... */\n      tag_290\n      jumpi\n        /* \"src/utils/AccessControl.sol\":4105:4133  Strings.toHexString(account) */\n      tag_291\n        /* \"src/utils/AccessControl.sol\":4125:4132  account */\n      dup2\n        /* \"src/utils/AccessControl.sol\":4105:4124  Strings.toHexString */\n      tag_292\n        /* \"src/utils/AccessControl.sol\":4105:4133  Strings.toHexString(account) */\n      jump\t// in\n    tag_291:\n        /* \"src/utils/AccessControl.sol\":4206:4244  Strings.toHexString(uint256(role), 32) */\n      tag_293\n        /* \"src/utils/AccessControl.sol\":4234:4238  role */\n      dup4\n        /* \"src/utils/AccessControl.sol\":4226:4239  uint256(role) */\n      0x00\n      shr\n        /* \"src/utils/AccessControl.sol\":4241:4243  32 */\n      0x20\n        /* \"src/utils/AccessControl.sol\":4206:4225  Strings.toHexString */\n      tag_294\n        /* \"src/utils/AccessControl.sol\":4206:4244  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_293:\n        /* \"src/utils/AccessControl.sol\":4010:4267  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_295\n      swap3\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/utils/AccessControl.sol\":3956:4301  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/utils/AccessControl.sol\":3912:4313  if (!hasRole(role, account)) {... */\n    tag_290:\n        /* \"src/utils/AccessControl.sol\":3828:4320  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/libraries/Strings.sol\":2471:2622  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_292:\n        /* \"src/libraries/Strings.sol\":2529:2542  string memory */\n      0x60\n        /* \"src/libraries/Strings.sol\":2562:2614  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_299\n        /* \"src/libraries/Strings.sol\":2590:2594  addr */\n      dup3\n        /* \"src/libraries/Strings.sol\":2574:2596  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/libraries/Strings.sol\":346:348  20 */\n      0x14\n        /* \"src/libraries/Strings.sol\":2562:2614  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"src/libraries/Strings.sol\":2562:2573  toHexString */\n      tag_294\n        /* \"src/libraries/Strings.sol\":2562:2614  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_299:\n        /* \"src/libraries/Strings.sol\":2555:2614  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"src/libraries/Strings.sol\":2471:2622  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/libraries/Strings.sol\":1867:2314  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_294:\n        /* \"src/libraries/Strings.sol\":1942:1955  string memory */\n      0x60\n        /* \"src/libraries/Strings.sol\":1968:1987  bytes memory buffer */\n      0x00\n        /* \"src/libraries/Strings.sol\":2013:2014  2 */\n      0x02\n        /* \"src/libraries/Strings.sol\":2004:2010  length */\n      dup4\n        /* \"src/libraries/Strings.sol\":2000:2001  2 */\n      0x02\n        /* \"src/libraries/Strings.sol\":2000:2010  2 * length */\n      tag_301\n      swap2\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n        /* \"src/libraries/Strings.sol\":2000:2014  2 * length + 2 */\n      tag_303\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_303:\n        /* \"src/libraries/Strings.sol\":1990:2015  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_304\n      jumpi\n      tag_305\n      tag_306\n      jump\t// in\n    tag_305:\n    tag_304:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_307\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_307:\n      pop\n        /* \"src/libraries/Strings.sol\":1968:2015  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"src/libraries/Strings.sol\":2026:2041  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"src/libraries/Strings.sol\":2026:2032  buffer */\n      dup2\n        /* \"src/libraries/Strings.sol\":2033:2034  0 */\n      0x00\n        /* \"src/libraries/Strings.sol\":2026:2035  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_308\n      jumpi\n      tag_309\n      tag_310\n      jump\t// in\n    tag_309:\n    tag_308:\n      0x20\n      add\n      add\n        /* \"src/libraries/Strings.sol\":2026:2041  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"src/libraries/Strings.sol\":2052:2067  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"src/libraries/Strings.sol\":2052:2058  buffer */\n      dup2\n        /* \"src/libraries/Strings.sol\":2059:2060  1 */\n      0x01\n        /* \"src/libraries/Strings.sol\":2052:2061  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_311\n      jumpi\n      tag_312\n      tag_310\n      jump\t// in\n    tag_312:\n    tag_311:\n      0x20\n      add\n      add\n        /* \"src/libraries/Strings.sol\":2052:2067  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"src/libraries/Strings.sol\":2083:2092  uint256 i */\n      0x00\n        /* \"src/libraries/Strings.sol\":2108:2109  1 */\n      0x01\n        /* \"src/libraries/Strings.sol\":2099:2105  length */\n      dup5\n        /* \"src/libraries/Strings.sol\":2095:2096  2 */\n      0x02\n        /* \"src/libraries/Strings.sol\":2095:2105  2 * length */\n      tag_316\n      swap2\n      swap1\n      tag_302\n      jump\t// in\n    tag_316:\n        /* \"src/libraries/Strings.sol\":2095:2109  2 * length + 1 */\n      tag_317\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_317:\n        /* \"src/libraries/Strings.sol\":2083:2109  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"src/libraries/Strings.sol\":2078:2209  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_313:\n        /* \"src/libraries/Strings.sol\":2115:2116  1 */\n      0x01\n        /* \"src/libraries/Strings.sol\":2111:2112  i */\n      dup2\n        /* \"src/libraries/Strings.sol\":2111:2116  i > 1 */\n      gt\n        /* \"src/libraries/Strings.sol\":2078:2209  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_314\n      jumpi\n        /* \"src/libraries/Strings.sol\":2150:2158  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"src/libraries/Strings.sol\":2167:2170  0xf */\n      0x0f\n        /* \"src/libraries/Strings.sol\":2159:2164  value */\n      dup7\n        /* \"src/libraries/Strings.sol\":2159:2170  value & 0xf */\n      and\n        /* \"src/libraries/Strings.sol\":2150:2171  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_318\n      jumpi\n      tag_319\n      tag_310\n      jump\t// in\n    tag_319:\n    tag_318:\n      byte\n      0xf8\n      shl\n        /* \"src/libraries/Strings.sol\":2138:2144  buffer */\n      dup3\n        /* \"src/libraries/Strings.sol\":2145:2146  i */\n      dup3\n        /* \"src/libraries/Strings.sol\":2138:2147  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_320\n      jumpi\n      tag_321\n      tag_310\n      jump\t// in\n    tag_321:\n    tag_320:\n      0x20\n      add\n      add\n        /* \"src/libraries/Strings.sol\":2138:2171  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"src/libraries/Strings.sol\":2196:2197  4 */\n      0x04\n        /* \"src/libraries/Strings.sol\":2186:2197  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"src/libraries/Strings.sol\":2118:2121  --i */\n      dup1\n      tag_322\n      swap1\n      tag_323\n      jump\t// in\n    tag_322:\n      swap1\n      pop\n        /* \"src/libraries/Strings.sol\":2078:2209  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_313)\n    tag_314:\n      pop\n        /* \"src/libraries/Strings.sol\":2236:2237  0 */\n      0x00\n        /* \"src/libraries/Strings.sol\":2227:2232  value */\n      dup5\n        /* \"src/libraries/Strings.sol\":2227:2237  value == 0 */\n      eq\n        /* \"src/libraries/Strings.sol\":2219:2274  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap1\n      tag_326\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_324:\n        /* \"src/libraries/Strings.sol\":2299:2305  buffer */\n      dup1\n        /* \"src/libraries/Strings.sol\":2285:2306  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"src/libraries/Strings.sol\":1867:2314  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_328:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_330:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_331:\n        /* \"#utility.yul\":561:584   */\n      tag_398\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_330\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_399\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_399:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_332:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_401\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_331\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_31:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_404\n      tag_328\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":833:952   */\n    tag_403:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_405\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_332\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_333:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_334:\n        /* \"#utility.yul\":1268:1289   */\n      tag_408\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_333\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_34:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_410\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_334\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_335:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_336:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_337:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_414:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_414)\n    tag_416:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_338:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_339:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_419\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_335\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":2329:2400   */\n      tag_420\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_336\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_421\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_337\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2499:2528   */\n      tag_422\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_338\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_38:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_424\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_339\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2986   */\n    tag_340:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2937:2979   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2930:2935   */\n      dup3\n        /* \"#utility.yul\":2926:2980   */\n      and\n        /* \"#utility.yul\":2915:2980   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2992:3088   */\n    tag_341:\n        /* \"#utility.yul\":3029:3036   */\n      0x00\n        /* \"#utility.yul\":3058:3082   */\n      tag_427\n        /* \"#utility.yul\":3076:3081   */\n      dup3\n        /* \"#utility.yul\":3058:3082   */\n      tag_340\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3047:3082   */\n      swap1\n      pop\n        /* \"#utility.yul\":2992:3088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3094:3216   */\n    tag_342:\n        /* \"#utility.yul\":3167:3191   */\n      tag_429\n        /* \"#utility.yul\":3185:3190   */\n      dup2\n        /* \"#utility.yul\":3167:3191   */\n      tag_341\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":3160:3165   */\n      dup2\n        /* \"#utility.yul\":3157:3192   */\n      eq\n        /* \"#utility.yul\":3147:3210   */\n      tag_430\n      jumpi\n        /* \"#utility.yul\":3206:3207   */\n      0x00\n        /* \"#utility.yul\":3203:3204   */\n      dup1\n        /* \"#utility.yul\":3196:3208   */\n      revert\n        /* \"#utility.yul\":3147:3210   */\n    tag_430:\n        /* \"#utility.yul\":3094:3216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3222:3361   */\n    tag_343:\n        /* \"#utility.yul\":3268:3273   */\n      0x00\n        /* \"#utility.yul\":3306:3312   */\n      dup2\n        /* \"#utility.yul\":3293:3313   */\n      calldataload\n        /* \"#utility.yul\":3284:3313   */\n      swap1\n      pop\n        /* \"#utility.yul\":3322:3355   */\n      tag_432\n        /* \"#utility.yul\":3349:3354   */\n      dup2\n        /* \"#utility.yul\":3322:3355   */\n      tag_342\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3222:3361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3367:3444   */\n    tag_344:\n        /* \"#utility.yul\":3404:3411   */\n      0x00\n        /* \"#utility.yul\":3433:3438   */\n      dup2\n        /* \"#utility.yul\":3422:3438   */\n      swap1\n      pop\n        /* \"#utility.yul\":3367:3444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3450:3572   */\n    tag_345:\n        /* \"#utility.yul\":3523:3547   */\n      tag_435\n        /* \"#utility.yul\":3541:3546   */\n      dup2\n        /* \"#utility.yul\":3523:3547   */\n      tag_344\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3516:3521   */\n      dup2\n        /* \"#utility.yul\":3513:3548   */\n      eq\n        /* \"#utility.yul\":3503:3566   */\n      tag_436\n      jumpi\n        /* \"#utility.yul\":3562:3563   */\n      0x00\n        /* \"#utility.yul\":3559:3560   */\n      dup1\n        /* \"#utility.yul\":3552:3564   */\n      revert\n        /* \"#utility.yul\":3503:3566   */\n    tag_436:\n        /* \"#utility.yul\":3450:3572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3578:3717   */\n    tag_346:\n        /* \"#utility.yul\":3624:3629   */\n      0x00\n        /* \"#utility.yul\":3662:3668   */\n      dup2\n        /* \"#utility.yul\":3649:3669   */\n      calldataload\n        /* \"#utility.yul\":3640:3669   */\n      swap1\n      pop\n        /* \"#utility.yul\":3678:3711   */\n      tag_438\n        /* \"#utility.yul\":3705:3710   */\n      dup2\n        /* \"#utility.yul\":3678:3711   */\n      tag_345\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":3578:3717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3723:4197   */\n    tag_41:\n        /* \"#utility.yul\":3791:3797   */\n      0x00\n        /* \"#utility.yul\":3799:3805   */\n      dup1\n        /* \"#utility.yul\":3848:3850   */\n      0x40\n        /* \"#utility.yul\":3836:3845   */\n      dup4\n        /* \"#utility.yul\":3827:3834   */\n      dup6\n        /* \"#utility.yul\":3823:3846   */\n      sub\n        /* \"#utility.yul\":3819:3851   */\n      slt\n        /* \"#utility.yul\":3816:3935   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":3854:3933   */\n      tag_441\n      tag_328\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":3816:3935   */\n    tag_440:\n        /* \"#utility.yul\":3974:3975   */\n      0x00\n        /* \"#utility.yul\":3999:4052   */\n      tag_442\n        /* \"#utility.yul\":4044:4051   */\n      dup6\n        /* \"#utility.yul\":4035:4041   */\n      dup3\n        /* \"#utility.yul\":4024:4033   */\n      dup7\n        /* \"#utility.yul\":4020:4042   */\n      add\n        /* \"#utility.yul\":3999:4052   */\n      tag_343\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":3989:4052   */\n      swap3\n      pop\n        /* \"#utility.yul\":3945:4062   */\n      pop\n        /* \"#utility.yul\":4101:4103   */\n      0x20\n        /* \"#utility.yul\":4127:4180   */\n      tag_443\n        /* \"#utility.yul\":4172:4179   */\n      dup6\n        /* \"#utility.yul\":4163:4169   */\n      dup3\n        /* \"#utility.yul\":4152:4161   */\n      dup7\n        /* \"#utility.yul\":4148:4170   */\n      add\n        /* \"#utility.yul\":4127:4180   */\n      tag_346\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":4117:4180   */\n      swap2\n      pop\n        /* \"#utility.yul\":4072:4190   */\n      pop\n        /* \"#utility.yul\":3723:4197   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4203:4321   */\n    tag_347:\n        /* \"#utility.yul\":4290:4314   */\n      tag_445\n        /* \"#utility.yul\":4308:4313   */\n      dup2\n        /* \"#utility.yul\":4290:4314   */\n      tag_344\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":4285:4288   */\n      dup3\n        /* \"#utility.yul\":4278:4315   */\n      mstore\n        /* \"#utility.yul\":4203:4321   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4327:4549   */\n    tag_47:\n        /* \"#utility.yul\":4420:4424   */\n      0x00\n        /* \"#utility.yul\":4458:4460   */\n      0x20\n        /* \"#utility.yul\":4447:4456   */\n      dup3\n        /* \"#utility.yul\":4443:4461   */\n      add\n        /* \"#utility.yul\":4435:4461   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4542   */\n      tag_447\n        /* \"#utility.yul\":4539:4540   */\n      0x00\n        /* \"#utility.yul\":4528:4537   */\n      dup4\n        /* \"#utility.yul\":4524:4541   */\n      add\n        /* \"#utility.yul\":4515:4521   */\n      dup5\n        /* \"#utility.yul\":4471:4542   */\n      tag_347\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":4327:4549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4555:5174   */\n    tag_50:\n        /* \"#utility.yul\":4632:4638   */\n      0x00\n        /* \"#utility.yul\":4640:4646   */\n      dup1\n        /* \"#utility.yul\":4648:4654   */\n      0x00\n        /* \"#utility.yul\":4697:4699   */\n      0x60\n        /* \"#utility.yul\":4685:4694   */\n      dup5\n        /* \"#utility.yul\":4676:4683   */\n      dup7\n        /* \"#utility.yul\":4672:4695   */\n      sub\n        /* \"#utility.yul\":4668:4700   */\n      slt\n        /* \"#utility.yul\":4665:4784   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":4703:4782   */\n      tag_450\n      tag_328\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":4665:4784   */\n    tag_449:\n        /* \"#utility.yul\":4823:4824   */\n      0x00\n        /* \"#utility.yul\":4848:4901   */\n      tag_451\n        /* \"#utility.yul\":4893:4900   */\n      dup7\n        /* \"#utility.yul\":4884:4890   */\n      dup3\n        /* \"#utility.yul\":4873:4882   */\n      dup8\n        /* \"#utility.yul\":4869:4891   */\n      add\n        /* \"#utility.yul\":4848:4901   */\n      tag_343\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":4838:4901   */\n      swap4\n      pop\n        /* \"#utility.yul\":4794:4911   */\n      pop\n        /* \"#utility.yul\":4950:4952   */\n      0x20\n        /* \"#utility.yul\":4976:5029   */\n      tag_452\n        /* \"#utility.yul\":5021:5028   */\n      dup7\n        /* \"#utility.yul\":5012:5018   */\n      dup3\n        /* \"#utility.yul\":5001:5010   */\n      dup8\n        /* \"#utility.yul\":4997:5019   */\n      add\n        /* \"#utility.yul\":4976:5029   */\n      tag_343\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":4966:5029   */\n      swap3\n      pop\n        /* \"#utility.yul\":4921:5039   */\n      pop\n        /* \"#utility.yul\":5078:5080   */\n      0x40\n        /* \"#utility.yul\":5104:5157   */\n      tag_453\n        /* \"#utility.yul\":5149:5156   */\n      dup7\n        /* \"#utility.yul\":5140:5146   */\n      dup3\n        /* \"#utility.yul\":5129:5138   */\n      dup8\n        /* \"#utility.yul\":5125:5147   */\n      add\n        /* \"#utility.yul\":5104:5157   */\n      tag_346\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":5094:5157   */\n      swap2\n      pop\n        /* \"#utility.yul\":5049:5167   */\n      pop\n        /* \"#utility.yul\":4555:5174   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5180:5257   */\n    tag_348:\n        /* \"#utility.yul\":5217:5224   */\n      0x00\n        /* \"#utility.yul\":5246:5251   */\n      dup2\n        /* \"#utility.yul\":5235:5251   */\n      swap1\n      pop\n        /* \"#utility.yul\":5180:5257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5263:5385   */\n    tag_349:\n        /* \"#utility.yul\":5336:5360   */\n      tag_456\n        /* \"#utility.yul\":5354:5359   */\n      dup2\n        /* \"#utility.yul\":5336:5360   */\n      tag_348\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":5329:5334   */\n      dup2\n        /* \"#utility.yul\":5326:5361   */\n      eq\n        /* \"#utility.yul\":5316:5379   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":5375:5376   */\n      0x00\n        /* \"#utility.yul\":5372:5373   */\n      dup1\n        /* \"#utility.yul\":5365:5377   */\n      revert\n        /* \"#utility.yul\":5316:5379   */\n    tag_457:\n        /* \"#utility.yul\":5263:5385   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5391:5530   */\n    tag_350:\n        /* \"#utility.yul\":5437:5442   */\n      0x00\n        /* \"#utility.yul\":5475:5481   */\n      dup2\n        /* \"#utility.yul\":5462:5482   */\n      calldataload\n        /* \"#utility.yul\":5453:5482   */\n      swap1\n      pop\n        /* \"#utility.yul\":5491:5524   */\n      tag_459\n        /* \"#utility.yul\":5518:5523   */\n      dup2\n        /* \"#utility.yul\":5491:5524   */\n      tag_349\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":5391:5530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5536:5865   */\n    tag_55:\n        /* \"#utility.yul\":5595:5601   */\n      0x00\n        /* \"#utility.yul\":5644:5646   */\n      0x20\n        /* \"#utility.yul\":5632:5641   */\n      dup3\n        /* \"#utility.yul\":5623:5630   */\n      dup5\n        /* \"#utility.yul\":5619:5642   */\n      sub\n        /* \"#utility.yul\":5615:5647   */\n      slt\n        /* \"#utility.yul\":5612:5731   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":5650:5729   */\n      tag_462\n      tag_328\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":5612:5731   */\n    tag_461:\n        /* \"#utility.yul\":5770:5771   */\n      0x00\n        /* \"#utility.yul\":5795:5848   */\n      tag_463\n        /* \"#utility.yul\":5840:5847   */\n      dup5\n        /* \"#utility.yul\":5831:5837   */\n      dup3\n        /* \"#utility.yul\":5820:5829   */\n      dup6\n        /* \"#utility.yul\":5816:5838   */\n      add\n        /* \"#utility.yul\":5795:5848   */\n      tag_350\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":5785:5848   */\n      swap2\n      pop\n        /* \"#utility.yul\":5741:5858   */\n      pop\n        /* \"#utility.yul\":5536:5865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5871:5989   */\n    tag_351:\n        /* \"#utility.yul\":5958:5982   */\n      tag_465\n        /* \"#utility.yul\":5976:5981   */\n      dup2\n        /* \"#utility.yul\":5958:5982   */\n      tag_348\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5953:5956   */\n      dup3\n        /* \"#utility.yul\":5946:5983   */\n      mstore\n        /* \"#utility.yul\":5871:5989   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5995:6217   */\n    tag_58:\n        /* \"#utility.yul\":6088:6092   */\n      0x00\n        /* \"#utility.yul\":6126:6128   */\n      0x20\n        /* \"#utility.yul\":6115:6124   */\n      dup3\n        /* \"#utility.yul\":6111:6129   */\n      add\n        /* \"#utility.yul\":6103:6129   */\n      swap1\n      pop\n        /* \"#utility.yul\":6139:6210   */\n      tag_467\n        /* \"#utility.yul\":6207:6208   */\n      0x00\n        /* \"#utility.yul\":6196:6205   */\n      dup4\n        /* \"#utility.yul\":6192:6209   */\n      add\n        /* \"#utility.yul\":6183:6189   */\n      dup5\n        /* \"#utility.yul\":6139:6210   */\n      tag_351\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":5995:6217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6223:6697   */\n    tag_61:\n        /* \"#utility.yul\":6291:6297   */\n      0x00\n        /* \"#utility.yul\":6299:6305   */\n      dup1\n        /* \"#utility.yul\":6348:6350   */\n      0x40\n        /* \"#utility.yul\":6336:6345   */\n      dup4\n        /* \"#utility.yul\":6327:6334   */\n      dup6\n        /* \"#utility.yul\":6323:6346   */\n      sub\n        /* \"#utility.yul\":6319:6351   */\n      slt\n        /* \"#utility.yul\":6316:6435   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":6354:6433   */\n      tag_470\n      tag_328\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":6316:6435   */\n    tag_469:\n        /* \"#utility.yul\":6474:6475   */\n      0x00\n        /* \"#utility.yul\":6499:6552   */\n      tag_471\n        /* \"#utility.yul\":6544:6551   */\n      dup6\n        /* \"#utility.yul\":6535:6541   */\n      dup3\n        /* \"#utility.yul\":6524:6533   */\n      dup7\n        /* \"#utility.yul\":6520:6542   */\n      add\n        /* \"#utility.yul\":6499:6552   */\n      tag_350\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":6489:6552   */\n      swap3\n      pop\n        /* \"#utility.yul\":6445:6562   */\n      pop\n        /* \"#utility.yul\":6601:6603   */\n      0x20\n        /* \"#utility.yul\":6627:6680   */\n      tag_472\n        /* \"#utility.yul\":6672:6679   */\n      dup6\n        /* \"#utility.yul\":6663:6669   */\n      dup3\n        /* \"#utility.yul\":6652:6661   */\n      dup7\n        /* \"#utility.yul\":6648:6670   */\n      add\n        /* \"#utility.yul\":6627:6680   */\n      tag_343\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":6617:6680   */\n      swap2\n      pop\n        /* \"#utility.yul\":6572:6690   */\n      pop\n        /* \"#utility.yul\":6223:6697   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6703:6789   */\n    tag_352:\n        /* \"#utility.yul\":6738:6745   */\n      0x00\n        /* \"#utility.yul\":6778:6782   */\n      0xff\n        /* \"#utility.yul\":6771:6776   */\n      dup3\n        /* \"#utility.yul\":6767:6783   */\n      and\n        /* \"#utility.yul\":6756:6783   */\n      swap1\n      pop\n        /* \"#utility.yul\":6703:6789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6795:6907   */\n    tag_353:\n        /* \"#utility.yul\":6878:6900   */\n      tag_475\n        /* \"#utility.yul\":6894:6899   */\n      dup2\n        /* \"#utility.yul\":6878:6900   */\n      tag_352\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":6873:6876   */\n      dup3\n        /* \"#utility.yul\":6866:6901   */\n      mstore\n        /* \"#utility.yul\":6795:6907   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6913:7127   */\n    tag_66:\n        /* \"#utility.yul\":7002:7006   */\n      0x00\n        /* \"#utility.yul\":7040:7042   */\n      0x20\n        /* \"#utility.yul\":7029:7038   */\n      dup3\n        /* \"#utility.yul\":7025:7043   */\n      add\n        /* \"#utility.yul\":7017:7043   */\n      swap1\n      pop\n        /* \"#utility.yul\":7053:7120   */\n      tag_477\n        /* \"#utility.yul\":7117:7118   */\n      0x00\n        /* \"#utility.yul\":7106:7115   */\n      dup4\n        /* \"#utility.yul\":7102:7119   */\n      add\n        /* \"#utility.yul\":7093:7099   */\n      dup5\n        /* \"#utility.yul\":7053:7120   */\n      tag_353\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":6913:7127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7133:7462   */\n    tag_80:\n        /* \"#utility.yul\":7192:7198   */\n      0x00\n        /* \"#utility.yul\":7241:7243   */\n      0x20\n        /* \"#utility.yul\":7229:7238   */\n      dup3\n        /* \"#utility.yul\":7220:7227   */\n      dup5\n        /* \"#utility.yul\":7216:7239   */\n      sub\n        /* \"#utility.yul\":7212:7244   */\n      slt\n        /* \"#utility.yul\":7209:7328   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":7247:7326   */\n      tag_480\n      tag_328\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":7209:7328   */\n    tag_479:\n        /* \"#utility.yul\":7367:7368   */\n      0x00\n        /* \"#utility.yul\":7392:7445   */\n      tag_481\n        /* \"#utility.yul\":7437:7444   */\n      dup5\n        /* \"#utility.yul\":7428:7434   */\n      dup3\n        /* \"#utility.yul\":7417:7426   */\n      dup6\n        /* \"#utility.yul\":7413:7435   */\n      add\n        /* \"#utility.yul\":7392:7445   */\n      tag_346\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":7382:7445   */\n      swap2\n      pop\n        /* \"#utility.yul\":7338:7455   */\n      pop\n        /* \"#utility.yul\":7133:7462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7468:7797   */\n    tag_85:\n        /* \"#utility.yul\":7527:7533   */\n      0x00\n        /* \"#utility.yul\":7576:7578   */\n      0x20\n        /* \"#utility.yul\":7564:7573   */\n      dup3\n        /* \"#utility.yul\":7555:7562   */\n      dup5\n        /* \"#utility.yul\":7551:7574   */\n      sub\n        /* \"#utility.yul\":7547:7579   */\n      slt\n        /* \"#utility.yul\":7544:7663   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":7582:7661   */\n      tag_484\n      tag_328\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":7544:7663   */\n    tag_483:\n        /* \"#utility.yul\":7702:7703   */\n      0x00\n        /* \"#utility.yul\":7727:7780   */\n      tag_485\n        /* \"#utility.yul\":7772:7779   */\n      dup5\n        /* \"#utility.yul\":7763:7769   */\n      dup3\n        /* \"#utility.yul\":7752:7761   */\n      dup6\n        /* \"#utility.yul\":7748:7770   */\n      add\n        /* \"#utility.yul\":7727:7780   */\n      tag_343\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":7717:7780   */\n      swap2\n      pop\n        /* \"#utility.yul\":7673:7790   */\n      pop\n        /* \"#utility.yul\":7468:7797   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7803:8277   */\n    tag_121:\n        /* \"#utility.yul\":7871:7877   */\n      0x00\n        /* \"#utility.yul\":7879:7885   */\n      dup1\n        /* \"#utility.yul\":7928:7930   */\n      0x40\n        /* \"#utility.yul\":7916:7925   */\n      dup4\n        /* \"#utility.yul\":7907:7914   */\n      dup6\n        /* \"#utility.yul\":7903:7926   */\n      sub\n        /* \"#utility.yul\":7899:7931   */\n      slt\n        /* \"#utility.yul\":7896:8015   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":7934:8013   */\n      tag_488\n      tag_328\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":7896:8015   */\n    tag_487:\n        /* \"#utility.yul\":8054:8055   */\n      0x00\n        /* \"#utility.yul\":8079:8132   */\n      tag_489\n        /* \"#utility.yul\":8124:8131   */\n      dup6\n        /* \"#utility.yul\":8115:8121   */\n      dup3\n        /* \"#utility.yul\":8104:8113   */\n      dup7\n        /* \"#utility.yul\":8100:8122   */\n      add\n        /* \"#utility.yul\":8079:8132   */\n      tag_343\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":8069:8132   */\n      swap3\n      pop\n        /* \"#utility.yul\":8025:8142   */\n      pop\n        /* \"#utility.yul\":8181:8183   */\n      0x20\n        /* \"#utility.yul\":8207:8260   */\n      tag_490\n        /* \"#utility.yul\":8252:8259   */\n      dup6\n        /* \"#utility.yul\":8243:8249   */\n      dup3\n        /* \"#utility.yul\":8232:8241   */\n      dup7\n        /* \"#utility.yul\":8228:8250   */\n      add\n        /* \"#utility.yul\":8207:8260   */\n      tag_343\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":8197:8260   */\n      swap2\n      pop\n        /* \"#utility.yul\":8152:8270   */\n      pop\n        /* \"#utility.yul\":7803:8277   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8283:8463   */\n    tag_354:\n        /* \"#utility.yul\":8331:8408   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8328:8329   */\n      0x00\n        /* \"#utility.yul\":8321:8409   */\n      mstore\n        /* \"#utility.yul\":8428:8432   */\n      0x22\n        /* \"#utility.yul\":8425:8426   */\n      0x04\n        /* \"#utility.yul\":8418:8433   */\n      mstore\n        /* \"#utility.yul\":8452:8456   */\n      0x24\n        /* \"#utility.yul\":8449:8450   */\n      0x00\n        /* \"#utility.yul\":8442:8457   */\n      revert\n        /* \"#utility.yul\":8469:8789   */\n    tag_130:\n        /* \"#utility.yul\":8513:8519   */\n      0x00\n        /* \"#utility.yul\":8550:8551   */\n      0x02\n        /* \"#utility.yul\":8544:8548   */\n      dup3\n        /* \"#utility.yul\":8540:8552   */\n      div\n        /* \"#utility.yul\":8530:8552   */\n      swap1\n      pop\n        /* \"#utility.yul\":8597:8598   */\n      0x01\n        /* \"#utility.yul\":8591:8595   */\n      dup3\n        /* \"#utility.yul\":8587:8599   */\n      and\n        /* \"#utility.yul\":8618:8636   */\n      dup1\n        /* \"#utility.yul\":8608:8689   */\n      tag_493\n      jumpi\n        /* \"#utility.yul\":8674:8678   */\n      0x7f\n        /* \"#utility.yul\":8666:8672   */\n      dup3\n        /* \"#utility.yul\":8662:8679   */\n      and\n        /* \"#utility.yul\":8652:8679   */\n      swap2\n      pop\n        /* \"#utility.yul\":8608:8689   */\n    tag_493:\n        /* \"#utility.yul\":8736:8738   */\n      0x20\n        /* \"#utility.yul\":8728:8734   */\n      dup3\n        /* \"#utility.yul\":8725:8739   */\n      lt\n        /* \"#utility.yul\":8705:8723   */\n      dup2\n        /* \"#utility.yul\":8702:8740   */\n      sub\n        /* \"#utility.yul\":8699:8783   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":8755:8773   */\n      tag_495\n      tag_354\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":8699:8783   */\n    tag_494:\n        /* \"#utility.yul\":8520:8789   */\n      pop\n        /* \"#utility.yul\":8469:8789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8795:9029   */\n    tag_355:\n        /* \"#utility.yul\":8935:8969   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":8931:8932   */\n      0x00\n        /* \"#utility.yul\":8923:8929   */\n      dup3\n        /* \"#utility.yul\":8919:8933   */\n      add\n        /* \"#utility.yul\":8912:8970   */\n      mstore\n        /* \"#utility.yul\":9004:9021   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":8999:9001   */\n      0x20\n        /* \"#utility.yul\":8991:8997   */\n      dup3\n        /* \"#utility.yul\":8987:9002   */\n      add\n        /* \"#utility.yul\":8980:9022   */\n      mstore\n        /* \"#utility.yul\":8795:9029   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9035:9401   */\n    tag_356:\n        /* \"#utility.yul\":9177:9180   */\n      0x00\n        /* \"#utility.yul\":9198:9265   */\n      tag_498\n        /* \"#utility.yul\":9262:9264   */\n      0x2f\n        /* \"#utility.yul\":9257:9260   */\n      dup4\n        /* \"#utility.yul\":9198:9265   */\n      tag_336\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9191:9265   */\n      swap2\n      pop\n        /* \"#utility.yul\":9274:9367   */\n      tag_499\n        /* \"#utility.yul\":9363:9366   */\n      dup3\n        /* \"#utility.yul\":9274:9367   */\n      tag_355\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":9392:9394   */\n      0x40\n        /* \"#utility.yul\":9387:9390   */\n      dup3\n        /* \"#utility.yul\":9383:9395   */\n      add\n        /* \"#utility.yul\":9376:9395   */\n      swap1\n      pop\n        /* \"#utility.yul\":9035:9401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9407:9826   */\n    tag_160:\n        /* \"#utility.yul\":9573:9577   */\n      0x00\n        /* \"#utility.yul\":9611:9613   */\n      0x20\n        /* \"#utility.yul\":9600:9609   */\n      dup3\n        /* \"#utility.yul\":9596:9614   */\n      add\n        /* \"#utility.yul\":9588:9614   */\n      swap1\n      pop\n        /* \"#utility.yul\":9660:9669   */\n      dup2\n        /* \"#utility.yul\":9654:9658   */\n      dup2\n        /* \"#utility.yul\":9650:9670   */\n      sub\n        /* \"#utility.yul\":9646:9647   */\n      0x00\n        /* \"#utility.yul\":9635:9644   */\n      dup4\n        /* \"#utility.yul\":9631:9648   */\n      add\n        /* \"#utility.yul\":9624:9671   */\n      mstore\n        /* \"#utility.yul\":9688:9819   */\n      tag_501\n        /* \"#utility.yul\":9814:9818   */\n      dup2\n        /* \"#utility.yul\":9688:9819   */\n      tag_356\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":9680:9819   */\n      swap1\n      pop\n        /* \"#utility.yul\":9407:9826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9832:10012   */\n    tag_357:\n        /* \"#utility.yul\":9880:9957   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9877:9878   */\n      0x00\n        /* \"#utility.yul\":9870:9958   */\n      mstore\n        /* \"#utility.yul\":9977:9981   */\n      0x11\n        /* \"#utility.yul\":9974:9975   */\n      0x04\n        /* \"#utility.yul\":9967:9982   */\n      mstore\n        /* \"#utility.yul\":10001:10005   */\n      0x24\n        /* \"#utility.yul\":9998:9999   */\n      0x00\n        /* \"#utility.yul\":9991:10006   */\n      revert\n        /* \"#utility.yul\":10018:10209   */\n    tag_168:\n        /* \"#utility.yul\":10058:10061   */\n      0x00\n        /* \"#utility.yul\":10077:10097   */\n      tag_504\n        /* \"#utility.yul\":10095:10096   */\n      dup3\n        /* \"#utility.yul\":10077:10097   */\n      tag_344\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":10072:10097   */\n      swap2\n      pop\n        /* \"#utility.yul\":10111:10131   */\n      tag_505\n        /* \"#utility.yul\":10129:10130   */\n      dup4\n        /* \"#utility.yul\":10111:10131   */\n      tag_344\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":10106:10131   */\n      swap3\n      pop\n        /* \"#utility.yul\":10154:10155   */\n      dup3\n        /* \"#utility.yul\":10151:10152   */\n      dup3\n        /* \"#utility.yul\":10147:10156   */\n      add\n        /* \"#utility.yul\":10140:10156   */\n      swap1\n      pop\n        /* \"#utility.yul\":10175:10178   */\n      dup1\n        /* \"#utility.yul\":10172:10173   */\n      dup3\n        /* \"#utility.yul\":10169:10179   */\n      gt\n        /* \"#utility.yul\":10166:10202   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":10182:10200   */\n      tag_507\n      tag_357\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":10166:10202   */\n    tag_506:\n        /* \"#utility.yul\":10018:10209   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10215:10363   */\n    tag_358:\n        /* \"#utility.yul\":10317:10328   */\n      0x00\n        /* \"#utility.yul\":10354:10357   */\n      dup2\n        /* \"#utility.yul\":10339:10357   */\n      swap1\n      pop\n        /* \"#utility.yul\":10215:10363   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10369:10525   */\n    tag_359:\n        /* \"#utility.yul\":10509:10517   */\n      0x43616c6c65720000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10505:10506   */\n      0x00\n        /* \"#utility.yul\":10497:10503   */\n      dup3\n        /* \"#utility.yul\":10493:10507   */\n      add\n        /* \"#utility.yul\":10486:10518   */\n      mstore\n        /* \"#utility.yul\":10369:10525   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10531:10931   */\n    tag_360:\n        /* \"#utility.yul\":10691:10694   */\n      0x00\n        /* \"#utility.yul\":10712:10796   */\n      tag_511\n        /* \"#utility.yul\":10794:10795   */\n      0x06\n        /* \"#utility.yul\":10789:10792   */\n      dup4\n        /* \"#utility.yul\":10712:10796   */\n      tag_358\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":10705:10796   */\n      swap2\n      pop\n        /* \"#utility.yul\":10805:10898   */\n      tag_512\n        /* \"#utility.yul\":10894:10897   */\n      dup3\n        /* \"#utility.yul\":10805:10898   */\n      tag_359\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10923:10924   */\n      0x06\n        /* \"#utility.yul\":10918:10921   */\n      dup3\n        /* \"#utility.yul\":10914:10925   */\n      add\n        /* \"#utility.yul\":10907:10925   */\n      swap1\n      pop\n        /* \"#utility.yul\":10531:10931   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10937:11318   */\n    tag_170:\n        /* \"#utility.yul\":11122:11125   */\n      0x00\n        /* \"#utility.yul\":11144:11292   */\n      tag_514\n        /* \"#utility.yul\":11288:11291   */\n      dup3\n        /* \"#utility.yul\":11144:11292   */\n      tag_360\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":11137:11292   */\n      swap2\n      pop\n        /* \"#utility.yul\":11309:11312   */\n      dup2\n        /* \"#utility.yul\":11302:11312   */\n      swap1\n      pop\n        /* \"#utility.yul\":10937:11318   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11324:11548   */\n    tag_361:\n        /* \"#utility.yul\":11464:11498   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":11460:11461   */\n      0x00\n        /* \"#utility.yul\":11452:11458   */\n      dup3\n        /* \"#utility.yul\":11448:11462   */\n      add\n        /* \"#utility.yul\":11441:11499   */\n      mstore\n        /* \"#utility.yul\":11533:11540   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11528:11530   */\n      0x20\n        /* \"#utility.yul\":11520:11526   */\n      dup3\n        /* \"#utility.yul\":11516:11531   */\n      add\n        /* \"#utility.yul\":11509:11541   */\n      mstore\n        /* \"#utility.yul\":11324:11548   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11554:11920   */\n    tag_362:\n        /* \"#utility.yul\":11696:11699   */\n      0x00\n        /* \"#utility.yul\":11717:11784   */\n      tag_517\n        /* \"#utility.yul\":11781:11783   */\n      0x25\n        /* \"#utility.yul\":11776:11779   */\n      dup4\n        /* \"#utility.yul\":11717:11784   */\n      tag_336\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":11710:11784   */\n      swap2\n      pop\n        /* \"#utility.yul\":11793:11886   */\n      tag_518\n        /* \"#utility.yul\":11882:11885   */\n      dup3\n        /* \"#utility.yul\":11793:11886   */\n      tag_361\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":11911:11913   */\n      0x40\n        /* \"#utility.yul\":11906:11909   */\n      dup3\n        /* \"#utility.yul\":11902:11914   */\n      add\n        /* \"#utility.yul\":11895:11914   */\n      swap1\n      pop\n        /* \"#utility.yul\":11554:11920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11926:12345   */\n    tag_201:\n        /* \"#utility.yul\":12092:12096   */\n      0x00\n        /* \"#utility.yul\":12130:12132   */\n      0x20\n        /* \"#utility.yul\":12119:12128   */\n      dup3\n        /* \"#utility.yul\":12115:12133   */\n      add\n        /* \"#utility.yul\":12107:12133   */\n      swap1\n      pop\n        /* \"#utility.yul\":12179:12188   */\n      dup2\n        /* \"#utility.yul\":12173:12177   */\n      dup2\n        /* \"#utility.yul\":12169:12189   */\n      sub\n        /* \"#utility.yul\":12165:12166   */\n      0x00\n        /* \"#utility.yul\":12154:12163   */\n      dup4\n        /* \"#utility.yul\":12150:12167   */\n      add\n        /* \"#utility.yul\":12143:12190   */\n      mstore\n        /* \"#utility.yul\":12207:12338   */\n      tag_520\n        /* \"#utility.yul\":12333:12337   */\n      dup2\n        /* \"#utility.yul\":12207:12338   */\n      tag_362\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":12199:12338   */\n      swap1\n      pop\n        /* \"#utility.yul\":11926:12345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12351:12574   */\n    tag_363:\n        /* \"#utility.yul\":12491:12525   */\n      0x73485944543a2063616c6c6572206973206e6f742074686520696e697469616c\n        /* \"#utility.yul\":12487:12488   */\n      0x00\n        /* \"#utility.yul\":12479:12485   */\n      dup3\n        /* \"#utility.yul\":12475:12489   */\n      add\n        /* \"#utility.yul\":12468:12526   */\n      mstore\n        /* \"#utility.yul\":12560:12566   */\n      0x697a657200000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12555:12557   */\n      0x20\n        /* \"#utility.yul\":12547:12553   */\n      dup3\n        /* \"#utility.yul\":12543:12558   */\n      add\n        /* \"#utility.yul\":12536:12567   */\n      mstore\n        /* \"#utility.yul\":12351:12574   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12580:12946   */\n    tag_364:\n        /* \"#utility.yul\":12722:12725   */\n      0x00\n        /* \"#utility.yul\":12743:12810   */\n      tag_523\n        /* \"#utility.yul\":12807:12809   */\n      0x24\n        /* \"#utility.yul\":12802:12805   */\n      dup4\n        /* \"#utility.yul\":12743:12810   */\n      tag_336\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":12736:12810   */\n      swap2\n      pop\n        /* \"#utility.yul\":12819:12912   */\n      tag_524\n        /* \"#utility.yul\":12908:12911   */\n      dup3\n        /* \"#utility.yul\":12819:12912   */\n      tag_363\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":12937:12939   */\n      0x40\n        /* \"#utility.yul\":12932:12935   */\n      dup3\n        /* \"#utility.yul\":12928:12940   */\n      add\n        /* \"#utility.yul\":12921:12940   */\n      swap1\n      pop\n        /* \"#utility.yul\":12580:12946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12952:13371   */\n    tag_210:\n        /* \"#utility.yul\":13118:13122   */\n      0x00\n        /* \"#utility.yul\":13156:13158   */\n      0x20\n        /* \"#utility.yul\":13145:13154   */\n      dup3\n        /* \"#utility.yul\":13141:13159   */\n      add\n        /* \"#utility.yul\":13133:13159   */\n      swap1\n      pop\n        /* \"#utility.yul\":13205:13214   */\n      dup2\n        /* \"#utility.yul\":13199:13203   */\n      dup2\n        /* \"#utility.yul\":13195:13215   */\n      sub\n        /* \"#utility.yul\":13191:13192   */\n      0x00\n        /* \"#utility.yul\":13180:13189   */\n      dup4\n        /* \"#utility.yul\":13176:13193   */\n      add\n        /* \"#utility.yul\":13169:13216   */\n      mstore\n        /* \"#utility.yul\":13233:13364   */\n      tag_526\n        /* \"#utility.yul\":13359:13363   */\n      dup2\n        /* \"#utility.yul\":13233:13364   */\n      tag_364\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":13225:13364   */\n      swap1\n      pop\n        /* \"#utility.yul\":12952:13371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13377:13554   */\n    tag_365:\n        /* \"#utility.yul\":13517:13546   */\n      0x73485944543a20696e76616c6964204561726e20616464726573730000000000\n        /* \"#utility.yul\":13513:13514   */\n      0x00\n        /* \"#utility.yul\":13505:13511   */\n      dup3\n        /* \"#utility.yul\":13501:13515   */\n      add\n        /* \"#utility.yul\":13494:13547   */\n      mstore\n        /* \"#utility.yul\":13377:13554   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13560:13926   */\n    tag_366:\n        /* \"#utility.yul\":13702:13705   */\n      0x00\n        /* \"#utility.yul\":13723:13790   */\n      tag_529\n        /* \"#utility.yul\":13787:13789   */\n      0x1b\n        /* \"#utility.yul\":13782:13785   */\n      dup4\n        /* \"#utility.yul\":13723:13790   */\n      tag_336\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":13716:13790   */\n      swap2\n      pop\n        /* \"#utility.yul\":13799:13892   */\n      tag_530\n        /* \"#utility.yul\":13888:13891   */\n      dup3\n        /* \"#utility.yul\":13799:13892   */\n      tag_365\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":13917:13919   */\n      0x20\n        /* \"#utility.yul\":13912:13915   */\n      dup3\n        /* \"#utility.yul\":13908:13920   */\n      add\n        /* \"#utility.yul\":13901:13920   */\n      swap1\n      pop\n        /* \"#utility.yul\":13560:13926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13932:14351   */\n    tag_213:\n        /* \"#utility.yul\":14098:14102   */\n      0x00\n        /* \"#utility.yul\":14136:14138   */\n      0x20\n        /* \"#utility.yul\":14125:14134   */\n      dup3\n        /* \"#utility.yul\":14121:14139   */\n      add\n        /* \"#utility.yul\":14113:14139   */\n      swap1\n      pop\n        /* \"#utility.yul\":14185:14194   */\n      dup2\n        /* \"#utility.yul\":14179:14183   */\n      dup2\n        /* \"#utility.yul\":14175:14195   */\n      sub\n        /* \"#utility.yul\":14171:14172   */\n      0x00\n        /* \"#utility.yul\":14160:14169   */\n      dup4\n        /* \"#utility.yul\":14156:14173   */\n      add\n        /* \"#utility.yul\":14149:14196   */\n      mstore\n        /* \"#utility.yul\":14213:14344   */\n      tag_532\n        /* \"#utility.yul\":14339:14343   */\n      dup2\n        /* \"#utility.yul\":14213:14344   */\n      tag_366\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":14205:14344   */\n      swap1\n      pop\n        /* \"#utility.yul\":13932:14351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14357:14580   */\n    tag_367:\n        /* \"#utility.yul\":14497:14531   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":14493:14494   */\n      0x00\n        /* \"#utility.yul\":14485:14491   */\n      dup3\n        /* \"#utility.yul\":14481:14495   */\n      add\n        /* \"#utility.yul\":14474:14532   */\n      mstore\n        /* \"#utility.yul\":14566:14572   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14561:14563   */\n      0x20\n        /* \"#utility.yul\":14553:14559   */\n      dup3\n        /* \"#utility.yul\":14549:14564   */\n      add\n        /* \"#utility.yul\":14542:14573   */\n      mstore\n        /* \"#utility.yul\":14357:14580   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14586:14952   */\n    tag_368:\n        /* \"#utility.yul\":14728:14731   */\n      0x00\n        /* \"#utility.yul\":14749:14816   */\n      tag_535\n        /* \"#utility.yul\":14813:14815   */\n      0x24\n        /* \"#utility.yul\":14808:14811   */\n      dup4\n        /* \"#utility.yul\":14749:14816   */\n      tag_336\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":14742:14816   */\n      swap2\n      pop\n        /* \"#utility.yul\":14825:14918   */\n      tag_536\n        /* \"#utility.yul\":14914:14917   */\n      dup3\n        /* \"#utility.yul\":14825:14918   */\n      tag_367\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":14943:14945   */\n      0x40\n        /* \"#utility.yul\":14938:14941   */\n      dup3\n        /* \"#utility.yul\":14934:14946   */\n      add\n        /* \"#utility.yul\":14927:14946   */\n      swap1\n      pop\n        /* \"#utility.yul\":14586:14952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14958:15377   */\n    tag_229:\n        /* \"#utility.yul\":15124:15128   */\n      0x00\n        /* \"#utility.yul\":15162:15164   */\n      0x20\n        /* \"#utility.yul\":15151:15160   */\n      dup3\n        /* \"#utility.yul\":15147:15165   */\n      add\n        /* \"#utility.yul\":15139:15165   */\n      swap1\n      pop\n        /* \"#utility.yul\":15211:15220   */\n      dup2\n        /* \"#utility.yul\":15205:15209   */\n      dup2\n        /* \"#utility.yul\":15201:15221   */\n      sub\n        /* \"#utility.yul\":15197:15198   */\n      0x00\n        /* \"#utility.yul\":15186:15195   */\n      dup4\n        /* \"#utility.yul\":15182:15199   */\n      add\n        /* \"#utility.yul\":15175:15222   */\n      mstore\n        /* \"#utility.yul\":15239:15370   */\n      tag_538\n        /* \"#utility.yul\":15365:15369   */\n      dup2\n        /* \"#utility.yul\":15239:15370   */\n      tag_368\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":15231:15370   */\n      swap1\n      pop\n        /* \"#utility.yul\":14958:15377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15383:15604   */\n    tag_369:\n        /* \"#utility.yul\":15523:15557   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":15519:15520   */\n      0x00\n        /* \"#utility.yul\":15511:15517   */\n      dup3\n        /* \"#utility.yul\":15507:15521   */\n      add\n        /* \"#utility.yul\":15500:15558   */\n      mstore\n        /* \"#utility.yul\":15592:15596   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15587:15589   */\n      0x20\n        /* \"#utility.yul\":15579:15585   */\n      dup3\n        /* \"#utility.yul\":15575:15590   */\n      add\n        /* \"#utility.yul\":15568:15597   */\n      mstore\n        /* \"#utility.yul\":15383:15604   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15610:15976   */\n    tag_370:\n        /* \"#utility.yul\":15752:15755   */\n      0x00\n        /* \"#utility.yul\":15773:15840   */\n      tag_541\n        /* \"#utility.yul\":15837:15839   */\n      0x22\n        /* \"#utility.yul\":15832:15835   */\n      dup4\n        /* \"#utility.yul\":15773:15840   */\n      tag_336\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":15766:15840   */\n      swap2\n      pop\n        /* \"#utility.yul\":15849:15942   */\n      tag_542\n        /* \"#utility.yul\":15938:15941   */\n      dup3\n        /* \"#utility.yul\":15849:15942   */\n      tag_369\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":15967:15969   */\n      0x40\n        /* \"#utility.yul\":15962:15965   */\n      dup3\n        /* \"#utility.yul\":15958:15970   */\n      add\n        /* \"#utility.yul\":15951:15970   */\n      swap1\n      pop\n        /* \"#utility.yul\":15610:15976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15982:16401   */\n    tag_232:\n        /* \"#utility.yul\":16148:16152   */\n      0x00\n        /* \"#utility.yul\":16186:16188   */\n      0x20\n        /* \"#utility.yul\":16175:16184   */\n      dup3\n        /* \"#utility.yul\":16171:16189   */\n      add\n        /* \"#utility.yul\":16163:16189   */\n      swap1\n      pop\n        /* \"#utility.yul\":16235:16244   */\n      dup2\n        /* \"#utility.yul\":16229:16233   */\n      dup2\n        /* \"#utility.yul\":16225:16245   */\n      sub\n        /* \"#utility.yul\":16221:16222   */\n      0x00\n        /* \"#utility.yul\":16210:16219   */\n      dup4\n        /* \"#utility.yul\":16206:16223   */\n      add\n        /* \"#utility.yul\":16199:16246   */\n      mstore\n        /* \"#utility.yul\":16263:16394   */\n      tag_544\n        /* \"#utility.yul\":16389:16393   */\n      dup2\n        /* \"#utility.yul\":16263:16394   */\n      tag_370\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":16255:16394   */\n      swap1\n      pop\n        /* \"#utility.yul\":15982:16401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16407:16586   */\n    tag_371:\n        /* \"#utility.yul\":16547:16578   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":16543:16544   */\n      0x00\n        /* \"#utility.yul\":16535:16541   */\n      dup3\n        /* \"#utility.yul\":16531:16545   */\n      add\n        /* \"#utility.yul\":16524:16579   */\n      mstore\n        /* \"#utility.yul\":16407:16586   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16592:16958   */\n    tag_372:\n        /* \"#utility.yul\":16734:16737   */\n      0x00\n        /* \"#utility.yul\":16755:16822   */\n      tag_547\n        /* \"#utility.yul\":16819:16821   */\n      0x1d\n        /* \"#utility.yul\":16814:16817   */\n      dup4\n        /* \"#utility.yul\":16755:16822   */\n      tag_336\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":16748:16822   */\n      swap2\n      pop\n        /* \"#utility.yul\":16831:16924   */\n      tag_548\n        /* \"#utility.yul\":16920:16923   */\n      dup3\n        /* \"#utility.yul\":16831:16924   */\n      tag_371\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":16949:16951   */\n      0x20\n        /* \"#utility.yul\":16944:16947   */\n      dup3\n        /* \"#utility.yul\":16940:16952   */\n      add\n        /* \"#utility.yul\":16933:16952   */\n      swap1\n      pop\n        /* \"#utility.yul\":16592:16958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16964:17383   */\n    tag_239:\n        /* \"#utility.yul\":17130:17134   */\n      0x00\n        /* \"#utility.yul\":17168:17170   */\n      0x20\n        /* \"#utility.yul\":17157:17166   */\n      dup3\n        /* \"#utility.yul\":17153:17171   */\n      add\n        /* \"#utility.yul\":17145:17171   */\n      swap1\n      pop\n        /* \"#utility.yul\":17217:17226   */\n      dup2\n        /* \"#utility.yul\":17211:17215   */\n      dup2\n        /* \"#utility.yul\":17207:17227   */\n      sub\n        /* \"#utility.yul\":17203:17204   */\n      0x00\n        /* \"#utility.yul\":17192:17201   */\n      dup4\n        /* \"#utility.yul\":17188:17205   */\n      add\n        /* \"#utility.yul\":17181:17228   */\n      mstore\n        /* \"#utility.yul\":17245:17376   */\n      tag_550\n        /* \"#utility.yul\":17371:17375   */\n      dup2\n        /* \"#utility.yul\":17245:17376   */\n      tag_372\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":17237:17376   */\n      swap1\n      pop\n        /* \"#utility.yul\":16964:17383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17389:17613   */\n    tag_373:\n        /* \"#utility.yul\":17529:17563   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":17525:17526   */\n      0x00\n        /* \"#utility.yul\":17517:17523   */\n      dup3\n        /* \"#utility.yul\":17513:17527   */\n      add\n        /* \"#utility.yul\":17506:17564   */\n      mstore\n        /* \"#utility.yul\":17598:17605   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17593:17595   */\n      0x20\n        /* \"#utility.yul\":17585:17591   */\n      dup3\n        /* \"#utility.yul\":17581:17596   */\n      add\n        /* \"#utility.yul\":17574:17606   */\n      mstore\n        /* \"#utility.yul\":17389:17613   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17619:17985   */\n    tag_374:\n        /* \"#utility.yul\":17761:17764   */\n      0x00\n        /* \"#utility.yul\":17782:17849   */\n      tag_553\n        /* \"#utility.yul\":17846:17848   */\n      0x25\n        /* \"#utility.yul\":17841:17844   */\n      dup4\n        /* \"#utility.yul\":17782:17849   */\n      tag_336\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":17775:17849   */\n      swap2\n      pop\n        /* \"#utility.yul\":17858:17951   */\n      tag_554\n        /* \"#utility.yul\":17947:17950   */\n      dup3\n        /* \"#utility.yul\":17858:17951   */\n      tag_373\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":17976:17978   */\n      0x40\n        /* \"#utility.yul\":17971:17974   */\n      dup3\n        /* \"#utility.yul\":17967:17979   */\n      add\n        /* \"#utility.yul\":17960:17979   */\n      swap1\n      pop\n        /* \"#utility.yul\":17619:17985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17991:18410   */\n    tag_244:\n        /* \"#utility.yul\":18157:18161   */\n      0x00\n        /* \"#utility.yul\":18195:18197   */\n      0x20\n        /* \"#utility.yul\":18184:18193   */\n      dup3\n        /* \"#utility.yul\":18180:18198   */\n      add\n        /* \"#utility.yul\":18172:18198   */\n      swap1\n      pop\n        /* \"#utility.yul\":18244:18253   */\n      dup2\n        /* \"#utility.yul\":18238:18242   */\n      dup2\n        /* \"#utility.yul\":18234:18254   */\n      sub\n        /* \"#utility.yul\":18230:18231   */\n      0x00\n        /* \"#utility.yul\":18219:18228   */\n      dup4\n        /* \"#utility.yul\":18215:18232   */\n      add\n        /* \"#utility.yul\":18208:18255   */\n      mstore\n        /* \"#utility.yul\":18272:18403   */\n      tag_556\n        /* \"#utility.yul\":18398:18402   */\n      dup2\n        /* \"#utility.yul\":18272:18403   */\n      tag_374\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":18264:18403   */\n      swap1\n      pop\n        /* \"#utility.yul\":17991:18410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18416:18638   */\n    tag_375:\n        /* \"#utility.yul\":18556:18590   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":18552:18553   */\n      0x00\n        /* \"#utility.yul\":18544:18550   */\n      dup3\n        /* \"#utility.yul\":18540:18554   */\n      add\n        /* \"#utility.yul\":18533:18591   */\n      mstore\n        /* \"#utility.yul\":18625:18630   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18620:18622   */\n      0x20\n        /* \"#utility.yul\":18612:18618   */\n      dup3\n        /* \"#utility.yul\":18608:18623   */\n      add\n        /* \"#utility.yul\":18601:18631   */\n      mstore\n        /* \"#utility.yul\":18416:18638   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18644:19010   */\n    tag_376:\n        /* \"#utility.yul\":18786:18789   */\n      0x00\n        /* \"#utility.yul\":18807:18874   */\n      tag_559\n        /* \"#utility.yul\":18871:18873   */\n      0x23\n        /* \"#utility.yul\":18866:18869   */\n      dup4\n        /* \"#utility.yul\":18807:18874   */\n      tag_336\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":18800:18874   */\n      swap2\n      pop\n        /* \"#utility.yul\":18883:18976   */\n      tag_560\n        /* \"#utility.yul\":18972:18975   */\n      dup3\n        /* \"#utility.yul\":18883:18976   */\n      tag_375\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":19001:19003   */\n      0x40\n        /* \"#utility.yul\":18996:18999   */\n      dup3\n        /* \"#utility.yul\":18992:19004   */\n      add\n        /* \"#utility.yul\":18985:19004   */\n      swap1\n      pop\n        /* \"#utility.yul\":18644:19010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19016:19435   */\n    tag_247:\n        /* \"#utility.yul\":19182:19186   */\n      0x00\n        /* \"#utility.yul\":19220:19222   */\n      0x20\n        /* \"#utility.yul\":19209:19218   */\n      dup3\n        /* \"#utility.yul\":19205:19223   */\n      add\n        /* \"#utility.yul\":19197:19223   */\n      swap1\n      pop\n        /* \"#utility.yul\":19269:19278   */\n      dup2\n        /* \"#utility.yul\":19263:19267   */\n      dup2\n        /* \"#utility.yul\":19259:19279   */\n      sub\n        /* \"#utility.yul\":19255:19256   */\n      0x00\n        /* \"#utility.yul\":19244:19253   */\n      dup4\n        /* \"#utility.yul\":19240:19257   */\n      add\n        /* \"#utility.yul\":19233:19280   */\n      mstore\n        /* \"#utility.yul\":19297:19428   */\n      tag_562\n        /* \"#utility.yul\":19423:19427   */\n      dup2\n        /* \"#utility.yul\":19297:19428   */\n      tag_376\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":19289:19428   */\n      swap1\n      pop\n        /* \"#utility.yul\":19016:19435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19441:19666   */\n    tag_377:\n        /* \"#utility.yul\":19581:19615   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":19577:19578   */\n      0x00\n        /* \"#utility.yul\":19569:19575   */\n      dup3\n        /* \"#utility.yul\":19565:19579   */\n      add\n        /* \"#utility.yul\":19558:19616   */\n      mstore\n        /* \"#utility.yul\":19650:19658   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19645:19647   */\n      0x20\n        /* \"#utility.yul\":19637:19643   */\n      dup3\n        /* \"#utility.yul\":19633:19648   */\n      add\n        /* \"#utility.yul\":19626:19659   */\n      mstore\n        /* \"#utility.yul\":19441:19666   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19672:20038   */\n    tag_378:\n        /* \"#utility.yul\":19814:19817   */\n      0x00\n        /* \"#utility.yul\":19835:19902   */\n      tag_565\n        /* \"#utility.yul\":19899:19901   */\n      0x26\n        /* \"#utility.yul\":19894:19897   */\n      dup4\n        /* \"#utility.yul\":19835:19902   */\n      tag_336\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":19828:19902   */\n      swap2\n      pop\n        /* \"#utility.yul\":19911:20004   */\n      tag_566\n        /* \"#utility.yul\":20000:20003   */\n      dup3\n        /* \"#utility.yul\":19911:20004   */\n      tag_377\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":20029:20031   */\n      0x40\n        /* \"#utility.yul\":20024:20027   */\n      dup3\n        /* \"#utility.yul\":20020:20032   */\n      add\n        /* \"#utility.yul\":20013:20032   */\n      swap1\n      pop\n        /* \"#utility.yul\":19672:20038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20044:20463   */\n    tag_252:\n        /* \"#utility.yul\":20210:20214   */\n      0x00\n        /* \"#utility.yul\":20248:20250   */\n      0x20\n        /* \"#utility.yul\":20237:20246   */\n      dup3\n        /* \"#utility.yul\":20233:20251   */\n      add\n        /* \"#utility.yul\":20225:20251   */\n      swap1\n      pop\n        /* \"#utility.yul\":20297:20306   */\n      dup2\n        /* \"#utility.yul\":20291:20295   */\n      dup2\n        /* \"#utility.yul\":20287:20307   */\n      sub\n        /* \"#utility.yul\":20283:20284   */\n      0x00\n        /* \"#utility.yul\":20272:20281   */\n      dup4\n        /* \"#utility.yul\":20268:20285   */\n      add\n        /* \"#utility.yul\":20261:20308   */\n      mstore\n        /* \"#utility.yul\":20325:20456   */\n      tag_568\n        /* \"#utility.yul\":20451:20455   */\n      dup2\n        /* \"#utility.yul\":20325:20456   */\n      tag_378\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":20317:20456   */\n      swap1\n      pop\n        /* \"#utility.yul\":20044:20463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20469:20650   */\n    tag_379:\n        /* \"#utility.yul\":20609:20642   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":20605:20606   */\n      0x00\n        /* \"#utility.yul\":20597:20603   */\n      dup3\n        /* \"#utility.yul\":20593:20607   */\n      add\n        /* \"#utility.yul\":20586:20643   */\n      mstore\n        /* \"#utility.yul\":20469:20650   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20656:21022   */\n    tag_380:\n        /* \"#utility.yul\":20798:20801   */\n      0x00\n        /* \"#utility.yul\":20819:20886   */\n      tag_571\n        /* \"#utility.yul\":20883:20885   */\n      0x1f\n        /* \"#utility.yul\":20878:20881   */\n      dup4\n        /* \"#utility.yul\":20819:20886   */\n      tag_336\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":20812:20886   */\n      swap2\n      pop\n        /* \"#utility.yul\":20895:20988   */\n      tag_572\n        /* \"#utility.yul\":20984:20987   */\n      dup3\n        /* \"#utility.yul\":20895:20988   */\n      tag_379\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":21013:21015   */\n      0x20\n        /* \"#utility.yul\":21008:21011   */\n      dup3\n        /* \"#utility.yul\":21004:21016   */\n      add\n        /* \"#utility.yul\":20997:21016   */\n      swap1\n      pop\n        /* \"#utility.yul\":20656:21022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21028:21447   */\n    tag_271:\n        /* \"#utility.yul\":21194:21198   */\n      0x00\n        /* \"#utility.yul\":21232:21234   */\n      0x20\n        /* \"#utility.yul\":21221:21230   */\n      dup3\n        /* \"#utility.yul\":21217:21235   */\n      add\n        /* \"#utility.yul\":21209:21235   */\n      swap1\n      pop\n        /* \"#utility.yul\":21281:21290   */\n      dup2\n        /* \"#utility.yul\":21275:21279   */\n      dup2\n        /* \"#utility.yul\":21271:21291   */\n      sub\n        /* \"#utility.yul\":21267:21268   */\n      0x00\n        /* \"#utility.yul\":21256:21265   */\n      dup4\n        /* \"#utility.yul\":21252:21269   */\n      add\n        /* \"#utility.yul\":21245:21292   */\n      mstore\n        /* \"#utility.yul\":21309:21440   */\n      tag_574\n        /* \"#utility.yul\":21435:21439   */\n      dup2\n        /* \"#utility.yul\":21309:21440   */\n      tag_380\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":21301:21440   */\n      swap1\n      pop\n        /* \"#utility.yul\":21028:21447   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21453:21673   */\n    tag_381:\n        /* \"#utility.yul\":21593:21627   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":21589:21590   */\n      0x00\n        /* \"#utility.yul\":21581:21587   */\n      dup3\n        /* \"#utility.yul\":21577:21591   */\n      add\n        /* \"#utility.yul\":21570:21628   */\n      mstore\n        /* \"#utility.yul\":21662:21665   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21657:21659   */\n      0x20\n        /* \"#utility.yul\":21649:21655   */\n      dup3\n        /* \"#utility.yul\":21645:21660   */\n      add\n        /* \"#utility.yul\":21638:21666   */\n      mstore\n        /* \"#utility.yul\":21453:21673   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21679:22045   */\n    tag_382:\n        /* \"#utility.yul\":21821:21824   */\n      0x00\n        /* \"#utility.yul\":21842:21909   */\n      tag_577\n        /* \"#utility.yul\":21906:21908   */\n      0x21\n        /* \"#utility.yul\":21901:21904   */\n      dup4\n        /* \"#utility.yul\":21842:21909   */\n      tag_336\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":21835:21909   */\n      swap2\n      pop\n        /* \"#utility.yul\":21918:22011   */\n      tag_578\n        /* \"#utility.yul\":22007:22010   */\n      dup3\n        /* \"#utility.yul\":21918:22011   */\n      tag_381\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":22036:22038   */\n      0x40\n        /* \"#utility.yul\":22031:22034   */\n      dup3\n        /* \"#utility.yul\":22027:22039   */\n      add\n        /* \"#utility.yul\":22020:22039   */\n      swap1\n      pop\n        /* \"#utility.yul\":21679:22045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22051:22470   */\n    tag_279:\n        /* \"#utility.yul\":22217:22221   */\n      0x00\n        /* \"#utility.yul\":22255:22257   */\n      0x20\n        /* \"#utility.yul\":22244:22253   */\n      dup3\n        /* \"#utility.yul\":22240:22258   */\n      add\n        /* \"#utility.yul\":22232:22258   */\n      swap1\n      pop\n        /* \"#utility.yul\":22304:22313   */\n      dup2\n        /* \"#utility.yul\":22298:22302   */\n      dup2\n        /* \"#utility.yul\":22294:22314   */\n      sub\n        /* \"#utility.yul\":22290:22291   */\n      0x00\n        /* \"#utility.yul\":22279:22288   */\n      dup4\n        /* \"#utility.yul\":22275:22292   */\n      add\n        /* \"#utility.yul\":22268:22315   */\n      mstore\n        /* \"#utility.yul\":22332:22463   */\n      tag_580\n        /* \"#utility.yul\":22458:22462   */\n      dup2\n        /* \"#utility.yul\":22332:22463   */\n      tag_382\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":22324:22463   */\n      swap1\n      pop\n        /* \"#utility.yul\":22051:22470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22476:22697   */\n    tag_383:\n        /* \"#utility.yul\":22616:22650   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":22612:22613   */\n      0x00\n        /* \"#utility.yul\":22604:22610   */\n      dup3\n        /* \"#utility.yul\":22600:22614   */\n      add\n        /* \"#utility.yul\":22593:22651   */\n      mstore\n        /* \"#utility.yul\":22685:22689   */\n      0x6365000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22680:22682   */\n      0x20\n        /* \"#utility.yul\":22672:22678   */\n      dup3\n        /* \"#utility.yul\":22668:22683   */\n      add\n        /* \"#utility.yul\":22661:22690   */\n      mstore\n        /* \"#utility.yul\":22476:22697   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22703:23069   */\n    tag_384:\n        /* \"#utility.yul\":22845:22848   */\n      0x00\n        /* \"#utility.yul\":22866:22933   */\n      tag_583\n        /* \"#utility.yul\":22930:22932   */\n      0x22\n        /* \"#utility.yul\":22925:22928   */\n      dup4\n        /* \"#utility.yul\":22866:22933   */\n      tag_336\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":22859:22933   */\n      swap2\n      pop\n        /* \"#utility.yul\":22942:23035   */\n      tag_584\n        /* \"#utility.yul\":23031:23034   */\n      dup3\n        /* \"#utility.yul\":22942:23035   */\n      tag_383\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":23060:23062   */\n      0x40\n        /* \"#utility.yul\":23055:23058   */\n      dup3\n        /* \"#utility.yul\":23051:23063   */\n      add\n        /* \"#utility.yul\":23044:23063   */\n      swap1\n      pop\n        /* \"#utility.yul\":22703:23069   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23075:23494   */\n    tag_283:\n        /* \"#utility.yul\":23241:23245   */\n      0x00\n        /* \"#utility.yul\":23279:23281   */\n      0x20\n        /* \"#utility.yul\":23268:23277   */\n      dup3\n        /* \"#utility.yul\":23264:23282   */\n      add\n        /* \"#utility.yul\":23256:23282   */\n      swap1\n      pop\n        /* \"#utility.yul\":23328:23337   */\n      dup2\n        /* \"#utility.yul\":23322:23326   */\n      dup2\n        /* \"#utility.yul\":23318:23338   */\n      sub\n        /* \"#utility.yul\":23314:23315   */\n      0x00\n        /* \"#utility.yul\":23303:23312   */\n      dup4\n        /* \"#utility.yul\":23299:23316   */\n      add\n        /* \"#utility.yul\":23292:23339   */\n      mstore\n        /* \"#utility.yul\":23356:23487   */\n      tag_586\n        /* \"#utility.yul\":23482:23486   */\n      dup2\n        /* \"#utility.yul\":23356:23487   */\n      tag_384\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":23348:23487   */\n      swap1\n      pop\n        /* \"#utility.yul\":23075:23494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23500:23673   */\n    tag_385:\n        /* \"#utility.yul\":23640:23665   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":23636:23637   */\n      0x00\n        /* \"#utility.yul\":23628:23634   */\n      dup3\n        /* \"#utility.yul\":23624:23638   */\n      add\n        /* \"#utility.yul\":23617:23666   */\n      mstore\n        /* \"#utility.yul\":23500:23673   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23679:24081   */\n    tag_386:\n        /* \"#utility.yul\":23839:23842   */\n      0x00\n        /* \"#utility.yul\":23860:23945   */\n      tag_589\n        /* \"#utility.yul\":23942:23944   */\n      0x17\n        /* \"#utility.yul\":23937:23940   */\n      dup4\n        /* \"#utility.yul\":23860:23945   */\n      tag_358\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":23853:23945   */\n      swap2\n      pop\n        /* \"#utility.yul\":23954:24047   */\n      tag_590\n        /* \"#utility.yul\":24043:24046   */\n      dup3\n        /* \"#utility.yul\":23954:24047   */\n      tag_385\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":24072:24074   */\n      0x17\n        /* \"#utility.yul\":24067:24070   */\n      dup3\n        /* \"#utility.yul\":24063:24075   */\n      add\n        /* \"#utility.yul\":24056:24075   */\n      swap1\n      pop\n        /* \"#utility.yul\":23679:24081   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24087:24477   */\n    tag_387:\n        /* \"#utility.yul\":24193:24196   */\n      0x00\n        /* \"#utility.yul\":24221:24260   */\n      tag_592\n        /* \"#utility.yul\":24254:24259   */\n      dup3\n        /* \"#utility.yul\":24221:24260   */\n      tag_335\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":24276:24365   */\n      tag_593\n        /* \"#utility.yul\":24358:24364   */\n      dup2\n        /* \"#utility.yul\":24353:24356   */\n      dup6\n        /* \"#utility.yul\":24276:24365   */\n      tag_358\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":24269:24365   */\n      swap4\n      pop\n        /* \"#utility.yul\":24374:24439   */\n      tag_594\n        /* \"#utility.yul\":24432:24438   */\n      dup2\n        /* \"#utility.yul\":24427:24430   */\n      dup6\n        /* \"#utility.yul\":24420:24424   */\n      0x20\n        /* \"#utility.yul\":24413:24418   */\n      dup7\n        /* \"#utility.yul\":24409:24425   */\n      add\n        /* \"#utility.yul\":24374:24439   */\n      tag_337\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":24464:24470   */\n      dup1\n        /* \"#utility.yul\":24459:24462   */\n      dup5\n        /* \"#utility.yul\":24455:24471   */\n      add\n        /* \"#utility.yul\":24448:24471   */\n      swap2\n      pop\n        /* \"#utility.yul\":24197:24477   */\n      pop\n        /* \"#utility.yul\":24087:24477   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24483:24650   */\n    tag_388:\n        /* \"#utility.yul\":24623:24642   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":24619:24620   */\n      0x00\n        /* \"#utility.yul\":24611:24617   */\n      dup3\n        /* \"#utility.yul\":24607:24621   */\n      add\n        /* \"#utility.yul\":24600:24643   */\n      mstore\n        /* \"#utility.yul\":24483:24650   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24656:25058   */\n    tag_389:\n        /* \"#utility.yul\":24816:24819   */\n      0x00\n        /* \"#utility.yul\":24837:24922   */\n      tag_597\n        /* \"#utility.yul\":24919:24921   */\n      0x11\n        /* \"#utility.yul\":24914:24917   */\n      dup4\n        /* \"#utility.yul\":24837:24922   */\n      tag_358\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":24830:24922   */\n      swap2\n      pop\n        /* \"#utility.yul\":24931:25024   */\n      tag_598\n        /* \"#utility.yul\":25020:25023   */\n      dup3\n        /* \"#utility.yul\":24931:25024   */\n      tag_388\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":25049:25051   */\n      0x11\n        /* \"#utility.yul\":25044:25047   */\n      dup3\n        /* \"#utility.yul\":25040:25052   */\n      add\n        /* \"#utility.yul\":25033:25052   */\n      swap1\n      pop\n        /* \"#utility.yul\":24656:25058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25064:26031   */\n    tag_296:\n        /* \"#utility.yul\":25446:25449   */\n      0x00\n        /* \"#utility.yul\":25468:25616   */\n      tag_600\n        /* \"#utility.yul\":25612:25615   */\n      dup3\n        /* \"#utility.yul\":25468:25616   */\n      tag_386\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":25461:25616   */\n      swap2\n      pop\n        /* \"#utility.yul\":25633:25728   */\n      tag_601\n        /* \"#utility.yul\":25724:25727   */\n      dup3\n        /* \"#utility.yul\":25715:25721   */\n      dup6\n        /* \"#utility.yul\":25633:25728   */\n      tag_387\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":25626:25728   */\n      swap2\n      pop\n        /* \"#utility.yul\":25745:25893   */\n      tag_602\n        /* \"#utility.yul\":25889:25892   */\n      dup3\n        /* \"#utility.yul\":25745:25893   */\n      tag_389\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":25738:25893   */\n      swap2\n      pop\n        /* \"#utility.yul\":25910:26005   */\n      tag_603\n        /* \"#utility.yul\":26001:26004   */\n      dup3\n        /* \"#utility.yul\":25992:25998   */\n      dup5\n        /* \"#utility.yul\":25910:26005   */\n      tag_387\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":25903:26005   */\n      swap2\n      pop\n        /* \"#utility.yul\":26022:26025   */\n      dup2\n        /* \"#utility.yul\":26015:26025   */\n      swap1\n      pop\n        /* \"#utility.yul\":25064:26031   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26037:26447   */\n    tag_302:\n        /* \"#utility.yul\":26077:26084   */\n      0x00\n        /* \"#utility.yul\":26100:26120   */\n      tag_605\n        /* \"#utility.yul\":26118:26119   */\n      dup3\n        /* \"#utility.yul\":26100:26120   */\n      tag_344\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":26095:26120   */\n      swap2\n      pop\n        /* \"#utility.yul\":26134:26154   */\n      tag_606\n        /* \"#utility.yul\":26152:26153   */\n      dup4\n        /* \"#utility.yul\":26134:26154   */\n      tag_344\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":26129:26154   */\n      swap3\n      pop\n        /* \"#utility.yul\":26189:26190   */\n      dup3\n        /* \"#utility.yul\":26186:26187   */\n      dup3\n        /* \"#utility.yul\":26182:26191   */\n      mul\n        /* \"#utility.yul\":26211:26241   */\n      tag_607\n        /* \"#utility.yul\":26229:26240   */\n      dup2\n        /* \"#utility.yul\":26211:26241   */\n      tag_344\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":26200:26241   */\n      swap2\n      pop\n        /* \"#utility.yul\":26390:26391   */\n      dup3\n        /* \"#utility.yul\":26381:26388   */\n      dup3\n        /* \"#utility.yul\":26377:26392   */\n      div\n        /* \"#utility.yul\":26374:26375   */\n      dup5\n        /* \"#utility.yul\":26371:26393   */\n      eq\n        /* \"#utility.yul\":26351:26352   */\n      dup4\n        /* \"#utility.yul\":26344:26353   */\n      iszero\n        /* \"#utility.yul\":26324:26407   */\n      or\n        /* \"#utility.yul\":26301:26440   */\n      tag_608\n      jumpi\n        /* \"#utility.yul\":26420:26438   */\n      tag_609\n      tag_357\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":26301:26440   */\n    tag_608:\n        /* \"#utility.yul\":26085:26447   */\n      pop\n        /* \"#utility.yul\":26037:26447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26453:26633   */\n    tag_306:\n        /* \"#utility.yul\":26501:26578   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26498:26499   */\n      0x00\n        /* \"#utility.yul\":26491:26579   */\n      mstore\n        /* \"#utility.yul\":26598:26602   */\n      0x41\n        /* \"#utility.yul\":26595:26596   */\n      0x04\n        /* \"#utility.yul\":26588:26603   */\n      mstore\n        /* \"#utility.yul\":26622:26626   */\n      0x24\n        /* \"#utility.yul\":26619:26620   */\n      0x00\n        /* \"#utility.yul\":26612:26627   */\n      revert\n        /* \"#utility.yul\":26639:26819   */\n    tag_310:\n        /* \"#utility.yul\":26687:26764   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26684:26685   */\n      0x00\n        /* \"#utility.yul\":26677:26765   */\n      mstore\n        /* \"#utility.yul\":26784:26788   */\n      0x32\n        /* \"#utility.yul\":26781:26782   */\n      0x04\n        /* \"#utility.yul\":26774:26789   */\n      mstore\n        /* \"#utility.yul\":26808:26812   */\n      0x24\n        /* \"#utility.yul\":26805:26806   */\n      0x00\n        /* \"#utility.yul\":26798:26813   */\n      revert\n        /* \"#utility.yul\":26825:26996   */\n    tag_323:\n        /* \"#utility.yul\":26864:26867   */\n      0x00\n        /* \"#utility.yul\":26887:26911   */\n      tag_613\n        /* \"#utility.yul\":26905:26910   */\n      dup3\n        /* \"#utility.yul\":26887:26911   */\n      tag_344\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":26878:26911   */\n      swap2\n      pop\n        /* \"#utility.yul\":26933:26937   */\n      0x00\n        /* \"#utility.yul\":26926:26931   */\n      dup3\n        /* \"#utility.yul\":26923:26938   */\n      sub\n        /* \"#utility.yul\":26920:26961   */\n      tag_614\n      jumpi\n        /* \"#utility.yul\":26941:26959   */\n      tag_615\n      tag_357\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":26920:26961   */\n    tag_614:\n        /* \"#utility.yul\":26988:26989   */\n      0x01\n        /* \"#utility.yul\":26981:26986   */\n      dup3\n        /* \"#utility.yul\":26977:26990   */\n      sub\n        /* \"#utility.yul\":26970:26990   */\n      swap1\n      pop\n        /* \"#utility.yul\":26825:26996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27002:27184   */\n    tag_390:\n        /* \"#utility.yul\":27142:27176   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":27138:27139   */\n      0x00\n        /* \"#utility.yul\":27130:27136   */\n      dup3\n        /* \"#utility.yul\":27126:27140   */\n      add\n        /* \"#utility.yul\":27119:27177   */\n      mstore\n        /* \"#utility.yul\":27002:27184   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27190:27556   */\n    tag_391:\n        /* \"#utility.yul\":27332:27335   */\n      0x00\n        /* \"#utility.yul\":27353:27420   */\n      tag_618\n        /* \"#utility.yul\":27417:27419   */\n      0x20\n        /* \"#utility.yul\":27412:27415   */\n      dup4\n        /* \"#utility.yul\":27353:27420   */\n      tag_336\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":27346:27420   */\n      swap2\n      pop\n        /* \"#utility.yul\":27429:27522   */\n      tag_619\n        /* \"#utility.yul\":27518:27521   */\n      dup3\n        /* \"#utility.yul\":27429:27522   */\n      tag_390\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":27547:27549   */\n      0x20\n        /* \"#utility.yul\":27542:27545   */\n      dup3\n        /* \"#utility.yul\":27538:27550   */\n      add\n        /* \"#utility.yul\":27531:27550   */\n      swap1\n      pop\n        /* \"#utility.yul\":27190:27556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27562:27981   */\n    tag_326:\n        /* \"#utility.yul\":27728:27732   */\n      0x00\n        /* \"#utility.yul\":27766:27768   */\n      0x20\n        /* \"#utility.yul\":27755:27764   */\n      dup3\n        /* \"#utility.yul\":27751:27769   */\n      add\n        /* \"#utility.yul\":27743:27769   */\n      swap1\n      pop\n        /* \"#utility.yul\":27815:27824   */\n      dup2\n        /* \"#utility.yul\":27809:27813   */\n      dup2\n        /* \"#utility.yul\":27805:27825   */\n      sub\n        /* \"#utility.yul\":27801:27802   */\n      0x00\n        /* \"#utility.yul\":27790:27799   */\n      dup4\n        /* \"#utility.yul\":27786:27803   */\n      add\n        /* \"#utility.yul\":27779:27826   */\n      mstore\n        /* \"#utility.yul\":27843:27974   */\n      tag_621\n        /* \"#utility.yul\":27969:27973   */\n      dup2\n        /* \"#utility.yul\":27843:27974   */\n      tag_391\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":27835:27974   */\n      swap1\n      pop\n        /* \"#utility.yul\":27562:27981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122011068d1ed7f5b23ba1f99d8b51734bacba6f9549099ece930c71cab721c11f5464736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2042": {
									"entryPoint": null,
									"id": 2042,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2488": {
									"entryPoint": 209,
									"id": 2488,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 696,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5231:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:13",
														"type": ""
													}
												],
												"src": "7:99:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:13"
															},
															"nodeType": "YulIf",
															"src": "623:81:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:13"
															},
															"nodeType": "YulIf",
															"src": "714:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:13",
														"type": ""
													}
												],
												"src": "484:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:13",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:13",
														"type": ""
													}
												],
												"src": "810:141:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:13",
														"type": ""
													}
												],
												"src": "957:93:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:13"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:13",
														"type": ""
													}
												],
												"src": "1056:107:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:13"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:13",
														"type": ""
													}
												],
												"src": "1169:393:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:13",
														"type": ""
													}
												],
												"src": "1568:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:13",
														"type": ""
													}
												],
												"src": "1651:60:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:13",
														"type": ""
													}
												],
												"src": "1717:142:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:13",
														"type": ""
													}
												],
												"src": "1865:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:13",
														"type": ""
													}
												],
												"src": "1946:269:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:13",
														"type": ""
													}
												],
												"src": "2221:73:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:13",
														"type": ""
													}
												],
												"src": "2300:189:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:13",
																"statements": []
															},
															"src": "2555:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:13",
														"type": ""
													}
												],
												"src": "2495:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:13",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:13",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:13"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:13"
															},
															"nodeType": "YulIf",
															"src": "2777:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:13",
														"type": ""
													}
												],
												"src": "2687:543:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:13"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:13",
														"type": ""
													}
												],
												"src": "3236:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:13"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:13",
														"type": ""
													}
												],
												"src": "3359:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:13"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:13",
														"type": ""
													}
												],
												"src": "3533:295:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:13"
															},
															"nodeType": "YulIf",
															"src": "4038:56:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:13"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:13"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:13"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:13"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:13",
																					"statements": []
																				},
																				"src": "4524:208:13"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:13",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:13"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:13"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:13"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:13"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:13"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:13",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:13",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:13"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:13"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:13"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:13"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:13",
														"type": ""
													}
												],
												"src": "3833:1395:13"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523480156200001157600080fd5b5060405180606001604052806025815260200162002cad602591396040518060400160405280600581526020017f7348594454000000000000000000000000000000000000000000000000000000815250816004908162000073919062000353565b50806005908162000085919062000353565b50505062000098620000d160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506200043a565b600033905090565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200015b57607f821691505b60208210810362000171576200017062000113565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001db7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200019c565b620001e786836200019c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002346200022e6200022884620001ff565b62000209565b620001ff565b9050919050565b6000819050919050565b620002508362000213565b620002686200025f826200023b565b848454620001a9565b825550505050565b600090565b6200027f62000270565b6200028c81848462000245565b505050565b5b81811015620002b457620002a860008262000275565b60018101905062000292565b5050565b601f8211156200030357620002cd8162000177565b620002d8846200018c565b81016020851015620002e8578190505b62000300620002f7856200018c565b83018262000291565b50505b505050565b600082821c905092915050565b6000620003286000198460080262000308565b1980831691505092915050565b600062000343838362000315565b9150826002028217905092915050565b6200035e82620000d9565b67ffffffffffffffff8111156200037a5762000379620000e4565b5b62000386825462000142565b62000393828285620002b8565b600060209050601f831160018114620003cb5760008415620003b6578287015190505b620003c2858262000335565b86555062000432565b601f198416620003db8662000177565b60005b828110156200040557848901518255600182019150602085019450602081019050620003de565b8683101562000425578489015162000421601f89168262000315565b8355505b6001600288020188555050505b505050505050565b608051612857620004566000396000610a2401526128576000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806342966c68116100c3578063a217fddf1161007c578063a217fddf14610400578063a457c2d71461041e578063a9059cbb1461044e578063c4d66de81461047e578063d547741f1461049a578063dd62ed3e146104b65761014d565b806342966c681461030457806370a0823114610334578063774237fc1461036457806379cc67901461038257806391d14854146103b257806395d89b41146103e25761014d565b8063248a9ca311610115578063248a9ca31461021e5780632f2ff15d1461024e578063313ce5671461026a57806336568abe1461028857806339509351146102a457806340c10f19146102d45761014d565b806301ffc9a71461015257806306fdde0314610182578063095ea7b3146101a057806318160ddd146101d057806323b872dd146101ee575b600080fd5b61016c600480360381019061016791906119be565b6104e6565b6040516101799190611a06565b60405180910390f35b61018a610560565b6040516101979190611ab1565b60405180910390f35b6101ba60048036038101906101b59190611b67565b6105f2565b6040516101c79190611a06565b60405180910390f35b6101d8610615565b6040516101e59190611bb6565b60405180910390f35b61020860048036038101906102039190611bd1565b61061f565b6040516102159190611a06565b60405180910390f35b61023860048036038101906102339190611c5a565b61064e565b6040516102459190611c96565b60405180910390f35b61026860048036038101906102639190611cb1565b61066d565b005b61027261068e565b60405161027f9190611d0d565b60405180910390f35b6102a2600480360381019061029d9190611cb1565b610697565b005b6102be60048036038101906102b99190611b67565b61071a565b6040516102cb9190611a06565b60405180910390f35b6102ee60048036038101906102e99190611b67565b610751565b6040516102fb9190611a06565b60405180910390f35b61031e60048036038101906103199190611d28565b610796565b60405161032b9190611a06565b60405180910390f35b61034e60048036038101906103499190611d55565b6107b7565b60405161035b9190611bb6565b60405180910390f35b61036c610800565b6040516103799190611c96565b60405180910390f35b61039c60048036038101906103979190611b67565b610828565b6040516103a99190611a06565b60405180910390f35b6103cc60048036038101906103c79190611cb1565b610885565b6040516103d99190611a06565b60405180910390f35b6103ea6108ef565b6040516103f79190611ab1565b60405180910390f35b610408610981565b6040516104159190611c96565b60405180910390f35b61043860048036038101906104339190611b67565b610988565b6040516104459190611a06565b60405180910390f35b61046860048036038101906104639190611b67565b6109ff565b6040516104759190611a06565b60405180910390f35b61049860048036038101906104939190611d55565b610a22565b005b6104b460048036038101906104af9190611cb1565b610b86565b005b6104d060048036038101906104cb9190611d82565b610ba7565b6040516104dd9190611bb6565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610559575061055882610c2e565b5b9050919050565b60606004805461056f90611df1565b80601f016020809104026020016040519081016040528092919081815260200182805461059b90611df1565b80156105e85780601f106105bd576101008083540402835291602001916105e8565b820191906000526020600020905b8154815290600101906020018083116105cb57829003601f168201915b5050505050905090565b6000806105fd610c98565b905061060a818585610ca0565b600191505092915050565b6000600354905090565b60008061062a610c98565b9050610637858285610e69565b610642858585610ef5565b60019150509392505050565b6000806000838152602001908152602001600020600101549050919050565b6106768261064e565b61067f8161116e565b6106898383611182565b505050565b60006012905090565b61069f610c98565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461070c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070390611e94565b60405180910390fd5b6107168282611262565b5050565b600080610725610c98565b90506107468185856107378589610ba7565b6107419190611ee3565b610ca0565b600191505092915050565b600060405160200161076290611f6e565b604051602081830303815290604052805190602001206107818161116e565b61078b8484611343565b600191505092915050565b6000806107a1610c98565b90506107ad818461149a565b6001915050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60405160200161080f90611f6e565b6040516020818303038152906040528051906020012081565b600060405160200161083990611f6e565b604051602081830303815290604052805190602001206108588161116e565b6000610862610c98565b905061086f858286610e69565b610879858561149a565b60019250505092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6060600580546108fe90611df1565b80601f016020809104026020016040519081016040528092919081815260200182805461092a90611df1565b80156109775780601f1061094c57610100808354040283529160200191610977565b820191906000526020600020905b81548152906001019060200180831161095a57829003601f168201915b5050505050905090565b6000801b81565b600080610993610c98565b905060006109a18286610ba7565b9050838110156109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109dd90611ff5565b60405180910390fd5b6109f38286868403610ca0565b60019250505092915050565b600080610a0a610c98565b9050610a17818585610ef5565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610a61610c98565b73ffffffffffffffffffffffffffffffffffffffff1614610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae90612087565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1d906120f3565b60405180910390fd5b610b54604051602001610b3890611f6e565b6040516020818303038152906040528051906020012082611182565b610b686000801b610b63610c98565b611182565b6001600660006101000a81548160ff02191690831515021790555050565b610b8f8261064e565b610b988161116e565b610ba28383611262565b505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0690612185565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7590612217565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610e5c9190611bb6565b60405180910390a3505050565b6000610e758484610ba7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610eef5781811015610ee1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed890612283565b60405180910390fd5b610eee8484848403610ca0565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5b90612315565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fca906123a7565b60405180910390fd5b610fde838383611669565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611065576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105c90612439565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111559190611bb6565b60405180910390a361116884848461166e565b50505050565b61117f8161117a610c98565b611673565b50565b61118c8282610885565b61125e57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611203610c98565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61126c8282610885565b1561133f57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506112e4610c98565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a9906124a5565b60405180910390fd5b6113be60008383611669565b80600360008282546113d09190611ee3565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114829190611bb6565b60405180910390a36114966000838361166e565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150090612537565b60405180910390fd5b61151582600083611669565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561159c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611593906125c9565b60405180910390fd5b818103600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600360008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516116509190611bb6565b60405180910390a36116648360008461166e565b505050565b505050565b505050565b61167d8282610885565b6116f45761168a816116f8565b6116988360001c6020611725565b6040516020016116a99291906126b2565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116eb9190611ab1565b60405180910390fd5b5050565b606061171e8273ffffffffffffffffffffffffffffffffffffffff16601460ff16611725565b9050919050565b60606000600283600261173891906126ec565b6117429190611ee3565b67ffffffffffffffff81111561175b5761175a61272e565b5b6040519080825280601f01601f19166020018201604052801561178d5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106117c5576117c461275d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106118295761182861275d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261186991906126ec565b6118739190611ee3565b90505b6001811115611913577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106118b5576118b461275d565b5b1a60f81b8282815181106118cc576118cb61275d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061190c9061278c565b9050611876565b5060008414611957576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194e90612801565b60405180910390fd5b8091505092915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61199b81611966565b81146119a657600080fd5b50565b6000813590506119b881611992565b92915050565b6000602082840312156119d4576119d3611961565b5b60006119e2848285016119a9565b91505092915050565b60008115159050919050565b611a00816119eb565b82525050565b6000602082019050611a1b60008301846119f7565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a5b578082015181840152602081019050611a40565b60008484015250505050565b6000601f19601f8301169050919050565b6000611a8382611a21565b611a8d8185611a2c565b9350611a9d818560208601611a3d565b611aa681611a67565b840191505092915050565b60006020820190508181036000830152611acb8184611a78565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611afe82611ad3565b9050919050565b611b0e81611af3565b8114611b1957600080fd5b50565b600081359050611b2b81611b05565b92915050565b6000819050919050565b611b4481611b31565b8114611b4f57600080fd5b50565b600081359050611b6181611b3b565b92915050565b60008060408385031215611b7e57611b7d611961565b5b6000611b8c85828601611b1c565b9250506020611b9d85828601611b52565b9150509250929050565b611bb081611b31565b82525050565b6000602082019050611bcb6000830184611ba7565b92915050565b600080600060608486031215611bea57611be9611961565b5b6000611bf886828701611b1c565b9350506020611c0986828701611b1c565b9250506040611c1a86828701611b52565b9150509250925092565b6000819050919050565b611c3781611c24565b8114611c4257600080fd5b50565b600081359050611c5481611c2e565b92915050565b600060208284031215611c7057611c6f611961565b5b6000611c7e84828501611c45565b91505092915050565b611c9081611c24565b82525050565b6000602082019050611cab6000830184611c87565b92915050565b60008060408385031215611cc857611cc7611961565b5b6000611cd685828601611c45565b9250506020611ce785828601611b1c565b9150509250929050565b600060ff82169050919050565b611d0781611cf1565b82525050565b6000602082019050611d226000830184611cfe565b92915050565b600060208284031215611d3e57611d3d611961565b5b6000611d4c84828501611b52565b91505092915050565b600060208284031215611d6b57611d6a611961565b5b6000611d7984828501611b1c565b91505092915050565b60008060408385031215611d9957611d98611961565b5b6000611da785828601611b1c565b9250506020611db885828601611b1c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611e0957607f821691505b602082108103611e1c57611e1b611dc2565b5b50919050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000611e7e602f83611a2c565b9150611e8982611e22565b604082019050919050565b60006020820190508181036000830152611ead81611e71565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611eee82611b31565b9150611ef983611b31565b9250828201905080821115611f1157611f10611eb4565b5b92915050565b600081905092915050565b7f43616c6c65720000000000000000000000000000000000000000000000000000600082015250565b6000611f58600683611f17565b9150611f6382611f22565b600682019050919050565b6000611f7982611f4b565b9150819050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611fdf602583611a2c565b9150611fea82611f83565b604082019050919050565b6000602082019050818103600083015261200e81611fd2565b9050919050565b7f73485944543a2063616c6c6572206973206e6f742074686520696e697469616c60008201527f697a657200000000000000000000000000000000000000000000000000000000602082015250565b6000612071602483611a2c565b915061207c82612015565b604082019050919050565b600060208201905081810360008301526120a081612064565b9050919050565b7f73485944543a20696e76616c6964204561726e20616464726573730000000000600082015250565b60006120dd601b83611a2c565b91506120e8826120a7565b602082019050919050565b6000602082019050818103600083015261210c816120d0565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061216f602483611a2c565b915061217a82612113565b604082019050919050565b6000602082019050818103600083015261219e81612162565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000612201602283611a2c565b915061220c826121a5565b604082019050919050565b60006020820190508181036000830152612230816121f4565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061226d601d83611a2c565b915061227882612237565b602082019050919050565b6000602082019050818103600083015261229c81612260565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006122ff602583611a2c565b915061230a826122a3565b604082019050919050565b6000602082019050818103600083015261232e816122f2565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000612391602383611a2c565b915061239c82612335565b604082019050919050565b600060208201905081810360008301526123c081612384565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000612423602683611a2c565b915061242e826123c7565b604082019050919050565b6000602082019050818103600083015261245281612416565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600061248f601f83611a2c565b915061249a82612459565b602082019050919050565b600060208201905081810360008301526124be81612482565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612521602183611a2c565b915061252c826124c5565b604082019050919050565b6000602082019050818103600083015261255081612514565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006125b3602283611a2c565b91506125be82612557565b604082019050919050565b600060208201905081810360008301526125e2816125a6565b9050919050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b600061261f601783611f17565b915061262a826125e9565b601782019050919050565b600061264082611a21565b61264a8185611f17565b935061265a818560208601611a3d565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b600061269c601183611f17565b91506126a782612666565b601182019050919050565b60006126bd82612612565b91506126c98285612635565b91506126d48261268f565b91506126e08284612635565b91508190509392505050565b60006126f782611b31565b915061270283611b31565b925082820261271081611b31565b9150828204841483151761272757612726611eb4565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061279782611b31565b9150600082036127aa576127a9611eb4565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b60006127eb602083611a2c565b91506127f6826127b5565b602082019050919050565b6000602082019050818103600083015261281a816127de565b905091905056fea264697066735822122011068d1ed7f5b23ba1f99d8b51734bacba6f9549099ece930c71cab721c11f5464736f6c634300081300335374616b65642048696768205969656c6420446f6c6c617220537461626c6520546f6b656e",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2CAD PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7348594454000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x73 SWAP2 SWAP1 PUSH3 0x353 JUMP JUMPDEST POP DUP1 PUSH1 0x5 SWAP1 DUP2 PUSH3 0x85 SWAP2 SWAP1 PUSH3 0x353 JUMP JUMPDEST POP POP POP PUSH3 0x98 PUSH3 0xD1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH3 0x43A JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x15B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x171 JUMPI PUSH3 0x170 PUSH3 0x113 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x1DB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x19C JUMP JUMPDEST PUSH3 0x1E7 DUP7 DUP4 PUSH3 0x19C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x234 PUSH3 0x22E PUSH3 0x228 DUP5 PUSH3 0x1FF JUMP JUMPDEST PUSH3 0x209 JUMP JUMPDEST PUSH3 0x1FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x250 DUP4 PUSH3 0x213 JUMP JUMPDEST PUSH3 0x268 PUSH3 0x25F DUP3 PUSH3 0x23B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x1A9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x27F PUSH3 0x270 JUMP JUMPDEST PUSH3 0x28C DUP2 DUP5 DUP5 PUSH3 0x245 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2B4 JUMPI PUSH3 0x2A8 PUSH1 0x0 DUP3 PUSH3 0x275 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x292 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x303 JUMPI PUSH3 0x2CD DUP2 PUSH3 0x177 JUMP JUMPDEST PUSH3 0x2D8 DUP5 PUSH3 0x18C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2E8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x300 PUSH3 0x2F7 DUP6 PUSH3 0x18C JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x291 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x328 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x308 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x343 DUP4 DUP4 PUSH3 0x315 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x35E DUP3 PUSH3 0xD9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x37A JUMPI PUSH3 0x379 PUSH3 0xE4 JUMP JUMPDEST JUMPDEST PUSH3 0x386 DUP3 SLOAD PUSH3 0x142 JUMP JUMPDEST PUSH3 0x393 DUP3 DUP3 DUP6 PUSH3 0x2B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3CB JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x3B6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x3C2 DUP6 DUP3 PUSH3 0x335 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x432 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x3DB DUP7 PUSH3 0x177 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x405 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3DE JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x425 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x421 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x315 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2857 PUSH3 0x456 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xA24 ADD MSTORE PUSH2 0x2857 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4B6 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x774237FC EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3E2 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2D4 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1EE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1C5A JUMP JUMPDEST PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0x697 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1D28 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH2 0x800 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EA PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x498 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0xA22 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x559 JUMPI POP PUSH2 0x558 DUP3 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x56F SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x59B SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5FD PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP PUSH2 0x60A DUP2 DUP6 DUP6 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x62A PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP PUSH2 0x637 DUP6 DUP3 DUP6 PUSH2 0xE69 JUMP JUMPDEST PUSH2 0x642 DUP6 DUP6 DUP6 PUSH2 0xEF5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x676 DUP3 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x67F DUP2 PUSH2 0x116E JUMP JUMPDEST PUSH2 0x689 DUP4 DUP4 PUSH2 0x1182 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x69F PUSH2 0xC98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x703 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x716 DUP3 DUP3 PUSH2 0x1262 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x725 PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP PUSH2 0x746 DUP2 DUP6 DUP6 PUSH2 0x737 DUP6 DUP10 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x762 SWAP1 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x781 DUP2 PUSH2 0x116E JUMP JUMPDEST PUSH2 0x78B DUP5 DUP5 PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7A1 PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP PUSH2 0x7AD DUP2 DUP5 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x80F SWAP1 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x839 SWAP1 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x858 DUP2 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x862 PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP PUSH2 0x86F DUP6 DUP3 DUP7 PUSH2 0xE69 JUMP JUMPDEST PUSH2 0x879 DUP6 DUP6 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x8FE SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x92A SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x977 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x94C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x977 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x95A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x993 PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9A1 DUP3 DUP7 PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DD SWAP1 PUSH2 0x1FF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F3 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA0A PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP PUSH2 0xA17 DUP2 DUP6 DUP6 PUSH2 0xEF5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA61 PUSH2 0xC98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAE SWAP1 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1D SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB54 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB38 SWAP1 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH2 0x1182 JUMP JUMPDEST PUSH2 0xB68 PUSH1 0x0 DUP1 SHL PUSH2 0xB63 PUSH2 0xC98 JUMP JUMPDEST PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xB8F DUP3 PUSH2 0x64E JUMP JUMPDEST PUSH2 0xB98 DUP2 PUSH2 0x116E JUMP JUMPDEST PUSH2 0xBA2 DUP4 DUP4 PUSH2 0x1262 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD06 SWAP1 PUSH2 0x2185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD75 SWAP1 PUSH2 0x2217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE5C SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE75 DUP5 DUP5 PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xEEF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED8 SWAP1 PUSH2 0x2283 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEEE DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xCA0 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5B SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCA SWAP1 PUSH2 0x23A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFDE DUP4 DUP4 DUP4 PUSH2 0x1669 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1065 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1155 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1168 DUP5 DUP5 DUP5 PUSH2 0x166E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x117F DUP2 PUSH2 0x117A PUSH2 0xC98 JUMP JUMPDEST PUSH2 0x1673 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x118C DUP3 DUP3 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x125E JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1203 PUSH2 0xC98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x126C DUP3 DUP3 PUSH2 0x885 JUMP JUMPDEST ISZERO PUSH2 0x133F JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x12E4 PUSH2 0xC98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A9 SWAP1 PUSH2 0x24A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13BE PUSH1 0x0 DUP4 DUP4 PUSH2 0x1669 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13D0 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1482 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1496 PUSH1 0x0 DUP4 DUP4 PUSH2 0x166E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1509 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1500 SWAP1 PUSH2 0x2537 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1515 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1669 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x159C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1593 SWAP1 PUSH2 0x25C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1650 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1664 DUP4 PUSH1 0x0 DUP5 PUSH2 0x166E JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x167D DUP3 DUP3 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x16F4 JUMPI PUSH2 0x168A DUP2 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0x1698 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16A9 SWAP3 SWAP2 SWAP1 PUSH2 0x26B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16EB SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x171E DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x1725 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x1738 SWAP2 SWAP1 PUSH2 0x26EC JUMP JUMPDEST PUSH2 0x1742 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x175B JUMPI PUSH2 0x175A PUSH2 0x272E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x178D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x275D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1829 JUMPI PUSH2 0x1828 PUSH2 0x275D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1869 SWAP2 SWAP1 PUSH2 0x26EC JUMP JUMPDEST PUSH2 0x1873 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1913 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x18B5 JUMPI PUSH2 0x18B4 PUSH2 0x275D JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x18CC JUMPI PUSH2 0x18CB PUSH2 0x275D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x190C SWAP1 PUSH2 0x278C JUMP JUMPDEST SWAP1 POP PUSH2 0x1876 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1957 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194E SWAP1 PUSH2 0x2801 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x199B DUP2 PUSH2 0x1966 JUMP JUMPDEST DUP2 EQ PUSH2 0x19A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19B8 DUP2 PUSH2 0x1992 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D4 JUMPI PUSH2 0x19D3 PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19E2 DUP5 DUP3 DUP6 ADD PUSH2 0x19A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A00 DUP2 PUSH2 0x19EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A1B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A5B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A40 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A83 DUP3 PUSH2 0x1A21 JUMP JUMPDEST PUSH2 0x1A8D DUP2 DUP6 PUSH2 0x1A2C JUMP JUMPDEST SWAP4 POP PUSH2 0x1A9D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x1AA6 DUP2 PUSH2 0x1A67 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ACB DUP2 DUP5 PUSH2 0x1A78 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFE DUP3 PUSH2 0x1AD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B0E DUP2 PUSH2 0x1AF3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2B DUP2 PUSH2 0x1B05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B44 DUP2 PUSH2 0x1B31 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B61 DUP2 PUSH2 0x1B3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B7E JUMPI PUSH2 0x1B7D PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B8C DUP6 DUP3 DUP7 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B9D DUP6 DUP3 DUP7 ADD PUSH2 0x1B52 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB0 DUP2 PUSH2 0x1B31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BCB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BEA JUMPI PUSH2 0x1BE9 PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BF8 DUP7 DUP3 DUP8 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C09 DUP7 DUP3 DUP8 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C1A DUP7 DUP3 DUP8 ADD PUSH2 0x1B52 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C37 DUP2 PUSH2 0x1C24 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C54 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C70 JUMPI PUSH2 0x1C6F PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C7E DUP5 DUP3 DUP6 ADD PUSH2 0x1C45 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C90 DUP2 PUSH2 0x1C24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CAB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CC8 JUMPI PUSH2 0x1CC7 PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CD6 DUP6 DUP3 DUP7 ADD PUSH2 0x1C45 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CE7 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D07 DUP2 PUSH2 0x1CF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D22 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D3E JUMPI PUSH2 0x1D3D PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D4C DUP5 DUP3 DUP6 ADD PUSH2 0x1B52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6B JUMPI PUSH2 0x1D6A PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D79 DUP5 DUP3 DUP6 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D99 JUMPI PUSH2 0x1D98 PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DA7 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DB8 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E09 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E1C JUMPI PUSH2 0x1E1B PUSH2 0x1DC2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7E PUSH1 0x2F DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x1E89 DUP3 PUSH2 0x1E22 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EAD DUP2 PUSH2 0x1E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EEE DUP3 PUSH2 0x1B31 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF9 DUP4 PUSH2 0x1B31 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F11 JUMPI PUSH2 0x1F10 PUSH2 0x1EB4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C65720000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F58 PUSH1 0x6 DUP4 PUSH2 0x1F17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F63 DUP3 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F79 DUP3 PUSH2 0x1F4B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDF PUSH1 0x25 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEA DUP3 PUSH2 0x1F83 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x200E DUP2 PUSH2 0x1FD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x73485944543A2063616C6C6572206973206E6F742074686520696E697469616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697A657200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2071 PUSH1 0x24 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x207C DUP3 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20A0 DUP2 PUSH2 0x2064 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x73485944543A20696E76616C6964204561726E20616464726573730000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20DD PUSH1 0x1B DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x20E8 DUP3 PUSH2 0x20A7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x210C DUP2 PUSH2 0x20D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x216F PUSH1 0x24 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x217A DUP3 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x219E DUP2 PUSH2 0x2162 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2201 PUSH1 0x22 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x220C DUP3 PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2230 DUP2 PUSH2 0x21F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226D PUSH1 0x1D DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x2278 DUP3 PUSH2 0x2237 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x229C DUP2 PUSH2 0x2260 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FF PUSH1 0x25 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x230A DUP3 PUSH2 0x22A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x232E DUP2 PUSH2 0x22F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2391 PUSH1 0x23 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x239C DUP3 PUSH2 0x2335 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23C0 DUP2 PUSH2 0x2384 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2423 PUSH1 0x26 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x242E DUP3 PUSH2 0x23C7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2452 DUP2 PUSH2 0x2416 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248F PUSH1 0x1F DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x249A DUP3 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24BE DUP2 PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2521 PUSH1 0x21 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x252C DUP3 PUSH2 0x24C5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2550 DUP2 PUSH2 0x2514 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B3 PUSH1 0x22 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x25BE DUP3 PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25E2 DUP2 PUSH2 0x25A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x261F PUSH1 0x17 DUP4 PUSH2 0x1F17 JUMP JUMPDEST SWAP2 POP PUSH2 0x262A DUP3 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2640 DUP3 PUSH2 0x1A21 JUMP JUMPDEST PUSH2 0x264A DUP2 DUP6 PUSH2 0x1F17 JUMP JUMPDEST SWAP4 POP PUSH2 0x265A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A3D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x269C PUSH1 0x11 DUP4 PUSH2 0x1F17 JUMP JUMPDEST SWAP2 POP PUSH2 0x26A7 DUP3 PUSH2 0x2666 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26BD DUP3 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x26C9 DUP3 DUP6 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x26D4 DUP3 PUSH2 0x268F JUMP JUMPDEST SWAP2 POP PUSH2 0x26E0 DUP3 DUP5 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F7 DUP3 PUSH2 0x1B31 JUMP JUMPDEST SWAP2 POP PUSH2 0x2702 DUP4 PUSH2 0x1B31 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2710 DUP2 PUSH2 0x1B31 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2727 JUMPI PUSH2 0x2726 PUSH2 0x1EB4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2797 DUP3 PUSH2 0x1B31 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x27AA JUMPI PUSH2 0x27A9 PUSH2 0x1EB4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27EB PUSH1 0x20 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x27F6 DUP3 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x281A DUP2 PUSH2 0x27DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT MOD DUP14 0x1E 0xD7 CREATE2 0xB2 EXTCODESIZE LOG1 0xF9 SWAP14 DUP12 MLOAD PUSH20 0x4BACBA6F9549099ECE930C71CAB721C11F546473 PUSH16 0x6C634300081300335374616B65642048 PUSH10 0x6768205969656C642044 PUSH16 0x6C6C617220537461626C6520546F6B65 PUSH15 0x0 ",
							"sourceMap": "180:2919:9:-:0;;;539:130;;;;;;;;;;2043:116:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2118:5;2110;:13;;;;;;:::i;:::-;;2144:7;2134;:17;;;;;;:::i;:::-;;2043:116;;649:12:9::1;:10;;;:12;;:::i;:::-;634:27;;;;;;;;::::0;::::1;180:2919:::0;;656:98:11;709:7;736:10;729:17;;656:98;:::o;7:99:13:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;180:2919:9:-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CALLER_ROLE_2024": {
									"entryPoint": 2048,
									"id": 2024,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_2188": {
									"entryPoint": 2433,
									"id": 2188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_585": {
									"entryPoint": 5742,
									"id": 585,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_520": {
									"entryPoint": 3232,
									"id": 520,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_574": {
									"entryPoint": 5737,
									"id": 574,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_475": {
									"entryPoint": 5274,
									"id": 475,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_2253": {
									"entryPoint": 4462,
									"id": 2253,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_2292": {
									"entryPoint": 5747,
									"id": 2292,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_2444": {
									"entryPoint": 4482,
									"id": 2444,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_403": {
									"entryPoint": 4931,
									"id": 403,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2488": {
									"entryPoint": 3224,
									"id": 2488,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_2475": {
									"entryPoint": 4706,
									"id": 2475,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_spendAllowance_563": {
									"entryPoint": 3689,
									"id": 563,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 3829,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 2983,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 1522,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": 1975,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_2159": {
									"entryPoint": 2088,
									"id": 2159,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@burn_2126": {
									"entryPoint": 1942,
									"id": 2126,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": 1678,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 2440,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRoleAdmin_2307": {
									"entryPoint": 1614,
									"id": 2307,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_2327": {
									"entryPoint": 1645,
									"id": 2327,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_2240": {
									"entryPoint": 2181,
									"id": 2240,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 1818,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_2082": {
									"entryPoint": 2594,
									"id": 2082,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mint_2104": {
									"entryPoint": 1873,
									"id": 2104,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 1376,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_2370": {
									"entryPoint": 1687,
									"id": 2370,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_2347": {
									"entryPoint": 2950,
									"id": 2347,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2221": {
									"entryPoint": 1254,
									"id": 2221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2521": {
									"entryPoint": 3118,
									"id": 2521,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 2287,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toHexString_1959": {
									"entryPoint": 5925,
									"id": 1959,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_1979": {
									"entryPoint": 5880,
									"id": 1979,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": 1557,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 1567,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 2559,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 7237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 7258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 7345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 7303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0ec930119754818241d6742436d8ca96aa0ca9397c9e8f30883c216517373182_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_55bfebf6ab60b506ad11a3d414e85d38f1468769403f48d0b0f18406d1526efd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9906,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 7318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ec930119754818241d6742436d8ca96aa0ca9397c9e8f30883c216517373182__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55bfebf6ab60b506ad11a3d414e85d38f1468769403f48d0b0f18406d1526efd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6717,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 10124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7860,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7618,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10077,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 10030,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6497,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 10165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 9013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0ec930119754818241d6742436d8ca96aa0ca9397c9e8f30883c216517373182": {
									"entryPoint": 8213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd": {
									"entryPoint": 9559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c": {
									"entryPoint": 7970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 8613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 8759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 9159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_55bfebf6ab60b506ad11a3d414e85d38f1468769403f48d0b0f18406d1526efd": {
									"entryPoint": 8359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f": {
									"entryPoint": 9413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 8867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 8467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 9705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 8067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 9830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 7714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e": {
									"entryPoint": 9305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:27984:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:13",
														"type": ""
													}
												],
												"src": "1518:99:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:13",
														"type": ""
													}
												],
												"src": "1623:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:13",
																"statements": []
															},
															"src": "1889:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:13",
														"type": ""
													}
												],
												"src": "1798:246:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:13",
														"type": ""
													}
												],
												"src": "2050:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:13",
														"type": ""
													}
												],
												"src": "2158:377:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:13",
														"type": ""
													}
												],
												"src": "2541:313:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2930:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2926:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2926:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:13",
														"type": ""
													}
												],
												"src": "2860:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3037:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3047:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3058:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3058:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3047:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3019:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3029:7:13",
														"type": ""
													}
												],
												"src": "2992:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3137:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3194:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3203:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3206:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3196:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3196:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3196:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3160:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3185:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3167:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3167:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3157:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3157:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3150:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3150:43:13"
															},
															"nodeType": "YulIf",
															"src": "3147:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3130:5:13",
														"type": ""
													}
												],
												"src": "3094:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3274:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3284:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3306:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3293:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3284:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3349:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3322:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3322:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3322:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3252:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3260:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3268:5:13",
														"type": ""
													}
												],
												"src": "3222:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3412:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3422:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3433:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3422:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3394:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3404:7:13",
														"type": ""
													}
												],
												"src": "3367:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3493:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3550:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3559:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3562:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3552:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3552:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3552:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3516:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3541:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3523:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3523:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3513:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3513:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:43:13"
															},
															"nodeType": "YulIf",
															"src": "3503:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3486:5:13",
														"type": ""
													}
												],
												"src": "3450:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3630:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3640:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3662:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3649:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3649:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3640:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3705:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3678:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3678:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3678:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3608:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3616:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3624:5:13",
														"type": ""
													}
												],
												"src": "3578:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3806:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3852:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3854:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3854:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3854:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3827:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3836:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3823:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3819:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3819:32:13"
															},
															"nodeType": "YulIf",
															"src": "3816:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "3945:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3960:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3964:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3989:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4024:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4035:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4020:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4020:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4044:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3999:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3999:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3989:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4072:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4087:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4101:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4091:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4117:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4152:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4163:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4148:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4148:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4172:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4127:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4127:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4117:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3768:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3779:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3791:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3799:6:13",
														"type": ""
													}
												],
												"src": "3723:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4268:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4285:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4308:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4290:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4290:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4278:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4278:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4256:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4263:3:13",
														"type": ""
													}
												],
												"src": "4203:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4425:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4435:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4447:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4458:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4443:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4443:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4435:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4515:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4528:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4539:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4524:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4524:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4471:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4471:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4471:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4397:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4409:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4420:4:13",
														"type": ""
													}
												],
												"src": "4327:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4655:519:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4701:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4703:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4703:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4703:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4676:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4685:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4672:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4672:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4697:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4668:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4668:32:13"
															},
															"nodeType": "YulIf",
															"src": "4665:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "4794:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4809:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4823:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4813:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4838:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4873:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4884:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4869:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4869:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4893:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4848:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4848:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4838:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4921:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4936:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4950:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4940:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4966:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5001:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5012:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4997:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4997:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5021:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4976:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4976:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4966:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5049:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5064:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5078:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5068:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5094:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5129:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5140:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5125:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5125:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5149:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5104:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5104:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5094:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4609:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4620:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4632:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4640:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4648:6:13",
														"type": ""
													}
												],
												"src": "4555:619:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5225:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5235:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5246:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5235:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5207:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5217:7:13",
														"type": ""
													}
												],
												"src": "5180:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5306:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5363:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5372:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5375:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5365:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5365:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5365:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5329:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5354:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "5336:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5336:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5326:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5326:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5319:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5319:43:13"
															},
															"nodeType": "YulIf",
															"src": "5316:63:13"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5299:5:13",
														"type": ""
													}
												],
												"src": "5263:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5443:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5453:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5475:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5462:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5462:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5453:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5518:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "5491:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5491:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5491:33:13"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5421:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5429:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5437:5:13",
														"type": ""
													}
												],
												"src": "5391:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5602:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5648:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5650:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5650:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5650:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5623:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5632:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5619:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5619:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5644:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5615:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5615:32:13"
															},
															"nodeType": "YulIf",
															"src": "5612:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "5741:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5756:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5770:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5760:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5785:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5820:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5831:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5816:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5816:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5840:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5795:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5795:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5785:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5572:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5583:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5595:6:13",
														"type": ""
													}
												],
												"src": "5536:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5936:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5953:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5976:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5958:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5958:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5946:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5946:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5924:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5931:3:13",
														"type": ""
													}
												],
												"src": "5871:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6093:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6103:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6115:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6126:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6111:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6111:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6103:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6183:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6207:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6192:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6139:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6139:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6139:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6065:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6077:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6088:4:13",
														"type": ""
													}
												],
												"src": "5995:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6306:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6352:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6354:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6354:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6354:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6327:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6336:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6323:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6323:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6348:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6319:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6319:32:13"
															},
															"nodeType": "YulIf",
															"src": "6316:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "6445:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6460:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6474:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6464:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6489:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6524:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6535:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6520:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6520:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6544:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "6499:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6499:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6489:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6572:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6587:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6601:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6591:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6617:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6652:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6663:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6648:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6648:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6672:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6627:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6627:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6617:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6268:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6279:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6291:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6299:6:13",
														"type": ""
													}
												],
												"src": "6223:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6746:43:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6756:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6771:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6778:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6767:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6767:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6756:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6728:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6738:7:13",
														"type": ""
													}
												],
												"src": "6703:86:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6856:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6873:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6894:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "6878:15:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6878:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6866:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6866:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6866:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6844:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6851:3:13",
														"type": ""
													}
												],
												"src": "6795:112:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7007:120:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7017:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7029:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7040:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7025:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7025:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7017:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7093:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7106:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7117:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7102:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7102:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7053:39:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7053:67:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7053:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6979:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6991:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7002:4:13",
														"type": ""
													}
												],
												"src": "6913:214:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7199:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7245:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7247:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7247:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7247:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7220:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7229:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7216:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7216:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7241:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7212:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7212:32:13"
															},
															"nodeType": "YulIf",
															"src": "7209:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "7338:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7353:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7367:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7357:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7382:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7417:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7428:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7413:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7413:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7437:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7392:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7392:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7382:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7169:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7180:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7192:6:13",
														"type": ""
													}
												],
												"src": "7133:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7534:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7580:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7582:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7582:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7582:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7555:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7564:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7551:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7551:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7576:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7547:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7547:32:13"
															},
															"nodeType": "YulIf",
															"src": "7544:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "7673:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7688:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7702:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7692:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7717:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7752:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7763:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7748:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7748:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7772:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7727:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7727:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7717:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7504:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7515:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7527:6:13",
														"type": ""
													}
												],
												"src": "7468:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7886:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7932:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7934:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7934:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7934:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7907:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7916:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7903:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7903:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7928:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7899:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7899:32:13"
															},
															"nodeType": "YulIf",
															"src": "7896:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "8025:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8040:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8054:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8044:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8069:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8104:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8115:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8100:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8100:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8124:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8079:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8079:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8069:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8152:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8167:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8181:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8171:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8197:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8232:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8243:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8228:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8228:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8252:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8207:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8207:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8197:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7848:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7859:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7871:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7879:6:13",
														"type": ""
													}
												],
												"src": "7803:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8311:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8328:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8331:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8321:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8321:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8321:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8425:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8428:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8418:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8418:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8418:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8449:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8452:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8442:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8442:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8442:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "8283:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8520:269:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8530:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8544:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8550:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8540:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8540:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8530:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8561:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8591:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8597:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8587:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8587:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8565:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8638:51:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8652:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8666:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8674:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8662:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8662:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8652:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8618:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8611:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8611:26:13"
															},
															"nodeType": "YulIf",
															"src": "8608:81:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8741:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "8755:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8755:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8755:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8705:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8728:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8736:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8725:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8725:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8702:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8702:38:13"
															},
															"nodeType": "YulIf",
															"src": "8699:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8504:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8513:6:13",
														"type": ""
													}
												],
												"src": "8469:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8901:128:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8923:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8931:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8919:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8919:14:13"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8935:34:13",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8912:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8912:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8912:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8991:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8999:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8987:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8987:15:13"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9004:17:13",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8980:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8980:42:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8980:42:13"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8893:6:13",
														"type": ""
													}
												],
												"src": "8795:234:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9181:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9191:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9257:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9262:2:13",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9198:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9198:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9191:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9363:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nodeType": "YulIdentifier",
																	"src": "9274:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9274:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9274:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9376:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9387:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9392:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9383:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9383:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9376:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9169:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9177:3:13",
														"type": ""
													}
												],
												"src": "9035:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9578:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9588:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9600:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9611:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9596:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9596:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9588:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9635:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9646:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9631:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9631:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9654:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9660:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9650:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9650:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9624:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9624:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9624:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9680:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9814:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9688:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9688:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9680:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9558:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9573:4:13",
														"type": ""
													}
												],
												"src": "9407:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9860:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9877:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9880:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9870:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9870:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9870:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9974:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9977:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9967:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9967:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9967:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9998:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10001:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9991:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9991:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9991:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9832:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10062:147:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10072:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10095:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10077:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10077:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10072:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10106:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10129:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10111:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10111:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10106:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10140:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10151:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10154:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10147:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10147:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10140:3:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10180:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10182:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10182:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10182:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10172:1:13"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10175:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10169:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10169:10:13"
															},
															"nodeType": "YulIf",
															"src": "10166:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10049:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10052:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10058:3:13",
														"type": ""
													}
												],
												"src": "10018:191:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10329:34:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10339:18:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10354:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10339:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10301:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10306:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10317:11:13",
														"type": ""
													}
												],
												"src": "10215:148:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10475:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10497:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10505:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10493:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10493:14:13"
																	},
																	{
																		"hexValue": "43616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10509:8:13",
																		"type": "",
																		"value": "Caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10486:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10486:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10486:32:13"
														}
													]
												},
												"name": "store_literal_in_memory_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10467:6:13",
														"type": ""
													}
												],
												"src": "10369:156:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10695:236:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10705:91:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10789:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10794:1:13",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10712:76:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10712:84:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10705:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10894:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c",
																	"nodeType": "YulIdentifier",
																	"src": "10805:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10805:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10805:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10907:18:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10918:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10923:1:13",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10914:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10914:11:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10907:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10683:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10691:3:13",
														"type": ""
													}
												],
												"src": "10531:400:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11126:192:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11137:155:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11288:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11144:142:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11144:148:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11137:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11302:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11309:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11302:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11113:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11122:3:13",
														"type": ""
													}
												],
												"src": "10937:381:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11430:118:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11452:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11460:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11448:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11448:14:13"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11464:34:13",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11441:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11441:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11441:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11520:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11528:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11516:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11516:15:13"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11533:7:13",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11509:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11509:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11509:32:13"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11422:6:13",
														"type": ""
													}
												],
												"src": "11324:224:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11700:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11710:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11776:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11781:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11717:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11717:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11710:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11882:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "11793:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11793:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11793:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11895:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11906:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11911:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11902:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11902:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11895:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11688:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11696:3:13",
														"type": ""
													}
												],
												"src": "11554:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12097:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12107:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12119:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12130:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12115:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12115:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12107:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12154:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12165:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12150:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12150:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12173:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12179:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12169:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12169:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12143:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12143:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12143:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12199:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12333:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12207:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12207:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12199:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12077:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12092:4:13",
														"type": ""
													}
												],
												"src": "11926:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12457:117:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12479:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12487:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12475:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12475:14:13"
																	},
																	{
																		"hexValue": "73485944543a2063616c6c6572206973206e6f742074686520696e697469616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12491:34:13",
																		"type": "",
																		"value": "sHYDT: caller is not the initial"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12468:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12468:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12468:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12547:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12555:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12543:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12543:15:13"
																	},
																	{
																		"hexValue": "697a6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12560:6:13",
																		"type": "",
																		"value": "izer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12536:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12536:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12536:31:13"
														}
													]
												},
												"name": "store_literal_in_memory_0ec930119754818241d6742436d8ca96aa0ca9397c9e8f30883c216517373182",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12449:6:13",
														"type": ""
													}
												],
												"src": "12351:223:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12726:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12736:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12802:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12807:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12743:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12743:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12736:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12908:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0ec930119754818241d6742436d8ca96aa0ca9397c9e8f30883c216517373182",
																	"nodeType": "YulIdentifier",
																	"src": "12819:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12819:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12819:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12921:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12932:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12937:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12928:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12928:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12921:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0ec930119754818241d6742436d8ca96aa0ca9397c9e8f30883c216517373182_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12714:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12722:3:13",
														"type": ""
													}
												],
												"src": "12580:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13123:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13133:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13145:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13156:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13141:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13141:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13133:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13180:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13191:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13176:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13176:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13199:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13205:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13195:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13195:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13169:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13169:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13169:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13225:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13359:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0ec930119754818241d6742436d8ca96aa0ca9397c9e8f30883c216517373182_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13233:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13233:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13225:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ec930119754818241d6742436d8ca96aa0ca9397c9e8f30883c216517373182__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13103:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13118:4:13",
														"type": ""
													}
												],
												"src": "12952:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13483:71:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13505:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13513:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13501:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13501:14:13"
																	},
																	{
																		"hexValue": "73485944543a20696e76616c6964204561726e2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13517:29:13",
																		"type": "",
																		"value": "sHYDT: invalid Earn address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13494:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13494:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13494:53:13"
														}
													]
												},
												"name": "store_literal_in_memory_55bfebf6ab60b506ad11a3d414e85d38f1468769403f48d0b0f18406d1526efd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13475:6:13",
														"type": ""
													}
												],
												"src": "13377:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13706:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13716:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13782:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13787:2:13",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13723:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13723:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13716:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13888:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_55bfebf6ab60b506ad11a3d414e85d38f1468769403f48d0b0f18406d1526efd",
																	"nodeType": "YulIdentifier",
																	"src": "13799:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13799:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13799:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13901:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13912:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13917:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13908:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13908:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13901:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_55bfebf6ab60b506ad11a3d414e85d38f1468769403f48d0b0f18406d1526efd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13694:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13702:3:13",
														"type": ""
													}
												],
												"src": "13560:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14103:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14113:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14125:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14136:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14121:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14121:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14113:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14160:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14171:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14156:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14156:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14179:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14185:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14175:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14175:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14149:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14149:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14149:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14205:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14339:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_55bfebf6ab60b506ad11a3d414e85d38f1468769403f48d0b0f18406d1526efd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14213:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14213:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14205:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55bfebf6ab60b506ad11a3d414e85d38f1468769403f48d0b0f18406d1526efd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14083:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14098:4:13",
														"type": ""
													}
												],
												"src": "13932:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14463:117:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14485:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14493:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14481:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14481:14:13"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14497:34:13",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14474:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14474:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14474:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14553:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14561:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14549:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14549:15:13"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14566:6:13",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14542:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14542:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14542:31:13"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14455:6:13",
														"type": ""
													}
												],
												"src": "14357:223:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14732:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14742:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14808:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14813:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14749:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14749:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14742:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14914:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "14825:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14825:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14825:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14927:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14938:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14943:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14934:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14934:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14927:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14720:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14728:3:13",
														"type": ""
													}
												],
												"src": "14586:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15129:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15139:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15151:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15162:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15147:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15147:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15139:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15186:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15197:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15182:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15182:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15205:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15211:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15201:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15201:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15175:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15175:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15175:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15231:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15365:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15239:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15239:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15231:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15109:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15124:4:13",
														"type": ""
													}
												],
												"src": "14958:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15489:115:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15511:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15519:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15507:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15507:14:13"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15523:34:13",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15500:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15500:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15500:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15579:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15587:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15575:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15575:15:13"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15592:4:13",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15568:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15568:29:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15568:29:13"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15481:6:13",
														"type": ""
													}
												],
												"src": "15383:221:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15756:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15766:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15832:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15837:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15773:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15773:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15766:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15938:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "15849:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15849:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15849:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15951:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15962:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15967:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15958:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15958:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15951:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15744:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15752:3:13",
														"type": ""
													}
												],
												"src": "15610:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16153:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16163:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16175:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16186:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16171:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16171:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16163:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16210:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16221:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16206:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16206:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16229:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16235:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16225:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16225:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16199:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16199:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16199:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16255:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16389:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16263:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16263:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16255:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16133:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16148:4:13",
														"type": ""
													}
												],
												"src": "15982:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16513:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16535:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16543:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16531:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16531:14:13"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16547:31:13",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16524:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16524:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16524:55:13"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16505:6:13",
														"type": ""
													}
												],
												"src": "16407:179:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16738:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16748:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16814:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16819:2:13",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16755:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16755:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16748:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16920:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "16831:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16831:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16831:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16933:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16944:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16949:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16940:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16940:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16933:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16726:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16734:3:13",
														"type": ""
													}
												],
												"src": "16592:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17135:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17145:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17157:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17168:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17153:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17153:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17145:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17192:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17203:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17188:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17188:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17211:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17217:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17207:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17207:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17181:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17181:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17181:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17237:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17371:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17245:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17245:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17237:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17115:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17130:4:13",
														"type": ""
													}
												],
												"src": "16964:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17495:118:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17517:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17525:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17513:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17513:14:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17529:34:13",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17506:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17506:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17506:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17585:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17593:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17581:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17581:15:13"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17598:7:13",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17574:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17574:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17574:32:13"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17487:6:13",
														"type": ""
													}
												],
												"src": "17389:224:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17765:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17775:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17841:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17846:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17782:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17782:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17775:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17947:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "17858:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17858:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17858:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17960:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17971:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17976:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17967:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17967:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17960:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17753:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17761:3:13",
														"type": ""
													}
												],
												"src": "17619:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18162:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18172:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18184:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18195:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18180:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18180:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18172:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18219:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18230:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18215:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18215:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18238:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18244:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18234:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18234:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18208:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18208:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18208:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18264:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18398:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18272:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18272:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18264:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18142:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18157:4:13",
														"type": ""
													}
												],
												"src": "17991:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18522:116:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18544:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18552:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18540:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18540:14:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18556:34:13",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18533:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18533:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18533:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18612:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18620:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18608:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18608:15:13"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18625:5:13",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18601:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18601:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18601:30:13"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18514:6:13",
														"type": ""
													}
												],
												"src": "18416:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18790:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18800:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18866:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18871:2:13",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18807:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18807:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18800:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18972:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "18883:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18883:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18883:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18985:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18996:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19001:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18992:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18992:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18985:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18778:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18786:3:13",
														"type": ""
													}
												],
												"src": "18644:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19187:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19197:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19209:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19220:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19205:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19205:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19197:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19244:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19255:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19240:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19240:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19263:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19269:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19259:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19259:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19233:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19233:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19233:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19289:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19423:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19297:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19297:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19289:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19167:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19182:4:13",
														"type": ""
													}
												],
												"src": "19016:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19547:119:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19569:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19577:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19565:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19565:14:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19581:34:13",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19558:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19558:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19558:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19637:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19645:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19633:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19633:15:13"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19650:8:13",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19626:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19626:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19626:33:13"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19539:6:13",
														"type": ""
													}
												],
												"src": "19441:225:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19818:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19828:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19894:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19899:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19835:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19835:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19828:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20000:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "19911:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19911:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19911:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20013:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20024:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20029:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20020:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20020:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20013:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19806:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19814:3:13",
														"type": ""
													}
												],
												"src": "19672:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20215:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20225:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20237:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20248:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20233:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20233:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20225:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20272:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20283:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20268:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20268:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20291:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20297:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20287:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20287:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20261:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20261:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20261:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20317:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20451:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20325:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20325:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20317:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20195:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20210:4:13",
														"type": ""
													}
												],
												"src": "20044:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20575:75:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20597:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20605:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20593:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20593:14:13"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20609:33:13",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20586:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20586:57:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20586:57:13"
														}
													]
												},
												"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20567:6:13",
														"type": ""
													}
												],
												"src": "20469:181:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20802:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20812:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20878:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20883:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20819:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20819:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20812:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20984:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																	"nodeType": "YulIdentifier",
																	"src": "20895:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20895:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20895:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20997:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21008:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21013:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21004:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21004:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20997:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20790:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20798:3:13",
														"type": ""
													}
												],
												"src": "20656:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21199:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21209:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21221:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21232:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21217:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21217:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21209:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21256:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21267:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21252:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21252:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21275:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21281:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21271:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21271:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21245:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21245:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21245:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21301:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21435:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21309:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21309:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21301:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21179:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21194:4:13",
														"type": ""
													}
												],
												"src": "21028:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21559:114:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21581:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21589:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21577:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21577:14:13"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21593:34:13",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21570:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21570:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21570:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21649:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21657:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21645:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21645:15:13"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21662:3:13",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21638:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21638:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21638:28:13"
														}
													]
												},
												"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21551:6:13",
														"type": ""
													}
												],
												"src": "21453:220:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21825:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21835:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21901:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21906:2:13",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21842:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21842:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21835:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22007:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																	"nodeType": "YulIdentifier",
																	"src": "21918:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21918:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21918:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22020:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22031:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22036:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22027:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22027:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22020:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21813:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21821:3:13",
														"type": ""
													}
												],
												"src": "21679:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22222:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22232:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22244:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22255:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22240:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22240:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22232:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22279:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22290:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22275:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22275:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22298:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22304:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22294:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22294:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22268:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22268:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22268:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22324:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22458:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22332:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22332:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22324:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22202:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22217:4:13",
														"type": ""
													}
												],
												"src": "22051:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22582:115:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22604:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22612:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22600:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22600:14:13"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22616:34:13",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22593:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22593:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22593:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22672:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22680:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22668:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22668:15:13"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22685:4:13",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22661:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22661:29:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22661:29:13"
														}
													]
												},
												"name": "store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22574:6:13",
														"type": ""
													}
												],
												"src": "22476:221:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22849:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22859:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22925:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22930:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22866:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22866:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22859:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23031:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"nodeType": "YulIdentifier",
																	"src": "22942:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22942:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22942:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23044:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23055:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23060:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23051:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23051:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23044:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22837:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22845:3:13",
														"type": ""
													}
												],
												"src": "22703:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23246:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23256:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23268:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23279:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23264:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23264:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23256:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23303:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23314:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23299:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23299:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23322:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23328:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23318:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23318:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23292:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23292:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23292:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23348:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23482:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23356:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23356:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23348:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23226:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23241:4:13",
														"type": ""
													}
												],
												"src": "23075:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23606:67:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23628:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23636:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23624:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23624:14:13"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23640:25:13",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23617:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23617:49:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23617:49:13"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23598:6:13",
														"type": ""
													}
												],
												"src": "23500:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23843:238:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23853:92:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23937:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23942:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23860:76:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23860:85:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23853:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24043:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "23954:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23954:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23954:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24056:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24067:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24072:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24063:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24063:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24056:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23831:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23839:3:13",
														"type": ""
													}
												],
												"src": "23679:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24197:280:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24207:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24254:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "24221:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24221:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "24211:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24269:96:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24353:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24358:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24276:76:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24276:89:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24269:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24413:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24420:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24409:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24409:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24427:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24432:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "24374:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24374:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24374:65:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24448:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24459:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24464:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24455:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24455:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24448:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24178:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24185:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24193:3:13",
														"type": ""
													}
												],
												"src": "24087:390:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24589:61:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24611:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24619:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24607:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24607:14:13"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24623:19:13",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24600:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24600:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24600:43:13"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24581:6:13",
														"type": ""
													}
												],
												"src": "24483:167:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24820:238:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24830:92:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24914:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24919:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24837:76:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24837:85:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24830:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25020:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "24931:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24931:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24931:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25033:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25044:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25049:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25040:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25040:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25033:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24808:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24816:3:13",
														"type": ""
													}
												],
												"src": "24656:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25450:581:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25461:155:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25612:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25468:142:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25468:148:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25461:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25626:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25715:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25724:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25633:81:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25633:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25626:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25738:155:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25889:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25745:142:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25745:148:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25738:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25903:102:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25992:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26001:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25910:81:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25910:95:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25903:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26015:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "26022:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26015:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25421:3:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25427:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25435:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25446:3:13",
														"type": ""
													}
												],
												"src": "25064:967:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26085:362:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26095:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26118:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26100:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26100:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "26095:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26129:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26152:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26134:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26134:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "26129:1:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26163:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26186:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26189:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "26182:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26182:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "26167:11:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26200:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "26229:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26211:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26211:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "26200:7:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26418:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26420:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26420:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26420:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "26351:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "26344:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26344:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "26374:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "26381:7:13"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "26390:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "26377:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "26377:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "26371:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26371:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "26324:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26324:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26304:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26304:113:13"
															},
															"nodeType": "YulIf",
															"src": "26301:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "26068:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "26071:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "26077:7:13",
														"type": ""
													}
												],
												"src": "26037:410:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26481:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26498:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26501:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26491:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26491:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26491:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26595:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26598:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26588:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26588:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26588:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26619:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26622:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "26612:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26612:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26612:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "26453:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26667:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26684:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26687:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26677:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26677:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26677:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26781:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26784:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26774:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26774:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26774:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26805:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26808:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "26798:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26798:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26798:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "26639:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26868:128:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26878:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26905:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26887:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26887:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "26878:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26939:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26941:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26941:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26941:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26926:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26933:4:13",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "26923:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26923:15:13"
															},
															"nodeType": "YulIf",
															"src": "26920:41:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26970:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26981:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26988:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "26977:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26977:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "26970:3:13"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26854:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "26864:3:13",
														"type": ""
													}
												],
												"src": "26825:171:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27108:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27130:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27138:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27126:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27126:14:13"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27142:34:13",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27119:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27119:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27119:58:13"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27100:6:13",
														"type": ""
													}
												],
												"src": "27002:182:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27336:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27346:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27412:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27417:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27353:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27353:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27346:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27518:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "27429:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27429:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27429:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27531:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27542:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27547:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27538:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27538:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27531:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27324:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27332:3:13",
														"type": ""
													}
												],
												"src": "27190:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27733:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27743:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27755:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27766:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27751:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27751:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27743:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27790:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27801:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27786:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27786:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27809:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27815:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27805:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27805:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27779:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27779:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27779:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27835:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27969:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27843:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27843:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27835:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27713:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27728:4:13",
														"type": ""
													}
												],
												"src": "27562:419:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 6)\n        store_literal_in_memory_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c(pos)\n        end := add(pos, 6)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0ec930119754818241d6742436d8ca96aa0ca9397c9e8f30883c216517373182(memPtr) {\n\n        mstore(add(memPtr, 0), \"sHYDT: caller is not the initial\")\n\n        mstore(add(memPtr, 32), \"izer\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ec930119754818241d6742436d8ca96aa0ca9397c9e8f30883c216517373182_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_0ec930119754818241d6742436d8ca96aa0ca9397c9e8f30883c216517373182(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ec930119754818241d6742436d8ca96aa0ca9397c9e8f30883c216517373182__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ec930119754818241d6742436d8ca96aa0ca9397c9e8f30883c216517373182_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_55bfebf6ab60b506ad11a3d414e85d38f1468769403f48d0b0f18406d1526efd(memPtr) {\n\n        mstore(add(memPtr, 0), \"sHYDT: invalid Earn address\")\n\n    }\n\n    function abi_encode_t_stringliteral_55bfebf6ab60b506ad11a3d414e85d38f1468769403f48d0b0f18406d1526efd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_55bfebf6ab60b506ad11a3d414e85d38f1468769403f48d0b0f18406d1526efd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_55bfebf6ab60b506ad11a3d414e85d38f1468769403f48d0b0f18406d1526efd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55bfebf6ab60b506ad11a3d414e85d38f1468769403f48d0b0f18406d1526efd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"2027": [
									{
										"length": 32,
										"start": 2596
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061014d5760003560e01c806342966c68116100c3578063a217fddf1161007c578063a217fddf14610400578063a457c2d71461041e578063a9059cbb1461044e578063c4d66de81461047e578063d547741f1461049a578063dd62ed3e146104b65761014d565b806342966c681461030457806370a0823114610334578063774237fc1461036457806379cc67901461038257806391d14854146103b257806395d89b41146103e25761014d565b8063248a9ca311610115578063248a9ca31461021e5780632f2ff15d1461024e578063313ce5671461026a57806336568abe1461028857806339509351146102a457806340c10f19146102d45761014d565b806301ffc9a71461015257806306fdde0314610182578063095ea7b3146101a057806318160ddd146101d057806323b872dd146101ee575b600080fd5b61016c600480360381019061016791906119be565b6104e6565b6040516101799190611a06565b60405180910390f35b61018a610560565b6040516101979190611ab1565b60405180910390f35b6101ba60048036038101906101b59190611b67565b6105f2565b6040516101c79190611a06565b60405180910390f35b6101d8610615565b6040516101e59190611bb6565b60405180910390f35b61020860048036038101906102039190611bd1565b61061f565b6040516102159190611a06565b60405180910390f35b61023860048036038101906102339190611c5a565b61064e565b6040516102459190611c96565b60405180910390f35b61026860048036038101906102639190611cb1565b61066d565b005b61027261068e565b60405161027f9190611d0d565b60405180910390f35b6102a2600480360381019061029d9190611cb1565b610697565b005b6102be60048036038101906102b99190611b67565b61071a565b6040516102cb9190611a06565b60405180910390f35b6102ee60048036038101906102e99190611b67565b610751565b6040516102fb9190611a06565b60405180910390f35b61031e60048036038101906103199190611d28565b610796565b60405161032b9190611a06565b60405180910390f35b61034e60048036038101906103499190611d55565b6107b7565b60405161035b9190611bb6565b60405180910390f35b61036c610800565b6040516103799190611c96565b60405180910390f35b61039c60048036038101906103979190611b67565b610828565b6040516103a99190611a06565b60405180910390f35b6103cc60048036038101906103c79190611cb1565b610885565b6040516103d99190611a06565b60405180910390f35b6103ea6108ef565b6040516103f79190611ab1565b60405180910390f35b610408610981565b6040516104159190611c96565b60405180910390f35b61043860048036038101906104339190611b67565b610988565b6040516104459190611a06565b60405180910390f35b61046860048036038101906104639190611b67565b6109ff565b6040516104759190611a06565b60405180910390f35b61049860048036038101906104939190611d55565b610a22565b005b6104b460048036038101906104af9190611cb1565b610b86565b005b6104d060048036038101906104cb9190611d82565b610ba7565b6040516104dd9190611bb6565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610559575061055882610c2e565b5b9050919050565b60606004805461056f90611df1565b80601f016020809104026020016040519081016040528092919081815260200182805461059b90611df1565b80156105e85780601f106105bd576101008083540402835291602001916105e8565b820191906000526020600020905b8154815290600101906020018083116105cb57829003601f168201915b5050505050905090565b6000806105fd610c98565b905061060a818585610ca0565b600191505092915050565b6000600354905090565b60008061062a610c98565b9050610637858285610e69565b610642858585610ef5565b60019150509392505050565b6000806000838152602001908152602001600020600101549050919050565b6106768261064e565b61067f8161116e565b6106898383611182565b505050565b60006012905090565b61069f610c98565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461070c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070390611e94565b60405180910390fd5b6107168282611262565b5050565b600080610725610c98565b90506107468185856107378589610ba7565b6107419190611ee3565b610ca0565b600191505092915050565b600060405160200161076290611f6e565b604051602081830303815290604052805190602001206107818161116e565b61078b8484611343565b600191505092915050565b6000806107a1610c98565b90506107ad818461149a565b6001915050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60405160200161080f90611f6e565b6040516020818303038152906040528051906020012081565b600060405160200161083990611f6e565b604051602081830303815290604052805190602001206108588161116e565b6000610862610c98565b905061086f858286610e69565b610879858561149a565b60019250505092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6060600580546108fe90611df1565b80601f016020809104026020016040519081016040528092919081815260200182805461092a90611df1565b80156109775780601f1061094c57610100808354040283529160200191610977565b820191906000526020600020905b81548152906001019060200180831161095a57829003601f168201915b5050505050905090565b6000801b81565b600080610993610c98565b905060006109a18286610ba7565b9050838110156109e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109dd90611ff5565b60405180910390fd5b6109f38286868403610ca0565b60019250505092915050565b600080610a0a610c98565b9050610a17818585610ef5565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610a61610c98565b73ffffffffffffffffffffffffffffffffffffffff1614610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae90612087565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1d906120f3565b60405180910390fd5b610b54604051602001610b3890611f6e565b6040516020818303038152906040528051906020012082611182565b610b686000801b610b63610c98565b611182565b6001600660006101000a81548160ff02191690831515021790555050565b610b8f8261064e565b610b988161116e565b610ba28383611262565b505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0690612185565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7590612217565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610e5c9190611bb6565b60405180910390a3505050565b6000610e758484610ba7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610eef5781811015610ee1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed890612283565b60405180910390fd5b610eee8484848403610ca0565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5b90612315565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fca906123a7565b60405180910390fd5b610fde838383611669565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611065576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105c90612439565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111559190611bb6565b60405180910390a361116884848461166e565b50505050565b61117f8161117a610c98565b611673565b50565b61118c8282610885565b61125e57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611203610c98565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61126c8282610885565b1561133f57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506112e4610c98565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a9906124a5565b60405180910390fd5b6113be60008383611669565b80600360008282546113d09190611ee3565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114829190611bb6565b60405180910390a36114966000838361166e565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150090612537565b60405180910390fd5b61151582600083611669565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561159c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611593906125c9565b60405180910390fd5b818103600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600360008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516116509190611bb6565b60405180910390a36116648360008461166e565b505050565b505050565b505050565b61167d8282610885565b6116f45761168a816116f8565b6116988360001c6020611725565b6040516020016116a99291906126b2565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116eb9190611ab1565b60405180910390fd5b5050565b606061171e8273ffffffffffffffffffffffffffffffffffffffff16601460ff16611725565b9050919050565b60606000600283600261173891906126ec565b6117429190611ee3565b67ffffffffffffffff81111561175b5761175a61272e565b5b6040519080825280601f01601f19166020018201604052801561178d5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106117c5576117c461275d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106118295761182861275d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261186991906126ec565b6118739190611ee3565b90505b6001811115611913577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106118b5576118b461275d565b5b1a60f81b8282815181106118cc576118cb61275d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061190c9061278c565b9050611876565b5060008414611957576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194e90612801565b60405180910390fd5b8091505092915050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61199b81611966565b81146119a657600080fd5b50565b6000813590506119b881611992565b92915050565b6000602082840312156119d4576119d3611961565b5b60006119e2848285016119a9565b91505092915050565b60008115159050919050565b611a00816119eb565b82525050565b6000602082019050611a1b60008301846119f7565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a5b578082015181840152602081019050611a40565b60008484015250505050565b6000601f19601f8301169050919050565b6000611a8382611a21565b611a8d8185611a2c565b9350611a9d818560208601611a3d565b611aa681611a67565b840191505092915050565b60006020820190508181036000830152611acb8184611a78565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611afe82611ad3565b9050919050565b611b0e81611af3565b8114611b1957600080fd5b50565b600081359050611b2b81611b05565b92915050565b6000819050919050565b611b4481611b31565b8114611b4f57600080fd5b50565b600081359050611b6181611b3b565b92915050565b60008060408385031215611b7e57611b7d611961565b5b6000611b8c85828601611b1c565b9250506020611b9d85828601611b52565b9150509250929050565b611bb081611b31565b82525050565b6000602082019050611bcb6000830184611ba7565b92915050565b600080600060608486031215611bea57611be9611961565b5b6000611bf886828701611b1c565b9350506020611c0986828701611b1c565b9250506040611c1a86828701611b52565b9150509250925092565b6000819050919050565b611c3781611c24565b8114611c4257600080fd5b50565b600081359050611c5481611c2e565b92915050565b600060208284031215611c7057611c6f611961565b5b6000611c7e84828501611c45565b91505092915050565b611c9081611c24565b82525050565b6000602082019050611cab6000830184611c87565b92915050565b60008060408385031215611cc857611cc7611961565b5b6000611cd685828601611c45565b9250506020611ce785828601611b1c565b9150509250929050565b600060ff82169050919050565b611d0781611cf1565b82525050565b6000602082019050611d226000830184611cfe565b92915050565b600060208284031215611d3e57611d3d611961565b5b6000611d4c84828501611b52565b91505092915050565b600060208284031215611d6b57611d6a611961565b5b6000611d7984828501611b1c565b91505092915050565b60008060408385031215611d9957611d98611961565b5b6000611da785828601611b1c565b9250506020611db885828601611b1c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611e0957607f821691505b602082108103611e1c57611e1b611dc2565b5b50919050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000611e7e602f83611a2c565b9150611e8982611e22565b604082019050919050565b60006020820190508181036000830152611ead81611e71565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611eee82611b31565b9150611ef983611b31565b9250828201905080821115611f1157611f10611eb4565b5b92915050565b600081905092915050565b7f43616c6c65720000000000000000000000000000000000000000000000000000600082015250565b6000611f58600683611f17565b9150611f6382611f22565b600682019050919050565b6000611f7982611f4b565b9150819050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611fdf602583611a2c565b9150611fea82611f83565b604082019050919050565b6000602082019050818103600083015261200e81611fd2565b9050919050565b7f73485944543a2063616c6c6572206973206e6f742074686520696e697469616c60008201527f697a657200000000000000000000000000000000000000000000000000000000602082015250565b6000612071602483611a2c565b915061207c82612015565b604082019050919050565b600060208201905081810360008301526120a081612064565b9050919050565b7f73485944543a20696e76616c6964204561726e20616464726573730000000000600082015250565b60006120dd601b83611a2c565b91506120e8826120a7565b602082019050919050565b6000602082019050818103600083015261210c816120d0565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061216f602483611a2c565b915061217a82612113565b604082019050919050565b6000602082019050818103600083015261219e81612162565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000612201602283611a2c565b915061220c826121a5565b604082019050919050565b60006020820190508181036000830152612230816121f4565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061226d601d83611a2c565b915061227882612237565b602082019050919050565b6000602082019050818103600083015261229c81612260565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006122ff602583611a2c565b915061230a826122a3565b604082019050919050565b6000602082019050818103600083015261232e816122f2565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000612391602383611a2c565b915061239c82612335565b604082019050919050565b600060208201905081810360008301526123c081612384565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000612423602683611a2c565b915061242e826123c7565b604082019050919050565b6000602082019050818103600083015261245281612416565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600061248f601f83611a2c565b915061249a82612459565b602082019050919050565b600060208201905081810360008301526124be81612482565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612521602183611a2c565b915061252c826124c5565b604082019050919050565b6000602082019050818103600083015261255081612514565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006125b3602283611a2c565b91506125be82612557565b604082019050919050565b600060208201905081810360008301526125e2816125a6565b9050919050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b600061261f601783611f17565b915061262a826125e9565b601782019050919050565b600061264082611a21565b61264a8185611f17565b935061265a818560208601611a3d565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b600061269c601183611f17565b91506126a782612666565b601182019050919050565b60006126bd82612612565b91506126c98285612635565b91506126d48261268f565b91506126e08284612635565b91508190509392505050565b60006126f782611b31565b915061270283611b31565b925082820261271081611b31565b9150828204841483151761272757612726611eb4565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061279782611b31565b9150600082036127aa576127a9611eb4565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b60006127eb602083611a2c565b91506127f6826127b5565b602082019050919050565b6000602082019050818103600083015261281a816127de565b905091905056fea264697066735822122011068d1ed7f5b23ba1f99d8b51734bacba6f9549099ece930c71cab721c11f5464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4B6 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x774237FC EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3E2 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2D4 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1EE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH2 0x615 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1C5A JUMP JUMPDEST PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0x697 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1D28 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH2 0x800 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x828 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EA PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x498 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x1D55 JUMP JUMPDEST PUSH2 0xA22 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x1CB1 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CB SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x559 JUMPI POP PUSH2 0x558 DUP3 PUSH2 0xC2E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x56F SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x59B SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5FD PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP PUSH2 0x60A DUP2 DUP6 DUP6 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x62A PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP PUSH2 0x637 DUP6 DUP3 DUP6 PUSH2 0xE69 JUMP JUMPDEST PUSH2 0x642 DUP6 DUP6 DUP6 PUSH2 0xEF5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x676 DUP3 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x67F DUP2 PUSH2 0x116E JUMP JUMPDEST PUSH2 0x689 DUP4 DUP4 PUSH2 0x1182 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x69F PUSH2 0xC98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x703 SWAP1 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x716 DUP3 DUP3 PUSH2 0x1262 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x725 PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP PUSH2 0x746 DUP2 DUP6 DUP6 PUSH2 0x737 DUP6 DUP10 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x762 SWAP1 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x781 DUP2 PUSH2 0x116E JUMP JUMPDEST PUSH2 0x78B DUP5 DUP5 PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7A1 PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP PUSH2 0x7AD DUP2 DUP5 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x80F SWAP1 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x839 SWAP1 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x858 DUP2 PUSH2 0x116E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x862 PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP PUSH2 0x86F DUP6 DUP3 DUP7 PUSH2 0xE69 JUMP JUMPDEST PUSH2 0x879 DUP6 DUP6 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x8FE SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x92A SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x977 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x94C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x977 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x95A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x993 PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9A1 DUP3 DUP7 PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DD SWAP1 PUSH2 0x1FF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F3 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA0A PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP PUSH2 0xA17 DUP2 DUP6 DUP6 PUSH2 0xEF5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA61 PUSH2 0xC98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAE SWAP1 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1D SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB54 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB38 SWAP1 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH2 0x1182 JUMP JUMPDEST PUSH2 0xB68 PUSH1 0x0 DUP1 SHL PUSH2 0xB63 PUSH2 0xC98 JUMP JUMPDEST PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xB8F DUP3 PUSH2 0x64E JUMP JUMPDEST PUSH2 0xB98 DUP2 PUSH2 0x116E JUMP JUMPDEST PUSH2 0xBA2 DUP4 DUP4 PUSH2 0x1262 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD06 SWAP1 PUSH2 0x2185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD75 SWAP1 PUSH2 0x2217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE5C SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE75 DUP5 DUP5 PUSH2 0xBA7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xEEF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED8 SWAP1 PUSH2 0x2283 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEEE DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xCA0 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5B SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCA SWAP1 PUSH2 0x23A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFDE DUP4 DUP4 DUP4 PUSH2 0x1669 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1065 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP1 PUSH2 0x2439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1155 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1168 DUP5 DUP5 DUP5 PUSH2 0x166E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x117F DUP2 PUSH2 0x117A PUSH2 0xC98 JUMP JUMPDEST PUSH2 0x1673 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x118C DUP3 DUP3 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x125E JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1203 PUSH2 0xC98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x126C DUP3 DUP3 PUSH2 0x885 JUMP JUMPDEST ISZERO PUSH2 0x133F JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x12E4 PUSH2 0xC98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A9 SWAP1 PUSH2 0x24A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13BE PUSH1 0x0 DUP4 DUP4 PUSH2 0x1669 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13D0 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1482 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1496 PUSH1 0x0 DUP4 DUP4 PUSH2 0x166E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1509 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1500 SWAP1 PUSH2 0x2537 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1515 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1669 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x159C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1593 SWAP1 PUSH2 0x25C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1650 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1664 DUP4 PUSH1 0x0 DUP5 PUSH2 0x166E JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x167D DUP3 DUP3 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x16F4 JUMPI PUSH2 0x168A DUP2 PUSH2 0x16F8 JUMP JUMPDEST PUSH2 0x1698 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16A9 SWAP3 SWAP2 SWAP1 PUSH2 0x26B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16EB SWAP2 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x171E DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x1725 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x1738 SWAP2 SWAP1 PUSH2 0x26EC JUMP JUMPDEST PUSH2 0x1742 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x175B JUMPI PUSH2 0x175A PUSH2 0x272E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x178D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x275D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1829 JUMPI PUSH2 0x1828 PUSH2 0x275D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1869 SWAP2 SWAP1 PUSH2 0x26EC JUMP JUMPDEST PUSH2 0x1873 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1913 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x18B5 JUMPI PUSH2 0x18B4 PUSH2 0x275D JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x18CC JUMPI PUSH2 0x18CB PUSH2 0x275D JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x190C SWAP1 PUSH2 0x278C JUMP JUMPDEST SWAP1 POP PUSH2 0x1876 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x1957 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194E SWAP1 PUSH2 0x2801 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x199B DUP2 PUSH2 0x1966 JUMP JUMPDEST DUP2 EQ PUSH2 0x19A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19B8 DUP2 PUSH2 0x1992 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19D4 JUMPI PUSH2 0x19D3 PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19E2 DUP5 DUP3 DUP6 ADD PUSH2 0x19A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A00 DUP2 PUSH2 0x19EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A1B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A5B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A40 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A83 DUP3 PUSH2 0x1A21 JUMP JUMPDEST PUSH2 0x1A8D DUP2 DUP6 PUSH2 0x1A2C JUMP JUMPDEST SWAP4 POP PUSH2 0x1A9D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A3D JUMP JUMPDEST PUSH2 0x1AA6 DUP2 PUSH2 0x1A67 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ACB DUP2 DUP5 PUSH2 0x1A78 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFE DUP3 PUSH2 0x1AD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B0E DUP2 PUSH2 0x1AF3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B2B DUP2 PUSH2 0x1B05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B44 DUP2 PUSH2 0x1B31 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B61 DUP2 PUSH2 0x1B3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B7E JUMPI PUSH2 0x1B7D PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B8C DUP6 DUP3 DUP7 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B9D DUP6 DUP3 DUP7 ADD PUSH2 0x1B52 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB0 DUP2 PUSH2 0x1B31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BCB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BEA JUMPI PUSH2 0x1BE9 PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BF8 DUP7 DUP3 DUP8 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C09 DUP7 DUP3 DUP8 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C1A DUP7 DUP3 DUP8 ADD PUSH2 0x1B52 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C37 DUP2 PUSH2 0x1C24 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C54 DUP2 PUSH2 0x1C2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C70 JUMPI PUSH2 0x1C6F PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C7E DUP5 DUP3 DUP6 ADD PUSH2 0x1C45 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C90 DUP2 PUSH2 0x1C24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CAB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CC8 JUMPI PUSH2 0x1CC7 PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CD6 DUP6 DUP3 DUP7 ADD PUSH2 0x1C45 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CE7 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D07 DUP2 PUSH2 0x1CF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D22 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D3E JUMPI PUSH2 0x1D3D PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D4C DUP5 DUP3 DUP6 ADD PUSH2 0x1B52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6B JUMPI PUSH2 0x1D6A PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D79 DUP5 DUP3 DUP6 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D99 JUMPI PUSH2 0x1D98 PUSH2 0x1961 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DA7 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DB8 DUP6 DUP3 DUP7 ADD PUSH2 0x1B1C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1E09 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E1C JUMPI PUSH2 0x1E1B PUSH2 0x1DC2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E7E PUSH1 0x2F DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x1E89 DUP3 PUSH2 0x1E22 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EAD DUP2 PUSH2 0x1E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EEE DUP3 PUSH2 0x1B31 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF9 DUP4 PUSH2 0x1B31 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F11 JUMPI PUSH2 0x1F10 PUSH2 0x1EB4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C65720000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F58 PUSH1 0x6 DUP4 PUSH2 0x1F17 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F63 DUP3 PUSH2 0x1F22 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F79 DUP3 PUSH2 0x1F4B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDF PUSH1 0x25 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEA DUP3 PUSH2 0x1F83 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x200E DUP2 PUSH2 0x1FD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x73485944543A2063616C6C6572206973206E6F742074686520696E697469616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697A657200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2071 PUSH1 0x24 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x207C DUP3 PUSH2 0x2015 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20A0 DUP2 PUSH2 0x2064 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x73485944543A20696E76616C6964204561726E20616464726573730000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20DD PUSH1 0x1B DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x20E8 DUP3 PUSH2 0x20A7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x210C DUP2 PUSH2 0x20D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x216F PUSH1 0x24 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x217A DUP3 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x219E DUP2 PUSH2 0x2162 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2201 PUSH1 0x22 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x220C DUP3 PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2230 DUP2 PUSH2 0x21F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226D PUSH1 0x1D DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x2278 DUP3 PUSH2 0x2237 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x229C DUP2 PUSH2 0x2260 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FF PUSH1 0x25 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x230A DUP3 PUSH2 0x22A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x232E DUP2 PUSH2 0x22F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2391 PUSH1 0x23 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x239C DUP3 PUSH2 0x2335 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23C0 DUP2 PUSH2 0x2384 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2423 PUSH1 0x26 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x242E DUP3 PUSH2 0x23C7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2452 DUP2 PUSH2 0x2416 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248F PUSH1 0x1F DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x249A DUP3 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24BE DUP2 PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2521 PUSH1 0x21 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x252C DUP3 PUSH2 0x24C5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2550 DUP2 PUSH2 0x2514 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B3 PUSH1 0x22 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x25BE DUP3 PUSH2 0x2557 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25E2 DUP2 PUSH2 0x25A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x261F PUSH1 0x17 DUP4 PUSH2 0x1F17 JUMP JUMPDEST SWAP2 POP PUSH2 0x262A DUP3 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2640 DUP3 PUSH2 0x1A21 JUMP JUMPDEST PUSH2 0x264A DUP2 DUP6 PUSH2 0x1F17 JUMP JUMPDEST SWAP4 POP PUSH2 0x265A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A3D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x269C PUSH1 0x11 DUP4 PUSH2 0x1F17 JUMP JUMPDEST SWAP2 POP PUSH2 0x26A7 DUP3 PUSH2 0x2666 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26BD DUP3 PUSH2 0x2612 JUMP JUMPDEST SWAP2 POP PUSH2 0x26C9 DUP3 DUP6 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP PUSH2 0x26D4 DUP3 PUSH2 0x268F JUMP JUMPDEST SWAP2 POP PUSH2 0x26E0 DUP3 DUP5 PUSH2 0x2635 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F7 DUP3 PUSH2 0x1B31 JUMP JUMPDEST SWAP2 POP PUSH2 0x2702 DUP4 PUSH2 0x1B31 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2710 DUP2 PUSH2 0x1B31 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2727 JUMPI PUSH2 0x2726 PUSH2 0x1EB4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2797 DUP3 PUSH2 0x1B31 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x27AA JUMPI PUSH2 0x27A9 PUSH2 0x1EB4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27EB PUSH1 0x20 DUP4 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x27F6 DUP3 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x281A DUP2 PUSH2 0x27DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT MOD DUP14 0x1E 0xD7 CREATE2 0xB2 EXTCODESIZE LOG1 0xF9 SWAP14 DUP12 MLOAD PUSH20 0x4BACBA6F9549099ECE930C71CAB721C11F546473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "180:2919:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2686:204:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2229:100:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4589:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3358:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5370:261;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4509:131:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4950:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3200:93:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6094:218:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6040:238:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1586:155:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1887:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3529:127:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;287:75:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2843:253;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2982:147:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2448:104:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2087:49:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6781:436:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3862:193;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;921:474:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5390:149:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4118:151:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2686:204:10;2771:4;2810:32;2795:47;;;:11;:47;;;;:87;;;;2846:36;2870:11;2846:23;:36::i;:::-;2795:87;2788:94;;2686:204;;;:::o;2229:100:0:-;2283:13;2316:5;2309:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2229:100;:::o;4589:201::-;4672:4;4689:13;4705:12;:10;:12::i;:::-;4689:28;;4728:32;4737:5;4744:7;4753:6;4728:8;:32::i;:::-;4778:4;4771:11;;;4589:201;;;;:::o;3358:108::-;3419:7;3446:12;;3439:19;;3358:108;:::o;5370:261::-;5467:4;5484:15;5502:12;:10;:12::i;:::-;5484:30;;5525:38;5541:4;5547:7;5556:6;5525:15;:38::i;:::-;5574:27;5584:4;5590:2;5594:6;5574:9;:27::i;:::-;5619:4;5612:11;;;5370:261;;;;;:::o;4509:131:10:-;4583:7;4610:6;:12;4617:4;4610:12;;;;;;;;;;;:22;;;4603:29;;4509:131;;;:::o;4950:147::-;5033:18;5046:4;5033:12;:18::i;:::-;2578:16;2589:4;2578:10;:16::i;:::-;5064:25:::1;5075:4;5081:7;5064:10;:25::i;:::-;4950:147:::0;;;:::o;3200:93:0:-;3258:5;3283:2;3276:9;;3200:93;:::o;6094:218:10:-;6201:12;:10;:12::i;:::-;6190:23;;:7;:23;;;6182:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6278:26;6290:4;6296:7;6278:11;:26::i;:::-;6094:218;;:::o;6040:238:0:-;6128:4;6145:13;6161:12;:10;:12::i;:::-;6145:28;;6184:64;6193:5;6200:7;6237:10;6209:25;6219:5;6226:7;6209:9;:25::i;:::-;:38;;;;:::i;:::-;6184:8;:64::i;:::-;6266:4;6259:11;;;6040:238;;;;:::o;1586:155:9:-;1677:4;335:26;;;;;;;:::i;:::-;;;;;;;;;;;;;325:37;;;;;;2578:16:10;2589:4;2578:10;:16::i;:::-;1694:17:9::1;1700:2;1704:6;1694:5;:17::i;:::-;1729:4;1722:11;;1586:155:::0;;;;;:::o;1887:163::-;1944:4;1961:13;1977:12;:10;:12::i;:::-;1961:28;;2000:20;2006:5;2013:6;2000:5;:20::i;:::-;2038:4;2031:11;;;1887:163;;;:::o;3529:127:0:-;3603:7;3630:9;:18;3640:7;3630:18;;;;;;;;;;;;;;;;3623:25;;3529:127;;;:::o;287:75:9:-;335:26;;;;;;;:::i;:::-;;;;;;;;;;;;;325:37;;;;;;287:75;:::o;2843:253::-;2940:4;335:26;;;;;;;:::i;:::-;;;;;;;;;;;;;325:37;;;;;;2578:16:10;2589:4;2578:10;:16::i;:::-;2957:15:9::1;2975:12;:10;:12::i;:::-;2957:30;;2998:38;3014:4;3020:7;3029:6;2998:15;:38::i;:::-;3047:19;3053:4;3059:6;3047:5;:19::i;:::-;3084:4;3077:11;;;2843:253:::0;;;;;:::o;2982:147:10:-;3068:4;3092:6;:12;3099:4;3092:12;;;;;;;;;;;:20;;:29;3113:7;3092:29;;;;;;;;;;;;;;;;;;;;;;;;;3085:36;;2982:147;;;;:::o;2448:104:0:-;2504:13;2537:7;2530:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2448:104;:::o;2087:49:10:-;2132:4;2087:49;;;:::o;6781:436:0:-;6874:4;6891:13;6907:12;:10;:12::i;:::-;6891:28;;6930:24;6957:25;6967:5;6974:7;6957:9;:25::i;:::-;6930:52;;7021:15;7001:16;:35;;6993:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7114:60;7123:5;7130:7;7158:15;7139:16;:34;7114:8;:60::i;:::-;7205:4;7198:11;;;;6781:436;;;;:::o;3862:193::-;3941:4;3958:13;3974:12;:10;:12::i;:::-;3958:28;;3997;4007:5;4014:2;4018:6;3997:9;:28::i;:::-;4043:4;4036:11;;;3862:193;;;;:::o;921:474:9:-;1000:12;984:28;;:12;:10;:12::i;:::-;:28;;;976:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;1184:1;1167:19;;:5;:19;;;1159:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1229:30;335:26;;;;;;;:::i;:::-;;;;;;;;;;;;;325:37;;;;;;1253:5;1229:10;:30::i;:::-;1311:44;2132:4:10;1322:18:9;;1342:12;:10;:12::i;:::-;1311:10;:44::i;:::-;1383:4;1366:14;;:21;;;;;;;;;;;;;;;;;;921:474;:::o;5390:149:10:-;5474:18;5487:4;5474:12;:18::i;:::-;2578:16;2589:4;2578:10;:16::i;:::-;5505:26:::1;5517:4;5523:7;5505:11;:26::i;:::-;5390:149:::0;;;:::o;4118:151:0:-;4207:7;4234:11;:18;4246:5;4234:18;;;;;;;;;;;;;;;:27;4253:7;4234:27;;;;;;;;;;;;;;;;4227:34;;4118:151;;;;:::o;866:157:12:-;951:4;990:25;975:40;;;:11;:40;;;;968:47;;866:157;;;:::o;656:98:11:-;709:7;736:10;729:17;;656:98;:::o;10774:346:0:-;10893:1;10876:19;;:5;:19;;;10868:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10974:1;10955:21;;:7;:21;;;10947:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11058:6;11028:11;:18;11040:5;11028:18;;;;;;;;;;;;;;;:27;11047:7;11028:27;;;;;;;;;;;;;;;:36;;;;11096:7;11080:32;;11089:5;11080:32;;;11105:6;11080:32;;;;;;:::i;:::-;;;;;;;;10774:346;;;:::o;11411:419::-;11512:24;11539:25;11549:5;11556:7;11539:9;:25::i;:::-;11512:52;;11599:17;11579:16;:37;11575:248;;11661:6;11641:16;:26;;11633:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11745:51;11754:5;11761:7;11789:6;11770:16;:25;11745:8;:51::i;:::-;11575:248;11501:329;11411:419;;;:::o;7687:806::-;7800:1;7784:18;;:4;:18;;;7776:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7877:1;7863:16;;:2;:16;;;7855:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7932:38;7953:4;7959:2;7963:6;7932:20;:38::i;:::-;7983:19;8005:9;:15;8015:4;8005:15;;;;;;;;;;;;;;;;7983:37;;8054:6;8039:11;:21;;8031:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8171:6;8157:11;:20;8139:9;:15;8149:4;8139:15;;;;;;;;;;;;;;;:38;;;;8374:6;8357:9;:13;8367:2;8357:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8424:2;8409:26;;8418:4;8409:26;;;8428:6;8409:26;;;;;;:::i;:::-;;;;;;;;8448:37;8468:4;8474:2;8478:6;8448:19;:37::i;:::-;7765:728;7687:806;;;:::o;3433:105:10:-;3500:30;3511:4;3517:12;:10;:12::i;:::-;3500:10;:30::i;:::-;3433:105;:::o;7691:238::-;7775:22;7783:4;7789:7;7775;:22::i;:::-;7770:152;;7846:4;7814:6;:12;7821:4;7814:12;;;;;;;;;;;:20;;:29;7835:7;7814:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7897:12;:10;:12::i;:::-;7870:40;;7888:7;7870:40;;7882:4;7870:40;;;;;;;;;;7770:152;7691:238;;:::o;8109:239::-;8193:22;8201:4;8207:7;8193;:22::i;:::-;8189:152;;;8264:5;8232:6;:12;8239:4;8232:12;;;;;;;;;;;:20;;:29;8253:7;8232:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8316:12;:10;:12::i;:::-;8289:40;;8307:7;8289:40;;8301:4;8289:40;;;;;;;;;;8189:152;8109:239;;:::o;8780:548:0:-;8883:1;8864:21;;:7;:21;;;8856:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8934:49;8963:1;8967:7;8976:6;8934:20;:49::i;:::-;9012:6;8996:12;;:22;;;;;;;:::i;:::-;;;;;;;;9189:6;9167:9;:18;9177:7;9167:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;9243:7;9222:37;;9239:1;9222:37;;;9252:6;9222:37;;;;;;:::i;:::-;;;;;;;;9272:48;9300:1;9304:7;9313:6;9272:19;:48::i;:::-;8780:548;;:::o;9661:675::-;9764:1;9745:21;;:7;:21;;;9737:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9817:49;9838:7;9855:1;9859:6;9817:20;:49::i;:::-;9879:22;9904:9;:18;9914:7;9904:18;;;;;;;;;;;;;;;;9879:43;;9959:6;9941:14;:24;;9933:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;10078:6;10061:14;:23;10040:9;:18;10050:7;10040:18;;;;;;;;;;;;;;;:44;;;;10195:6;10179:12;;:22;;;;;;;;;;;10256:1;10230:37;;10239:7;10230:37;;;10260:6;10230:37;;;;;;:::i;:::-;;;;;;;;10280:48;10300:7;10317:1;10321:6;10280:19;:48::i;:::-;9726:610;9661:675;;:::o;12430:91::-;;;;:::o;13125:90::-;;;;:::o;3828:492:10:-;3917:22;3925:4;3931:7;3917;:22::i;:::-;3912:401;;4105:28;4125:7;4105:19;:28::i;:::-;4206:38;4234:4;4226:13;;4241:2;4206:19;:38::i;:::-;4010:257;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3956:345;;;;;;;;;;;:::i;:::-;;;;;;;;3912:401;3828:492;;:::o;2471:151:8:-;2529:13;2562:52;2590:4;2574:22;;346:2;2562:52;;:11;:52::i;:::-;2555:59;;2471:151;;;:::o;1867:447::-;1942:13;1968:19;2013:1;2004:6;2000:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1990:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1968:47;;2026:15;:6;2033:1;2026:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2052;:6;2059:1;2052:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2083:9;2108:1;2099:6;2095:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2083:26;;2078:131;2115:1;2111;:5;2078:131;;;2150:8;2167:3;2159:5;:11;2150:21;;;;;;;:::i;:::-;;;;;2138:6;2145:1;2138:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2196:1;2186:11;;;;;2118:3;;;;:::i;:::-;;;2078:131;;;;2236:1;2227:5;:10;2219:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2299:6;2285:21;;;1867:447;;;;:::o;88:117:13:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:118::-;4290:24;4308:5;4290:24;:::i;:::-;4285:3;4278:37;4203:118;;:::o;4327:222::-;4420:4;4458:2;4447:9;4443:18;4435:26;;4471:71;4539:1;4528:9;4524:17;4515:6;4471:71;:::i;:::-;4327:222;;;;:::o;4555:619::-;4632:6;4640;4648;4697:2;4685:9;4676:7;4672:23;4668:32;4665:119;;;4703:79;;:::i;:::-;4665:119;4823:1;4848:53;4893:7;4884:6;4873:9;4869:22;4848:53;:::i;:::-;4838:63;;4794:117;4950:2;4976:53;5021:7;5012:6;5001:9;4997:22;4976:53;:::i;:::-;4966:63;;4921:118;5078:2;5104:53;5149:7;5140:6;5129:9;5125:22;5104:53;:::i;:::-;5094:63;;5049:118;4555:619;;;;;:::o;5180:77::-;5217:7;5246:5;5235:16;;5180:77;;;:::o;5263:122::-;5336:24;5354:5;5336:24;:::i;:::-;5329:5;5326:35;5316:63;;5375:1;5372;5365:12;5316:63;5263:122;:::o;5391:139::-;5437:5;5475:6;5462:20;5453:29;;5491:33;5518:5;5491:33;:::i;:::-;5391:139;;;;:::o;5536:329::-;5595:6;5644:2;5632:9;5623:7;5619:23;5615:32;5612:119;;;5650:79;;:::i;:::-;5612:119;5770:1;5795:53;5840:7;5831:6;5820:9;5816:22;5795:53;:::i;:::-;5785:63;;5741:117;5536:329;;;;:::o;5871:118::-;5958:24;5976:5;5958:24;:::i;:::-;5953:3;5946:37;5871:118;;:::o;5995:222::-;6088:4;6126:2;6115:9;6111:18;6103:26;;6139:71;6207:1;6196:9;6192:17;6183:6;6139:71;:::i;:::-;5995:222;;;;:::o;6223:474::-;6291:6;6299;6348:2;6336:9;6327:7;6323:23;6319:32;6316:119;;;6354:79;;:::i;:::-;6316:119;6474:1;6499:53;6544:7;6535:6;6524:9;6520:22;6499:53;:::i;:::-;6489:63;;6445:117;6601:2;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6572:118;6223:474;;;;;:::o;6703:86::-;6738:7;6778:4;6771:5;6767:16;6756:27;;6703:86;;;:::o;6795:112::-;6878:22;6894:5;6878:22;:::i;:::-;6873:3;6866:35;6795:112;;:::o;6913:214::-;7002:4;7040:2;7029:9;7025:18;7017:26;;7053:67;7117:1;7106:9;7102:17;7093:6;7053:67;:::i;:::-;6913:214;;;;:::o;7133:329::-;7192:6;7241:2;7229:9;7220:7;7216:23;7212:32;7209:119;;;7247:79;;:::i;:::-;7209:119;7367:1;7392:53;7437:7;7428:6;7417:9;7413:22;7392:53;:::i;:::-;7382:63;;7338:117;7133:329;;;;:::o;7468:::-;7527:6;7576:2;7564:9;7555:7;7551:23;7547:32;7544:119;;;7582:79;;:::i;:::-;7544:119;7702:1;7727:53;7772:7;7763:6;7752:9;7748:22;7727:53;:::i;:::-;7717:63;;7673:117;7468:329;;;;:::o;7803:474::-;7871:6;7879;7928:2;7916:9;7907:7;7903:23;7899:32;7896:119;;;7934:79;;:::i;:::-;7896:119;8054:1;8079:53;8124:7;8115:6;8104:9;8100:22;8079:53;:::i;:::-;8069:63;;8025:117;8181:2;8207:53;8252:7;8243:6;8232:9;8228:22;8207:53;:::i;:::-;8197:63;;8152:118;7803:474;;;;;:::o;8283:180::-;8331:77;8328:1;8321:88;8428:4;8425:1;8418:15;8452:4;8449:1;8442:15;8469:320;8513:6;8550:1;8544:4;8540:12;8530:22;;8597:1;8591:4;8587:12;8618:18;8608:81;;8674:4;8666:6;8662:17;8652:27;;8608:81;8736:2;8728:6;8725:14;8705:18;8702:38;8699:84;;8755:18;;:::i;:::-;8699:84;8520:269;8469:320;;;:::o;8795:234::-;8935:34;8931:1;8923:6;8919:14;8912:58;9004:17;8999:2;8991:6;8987:15;8980:42;8795:234;:::o;9035:366::-;9177:3;9198:67;9262:2;9257:3;9198:67;:::i;:::-;9191:74;;9274:93;9363:3;9274:93;:::i;:::-;9392:2;9387:3;9383:12;9376:19;;9035:366;;;:::o;9407:419::-;9573:4;9611:2;9600:9;9596:18;9588:26;;9660:9;9654:4;9650:20;9646:1;9635:9;9631:17;9624:47;9688:131;9814:4;9688:131;:::i;:::-;9680:139;;9407:419;;;:::o;9832:180::-;9880:77;9877:1;9870:88;9977:4;9974:1;9967:15;10001:4;9998:1;9991:15;10018:191;10058:3;10077:20;10095:1;10077:20;:::i;:::-;10072:25;;10111:20;10129:1;10111:20;:::i;:::-;10106:25;;10154:1;10151;10147:9;10140:16;;10175:3;10172:1;10169:10;10166:36;;;10182:18;;:::i;:::-;10166:36;10018:191;;;;:::o;10215:148::-;10317:11;10354:3;10339:18;;10215:148;;;;:::o;10369:156::-;10509:8;10505:1;10497:6;10493:14;10486:32;10369:156;:::o;10531:400::-;10691:3;10712:84;10794:1;10789:3;10712:84;:::i;:::-;10705:91;;10805:93;10894:3;10805:93;:::i;:::-;10923:1;10918:3;10914:11;10907:18;;10531:400;;;:::o;10937:381::-;11122:3;11144:148;11288:3;11144:148;:::i;:::-;11137:155;;11309:3;11302:10;;10937:381;;;:::o;11324:224::-;11464:34;11460:1;11452:6;11448:14;11441:58;11533:7;11528:2;11520:6;11516:15;11509:32;11324:224;:::o;11554:366::-;11696:3;11717:67;11781:2;11776:3;11717:67;:::i;:::-;11710:74;;11793:93;11882:3;11793:93;:::i;:::-;11911:2;11906:3;11902:12;11895:19;;11554:366;;;:::o;11926:419::-;12092:4;12130:2;12119:9;12115:18;12107:26;;12179:9;12173:4;12169:20;12165:1;12154:9;12150:17;12143:47;12207:131;12333:4;12207:131;:::i;:::-;12199:139;;11926:419;;;:::o;12351:223::-;12491:34;12487:1;12479:6;12475:14;12468:58;12560:6;12555:2;12547:6;12543:15;12536:31;12351:223;:::o;12580:366::-;12722:3;12743:67;12807:2;12802:3;12743:67;:::i;:::-;12736:74;;12819:93;12908:3;12819:93;:::i;:::-;12937:2;12932:3;12928:12;12921:19;;12580:366;;;:::o;12952:419::-;13118:4;13156:2;13145:9;13141:18;13133:26;;13205:9;13199:4;13195:20;13191:1;13180:9;13176:17;13169:47;13233:131;13359:4;13233:131;:::i;:::-;13225:139;;12952:419;;;:::o;13377:177::-;13517:29;13513:1;13505:6;13501:14;13494:53;13377:177;:::o;13560:366::-;13702:3;13723:67;13787:2;13782:3;13723:67;:::i;:::-;13716:74;;13799:93;13888:3;13799:93;:::i;:::-;13917:2;13912:3;13908:12;13901:19;;13560:366;;;:::o;13932:419::-;14098:4;14136:2;14125:9;14121:18;14113:26;;14185:9;14179:4;14175:20;14171:1;14160:9;14156:17;14149:47;14213:131;14339:4;14213:131;:::i;:::-;14205:139;;13932:419;;;:::o;14357:223::-;14497:34;14493:1;14485:6;14481:14;14474:58;14566:6;14561:2;14553:6;14549:15;14542:31;14357:223;:::o;14586:366::-;14728:3;14749:67;14813:2;14808:3;14749:67;:::i;:::-;14742:74;;14825:93;14914:3;14825:93;:::i;:::-;14943:2;14938:3;14934:12;14927:19;;14586:366;;;:::o;14958:419::-;15124:4;15162:2;15151:9;15147:18;15139:26;;15211:9;15205:4;15201:20;15197:1;15186:9;15182:17;15175:47;15239:131;15365:4;15239:131;:::i;:::-;15231:139;;14958:419;;;:::o;15383:221::-;15523:34;15519:1;15511:6;15507:14;15500:58;15592:4;15587:2;15579:6;15575:15;15568:29;15383:221;:::o;15610:366::-;15752:3;15773:67;15837:2;15832:3;15773:67;:::i;:::-;15766:74;;15849:93;15938:3;15849:93;:::i;:::-;15967:2;15962:3;15958:12;15951:19;;15610:366;;;:::o;15982:419::-;16148:4;16186:2;16175:9;16171:18;16163:26;;16235:9;16229:4;16225:20;16221:1;16210:9;16206:17;16199:47;16263:131;16389:4;16263:131;:::i;:::-;16255:139;;15982:419;;;:::o;16407:179::-;16547:31;16543:1;16535:6;16531:14;16524:55;16407:179;:::o;16592:366::-;16734:3;16755:67;16819:2;16814:3;16755:67;:::i;:::-;16748:74;;16831:93;16920:3;16831:93;:::i;:::-;16949:2;16944:3;16940:12;16933:19;;16592:366;;;:::o;16964:419::-;17130:4;17168:2;17157:9;17153:18;17145:26;;17217:9;17211:4;17207:20;17203:1;17192:9;17188:17;17181:47;17245:131;17371:4;17245:131;:::i;:::-;17237:139;;16964:419;;;:::o;17389:224::-;17529:34;17525:1;17517:6;17513:14;17506:58;17598:7;17593:2;17585:6;17581:15;17574:32;17389:224;:::o;17619:366::-;17761:3;17782:67;17846:2;17841:3;17782:67;:::i;:::-;17775:74;;17858:93;17947:3;17858:93;:::i;:::-;17976:2;17971:3;17967:12;17960:19;;17619:366;;;:::o;17991:419::-;18157:4;18195:2;18184:9;18180:18;18172:26;;18244:9;18238:4;18234:20;18230:1;18219:9;18215:17;18208:47;18272:131;18398:4;18272:131;:::i;:::-;18264:139;;17991:419;;;:::o;18416:222::-;18556:34;18552:1;18544:6;18540:14;18533:58;18625:5;18620:2;18612:6;18608:15;18601:30;18416:222;:::o;18644:366::-;18786:3;18807:67;18871:2;18866:3;18807:67;:::i;:::-;18800:74;;18883:93;18972:3;18883:93;:::i;:::-;19001:2;18996:3;18992:12;18985:19;;18644:366;;;:::o;19016:419::-;19182:4;19220:2;19209:9;19205:18;19197:26;;19269:9;19263:4;19259:20;19255:1;19244:9;19240:17;19233:47;19297:131;19423:4;19297:131;:::i;:::-;19289:139;;19016:419;;;:::o;19441:225::-;19581:34;19577:1;19569:6;19565:14;19558:58;19650:8;19645:2;19637:6;19633:15;19626:33;19441:225;:::o;19672:366::-;19814:3;19835:67;19899:2;19894:3;19835:67;:::i;:::-;19828:74;;19911:93;20000:3;19911:93;:::i;:::-;20029:2;20024:3;20020:12;20013:19;;19672:366;;;:::o;20044:419::-;20210:4;20248:2;20237:9;20233:18;20225:26;;20297:9;20291:4;20287:20;20283:1;20272:9;20268:17;20261:47;20325:131;20451:4;20325:131;:::i;:::-;20317:139;;20044:419;;;:::o;20469:181::-;20609:33;20605:1;20597:6;20593:14;20586:57;20469:181;:::o;20656:366::-;20798:3;20819:67;20883:2;20878:3;20819:67;:::i;:::-;20812:74;;20895:93;20984:3;20895:93;:::i;:::-;21013:2;21008:3;21004:12;20997:19;;20656:366;;;:::o;21028:419::-;21194:4;21232:2;21221:9;21217:18;21209:26;;21281:9;21275:4;21271:20;21267:1;21256:9;21252:17;21245:47;21309:131;21435:4;21309:131;:::i;:::-;21301:139;;21028:419;;;:::o;21453:220::-;21593:34;21589:1;21581:6;21577:14;21570:58;21662:3;21657:2;21649:6;21645:15;21638:28;21453:220;:::o;21679:366::-;21821:3;21842:67;21906:2;21901:3;21842:67;:::i;:::-;21835:74;;21918:93;22007:3;21918:93;:::i;:::-;22036:2;22031:3;22027:12;22020:19;;21679:366;;;:::o;22051:419::-;22217:4;22255:2;22244:9;22240:18;22232:26;;22304:9;22298:4;22294:20;22290:1;22279:9;22275:17;22268:47;22332:131;22458:4;22332:131;:::i;:::-;22324:139;;22051:419;;;:::o;22476:221::-;22616:34;22612:1;22604:6;22600:14;22593:58;22685:4;22680:2;22672:6;22668:15;22661:29;22476:221;:::o;22703:366::-;22845:3;22866:67;22930:2;22925:3;22866:67;:::i;:::-;22859:74;;22942:93;23031:3;22942:93;:::i;:::-;23060:2;23055:3;23051:12;23044:19;;22703:366;;;:::o;23075:419::-;23241:4;23279:2;23268:9;23264:18;23256:26;;23328:9;23322:4;23318:20;23314:1;23303:9;23299:17;23292:47;23356:131;23482:4;23356:131;:::i;:::-;23348:139;;23075:419;;;:::o;23500:173::-;23640:25;23636:1;23628:6;23624:14;23617:49;23500:173;:::o;23679:402::-;23839:3;23860:85;23942:2;23937:3;23860:85;:::i;:::-;23853:92;;23954:93;24043:3;23954:93;:::i;:::-;24072:2;24067:3;24063:12;24056:19;;23679:402;;;:::o;24087:390::-;24193:3;24221:39;24254:5;24221:39;:::i;:::-;24276:89;24358:6;24353:3;24276:89;:::i;:::-;24269:96;;24374:65;24432:6;24427:3;24420:4;24413:5;24409:16;24374:65;:::i;:::-;24464:6;24459:3;24455:16;24448:23;;24197:280;24087:390;;;;:::o;24483:167::-;24623:19;24619:1;24611:6;24607:14;24600:43;24483:167;:::o;24656:402::-;24816:3;24837:85;24919:2;24914:3;24837:85;:::i;:::-;24830:92;;24931:93;25020:3;24931:93;:::i;:::-;25049:2;25044:3;25040:12;25033:19;;24656:402;;;:::o;25064:967::-;25446:3;25468:148;25612:3;25468:148;:::i;:::-;25461:155;;25633:95;25724:3;25715:6;25633:95;:::i;:::-;25626:102;;25745:148;25889:3;25745:148;:::i;:::-;25738:155;;25910:95;26001:3;25992:6;25910:95;:::i;:::-;25903:102;;26022:3;26015:10;;25064:967;;;;;:::o;26037:410::-;26077:7;26100:20;26118:1;26100:20;:::i;:::-;26095:25;;26134:20;26152:1;26134:20;:::i;:::-;26129:25;;26189:1;26186;26182:9;26211:30;26229:11;26211:30;:::i;:::-;26200:41;;26390:1;26381:7;26377:15;26374:1;26371:22;26351:1;26344:9;26324:83;26301:139;;26420:18;;:::i;:::-;26301:139;26085:362;26037:410;;;;:::o;26453:180::-;26501:77;26498:1;26491:88;26598:4;26595:1;26588:15;26622:4;26619:1;26612:15;26639:180;26687:77;26684:1;26677:88;26784:4;26781:1;26774:15;26808:4;26805:1;26798:15;26825:171;26864:3;26887:24;26905:5;26887:24;:::i;:::-;26878:33;;26933:4;26926:5;26923:15;26920:41;;26941:18;;:::i;:::-;26920:41;26988:1;26981:5;26977:13;26970:20;;26825:171;;;:::o;27002:182::-;27142:34;27138:1;27130:6;27126:14;27119:58;27002:182;:::o;27190:366::-;27332:3;27353:67;27417:2;27412:3;27353:67;:::i;:::-;27346:74;;27429:93;27518:3;27429:93;:::i;:::-;27547:2;27542:3;27538:12;27531:19;;27190:366;;;:::o;27562:419::-;27728:4;27766:2;27755:9;27751:18;27743:26;;27815:9;27809:4;27805:20;27801:1;27790:9;27786:17;27779:47;27843:131;27969:4;27843:131;:::i;:::-;27835:139;;27562:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2065400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CALLER_ROLE()": "701",
								"DEFAULT_ADMIN_ROLE()": "357",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2886",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "410",
								"decreaseAllowance(address,uint256)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3251",
								"increaseAllowance(address,uint256)": "infinite",
								"initialize(address)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "751",
								"symbol()": "infinite",
								"totalSupply()": "2527",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 180,
									"end": 3099,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 180,
									"end": 3099,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 180,
									"end": 3099,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 539,
									"end": 669,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 539,
									"end": 669,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 539,
									"end": 669,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 539,
									"end": 669,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 539,
									"end": 669,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 539,
									"end": 669,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 539,
									"end": 669,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 539,
									"end": 669,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 539,
									"end": 669,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 539,
									"end": 669,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 539,
									"end": 669,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH data",
									"source": 0,
									"value": "4BE56B54BB0483F8C7DECBFD8EA4B51BF9EDA8402236441B22287BF2EAFD554E"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "PUSH",
									"source": 0,
									"value": "7348594454000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2118,
									"end": 2123,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2110,
									"end": 2115,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2110,
									"end": 2123,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2110,
									"end": 2123,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2144,
									"end": 2151,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2134,
									"end": 2141,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2134,
									"end": 2151,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2134,
									"end": 2151,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2043,
									"end": 2159,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 649,
									"end": 661,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 649,
									"end": 659,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 649,
									"end": 659,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 649,
									"end": 659,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 649,
									"end": 661,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 649,
									"end": 661,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 649,
									"end": 661,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 649,
									"end": 661,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 649,
									"end": 661,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 661,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 634,
									"end": 661,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 634,
									"end": 661,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 634,
									"end": 661,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 634,
									"end": 661,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 634,
									"end": 661,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 634,
									"end": 661,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 634,
									"end": 661,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 634,
									"end": 661,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 634,
									"end": 661,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 180,
									"end": 3099,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 180,
									"end": 3099,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 656,
									"end": 754,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 656,
									"end": 754,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 729,
									"end": 746,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 729,
									"end": 746,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 656,
									"end": 754,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 656,
									"end": 754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 180,
									"end": 3099,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 180,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 180,
									"end": 3099,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 180,
									"end": 3099,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 180,
									"end": 3099,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 3099,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 3099,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 3099,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 180,
									"end": 3099,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 3099,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "2027"
								},
								{
									"begin": 180,
									"end": 3099,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 3099,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 3099,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122011068d1ed7f5b23ba1f99d8b51734bacba6f9549099ece930c71cab721c11f5464736f6c63430008130033",
									".code": [
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "42966C68"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "A217FDDF"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "A217FDDF"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "A457C2D7"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "C4D66DE8"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "D547741F"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "42966C68"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "774237FC"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "79CC6790"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "91D14854"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "248A9CA3"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "248A9CA3"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "2F2FF15D"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "36568ABE"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "39509351"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 180,
											"end": 3099,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 2686,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2686,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 2686,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2229,
											"end": 2329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2229,
											"end": 2329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4589,
											"end": 4790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4589,
											"end": 4790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4589,
											"end": 4790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3358,
											"end": 3466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3358,
											"end": 3466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5370,
											"end": 5631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5370,
											"end": 5631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5370,
											"end": 5631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 4509,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 4509,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 4509,
											"end": 4640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 4950,
											"end": 5097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 4950,
											"end": 5097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3200,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3200,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 6094,
											"end": 6312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 6094,
											"end": 6312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6040,
											"end": 6278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 6040,
											"end": 6278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6040,
											"end": 6278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1586,
											"end": 1741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1586,
											"end": 1741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1586,
											"end": 1741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1887,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1887,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1887,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3529,
											"end": 3656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3529,
											"end": 3656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3529,
											"end": 3656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 287,
											"end": 362,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 287,
											"end": 362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 287,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 287,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 287,
											"end": 362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 362,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 287,
											"end": 362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 287,
											"end": 362,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 362,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 287,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 287,
											"end": 362,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 287,
											"end": 362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 287,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 287,
											"end": 362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 362,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 287,
											"end": 362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 287,
											"end": 362,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 362,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 287,
											"end": 362,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 287,
											"end": 362,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 287,
											"end": 362,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 287,
											"end": 362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 287,
											"end": 362,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2843,
											"end": 3096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2843,
											"end": 3096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2843,
											"end": 3096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2982,
											"end": 3129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2982,
											"end": 3129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 2982,
											"end": 3129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2448,
											"end": 2552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2448,
											"end": 2552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 2087,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2087,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6781,
											"end": 7217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6781,
											"end": 7217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6781,
											"end": 7217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3862,
											"end": 4055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3862,
											"end": 4055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3862,
											"end": 4055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 921,
											"end": 1395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 921,
											"end": 1395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 5390,
											"end": 5539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 5390,
											"end": 5539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4118,
											"end": 4269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4118,
											"end": 4269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4118,
											"end": 4269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2771,
											"end": 2775,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2842,
											"name": "PUSH",
											"source": 10,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2806,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2842,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 2870,
											"end": 2881,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 2846,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2882,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 2846,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2795,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2309,
											"end": 2321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2309,
											"end": 2321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2309,
											"end": 2321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4672,
											"end": 4676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4705,
											"end": 4717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4705,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4705,
											"end": 4717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4705,
											"end": 4717,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4705,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 4717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4737,
											"end": 4742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4744,
											"end": 4751,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4753,
											"end": 4759,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4728,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4778,
											"end": 4782,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4771,
											"end": 4782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4771,
											"end": 4782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3458,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3446,
											"end": 3458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3439,
											"end": 3458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3439,
											"end": 3458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5502,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5502,
											"end": 5514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5514,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5502,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5484,
											"end": 5514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5484,
											"end": 5514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5525,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5554,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5556,
											"end": 5562,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5525,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5525,
											"end": 5563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5525,
											"end": 5563,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5525,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5584,
											"end": 5588,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5590,
											"end": 5592,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5600,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5574,
											"end": 5601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5574,
											"end": 5601,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5574,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5612,
											"end": 5623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5612,
											"end": 5623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5612,
											"end": 5623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4583,
											"end": 4590,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4616,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4632,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4610,
											"end": 4632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4632,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4603,
											"end": 4632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4509,
											"end": 4640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5033,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 5046,
											"end": 5050,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5033,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 5033,
											"end": 5051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5033,
											"end": 5051,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 5033,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 2589,
											"end": 2593,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2578,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5064,
											"end": 5089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 5075,
											"end": 5079,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5088,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5064,
											"end": 5074,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 5064,
											"end": 5089,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5064,
											"end": 5089,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 5064,
											"end": 5089,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 5097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3285,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3276,
											"end": 3285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3200,
											"end": 3293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6201,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 6201,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 6201,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6201,
											"end": 6213,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 6201,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6213,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6190,
											"end": 6213,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6197,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6213,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6190,
											"end": 6213,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6213,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 6182,
											"end": 6265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 6182,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6278,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 6290,
											"end": 6294,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6296,
											"end": 6303,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6278,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 6278,
											"end": 6304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6278,
											"end": 6304,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 6278,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6094,
											"end": 6312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6128,
											"end": 6132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6145,
											"end": 6158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6161,
											"end": 6173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6161,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6161,
											"end": 6173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6161,
											"end": 6173,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6161,
											"end": 6173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6145,
											"end": 6173,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6193,
											"end": 6198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6200,
											"end": 6207,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6237,
											"end": 6247,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6209,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6219,
											"end": 6224,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6226,
											"end": 6233,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6209,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6209,
											"end": 6234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6209,
											"end": 6234,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6209,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6209,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6209,
											"end": 6247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6209,
											"end": 6247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6209,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6209,
											"end": 6247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6209,
											"end": 6247,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6209,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6184,
											"end": 6248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6248,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 6184,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6266,
											"end": 6270,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6259,
											"end": 6270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6259,
											"end": 6270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6259,
											"end": 6270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 335,
											"end": 361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 362,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 2589,
											"end": 2593,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2578,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1694,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1700,
											"end": 1702,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1704,
											"end": 1710,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1694,
											"end": 1699,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 1694,
											"end": 1711,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1694,
											"end": 1711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1694,
											"end": 1711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1722,
											"end": 1733,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1733,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1586,
											"end": 1741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 1948,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1961,
											"end": 1974,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1977,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 1977,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1989,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1977,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1989,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2019,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 2000,
											"end": 2020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2000,
											"end": 2020,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 2000,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2031,
											"end": 2042,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1887,
											"end": 2050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3639,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3647,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3623,
											"end": 3648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3623,
											"end": 3648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 287,
											"end": 362,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 287,
											"end": 362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 335,
											"end": 361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 362,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 287,
											"end": 362,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 287,
											"end": 362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 335,
											"end": 361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 362,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 2589,
											"end": 2593,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2578,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2957,
											"end": 2972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 2975,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2975,
											"end": 2987,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 2987,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 2975,
											"end": 2987,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 2987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 2987,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2998,
											"end": 3036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 3014,
											"end": 3018,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3020,
											"end": 3027,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3035,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2998,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 2998,
											"end": 3036,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2998,
											"end": 3036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 2998,
											"end": 3036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3047,
											"end": 3066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 3053,
											"end": 3057,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3059,
											"end": 3065,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3047,
											"end": 3052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3047,
											"end": 3066,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3047,
											"end": 3066,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 3047,
											"end": 3066,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3077,
											"end": 3088,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3077,
											"end": 3088,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3077,
											"end": 3088,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 3096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3103,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3120,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3092,
											"end": 3121,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2517,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2537,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2530,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2530,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2132,
											"end": 2136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6891,
											"end": 6904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 6907,
											"end": 6917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6907,
											"end": 6919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6907,
											"end": 6919,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 6907,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6891,
											"end": 6919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6891,
											"end": 6919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6957,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6967,
											"end": 6972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 6981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6957,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6957,
											"end": 6982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6957,
											"end": 6982,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6957,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7001,
											"end": 7017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7001,
											"end": 7036,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7001,
											"end": 7036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6993,
											"end": 7078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6993,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7114,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 7123,
											"end": 7128,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7130,
											"end": 7137,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7158,
											"end": 7173,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7139,
											"end": 7155,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7139,
											"end": 7173,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7114,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7114,
											"end": 7174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7114,
											"end": 7174,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 7114,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7205,
											"end": 7209,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7198,
											"end": 7209,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7198,
											"end": 7209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7198,
											"end": 7209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7198,
											"end": 7209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6781,
											"end": 7217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3958,
											"end": 3971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 3974,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3974,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 3974,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 3986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3958,
											"end": 3986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 4007,
											"end": 4012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4016,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4024,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3997,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3997,
											"end": 4025,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3997,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4043,
											"end": 4047,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4036,
											"end": 4047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4036,
											"end": 4047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 4055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1000,
											"end": 1012,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "2027"
										},
										{
											"begin": 984,
											"end": 1012,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 984,
											"end": 1012,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 984,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 984,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 984,
											"end": 996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 984,
											"end": 996,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 984,
											"end": 996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1012,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 984,
											"end": 1012,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1012,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 976,
											"end": 1053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 976,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 1185,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1186,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1186,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1167,
											"end": 1172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1167,
											"end": 1186,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1167,
											"end": 1186,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1167,
											"end": 1186,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 1159,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1159,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1229,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 335,
											"end": 361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 335,
											"end": 361,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 362,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 325,
											"end": 362,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1229,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1229,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1229,
											"end": 1259,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1229,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1311,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2132,
											"end": 2136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1340,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 1342,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 1342,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1354,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 1342,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1311,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1311,
											"end": 1355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1311,
											"end": 1355,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 1311,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1366,
											"end": 1380,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1366,
											"end": 1380,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 921,
											"end": 1395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 921,
											"end": 1395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5487,
											"end": 5491,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5474,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 5474,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2589,
											"end": 2593,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2578,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5517,
											"end": 5521,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5530,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 5505,
											"end": 5531,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5505,
											"end": 5531,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5505,
											"end": 5531,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4207,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4245,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4251,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4253,
											"end": 4260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4227,
											"end": 4261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 951,
											"end": 955,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1015,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 975,
											"end": 986,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 975,
											"end": 1015,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 968,
											"end": 1015,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 968,
											"end": 1015,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 866,
											"end": 1023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 866,
											"end": 1023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 656,
											"end": 754,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 729,
											"end": 746,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 729,
											"end": 746,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 754,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 656,
											"end": 754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10774,
											"end": 11120,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 10774,
											"end": 11120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10893,
											"end": 10894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10876,
											"end": 10895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10876,
											"end": 10895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10876,
											"end": 10895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10876,
											"end": 10895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 10868,
											"end": 10936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 10868,
											"end": 10936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 10975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10955,
											"end": 10976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10955,
											"end": 10976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10955,
											"end": 10962,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10955,
											"end": 10976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10955,
											"end": 10976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10955,
											"end": 10976,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 10947,
											"end": 11015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 10947,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11039,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11040,
											"end": 11045,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11047,
											"end": 11054,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11028,
											"end": 11055,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11064,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11089,
											"end": 11094,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11105,
											"end": 11111,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11080,
											"end": 11112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11080,
											"end": 11112,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10774,
											"end": 11120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10774,
											"end": 11120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10774,
											"end": 11120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10774,
											"end": 11120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11411,
											"end": 11830,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 11411,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11512,
											"end": 11536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 11549,
											"end": 11554,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11556,
											"end": 11563,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11539,
											"end": 11548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11539,
											"end": 11564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 11539,
											"end": 11564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11512,
											"end": 11564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11512,
											"end": 11564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11599,
											"end": 11616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11579,
											"end": 11595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11579,
											"end": 11616,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11575,
											"end": 11823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 11575,
											"end": 11823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11641,
											"end": 11667,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11641,
											"end": 11667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 11633,
											"end": 11701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 11633,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11745,
											"end": 11796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 11754,
											"end": 11759,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11761,
											"end": 11768,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11789,
											"end": 11795,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11770,
											"end": 11786,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11770,
											"end": 11795,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11745,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 11745,
											"end": 11796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11745,
											"end": 11796,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 11745,
											"end": 11796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11575,
											"end": 11823,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 11575,
											"end": 11823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11501,
											"end": 11830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11411,
											"end": 11830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11411,
											"end": 11830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11411,
											"end": 11830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11411,
											"end": 11830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 8493,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7687,
											"end": 8493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7800,
											"end": 7801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7788,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 7776,
											"end": 7844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 7776,
											"end": 7844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7863,
											"end": 7879,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7863,
											"end": 7879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7879,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7863,
											"end": 7879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7863,
											"end": 7879,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 7855,
											"end": 7919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 7855,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 7953,
											"end": 7957,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7959,
											"end": 7961,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7963,
											"end": 7969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 7952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 7932,
											"end": 7970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 7970,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 7932,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7983,
											"end": 8002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8005,
											"end": 8014,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8015,
											"end": 8019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8005,
											"end": 8020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7983,
											"end": 8020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7983,
											"end": 8020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8054,
											"end": 8060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8039,
											"end": 8050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8039,
											"end": 8060,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8039,
											"end": 8060,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 8031,
											"end": 8103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 8031,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8171,
											"end": 8177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8157,
											"end": 8177,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8148,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 8153,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8139,
											"end": 8154,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8177,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8139,
											"end": 8177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8366,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8367,
											"end": 8369,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8357,
											"end": 8380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8424,
											"end": 8426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8422,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8428,
											"end": 8434,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8409,
											"end": 8435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8409,
											"end": 8435,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8448,
											"end": 8485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 8468,
											"end": 8472,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8474,
											"end": 8476,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8478,
											"end": 8484,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8448,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 8448,
											"end": 8485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8448,
											"end": 8485,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 8448,
											"end": 8485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 8493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 8493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 8493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 8493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 8493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3433,
											"end": 3538,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3433,
											"end": 3538,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 3511,
											"end": 3515,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3517,
											"end": 3529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 3517,
											"end": 3529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3517,
											"end": 3529,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3517,
											"end": 3529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3500,
											"end": 3530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3433,
											"end": 3538,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3433,
											"end": 3538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7929,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 7691,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 7783,
											"end": 7787,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 7796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 7775,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 7797,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 7775,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7770,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 7770,
											"end": 7922,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7846,
											"end": 7850,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7821,
											"end": 7825,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7834,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7842,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7843,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7850,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 7897,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 7897,
											"end": 7909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7897,
											"end": 7909,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 7897,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7888,
											"end": 7895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7882,
											"end": 7886,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "PUSH",
											"source": 10,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7870,
											"end": 7910,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 7770,
											"end": 7922,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 7770,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7929,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7929,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7691,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8109,
											"end": 8348,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 8109,
											"end": 8348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 8201,
											"end": 8205,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8207,
											"end": 8214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 8193,
											"end": 8215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8215,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 8193,
											"end": 8215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8341,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 8189,
											"end": 8341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8238,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8239,
											"end": 8243,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8244,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8252,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8252,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8260,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8232,
											"end": 8269,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 8316,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 8316,
											"end": 8328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8328,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 8316,
											"end": 8328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8307,
											"end": 8314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8301,
											"end": 8305,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "PUSH",
											"source": 10,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8329,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 8189,
											"end": 8341,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 8189,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8109,
											"end": 8348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8109,
											"end": 8348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8109,
											"end": 8348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8780,
											"end": 9328,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8780,
											"end": 9328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8883,
											"end": 8884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8864,
											"end": 8885,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8864,
											"end": 8885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 8871,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 8885,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8864,
											"end": 8885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 8885,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 8856,
											"end": 8921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 8856,
											"end": 8921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 8983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 8963,
											"end": 8964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8976,
											"end": 8982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 8954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 8934,
											"end": 8983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 8983,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 8934,
											"end": 8983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9012,
											"end": 9018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8996,
											"end": 9008,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8996,
											"end": 9008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8996,
											"end": 9018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8996,
											"end": 9018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8996,
											"end": 9018,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8996,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 8996,
											"end": 9018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8996,
											"end": 9018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8996,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8996,
											"end": 9018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8996,
											"end": 9018,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 8996,
											"end": 9018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8996,
											"end": 9018,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8996,
											"end": 9018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8996,
											"end": 9018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8996,
											"end": 9018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8996,
											"end": 9018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8996,
											"end": 9018,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8996,
											"end": 9018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9189,
											"end": 9195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9177,
											"end": 9184,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9167,
											"end": 9195,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9195,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9195,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9195,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9243,
											"end": 9250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9239,
											"end": 9240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9252,
											"end": 9258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9222,
											"end": 9259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9222,
											"end": 9259,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 9300,
											"end": 9301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9304,
											"end": 9311,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9313,
											"end": 9319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 9272,
											"end": 9320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 9272,
											"end": 9320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8780,
											"end": 9328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8780,
											"end": 9328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8780,
											"end": 9328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9661,
											"end": 10336,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 9661,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9764,
											"end": 9765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9745,
											"end": 9766,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9745,
											"end": 9766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9766,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9745,
											"end": 9766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9766,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 9737,
											"end": 9804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 9737,
											"end": 9804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9817,
											"end": 9866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 9838,
											"end": 9845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9855,
											"end": 9856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9865,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9817,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 9817,
											"end": 9866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9817,
											"end": 9866,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 9817,
											"end": 9866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9879,
											"end": 9901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9904,
											"end": 9913,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9914,
											"end": 9921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9904,
											"end": 9922,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9879,
											"end": 9922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9879,
											"end": 9922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9959,
											"end": 9965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9965,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 9933,
											"end": 10004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 9933,
											"end": 10004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10078,
											"end": 10084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10061,
											"end": 10084,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10049,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10050,
											"end": 10057,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10084,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10195,
											"end": 10201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10179,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10179,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10179,
											"end": 10201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10179,
											"end": 10201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10179,
											"end": 10201,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10179,
											"end": 10201,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10179,
											"end": 10201,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10179,
											"end": 10201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10179,
											"end": 10201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10179,
											"end": 10201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10179,
											"end": 10201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10179,
											"end": 10201,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10179,
											"end": 10201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10256,
											"end": 10257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10239,
											"end": 10246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10260,
											"end": 10266,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 10230,
											"end": 10267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10230,
											"end": 10267,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 10300,
											"end": 10307,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10317,
											"end": 10318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10321,
											"end": 10327,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 10280,
											"end": 10328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10280,
											"end": 10328,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 10280,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 10336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9661,
											"end": 10336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9661,
											"end": 10336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9661,
											"end": 10336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12430,
											"end": 12521,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 12430,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12430,
											"end": 12521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12430,
											"end": 12521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12430,
											"end": 12521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12430,
											"end": 12521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13125,
											"end": 13215,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 13125,
											"end": 13215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13125,
											"end": 13215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13125,
											"end": 13215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13125,
											"end": 13215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13125,
											"end": 13215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3828,
											"end": 4320,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3828,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 3925,
											"end": 3929,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3938,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 3917,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 3912,
											"end": 4313,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4105,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 4125,
											"end": 4132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4105,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 4105,
											"end": 4133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4105,
											"end": 4133,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 4105,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 4234,
											"end": 4238,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4239,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 4241,
											"end": 4243,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4206,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 4206,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4206,
											"end": 4244,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 4206,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 4010,
											"end": 4267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4267,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 3956,
											"end": 4301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3956,
											"end": 4301,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 4313,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 3912,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 4320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 4320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3828,
											"end": 4320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2471,
											"end": 2622,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 2471,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2529,
											"end": 2542,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2562,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 2590,
											"end": 2594,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2574,
											"end": 2596,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2574,
											"end": 2596,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 346,
											"end": 348,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2562,
											"end": 2614,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2562,
											"end": 2614,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 2562,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2614,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 2562,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2555,
											"end": 2614,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2555,
											"end": 2614,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2471,
											"end": 2622,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2471,
											"end": 2622,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2471,
											"end": 2622,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2471,
											"end": 2622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1955,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1968,
											"end": 1987,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2004,
											"end": 2010,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 2000,
											"end": 2010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2000,
											"end": 2014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 2000,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 1990,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "PUSH",
											"source": 8,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2026,
											"end": 2032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2034,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2026,
											"end": 2035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 8,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2052,
											"end": 2058,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2052,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2061,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 2052,
											"end": 2067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2083,
											"end": 2092,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2099,
											"end": 2105,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 2095,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 2095,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2095,
											"end": 2109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2095,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2083,
											"end": 2109,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2083,
											"end": 2109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2115,
											"end": 2116,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2111,
											"end": 2112,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2111,
											"end": 2116,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2158,
											"name": "PUSH",
											"source": 8,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 2167,
											"end": 2170,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 2159,
											"end": 2164,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2170,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2150,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "PUSH",
											"source": 8,
											"value": "F8"
										},
										{
											"begin": 2150,
											"end": 2171,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2146,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2138,
											"end": 2147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2196,
											"end": 2197,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2186,
											"end": 2197,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2197,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2197,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 2118,
											"end": 2121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2232,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2237,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 2219,
											"end": 2274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 2219,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2306,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 2314,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 2314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2979,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2935,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2926,
											"end": 2980,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3029,
											"end": 3036,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 3076,
											"end": 3081,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 3058,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2992,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 3167,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3157,
											"end": 3192,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3196,
											"end": 3208,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3268,
											"end": 3273,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3312,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 3349,
											"end": 3354,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 3322,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3404,
											"end": 3411,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 3523,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3562,
											"end": 3563,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3560,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3624,
											"end": 3629,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3668,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3649,
											"end": 3669,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 3705,
											"end": 3710,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 3678,
											"end": 3711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3845,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3834,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3823,
											"end": 3846,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3819,
											"end": 3851,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 3854,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 4044,
											"end": 4051,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4035,
											"end": 4041,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4033,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4042,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 3999,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3945,
											"end": 4062,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 4172,
											"end": 4179,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4163,
											"end": 4169,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4152,
											"end": 4161,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4148,
											"end": 4170,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 4127,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4072,
											"end": 4190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 4308,
											"end": 4313,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 4290,
											"end": 4314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4285,
											"end": 4288,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4278,
											"end": 4315,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4420,
											"end": 4424,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4460,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4456,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4435,
											"end": 4461,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4435,
											"end": 4461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 4539,
											"end": 4540,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4537,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4524,
											"end": 4541,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4515,
											"end": 4521,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 4471,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4632,
											"end": 4638,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4699,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4685,
											"end": 4694,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4676,
											"end": 4683,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4672,
											"end": 4695,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4668,
											"end": 4700,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 4703,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4823,
											"end": 4824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 4893,
											"end": 4900,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4890,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4869,
											"end": 4891,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 4848,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4838,
											"end": 4901,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4838,
											"end": 4901,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4794,
											"end": 4911,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4950,
											"end": 4952,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 5021,
											"end": 5028,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5012,
											"end": 5018,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5001,
											"end": 5010,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4997,
											"end": 5019,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 4976,
											"end": 5029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4966,
											"end": 5029,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4966,
											"end": 5029,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4921,
											"end": 5039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5078,
											"end": 5080,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 5149,
											"end": 5156,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5129,
											"end": 5138,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5125,
											"end": 5147,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 5104,
											"end": 5157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5094,
											"end": 5157,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5094,
											"end": 5157,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5049,
											"end": 5167,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 5174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5217,
											"end": 5224,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5251,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5251,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5251,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5180,
											"end": 5257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 5354,
											"end": 5359,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 5336,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5329,
											"end": 5334,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5326,
											"end": 5361,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5375,
											"end": 5376,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5263,
											"end": 5385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5437,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5482,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5453,
											"end": 5482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5453,
											"end": 5482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 5518,
											"end": 5523,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 5491,
											"end": 5524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5595,
											"end": 5601,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5646,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5623,
											"end": 5630,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5642,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 5647,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 5650,
											"end": 5729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5770,
											"end": 5771,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 5840,
											"end": 5847,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5831,
											"end": 5837,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5820,
											"end": 5829,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5816,
											"end": 5838,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 5795,
											"end": 5848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5785,
											"end": 5848,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5785,
											"end": 5848,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5741,
											"end": 5858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5536,
											"end": 5865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 5958,
											"end": 5982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5953,
											"end": 5956,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5946,
											"end": 5983,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5871,
											"end": 5989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6088,
											"end": 6092,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6128,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6103,
											"end": 6129,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6103,
											"end": 6129,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 6207,
											"end": 6208,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6205,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6192,
											"end": 6209,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6183,
											"end": 6189,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 6139,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6305,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6348,
											"end": 6350,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6336,
											"end": 6345,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6327,
											"end": 6334,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6323,
											"end": 6346,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6319,
											"end": 6351,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 6354,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6474,
											"end": 6475,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 6544,
											"end": 6551,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6535,
											"end": 6541,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6524,
											"end": 6533,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6520,
											"end": 6542,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 6499,
											"end": 6552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6489,
											"end": 6552,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6489,
											"end": 6552,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6445,
											"end": 6562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6601,
											"end": 6603,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 6672,
											"end": 6679,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6652,
											"end": 6661,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6648,
											"end": 6670,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 6627,
											"end": 6680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6572,
											"end": 6690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6738,
											"end": 6745,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6782,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6771,
											"end": 6776,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6767,
											"end": 6783,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6756,
											"end": 6783,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6756,
											"end": 6783,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6703,
											"end": 6789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 6894,
											"end": 6899,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 6878,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6873,
											"end": 6876,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6866,
											"end": 6901,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6795,
											"end": 6907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7002,
											"end": 7006,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7042,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7029,
											"end": 7038,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7017,
											"end": 7043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7017,
											"end": 7043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 7117,
											"end": 7118,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7106,
											"end": 7115,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7102,
											"end": 7119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7093,
											"end": 7099,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 7053,
											"end": 7120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 7127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7192,
											"end": 7198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7243,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7229,
											"end": 7238,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7220,
											"end": 7227,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7212,
											"end": 7244,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 7247,
											"end": 7326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7367,
											"end": 7368,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7428,
											"end": 7434,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7417,
											"end": 7426,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7413,
											"end": 7435,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 7392,
											"end": 7445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7445,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7338,
											"end": 7455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7133,
											"end": 7462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7527,
											"end": 7533,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7576,
											"end": 7578,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7555,
											"end": 7562,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7551,
											"end": 7574,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7547,
											"end": 7579,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7544,
											"end": 7663,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7544,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 7544,
											"end": 7663,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7582,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 7582,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 7582,
											"end": 7661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7582,
											"end": 7661,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 7582,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7544,
											"end": 7663,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 7544,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7702,
											"end": 7703,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7727,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 7772,
											"end": 7779,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7763,
											"end": 7769,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7752,
											"end": 7761,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7748,
											"end": 7770,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7727,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 7727,
											"end": 7780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7727,
											"end": 7780,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 7727,
											"end": 7780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7717,
											"end": 7780,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7717,
											"end": 7780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7673,
											"end": 7790,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7468,
											"end": 7797,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7468,
											"end": 7797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7803,
											"end": 8277,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 7803,
											"end": 8277,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7871,
											"end": 7877,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7885,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7930,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7916,
											"end": 7925,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7903,
											"end": 7926,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7899,
											"end": 7931,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7896,
											"end": 8015,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7896,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 7896,
											"end": 8015,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7934,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 7934,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 7934,
											"end": 8013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7934,
											"end": 8013,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 7934,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7896,
											"end": 8015,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 7896,
											"end": 8015,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 8124,
											"end": 8131,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8115,
											"end": 8121,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8104,
											"end": 8113,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8100,
											"end": 8122,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8079,
											"end": 8132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 8079,
											"end": 8132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8079,
											"end": 8132,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 8079,
											"end": 8132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8069,
											"end": 8132,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8069,
											"end": 8132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8025,
											"end": 8142,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8181,
											"end": 8183,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8207,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 8252,
											"end": 8259,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8243,
											"end": 8249,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8232,
											"end": 8241,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8228,
											"end": 8250,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8207,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 8207,
											"end": 8260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8207,
											"end": 8260,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 8207,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8197,
											"end": 8260,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8197,
											"end": 8260,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8152,
											"end": 8270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7803,
											"end": 8277,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7803,
											"end": 8277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7803,
											"end": 8277,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7803,
											"end": 8277,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7803,
											"end": 8277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7803,
											"end": 8277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8283,
											"end": 8463,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 8283,
											"end": 8463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8331,
											"end": 8408,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8328,
											"end": 8329,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8409,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8428,
											"end": 8432,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 8425,
											"end": 8426,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8418,
											"end": 8433,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8452,
											"end": 8456,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8449,
											"end": 8450,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8469,
											"end": 8789,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 8469,
											"end": 8789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8550,
											"end": 8551,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8544,
											"end": 8548,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8540,
											"end": 8552,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8597,
											"end": 8598,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8591,
											"end": 8595,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8587,
											"end": 8599,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8618,
											"end": 8636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8608,
											"end": 8689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 8608,
											"end": 8689,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8674,
											"end": 8678,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8662,
											"end": 8679,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8652,
											"end": 8679,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8652,
											"end": 8679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8608,
											"end": 8689,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 8608,
											"end": 8689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8736,
											"end": 8738,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8728,
											"end": 8734,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8725,
											"end": 8739,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8705,
											"end": 8723,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8702,
											"end": 8740,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8699,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 8699,
											"end": 8783,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8755,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 8755,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 8755,
											"end": 8773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8755,
											"end": 8773,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 8755,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8699,
											"end": 8783,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 8699,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8520,
											"end": 8789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8469,
											"end": 8789,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8469,
											"end": 8789,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8469,
											"end": 8789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8469,
											"end": 8789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8795,
											"end": 9029,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 8795,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8935,
											"end": 8969,
											"name": "PUSH",
											"source": 13,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 8931,
											"end": 8932,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8919,
											"end": 8933,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8912,
											"end": 8970,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9004,
											"end": 9021,
											"name": "PUSH",
											"source": 13,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 8999,
											"end": 9001,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8991,
											"end": 8997,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8987,
											"end": 9002,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8980,
											"end": 9022,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8795,
											"end": 9029,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8795,
											"end": 9029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9035,
											"end": 9401,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 9035,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9177,
											"end": 9180,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9198,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 9262,
											"end": 9264,
											"name": "PUSH",
											"source": 13,
											"value": "2F"
										},
										{
											"begin": 9257,
											"end": 9260,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9198,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 9198,
											"end": 9265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9198,
											"end": 9265,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 9198,
											"end": 9265,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9191,
											"end": 9265,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9191,
											"end": 9265,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 9363,
											"end": 9366,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 9274,
											"end": 9367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9274,
											"end": 9367,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 9274,
											"end": 9367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9392,
											"end": 9394,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9387,
											"end": 9390,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9383,
											"end": 9395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9376,
											"end": 9395,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9376,
											"end": 9395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9035,
											"end": 9401,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9035,
											"end": 9401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9035,
											"end": 9401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9035,
											"end": 9401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9407,
											"end": 9826,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 9407,
											"end": 9826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9573,
											"end": 9577,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9611,
											"end": 9613,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9600,
											"end": 9609,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9588,
											"end": 9614,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9588,
											"end": 9614,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9660,
											"end": 9669,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9654,
											"end": 9658,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9650,
											"end": 9670,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9646,
											"end": 9647,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9635,
											"end": 9644,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9631,
											"end": 9648,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9624,
											"end": 9671,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9688,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 9814,
											"end": 9818,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9688,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 9688,
											"end": 9819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9688,
											"end": 9819,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 9688,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9680,
											"end": 9819,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9680,
											"end": 9819,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9407,
											"end": 9826,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9407,
											"end": 9826,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9407,
											"end": 9826,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9407,
											"end": 9826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9832,
											"end": 10012,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 9832,
											"end": 10012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9880,
											"end": 9957,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9877,
											"end": 9878,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9870,
											"end": 9958,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9977,
											"end": 9981,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 9974,
											"end": 9975,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9967,
											"end": 9982,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10001,
											"end": 10005,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9998,
											"end": 9999,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9991,
											"end": 10006,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10018,
											"end": 10209,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 10018,
											"end": 10209,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10058,
											"end": 10061,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10077,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 10095,
											"end": 10096,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10077,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 10077,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10077,
											"end": 10097,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 10077,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10072,
											"end": 10097,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10072,
											"end": 10097,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10111,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 10129,
											"end": 10130,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10111,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 10111,
											"end": 10131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10111,
											"end": 10131,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 10111,
											"end": 10131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10106,
											"end": 10131,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10106,
											"end": 10131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10154,
											"end": 10155,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10151,
											"end": 10152,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10147,
											"end": 10156,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10140,
											"end": 10156,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10140,
											"end": 10156,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10175,
											"end": 10178,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10172,
											"end": 10173,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10169,
											"end": 10179,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10166,
											"end": 10202,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10166,
											"end": 10202,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 10166,
											"end": 10202,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 10182,
											"end": 10200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 10182,
											"end": 10200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10166,
											"end": 10202,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 10166,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10018,
											"end": 10209,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10018,
											"end": 10209,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10018,
											"end": 10209,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10018,
											"end": 10209,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10018,
											"end": 10209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10215,
											"end": 10363,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 10215,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10317,
											"end": 10328,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10354,
											"end": 10357,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10339,
											"end": 10357,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10339,
											"end": 10357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10215,
											"end": 10363,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10215,
											"end": 10363,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10215,
											"end": 10363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10215,
											"end": 10363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10215,
											"end": 10363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10369,
											"end": 10525,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 10369,
											"end": 10525,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10509,
											"end": 10517,
											"name": "PUSH",
											"source": 13,
											"value": "43616C6C65720000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10505,
											"end": 10506,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10497,
											"end": 10503,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10493,
											"end": 10507,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10486,
											"end": 10518,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10369,
											"end": 10525,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10369,
											"end": 10525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10531,
											"end": 10931,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 10531,
											"end": 10931,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10691,
											"end": 10694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10712,
											"end": 10796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 10794,
											"end": 10795,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 10789,
											"end": 10792,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10712,
											"end": 10796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 10712,
											"end": 10796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10712,
											"end": 10796,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 10712,
											"end": 10796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10705,
											"end": 10796,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10705,
											"end": 10796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10805,
											"end": 10898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 10894,
											"end": 10897,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10805,
											"end": 10898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 10805,
											"end": 10898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10805,
											"end": 10898,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 10805,
											"end": 10898,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10923,
											"end": 10924,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 10918,
											"end": 10921,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10914,
											"end": 10925,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10907,
											"end": 10925,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10531,
											"end": 10931,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10531,
											"end": 10931,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10531,
											"end": 10931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10531,
											"end": 10931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10937,
											"end": 11318,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 10937,
											"end": 11318,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11122,
											"end": 11125,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11144,
											"end": 11292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 11288,
											"end": 11291,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11144,
											"end": 11292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 11144,
											"end": 11292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11144,
											"end": 11292,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 11144,
											"end": 11292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11137,
											"end": 11292,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11137,
											"end": 11292,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11309,
											"end": 11312,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11302,
											"end": 11312,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11302,
											"end": 11312,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10937,
											"end": 11318,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10937,
											"end": 11318,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10937,
											"end": 11318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10937,
											"end": 11318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11324,
											"end": 11548,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 11324,
											"end": 11548,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11464,
											"end": 11498,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 11460,
											"end": 11461,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11452,
											"end": 11458,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11448,
											"end": 11462,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11441,
											"end": 11499,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11533,
											"end": 11540,
											"name": "PUSH",
											"source": 13,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11528,
											"end": 11530,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11520,
											"end": 11526,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11516,
											"end": 11531,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11509,
											"end": 11541,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11324,
											"end": 11548,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11324,
											"end": 11548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11554,
											"end": 11920,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 11554,
											"end": 11920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11696,
											"end": 11699,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11717,
											"end": 11784,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 11781,
											"end": 11783,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 11776,
											"end": 11779,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11717,
											"end": 11784,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 11717,
											"end": 11784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11717,
											"end": 11784,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 11717,
											"end": 11784,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11784,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11710,
											"end": 11784,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11793,
											"end": 11886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 11882,
											"end": 11885,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11793,
											"end": 11886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 11793,
											"end": 11886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11793,
											"end": 11886,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 11793,
											"end": 11886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11911,
											"end": 11913,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11906,
											"end": 11909,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11902,
											"end": 11914,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11895,
											"end": 11914,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11895,
											"end": 11914,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11554,
											"end": 11920,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11554,
											"end": 11920,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11554,
											"end": 11920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11554,
											"end": 11920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11926,
											"end": 12345,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 11926,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12092,
											"end": 12096,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12130,
											"end": 12132,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12119,
											"end": 12128,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12115,
											"end": 12133,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12133,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12133,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12179,
											"end": 12188,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12173,
											"end": 12177,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12169,
											"end": 12189,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12165,
											"end": 12166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12154,
											"end": 12163,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12150,
											"end": 12167,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12143,
											"end": 12190,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12207,
											"end": 12338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 12333,
											"end": 12337,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12207,
											"end": 12338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 12207,
											"end": 12338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12207,
											"end": 12338,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 12207,
											"end": 12338,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12199,
											"end": 12338,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12199,
											"end": 12338,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11926,
											"end": 12345,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11926,
											"end": 12345,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11926,
											"end": 12345,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11926,
											"end": 12345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12351,
											"end": 12574,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 12351,
											"end": 12574,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12491,
											"end": 12525,
											"name": "PUSH",
											"source": 13,
											"value": "73485944543A2063616C6C6572206973206E6F742074686520696E697469616C"
										},
										{
											"begin": 12487,
											"end": 12488,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12479,
											"end": 12485,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12475,
											"end": 12489,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12468,
											"end": 12526,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12560,
											"end": 12566,
											"name": "PUSH",
											"source": 13,
											"value": "697A657200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12555,
											"end": 12557,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12547,
											"end": 12553,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12543,
											"end": 12558,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12536,
											"end": 12567,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12351,
											"end": 12574,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12351,
											"end": 12574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12580,
											"end": 12946,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 12580,
											"end": 12946,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12722,
											"end": 12725,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12743,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 12807,
											"end": 12809,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12802,
											"end": 12805,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12743,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 12743,
											"end": 12810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12743,
											"end": 12810,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 12743,
											"end": 12810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12736,
											"end": 12810,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12736,
											"end": 12810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12819,
											"end": 12912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 12908,
											"end": 12911,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12819,
											"end": 12912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 12819,
											"end": 12912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12819,
											"end": 12912,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 12819,
											"end": 12912,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12937,
											"end": 12939,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12932,
											"end": 12935,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12928,
											"end": 12940,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12921,
											"end": 12940,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12921,
											"end": 12940,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12580,
											"end": 12946,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12580,
											"end": 12946,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12580,
											"end": 12946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12580,
											"end": 12946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 13371,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 12952,
											"end": 13371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13118,
											"end": 13122,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13156,
											"end": 13158,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13145,
											"end": 13154,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13141,
											"end": 13159,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13133,
											"end": 13159,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13133,
											"end": 13159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13205,
											"end": 13214,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13199,
											"end": 13203,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13195,
											"end": 13215,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13191,
											"end": 13192,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13180,
											"end": 13189,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13176,
											"end": 13193,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13169,
											"end": 13216,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13233,
											"end": 13364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 13359,
											"end": 13363,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13233,
											"end": 13364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 13233,
											"end": 13364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13233,
											"end": 13364,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 13233,
											"end": 13364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13225,
											"end": 13364,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13225,
											"end": 13364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 13371,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 13371,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 13371,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 13371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13377,
											"end": 13554,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 13377,
											"end": 13554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13517,
											"end": 13546,
											"name": "PUSH",
											"source": 13,
											"value": "73485944543A20696E76616C6964204561726E20616464726573730000000000"
										},
										{
											"begin": 13513,
											"end": 13514,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13505,
											"end": 13511,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13501,
											"end": 13515,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13494,
											"end": 13547,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13377,
											"end": 13554,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13377,
											"end": 13554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13560,
											"end": 13926,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 13560,
											"end": 13926,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13702,
											"end": 13705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13723,
											"end": 13790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 13787,
											"end": 13789,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 13782,
											"end": 13785,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 13723,
											"end": 13790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13790,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 13723,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13716,
											"end": 13790,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13716,
											"end": 13790,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13799,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 13888,
											"end": 13891,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13799,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 13799,
											"end": 13892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13799,
											"end": 13892,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 13799,
											"end": 13892,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13917,
											"end": 13919,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13912,
											"end": 13915,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13908,
											"end": 13920,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13920,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13901,
											"end": 13920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13560,
											"end": 13926,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13560,
											"end": 13926,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13560,
											"end": 13926,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13560,
											"end": 13926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13932,
											"end": 14351,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 13932,
											"end": 14351,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14098,
											"end": 14102,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14136,
											"end": 14138,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14125,
											"end": 14134,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14113,
											"end": 14139,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14113,
											"end": 14139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14185,
											"end": 14194,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14179,
											"end": 14183,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14175,
											"end": 14195,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14171,
											"end": 14172,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14160,
											"end": 14169,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14156,
											"end": 14173,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14149,
											"end": 14196,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14213,
											"end": 14344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 14339,
											"end": 14343,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14213,
											"end": 14344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 14213,
											"end": 14344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14213,
											"end": 14344,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 14213,
											"end": 14344,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14205,
											"end": 14344,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14205,
											"end": 14344,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13932,
											"end": 14351,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13932,
											"end": 14351,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13932,
											"end": 14351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13932,
											"end": 14351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14357,
											"end": 14580,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 14357,
											"end": 14580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14497,
											"end": 14531,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 14493,
											"end": 14494,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14485,
											"end": 14491,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14481,
											"end": 14495,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14474,
											"end": 14532,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14566,
											"end": 14572,
											"name": "PUSH",
											"source": 13,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14561,
											"end": 14563,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14553,
											"end": 14559,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14549,
											"end": 14564,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14542,
											"end": 14573,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14357,
											"end": 14580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14357,
											"end": 14580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14586,
											"end": 14952,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 14586,
											"end": 14952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14728,
											"end": 14731,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14749,
											"end": 14816,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 14813,
											"end": 14815,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14808,
											"end": 14811,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14749,
											"end": 14816,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 14749,
											"end": 14816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14749,
											"end": 14816,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 14749,
											"end": 14816,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14742,
											"end": 14816,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14742,
											"end": 14816,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14825,
											"end": 14918,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 14914,
											"end": 14917,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14825,
											"end": 14918,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 14825,
											"end": 14918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14825,
											"end": 14918,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 14825,
											"end": 14918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14943,
											"end": 14945,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14938,
											"end": 14941,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14934,
											"end": 14946,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14927,
											"end": 14946,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14927,
											"end": 14946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14586,
											"end": 14952,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14586,
											"end": 14952,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14586,
											"end": 14952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14586,
											"end": 14952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14958,
											"end": 15377,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 14958,
											"end": 15377,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15162,
											"end": 15164,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15151,
											"end": 15160,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15147,
											"end": 15165,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15139,
											"end": 15165,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15139,
											"end": 15165,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15211,
											"end": 15220,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15205,
											"end": 15209,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15201,
											"end": 15221,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15197,
											"end": 15198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15186,
											"end": 15195,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15182,
											"end": 15199,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15175,
											"end": 15222,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15239,
											"end": 15370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 15365,
											"end": 15369,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15239,
											"end": 15370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 15239,
											"end": 15370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15239,
											"end": 15370,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 15239,
											"end": 15370,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15231,
											"end": 15370,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15231,
											"end": 15370,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14958,
											"end": 15377,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14958,
											"end": 15377,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14958,
											"end": 15377,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14958,
											"end": 15377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15383,
											"end": 15604,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 15383,
											"end": 15604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15523,
											"end": 15557,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 15519,
											"end": 15520,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15511,
											"end": 15517,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15507,
											"end": 15521,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15500,
											"end": 15558,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15592,
											"end": 15596,
											"name": "PUSH",
											"source": 13,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15587,
											"end": 15589,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15579,
											"end": 15585,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15575,
											"end": 15590,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15568,
											"end": 15597,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15383,
											"end": 15604,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15383,
											"end": 15604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15610,
											"end": 15976,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 15610,
											"end": 15976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15752,
											"end": 15755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15773,
											"end": 15840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 15837,
											"end": 15839,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 15832,
											"end": 15835,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15773,
											"end": 15840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 15773,
											"end": 15840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15773,
											"end": 15840,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 15773,
											"end": 15840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15766,
											"end": 15840,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15766,
											"end": 15840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15849,
											"end": 15942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 15938,
											"end": 15941,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15849,
											"end": 15942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 15849,
											"end": 15942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15849,
											"end": 15942,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 15849,
											"end": 15942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15967,
											"end": 15969,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15962,
											"end": 15965,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15958,
											"end": 15970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15951,
											"end": 15970,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15951,
											"end": 15970,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15610,
											"end": 15976,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15610,
											"end": 15976,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15610,
											"end": 15976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15610,
											"end": 15976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15982,
											"end": 16401,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 15982,
											"end": 16401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16148,
											"end": 16152,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16186,
											"end": 16188,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16175,
											"end": 16184,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16171,
											"end": 16189,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16163,
											"end": 16189,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16163,
											"end": 16189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16235,
											"end": 16244,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16229,
											"end": 16233,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16225,
											"end": 16245,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16221,
											"end": 16222,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16210,
											"end": 16219,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16206,
											"end": 16223,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16199,
											"end": 16246,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16263,
											"end": 16394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 16389,
											"end": 16393,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16263,
											"end": 16394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 16263,
											"end": 16394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16263,
											"end": 16394,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 16263,
											"end": 16394,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16255,
											"end": 16394,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16255,
											"end": 16394,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15982,
											"end": 16401,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15982,
											"end": 16401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15982,
											"end": 16401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15982,
											"end": 16401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16407,
											"end": 16586,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 16407,
											"end": 16586,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16547,
											"end": 16578,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 16543,
											"end": 16544,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16535,
											"end": 16541,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16531,
											"end": 16545,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16524,
											"end": 16579,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16407,
											"end": 16586,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16407,
											"end": 16586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16592,
											"end": 16958,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 16592,
											"end": 16958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16734,
											"end": 16737,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16755,
											"end": 16822,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 16819,
											"end": 16821,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 16814,
											"end": 16817,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16755,
											"end": 16822,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 16755,
											"end": 16822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16755,
											"end": 16822,
											"name": "tag",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 16755,
											"end": 16822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16748,
											"end": 16822,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16748,
											"end": 16822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16831,
											"end": 16924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 16920,
											"end": 16923,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16831,
											"end": 16924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 16831,
											"end": 16924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16831,
											"end": 16924,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 16831,
											"end": 16924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16949,
											"end": 16951,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16944,
											"end": 16947,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16940,
											"end": 16952,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16933,
											"end": 16952,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16933,
											"end": 16952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16592,
											"end": 16958,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16592,
											"end": 16958,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16592,
											"end": 16958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16592,
											"end": 16958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16964,
											"end": 17383,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 16964,
											"end": 17383,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17130,
											"end": 17134,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17168,
											"end": 17170,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17157,
											"end": 17166,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17153,
											"end": 17171,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17145,
											"end": 17171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17145,
											"end": 17171,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17217,
											"end": 17226,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17211,
											"end": 17215,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17207,
											"end": 17227,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17203,
											"end": 17204,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17192,
											"end": 17201,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17188,
											"end": 17205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17181,
											"end": 17228,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17245,
											"end": 17376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 17371,
											"end": 17375,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17245,
											"end": 17376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 17245,
											"end": 17376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17245,
											"end": 17376,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 17245,
											"end": 17376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17237,
											"end": 17376,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17237,
											"end": 17376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16964,
											"end": 17383,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16964,
											"end": 17383,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16964,
											"end": 17383,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16964,
											"end": 17383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17389,
											"end": 17613,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 17389,
											"end": 17613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17529,
											"end": 17563,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 17525,
											"end": 17526,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17517,
											"end": 17523,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17513,
											"end": 17527,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17506,
											"end": 17564,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17598,
											"end": 17605,
											"name": "PUSH",
											"source": 13,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17593,
											"end": 17595,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17585,
											"end": 17591,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17581,
											"end": 17596,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17574,
											"end": 17606,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17389,
											"end": 17613,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17389,
											"end": 17613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17619,
											"end": 17985,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 17619,
											"end": 17985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17761,
											"end": 17764,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17782,
											"end": 17849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 17846,
											"end": 17848,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 17841,
											"end": 17844,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17782,
											"end": 17849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 17782,
											"end": 17849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17782,
											"end": 17849,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 17782,
											"end": 17849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17775,
											"end": 17849,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17775,
											"end": 17849,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17858,
											"end": 17951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 17947,
											"end": 17950,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17858,
											"end": 17951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 17858,
											"end": 17951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17858,
											"end": 17951,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 17858,
											"end": 17951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17976,
											"end": 17978,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17971,
											"end": 17974,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17967,
											"end": 17979,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17960,
											"end": 17979,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17960,
											"end": 17979,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17619,
											"end": 17985,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17619,
											"end": 17985,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17619,
											"end": 17985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17619,
											"end": 17985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17991,
											"end": 18410,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 17991,
											"end": 18410,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18157,
											"end": 18161,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18195,
											"end": 18197,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18184,
											"end": 18193,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18180,
											"end": 18198,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18172,
											"end": 18198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18172,
											"end": 18198,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18244,
											"end": 18253,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18238,
											"end": 18242,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18234,
											"end": 18254,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18230,
											"end": 18231,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18219,
											"end": 18228,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18215,
											"end": 18232,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18208,
											"end": 18255,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18272,
											"end": 18403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 18398,
											"end": 18402,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18272,
											"end": 18403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 18272,
											"end": 18403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18272,
											"end": 18403,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 18272,
											"end": 18403,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18264,
											"end": 18403,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18264,
											"end": 18403,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17991,
											"end": 18410,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17991,
											"end": 18410,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17991,
											"end": 18410,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17991,
											"end": 18410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18416,
											"end": 18638,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 18416,
											"end": 18638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18556,
											"end": 18590,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 18552,
											"end": 18553,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18544,
											"end": 18550,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18540,
											"end": 18554,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18533,
											"end": 18591,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18625,
											"end": 18630,
											"name": "PUSH",
											"source": 13,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18620,
											"end": 18622,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18612,
											"end": 18618,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18608,
											"end": 18623,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18601,
											"end": 18631,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18416,
											"end": 18638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18416,
											"end": 18638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18644,
											"end": 19010,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 18644,
											"end": 19010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18786,
											"end": 18789,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18807,
											"end": 18874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 18871,
											"end": 18873,
											"name": "PUSH",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 18866,
											"end": 18869,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18807,
											"end": 18874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 18807,
											"end": 18874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18807,
											"end": 18874,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 18807,
											"end": 18874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18800,
											"end": 18874,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18800,
											"end": 18874,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18883,
											"end": 18976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 18972,
											"end": 18975,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18883,
											"end": 18976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 18883,
											"end": 18976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18883,
											"end": 18976,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 18883,
											"end": 18976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19001,
											"end": 19003,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18996,
											"end": 18999,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18992,
											"end": 19004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18985,
											"end": 19004,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18985,
											"end": 19004,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18644,
											"end": 19010,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18644,
											"end": 19010,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18644,
											"end": 19010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18644,
											"end": 19010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19016,
											"end": 19435,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 19016,
											"end": 19435,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19182,
											"end": 19186,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19220,
											"end": 19222,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19209,
											"end": 19218,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19205,
											"end": 19223,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19197,
											"end": 19223,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19197,
											"end": 19223,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19269,
											"end": 19278,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19263,
											"end": 19267,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19259,
											"end": 19279,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19255,
											"end": 19256,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19244,
											"end": 19253,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19240,
											"end": 19257,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19233,
											"end": 19280,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19297,
											"end": 19428,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 19423,
											"end": 19427,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19297,
											"end": 19428,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 19297,
											"end": 19428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19297,
											"end": 19428,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 19297,
											"end": 19428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19289,
											"end": 19428,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19289,
											"end": 19428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19016,
											"end": 19435,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19016,
											"end": 19435,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19016,
											"end": 19435,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19016,
											"end": 19435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19441,
											"end": 19666,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 19441,
											"end": 19666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19581,
											"end": 19615,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 19577,
											"end": 19578,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19569,
											"end": 19575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19565,
											"end": 19579,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19558,
											"end": 19616,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19650,
											"end": 19658,
											"name": "PUSH",
											"source": 13,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19645,
											"end": 19647,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19637,
											"end": 19643,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19633,
											"end": 19648,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19626,
											"end": 19659,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19441,
											"end": 19666,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19441,
											"end": 19666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19672,
											"end": 20038,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 19672,
											"end": 20038,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19814,
											"end": 19817,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19835,
											"end": 19902,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 19899,
											"end": 19901,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 19894,
											"end": 19897,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19835,
											"end": 19902,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 19835,
											"end": 19902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19835,
											"end": 19902,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 19835,
											"end": 19902,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19828,
											"end": 19902,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19828,
											"end": 19902,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19911,
											"end": 20004,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 20000,
											"end": 20003,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19911,
											"end": 20004,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 19911,
											"end": 20004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19911,
											"end": 20004,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 19911,
											"end": 20004,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20029,
											"end": 20031,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 20024,
											"end": 20027,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20020,
											"end": 20032,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20013,
											"end": 20032,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20013,
											"end": 20032,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19672,
											"end": 20038,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19672,
											"end": 20038,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19672,
											"end": 20038,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19672,
											"end": 20038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20044,
											"end": 20463,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 20044,
											"end": 20463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20210,
											"end": 20214,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20248,
											"end": 20250,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20237,
											"end": 20246,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20233,
											"end": 20251,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20225,
											"end": 20251,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20225,
											"end": 20251,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20297,
											"end": 20306,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20291,
											"end": 20295,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20287,
											"end": 20307,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20283,
											"end": 20284,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20272,
											"end": 20281,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20268,
											"end": 20285,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20261,
											"end": 20308,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20325,
											"end": 20456,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 20451,
											"end": 20455,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20325,
											"end": 20456,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 20325,
											"end": 20456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20325,
											"end": 20456,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 20325,
											"end": 20456,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20317,
											"end": 20456,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20317,
											"end": 20456,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20044,
											"end": 20463,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20044,
											"end": 20463,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20044,
											"end": 20463,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20044,
											"end": 20463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20469,
											"end": 20650,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 20469,
											"end": 20650,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20609,
											"end": 20642,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 20605,
											"end": 20606,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20597,
											"end": 20603,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20593,
											"end": 20607,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20586,
											"end": 20643,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20469,
											"end": 20650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20469,
											"end": 20650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20656,
											"end": 21022,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 20656,
											"end": 21022,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20798,
											"end": 20801,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20819,
											"end": 20886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 20883,
											"end": 20885,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 20878,
											"end": 20881,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20819,
											"end": 20886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 20819,
											"end": 20886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20819,
											"end": 20886,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 20819,
											"end": 20886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20812,
											"end": 20886,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20812,
											"end": 20886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20895,
											"end": 20988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 20984,
											"end": 20987,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20895,
											"end": 20988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 20895,
											"end": 20988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20895,
											"end": 20988,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 20895,
											"end": 20988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21013,
											"end": 21015,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21008,
											"end": 21011,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21004,
											"end": 21016,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20997,
											"end": 21016,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20997,
											"end": 21016,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20656,
											"end": 21022,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20656,
											"end": 21022,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20656,
											"end": 21022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20656,
											"end": 21022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21028,
											"end": 21447,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 21028,
											"end": 21447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21194,
											"end": 21198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21232,
											"end": 21234,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21221,
											"end": 21230,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21217,
											"end": 21235,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21209,
											"end": 21235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21209,
											"end": 21235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21281,
											"end": 21290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21275,
											"end": 21279,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21271,
											"end": 21291,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21267,
											"end": 21268,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21256,
											"end": 21265,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21252,
											"end": 21269,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21245,
											"end": 21292,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21309,
											"end": 21440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 21435,
											"end": 21439,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21309,
											"end": 21440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 21309,
											"end": 21440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21309,
											"end": 21440,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 21309,
											"end": 21440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21301,
											"end": 21440,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21301,
											"end": 21440,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21028,
											"end": 21447,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21028,
											"end": 21447,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21028,
											"end": 21447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21028,
											"end": 21447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21453,
											"end": 21673,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 21453,
											"end": 21673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21593,
											"end": 21627,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 21589,
											"end": 21590,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21581,
											"end": 21587,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21577,
											"end": 21591,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21570,
											"end": 21628,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21662,
											"end": 21665,
											"name": "PUSH",
											"source": 13,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21657,
											"end": 21659,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21649,
											"end": 21655,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21645,
											"end": 21660,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21638,
											"end": 21666,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21453,
											"end": 21673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21453,
											"end": 21673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21679,
											"end": 22045,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 21679,
											"end": 22045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21821,
											"end": 21824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21842,
											"end": 21909,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 21906,
											"end": 21908,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 21901,
											"end": 21904,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21842,
											"end": 21909,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 21842,
											"end": 21909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21842,
											"end": 21909,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 21842,
											"end": 21909,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21835,
											"end": 21909,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21835,
											"end": 21909,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21918,
											"end": 22011,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 22007,
											"end": 22010,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21918,
											"end": 22011,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 21918,
											"end": 22011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21918,
											"end": 22011,
											"name": "tag",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 21918,
											"end": 22011,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22036,
											"end": 22038,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 22031,
											"end": 22034,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22027,
											"end": 22039,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22020,
											"end": 22039,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22020,
											"end": 22039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21679,
											"end": 22045,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21679,
											"end": 22045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21679,
											"end": 22045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21679,
											"end": 22045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22051,
											"end": 22470,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 22051,
											"end": 22470,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22217,
											"end": 22221,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22255,
											"end": 22257,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22244,
											"end": 22253,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22240,
											"end": 22258,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22232,
											"end": 22258,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22232,
											"end": 22258,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22304,
											"end": 22313,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22298,
											"end": 22302,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22294,
											"end": 22314,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 22290,
											"end": 22291,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22279,
											"end": 22288,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22275,
											"end": 22292,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22268,
											"end": 22315,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22332,
											"end": 22463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 22458,
											"end": 22462,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22332,
											"end": 22463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 22332,
											"end": 22463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22332,
											"end": 22463,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 22332,
											"end": 22463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22324,
											"end": 22463,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22324,
											"end": 22463,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22051,
											"end": 22470,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22051,
											"end": 22470,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22051,
											"end": 22470,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22051,
											"end": 22470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22476,
											"end": 22697,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 22476,
											"end": 22697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22616,
											"end": 22650,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 22612,
											"end": 22613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22604,
											"end": 22610,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22600,
											"end": 22614,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22593,
											"end": 22651,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22685,
											"end": 22689,
											"name": "PUSH",
											"source": 13,
											"value": "6365000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22680,
											"end": 22682,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22672,
											"end": 22678,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22668,
											"end": 22683,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22661,
											"end": 22690,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22476,
											"end": 22697,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22476,
											"end": 22697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22703,
											"end": 23069,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 22703,
											"end": 23069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22845,
											"end": 22848,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22866,
											"end": 22933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 22930,
											"end": 22932,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 22925,
											"end": 22928,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22866,
											"end": 22933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 22866,
											"end": 22933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22866,
											"end": 22933,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 22866,
											"end": 22933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22859,
											"end": 22933,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22859,
											"end": 22933,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22942,
											"end": 23035,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 23031,
											"end": 23034,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22942,
											"end": 23035,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 22942,
											"end": 23035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22942,
											"end": 23035,
											"name": "tag",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 22942,
											"end": 23035,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23060,
											"end": 23062,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 23055,
											"end": 23058,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23051,
											"end": 23063,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23044,
											"end": 23063,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23044,
											"end": 23063,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22703,
											"end": 23069,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22703,
											"end": 23069,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22703,
											"end": 23069,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22703,
											"end": 23069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23075,
											"end": 23494,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 23075,
											"end": 23494,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23241,
											"end": 23245,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23279,
											"end": 23281,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23268,
											"end": 23277,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23264,
											"end": 23282,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23256,
											"end": 23282,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23256,
											"end": 23282,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23328,
											"end": 23337,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23322,
											"end": 23326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23318,
											"end": 23338,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23314,
											"end": 23315,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23303,
											"end": 23312,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23299,
											"end": 23316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23292,
											"end": 23339,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23356,
											"end": 23487,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 23482,
											"end": 23486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23356,
											"end": 23487,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 23356,
											"end": 23487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23356,
											"end": 23487,
											"name": "tag",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 23356,
											"end": 23487,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23348,
											"end": 23487,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23348,
											"end": 23487,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23075,
											"end": 23494,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23075,
											"end": 23494,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23075,
											"end": 23494,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23075,
											"end": 23494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23500,
											"end": 23673,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 23500,
											"end": 23673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23640,
											"end": 23665,
											"name": "PUSH",
											"source": 13,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 23636,
											"end": 23637,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23628,
											"end": 23634,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23624,
											"end": 23638,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23617,
											"end": 23666,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23500,
											"end": 23673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23500,
											"end": 23673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23679,
											"end": 24081,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 23679,
											"end": 24081,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23839,
											"end": 23842,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23860,
											"end": 23945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 23942,
											"end": 23944,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 23937,
											"end": 23940,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23860,
											"end": 23945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 23860,
											"end": 23945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23860,
											"end": 23945,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 23860,
											"end": 23945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23853,
											"end": 23945,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23853,
											"end": 23945,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23954,
											"end": 24047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 24043,
											"end": 24046,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23954,
											"end": 24047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 23954,
											"end": 24047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23954,
											"end": 24047,
											"name": "tag",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 23954,
											"end": 24047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24072,
											"end": 24074,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 24067,
											"end": 24070,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24063,
											"end": 24075,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24056,
											"end": 24075,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24056,
											"end": 24075,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23679,
											"end": 24081,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23679,
											"end": 24081,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23679,
											"end": 24081,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23679,
											"end": 24081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24087,
											"end": 24477,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 24087,
											"end": 24477,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24193,
											"end": 24196,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24221,
											"end": 24260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 24254,
											"end": 24259,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24221,
											"end": 24260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 24221,
											"end": 24260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24221,
											"end": 24260,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 24221,
											"end": 24260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24276,
											"end": 24365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 24358,
											"end": 24364,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24353,
											"end": 24356,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24276,
											"end": 24365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 24276,
											"end": 24365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24276,
											"end": 24365,
											"name": "tag",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 24276,
											"end": 24365,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24269,
											"end": 24365,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 24269,
											"end": 24365,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24374,
											"end": 24439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 24432,
											"end": 24438,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24427,
											"end": 24430,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24420,
											"end": 24424,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24413,
											"end": 24418,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 24409,
											"end": 24425,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24374,
											"end": 24439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 24374,
											"end": 24439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24374,
											"end": 24439,
											"name": "tag",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 24374,
											"end": 24439,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24464,
											"end": 24470,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 24459,
											"end": 24462,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24455,
											"end": 24471,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24448,
											"end": 24471,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24448,
											"end": 24471,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24197,
											"end": 24477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24087,
											"end": 24477,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 24087,
											"end": 24477,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24087,
											"end": 24477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24087,
											"end": 24477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24087,
											"end": 24477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24483,
											"end": 24650,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 24483,
											"end": 24650,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24623,
											"end": 24642,
											"name": "PUSH",
											"source": 13,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 24619,
											"end": 24620,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24611,
											"end": 24617,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24607,
											"end": 24621,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24600,
											"end": 24643,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24483,
											"end": 24650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24483,
											"end": 24650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24656,
											"end": 25058,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 24656,
											"end": 25058,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24816,
											"end": 24819,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24837,
											"end": 24922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 24919,
											"end": 24921,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 24914,
											"end": 24917,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24837,
											"end": 24922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 24837,
											"end": 24922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24837,
											"end": 24922,
											"name": "tag",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 24837,
											"end": 24922,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24830,
											"end": 24922,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24830,
											"end": 24922,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24931,
											"end": 25024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 25020,
											"end": 25023,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24931,
											"end": 25024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 24931,
											"end": 25024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24931,
											"end": 25024,
											"name": "tag",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 24931,
											"end": 25024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25049,
											"end": 25051,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 25044,
											"end": 25047,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25040,
											"end": 25052,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25033,
											"end": 25052,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25033,
											"end": 25052,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24656,
											"end": 25058,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24656,
											"end": 25058,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24656,
											"end": 25058,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24656,
											"end": 25058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25064,
											"end": 26031,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 25064,
											"end": 26031,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25446,
											"end": 25449,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25468,
											"end": 25616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 25612,
											"end": 25615,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25468,
											"end": 25616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 25468,
											"end": 25616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25468,
											"end": 25616,
											"name": "tag",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 25468,
											"end": 25616,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25461,
											"end": 25616,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25461,
											"end": 25616,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25633,
											"end": 25728,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 25724,
											"end": 25727,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25715,
											"end": 25721,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 25633,
											"end": 25728,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 25633,
											"end": 25728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25633,
											"end": 25728,
											"name": "tag",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 25633,
											"end": 25728,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25626,
											"end": 25728,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25626,
											"end": 25728,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25745,
											"end": 25893,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 25889,
											"end": 25892,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25745,
											"end": 25893,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 25745,
											"end": 25893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25745,
											"end": 25893,
											"name": "tag",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 25745,
											"end": 25893,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25738,
											"end": 25893,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25738,
											"end": 25893,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25910,
											"end": 26005,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 26001,
											"end": 26004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25992,
											"end": 25998,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 25910,
											"end": 26005,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 25910,
											"end": 26005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25910,
											"end": 26005,
											"name": "tag",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 25910,
											"end": 26005,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25903,
											"end": 26005,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25903,
											"end": 26005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26022,
											"end": 26025,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26015,
											"end": 26025,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26015,
											"end": 26025,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25064,
											"end": 26031,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 25064,
											"end": 26031,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 25064,
											"end": 26031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25064,
											"end": 26031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25064,
											"end": 26031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25064,
											"end": 26031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26037,
											"end": 26447,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 26037,
											"end": 26447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26077,
											"end": 26084,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26100,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 26118,
											"end": 26119,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26100,
											"end": 26120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 26100,
											"end": 26120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26100,
											"end": 26120,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 26100,
											"end": 26120,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26095,
											"end": 26120,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26095,
											"end": 26120,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26134,
											"end": 26154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 26152,
											"end": 26153,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26134,
											"end": 26154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 26134,
											"end": 26154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26134,
											"end": 26154,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 26134,
											"end": 26154,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26129,
											"end": 26154,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 26129,
											"end": 26154,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26189,
											"end": 26190,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26186,
											"end": 26187,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26182,
											"end": 26191,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 26211,
											"end": 26241,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 26229,
											"end": 26240,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26211,
											"end": 26241,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 26211,
											"end": 26241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26211,
											"end": 26241,
											"name": "tag",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 26211,
											"end": 26241,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26200,
											"end": 26241,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26200,
											"end": 26241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26390,
											"end": 26391,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26381,
											"end": 26388,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26377,
											"end": 26392,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 26374,
											"end": 26375,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 26371,
											"end": 26393,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 26351,
											"end": 26352,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26344,
											"end": 26353,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 26324,
											"end": 26407,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 26301,
											"end": 26440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 26301,
											"end": 26440,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 26420,
											"end": 26438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 26420,
											"end": 26438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 26420,
											"end": 26438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26420,
											"end": 26438,
											"name": "tag",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 26420,
											"end": 26438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26301,
											"end": 26440,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 26301,
											"end": 26440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26085,
											"end": 26447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26037,
											"end": 26447,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 26037,
											"end": 26447,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26037,
											"end": 26447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26037,
											"end": 26447,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26037,
											"end": 26447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26453,
											"end": 26633,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 26453,
											"end": 26633,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26501,
											"end": 26578,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26498,
											"end": 26499,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26491,
											"end": 26579,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26598,
											"end": 26602,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 26595,
											"end": 26596,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 26588,
											"end": 26603,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26622,
											"end": 26626,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 26619,
											"end": 26620,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26612,
											"end": 26627,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 26639,
											"end": 26819,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 26639,
											"end": 26819,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26687,
											"end": 26764,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26684,
											"end": 26685,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26677,
											"end": 26765,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26784,
											"end": 26788,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 26781,
											"end": 26782,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 26774,
											"end": 26789,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26808,
											"end": 26812,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 26805,
											"end": 26806,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26798,
											"end": 26813,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 26825,
											"end": 26996,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 26825,
											"end": 26996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26864,
											"end": 26867,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 26905,
											"end": 26910,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 26887,
											"end": 26911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "tag",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 26887,
											"end": 26911,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26878,
											"end": 26911,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26878,
											"end": 26911,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26933,
											"end": 26937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26926,
											"end": 26931,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26923,
											"end": 26938,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 26920,
											"end": 26961,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 26920,
											"end": 26961,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 26941,
											"end": 26959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 26941,
											"end": 26959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 26941,
											"end": 26959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26941,
											"end": 26959,
											"name": "tag",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 26941,
											"end": 26959,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26920,
											"end": 26961,
											"name": "tag",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 26920,
											"end": 26961,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26988,
											"end": 26989,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 26981,
											"end": 26986,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26977,
											"end": 26990,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 26970,
											"end": 26990,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26970,
											"end": 26990,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26825,
											"end": 26996,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26825,
											"end": 26996,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26825,
											"end": 26996,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26825,
											"end": 26996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27002,
											"end": 27184,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 27002,
											"end": 27184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27142,
											"end": 27176,
											"name": "PUSH",
											"source": 13,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 27138,
											"end": 27139,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27130,
											"end": 27136,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27126,
											"end": 27140,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27119,
											"end": 27177,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 27002,
											"end": 27184,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27002,
											"end": 27184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27190,
											"end": 27556,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 27190,
											"end": 27556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27332,
											"end": 27335,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27353,
											"end": 27420,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 27417,
											"end": 27419,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27412,
											"end": 27415,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27353,
											"end": 27420,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 27353,
											"end": 27420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27353,
											"end": 27420,
											"name": "tag",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 27353,
											"end": 27420,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27346,
											"end": 27420,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27346,
											"end": 27420,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27429,
											"end": 27522,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 27518,
											"end": 27521,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27429,
											"end": 27522,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 27429,
											"end": 27522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27429,
											"end": 27522,
											"name": "tag",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 27429,
											"end": 27522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27547,
											"end": 27549,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27542,
											"end": 27545,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27538,
											"end": 27550,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27531,
											"end": 27550,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27531,
											"end": 27550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27190,
											"end": 27556,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27190,
											"end": 27556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27190,
											"end": 27556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27190,
											"end": 27556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27562,
											"end": 27981,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 27562,
											"end": 27981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27728,
											"end": 27732,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27766,
											"end": 27768,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27755,
											"end": 27764,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27751,
											"end": 27769,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27743,
											"end": 27769,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27743,
											"end": 27769,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27815,
											"end": 27824,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27809,
											"end": 27813,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27805,
											"end": 27825,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 27801,
											"end": 27802,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27790,
											"end": 27799,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27786,
											"end": 27803,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27779,
											"end": 27826,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 27843,
											"end": 27974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 27969,
											"end": 27973,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27843,
											"end": 27974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 27843,
											"end": 27974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27843,
											"end": 27974,
											"name": "tag",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 27843,
											"end": 27974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27835,
											"end": 27974,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27835,
											"end": 27974,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27562,
											"end": 27981,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27562,
											"end": 27981,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27562,
											"end": 27981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27562,
											"end": 27981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								},
								"4BE56B54BB0483F8C7DECBFD8EA4B51BF9EDA8402236441B22287BF2EAFD554E": "5374616b65642048696768205969656c6420446f6c6c617220537461626c6520546f6b656e"
							},
							"sourceList": [
								"src/extensions/ERC20.sol",
								"src/interfaces/IAccessControl.sol",
								"src/interfaces/IERC165.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/IERC20Metadata.sol",
								"src/interfaces/IsHYDT.sol",
								"src/libraries/Math.sol",
								"src/libraries/SignedMath.sol",
								"src/libraries/Strings.sol",
								"src/sHYDT.sol",
								"src/utils/AccessControl.sol",
								"src/utils/Context.sol",
								"src/utils/ERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CALLER_ROLE()": "774237fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize(address)": "c4d66de8",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CALLER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"earn_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"See {ERC20-_burn}. Requirements: - the caller must have the `Caller` role.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destorys `amount` tokens from `from` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Emits a {Transfer} event with `to` set to the zero address. Requirements: - the caller must have the `Caller` role. - `from` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(address)\":{\"details\":\"This function can only be called once.\",\"params\":{\"earn_\":\"The address of the `Earn` contract.\"}},\"mint(address,uint256)\":{\"details\":\"See {ERC20-_mint}. Requirements: - the caller must have the `Caller` role.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_initializer\":{\"details\":\"Initialization variables.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initialize(address)\":{\"notice\":\"Initializes external dependencies and state variables.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/sHYDT.sol\":\"sHYDT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/extensions/ERC20.sol\":{\"keccak256\":\"0x1f261ff592653ece7a6b0560754694f968ece3892b1f749accf1640d4a9d6bb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://381451c7046c04bebfaba3ee44af65b3875c963467328c0018614120af871ec4\",\"dweb:/ipfs/QmZ12nHrE3d6Si4XYcN9SP8xB4hJJDx52MN4RkUzCCoEuj\"]},\"src/interfaces/IAccessControl.sol\":{\"keccak256\":\"0x89c6c2a63dc6c357c6108de150ab329ad7f847f3ff00a35bcd55f769f4ebcad4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cadec590da43255289e7db8e08a0760869efa64c543dbd8af46690ce5295d497\",\"dweb:/ipfs/QmZsPSyWeA3aZgDgtXMMx11wvTadrf5FzrxkWDbUfM11Ue\"]},\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0xd49070e01df31c9f39ed67f7cb2844d842b5fc4c07048156f77f1ac06956a223\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7a56689e6a846ee765a66e30a816b0fe65eba41d2f16beb5bd57a7f7daf1027\",\"dweb:/ipfs/QmduVybj3AaRyHwRRnmjxsG5jPERmFBEUH9EcXwVM5kPyC\"]},\"src/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x1ffe2047e11fcdd75b2aca845ef3428d93765011f9bdb0ca7bf5d9f95f62656a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b608f183a24077b867dcf21b1e5956b431291324b6025cbb864eb295e005307\",\"dweb:/ipfs/QmPsgCmqe4HYkFpvYJGWWbkLoQEdhWDzmhG6Lv54FXua8W\"]},\"src/interfaces/IsHYDT.sol\":{\"keccak256\":\"0x8750c2e56cafda7debad0ccf8e3a52e6d7e67675036ce5950fc4316c7d47a693\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://9fb98b3c75bbbb793905a2c6dc989a62d933ce7d88256c8365ded40249eda350\",\"dweb:/ipfs/QmVi7R1U6Kta1932mjQYLmCiqxP8F27ap4RmLsubscGK6A\"]},\"src/libraries/Math.sol\":{\"keccak256\":\"0xfc18275f00047f613f761247e4f3ec788843036f7f426b3fd3b74e251e45f7ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acc7cebc92fed34db103599e2bde11669280f6e9062fc42d000969ee0e9e8443\",\"dweb:/ipfs/QmQh4ArebQ7tuHEEPyHfeZKctXbC6zPRRnZ7bZM5GNkgh7\"]},\"src/libraries/SignedMath.sol\":{\"keccak256\":\"0xb4a5f5f5222294665d6241a5c06558d4939617ebd0a49d1eb9c0e193fd19bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be7f6a069d156446211053299916948102d357d813be42c5f1614885e71d81b3\",\"dweb:/ipfs/QmfT2fs3cDWvfoekdfkUQ3ZMz4f8tc2hqnabipbfzW3Xqb\"]},\"src/libraries/Strings.sol\":{\"keccak256\":\"0xaa9c663292d9142e4f463d0f876b1b3813e409bdeb321470fb20573d9a68012b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f7892745f43559c7f4351120ca6829fb71d40ea286268174dd84128657ee915\",\"dweb:/ipfs/QmeT6d7KBXrNcyLGhtj6a5LLHbYHiVVXqQYA6pSNnp8ecH\"]},\"src/sHYDT.sol\":{\"keccak256\":\"0x3659fdd709c020aa10674cdfa2fa24808687464fbe4d23cb21e7e4ee86cdaa21\",\"license\":\"GNU GPLv3\",\"urls\":[\"bzz-raw://1489b1b7a9450285476d148aca7f2299da1149e8f8fb2becb6fba66b1016328f\",\"dweb:/ipfs/QmV4XFjV7humu1t5Mt8idEo5E71L2bzCQs2ScMSRxFxZAe\"]},\"src/utils/AccessControl.sol\":{\"keccak256\":\"0x9e9604e591c7f14ea0f18f906494192375b28f2d614279f1dda876de4ee240b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e1e5fa779889491b77f631f931fad6ba3b10907766b41d56c42a37fbcbbc664\",\"dweb:/ipfs/QmadpbPf3XFvdH1CVD17VcTmf7ScynmnjEwePFs2WBmGmU\"]},\"src/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]},\"src/utils/ERC165.sol\":{\"keccak256\":\"0x0ce3f9c6ef779f4e44ea727f31300501bf3c19af2b27264e1932aef9c70f9300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://850c17304062747f819d5c5b30e0f004ad3f36aa55d8407883311bf2fd68caee\",\"dweb:/ipfs/QmZcbvqF24EBStFacFZcganjH7f6Et4RGWYHjy4M5nHiHM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2185,
								"contract": "src/sHYDT.sol:sHYDT",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)2180_storage)"
							},
							{
								"astId": 15,
								"contract": "src/sHYDT.sol:sHYDT",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "src/sHYDT.sol:sHYDT",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "src/sHYDT.sol:sHYDT",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "src/sHYDT.sol:sHYDT",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "src/sHYDT.sol:sHYDT",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 2029,
								"contract": "src/sHYDT.sol:sHYDT",
								"label": "_isInitialized",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)2180_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)2180_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)2180_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 2177,
										"contract": "src/sHYDT.sol:sHYDT",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 2179,
										"contract": "src/sHYDT.sol:sHYDT",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"initialize(address)": {
								"notice": "Initializes external dependencies and state variables."
							}
						},
						"version": 1
					}
				}
			},
			"src/utils/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IAccessControl.sol\":{\"keccak256\":\"0x89c6c2a63dc6c357c6108de150ab329ad7f847f3ff00a35bcd55f769f4ebcad4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cadec590da43255289e7db8e08a0760869efa64c543dbd8af46690ce5295d497\",\"dweb:/ipfs/QmZsPSyWeA3aZgDgtXMMx11wvTadrf5FzrxkWDbUfM11Ue\"]},\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]},\"src/libraries/Math.sol\":{\"keccak256\":\"0xfc18275f00047f613f761247e4f3ec788843036f7f426b3fd3b74e251e45f7ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acc7cebc92fed34db103599e2bde11669280f6e9062fc42d000969ee0e9e8443\",\"dweb:/ipfs/QmQh4ArebQ7tuHEEPyHfeZKctXbC6zPRRnZ7bZM5GNkgh7\"]},\"src/libraries/SignedMath.sol\":{\"keccak256\":\"0xb4a5f5f5222294665d6241a5c06558d4939617ebd0a49d1eb9c0e193fd19bdfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be7f6a069d156446211053299916948102d357d813be42c5f1614885e71d81b3\",\"dweb:/ipfs/QmfT2fs3cDWvfoekdfkUQ3ZMz4f8tc2hqnabipbfzW3Xqb\"]},\"src/libraries/Strings.sol\":{\"keccak256\":\"0xaa9c663292d9142e4f463d0f876b1b3813e409bdeb321470fb20573d9a68012b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f7892745f43559c7f4351120ca6829fb71d40ea286268174dd84128657ee915\",\"dweb:/ipfs/QmeT6d7KBXrNcyLGhtj6a5LLHbYHiVVXqQYA6pSNnp8ecH\"]},\"src/utils/AccessControl.sol\":{\"keccak256\":\"0x9e9604e591c7f14ea0f18f906494192375b28f2d614279f1dda876de4ee240b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e1e5fa779889491b77f631f931fad6ba3b10907766b41d56c42a37fbcbbc664\",\"dweb:/ipfs/QmadpbPf3XFvdH1CVD17VcTmf7ScynmnjEwePFs2WBmGmU\"]},\"src/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]},\"src/utils/ERC165.sol\":{\"keccak256\":\"0x0ce3f9c6ef779f4e44ea727f31300501bf3c19af2b27264e1932aef9c70f9300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://850c17304062747f819d5c5b30e0f004ad3f36aa55d8407883311bf2fd68caee\",\"dweb:/ipfs/QmZcbvqF24EBStFacFZcganjH7f6Et4RGWYHjy4M5nHiHM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2185,
								"contract": "src/utils/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)2180_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)2180_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)2180_storage"
							},
							"t_struct(RoleData)2180_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 2177,
										"contract": "src/utils/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 2179,
										"contract": "src/utils/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/utils/Context.sol\":{\"keccak256\":\"0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f\",\"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/utils/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC165.sol\":{\"keccak256\":\"0x3213cb47aba4f8ba951dc5671d44e3559fecec1e9c402e679fbb5ada255fdff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2296c533793e4c2a6eb4909bd2ca8e99044aff82e3fe2049092bd3f62034a3\",\"dweb:/ipfs/QmVwAULUUqeXLdggzzW1C3hdNUZbqHoCskoGyfzZ5EKcwW\"]},\"src/utils/ERC165.sol\":{\"keccak256\":\"0x0ce3f9c6ef779f4e44ea727f31300501bf3c19af2b27264e1932aef9c70f9300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://850c17304062747f819d5c5b30e0f004ad3f36aa55d8407883311bf2fd68caee\",\"dweb:/ipfs/QmZcbvqF24EBStFacFZcganjH7f6Et4RGWYHjy4M5nHiHM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/extensions/ERC20.sol": {
				"ast": {
					"absolutePath": "src/extensions/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							2498
						],
						"ERC20": [
							586
						],
						"IERC20": [
							749
						],
						"IERC20Metadata": [
							774
						]
					},
					"id": 587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "src/interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 750,
							"src": "135:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/IERC20Metadata.sol",
							"file": "../interfaces/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 775,
							"src": "171:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 2499,
							"src": "215:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nameLocations": [
											"1597:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2498,
										"src": "1597:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1597:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nameLocations": [
											"1606:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 749,
										"src": "1606:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1606:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1614:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 774,
										"src": "1614:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1614:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "249:1328:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 586,
							"linearizedBaseContracts": [
								586,
								774,
								749,
								2498
							],
							"name": "ERC20",
							"nameLocation": "1588:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1672:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1636:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1644:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1636:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1655:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1746:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1690:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1698:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1690:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 19,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1717:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1709:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1728:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1782:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1766:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1766:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1818:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1803:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1803:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1845:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1830:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1830:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2099:60:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2110:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2118:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2110:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2110:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2134:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2144:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2134:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2134:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1861:176:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2069:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2055:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2055:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2090:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2076:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2076:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2054:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2099:0:0"
									},
									"scope": 586,
									"src": "2043:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										761
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2298:31:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2316:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "2309:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2167:56:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2238:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2265:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2242:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2283:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2283:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2282:15:0"
									},
									"scope": 586,
									"src": "2229:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										767
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2519:33:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "2530:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2337:105:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2457:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2486:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2463:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2504:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2504:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2503:15:0"
									},
									"scope": 586,
									"src": "2448:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										773
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3265:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3283:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3276:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2560:634:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3209:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3240:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3217:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3258:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 68,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3258:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3257:7:0"
									},
									"scope": 586,
									"src": "3200:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										698
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3428:38:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3446:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "3439:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3301:51:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3367:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3401:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3378:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3419:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3418:9:0"
									},
									"scope": 586,
									"src": "3358:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3612:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3630:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3640:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3630:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "3623:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3474:49:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3538:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3585:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3556:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3548:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3547:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3603:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3602:9:0"
									},
									"scope": 586,
									"src": "3529:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3947:108:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3966:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3958:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3958:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2488,
														"src": "3974:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3958:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "4007:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "4014:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "4018:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3997:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3997:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3997:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4043:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "4036:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3664:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3871:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3923:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3888:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3880:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3900:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3892:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3879:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3941:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3941:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:6:0"
									},
									"scope": 586,
									"src": "3862:193:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										726
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4216:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4234:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4246:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4234:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4253:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4234:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4227:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "4063:49:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4127:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4189:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4145:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4137:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4160:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4152:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4152:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4136:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4207:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4206:9:0"
									},
									"scope": 586,
									"src": "4118:151:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										736
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4678:112:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4697:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "4689:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4689:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2488,
														"src": "4705:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4705:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4689:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4737:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4744:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4753:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "4728:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4728:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4728:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4778:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "4771:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4277:306:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4598:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4654:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4614:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4606:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4631:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4623:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4605:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4672:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4672:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4671:6:0"
									},
									"scope": 586,
									"src": "4589:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5473:158:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5492:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "5484:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5484:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2488,
														"src": "5502:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5502:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5484:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5547:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5556:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "5525:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5525:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5525:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5584:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5590:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5594:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5574:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5574:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5574:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5619:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "5612:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4798:566:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5379:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5449:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5400:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5392:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5414:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5406:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5426:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5418:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5418:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5391:42:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5467:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5467:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5466:6:0"
									},
									"scope": 586,
									"src": "5370:261:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "6134:144:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6153:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "6145:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6145:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2488,
														"src": "6161:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6161:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6145:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6193:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6200:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6219:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "6226:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 217,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "6209:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6209:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6237:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6209:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "6184:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6184:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "6184:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "6259:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5639:395:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6049:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6075:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6067:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6067:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6092:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6084:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "6128:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6127:6:0"
									},
									"scope": 586,
									"src": "6040:238:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "6880:337:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6899:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6891:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6891:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2488,
														"src": "6907:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6907:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6891:28:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6938:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6930:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6930:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6967:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6974:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "6957:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6957:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6930:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "7001:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "7021:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7001:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7038:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6993:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6993:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6993:85:0"
											},
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "7089:97:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "7123:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "7130:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "7139:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "7158:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7139:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "7114:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7114:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 264,
														"nodeType": "ExpressionStatement",
														"src": "7114:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7205:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 267,
												"nodeType": "Return",
												"src": "7198:11:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6286:489:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6790:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6816:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6808:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6808:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6833:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6825:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6825:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:42:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6874:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6874:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6873:6:0"
									},
									"scope": 586,
									"src": "6781:436:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7765:728:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "7784:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7800:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7792:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7792:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7792:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7784:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7804:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7776:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7776:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "7776:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7863:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7877:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7869:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7869:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7869:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7863:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7881:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7855:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7855:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7855:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7953:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7959:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7963:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "7932:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7932:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7932:38:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7991:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "7983:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7983:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "8005:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "8015:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8005:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7983:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "8039:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "8054:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8039:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8062:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8031:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8031:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "8031:72:0"
											},
											{
												"id": 332,
												"nodeType": "UncheckedBlock",
												"src": "8114:278:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8139:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "8149:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8139:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "8157:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "8171:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8157:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8139:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "8139:38:0"
													},
													{
														"expression": {
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 326,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8357:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 328,
																"indexExpression": {
																	"id": 327,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "8367:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8357:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 329,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "8374:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8357:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "8357:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8418:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8424:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8428:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "8409:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8409:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "8404:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8468:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8474:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8478:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "8448:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8448:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8448:37:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7225:456:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7696:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7714:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7706:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7728:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7720:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7740:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7732:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7732:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7705:42:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7765:0:0"
									},
									"scope": 586,
									"src": "7687:806:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "8845:483:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "8864:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8883:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8875:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8875:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8875:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8864:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8887:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8856:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8856:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8963:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8955:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8955:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8955:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8967:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8976:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "8934:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8934:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8934:49:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8996:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "9012:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8996:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8996:22:0"
											},
											{
												"id": 383,
												"nodeType": "UncheckedBlock",
												"src": "9029:178:0",
												"statements": [
													{
														"expression": {
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 377,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9167:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 379,
																"indexExpression": {
																	"id": 378,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "9177:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9167:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 380,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "9189:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9167:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 382,
														"nodeType": "ExpressionStatement",
														"src": "9167:28:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9239:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9231:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 385,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9231:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9231:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9243:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 390,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "9252:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 384,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "9222:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9222:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "EmitStatement",
												"src": "9217:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9300:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9292:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 394,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9292:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9292:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9304:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "9313:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 393,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "9272:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9272:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "9272:48:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "8501:273:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8789:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8803:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8795:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8820:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8812:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:33:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8845:0:0"
									},
									"scope": 586,
									"src": "8780:548:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "9726:610:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "9745:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9764:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9756:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 413,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9756:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9756:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9745:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9768:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9737:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9737:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "9737:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9838:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9855:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9847:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 423,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9847:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9847:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "9859:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "9817:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9817:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "9817:49:0"
											},
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9887:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "9879:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9879:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": {
													"baseExpression": {
														"id": 432,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9904:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 434,
													"indexExpression": {
														"id": 433,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "9914:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9904:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9879:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "9941:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 438,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "9959:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9941:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9967:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9933:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9933:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "9933:71:0"
											},
											{
												"id": 455,
												"nodeType": "UncheckedBlock",
												"src": "10015:198:0",
												"statements": [
													{
														"expression": {
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 443,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "10040:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 445,
																"indexExpression": {
																	"id": 444,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "10050:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10040:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 446,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "10061:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 447,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "10078:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10061:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10040:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 450,
														"nodeType": "ExpressionStatement",
														"src": "10040:44:0"
													},
													{
														"expression": {
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 451,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "10179:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 452,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "10195:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10179:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 454,
														"nodeType": "ExpressionStatement",
														"src": "10179:22:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 457,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "10239:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10256:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10248:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 458,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10248:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10248:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "10260:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 456,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "10230:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10230:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "EmitStatement",
												"src": "10225:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "10300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10317:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10309:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 467,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10309:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10309:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "10321:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "10280:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10280:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "10280:48:0"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "9336:319:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9670:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "9676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9701:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "9693:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9675:33:0"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9726:0:0"
									},
									"scope": 586,
									"src": "9661:675:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "10857:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 486,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "10876:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10893:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10885:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 487,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10885:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10885:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10876:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10897:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10868:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10868:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "10868:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 496,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "10955:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10974:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10966:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 497,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10966:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10966:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10955:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10978:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10947:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10947:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "10947:68:0"
											},
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 505,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "11028:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 508,
															"indexExpression": {
																"id": 506,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "11040:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11028:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 509,
														"indexExpression": {
															"id": 507,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "11047:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11028:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 510,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "11058:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11028:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "11028:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 514,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "11089:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "11096:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "11105:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "11080:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11080:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "EmitStatement",
												"src": "11075:37:0"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "10344:424:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10783:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10800:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10792:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10792:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10815:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10807:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10832:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10824:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10791:48:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10857:0:0"
									},
									"scope": 586,
									"src": "10774:346:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "11501:329:0",
										"statements": [
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11520:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "11512:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11512:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 536,
												"initialValue": {
													"arguments": [
														{
															"id": 533,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "11549:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "11556:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 532,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "11539:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11539:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11512:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 537,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "11579:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11604:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 539,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11604:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 538,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11599:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11599:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11613:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11599:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11579:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "11575:248:0",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "11618:205:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 545,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 531,
																			"src": "11641:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 546,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 527,
																			"src": "11661:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11641:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11669:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 544,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11633:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11633:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 550,
															"nodeType": "ExpressionStatement",
															"src": "11633:68:0"
														},
														{
															"id": 559,
															"nodeType": "UncheckedBlock",
															"src": "11716:96:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 552,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "11754:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 553,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 525,
																				"src": "11761:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 554,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 531,
																					"src": "11770:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 555,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 527,
																					"src": "11789:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11770:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 551,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 520,
																			"src": "11745:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11745:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 558,
																	"nodeType": "ExpressionStatement",
																	"src": "11745:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "11128:277:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11420:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11444:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11436:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11436:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11459:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11451:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11476:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11468:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11435:48:0"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11501:0:0"
									},
									"scope": 586,
									"src": "11411:419:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "12519:2:0",
										"statements": []
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "11838:586:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12439:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12468:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12460:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12460:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12482:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12474:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12474:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12494:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12486:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12459:42:0"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12519:0:0"
									},
									"scope": 586,
									"src": "12430:91:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "13213:2:0",
										"statements": []
									},
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "12529:590:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "13134:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13162:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "13154:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13176:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "13168:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13188:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "13180:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13153:42:0"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13213:0:0"
									},
									"scope": 586,
									"src": "13125:90:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 587,
							"src": "1579:11639:0",
							"usedErrors": []
						}
					],
					"src": "108:13110:0"
				},
				"id": 0
			},
			"src/interfaces/IAccessControl.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							659
						]
					},
					"id": 660,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 589,
								"nodeType": "StructuredDocumentation",
								"src": "124:91:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 659,
							"linearizedBaseContracts": [
								659
							],
							"name": "IAccessControl",
							"nameLocation": "227:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "249:299:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 598,
									"name": "RoleAdminChanged",
									"nameLocation": "560:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "593:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "577:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 591,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "615:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "599:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 593,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "650:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "634:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 595,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "576:87:1"
									},
									"src": "554:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "672:217:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 607,
									"name": "RoleGranted",
									"nameLocation": "901:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "929:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "913:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 600,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "951:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "935:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "976:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "960:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "912:71:1"
									},
									"src": "895:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "992:281:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 616,
									"name": "RoleRevoked",
									"nameLocation": "1285:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1313:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1297:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 609,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1335:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1319:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1360:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1344:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:71:1"
									},
									"src": "1279:89:1"
								},
								{
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "1376:78:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 626,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1469:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1485:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "1477:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 618,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1499:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "1491:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1476:31:1"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "1531:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1531:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1530:6:1"
									},
									"scope": 659,
									"src": "1460:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "1545:189:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1749:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1770:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1762:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 628,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:14:1"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1799:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 631,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:1"
									},
									"scope": 659,
									"src": "1740:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "1816:248:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2079:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2097:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "2089:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 636,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2089:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2111:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "2103:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2088:31:1"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2128:0:1"
									},
									"scope": 659,
									"src": "2070:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "2137:231:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2383:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2402:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2394:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 644,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2416:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2408:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:31:1"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2433:0:1"
									},
									"scope": 659,
									"src": "2374:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "2442:493:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2950:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2971:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2963:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 652,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2963:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2985:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2977:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2977:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2962:31:1"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3002:0:1"
									},
									"scope": 659,
									"src": "2941:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 660,
							"src": "217:2789:1",
							"usedErrors": []
						}
					],
					"src": "97:2909:1"
				},
				"id": 1
			},
			"src/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							671
						]
					},
					"id": 672,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 661,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 662,
								"nodeType": "StructuredDocumentation",
								"src": "130:287:2",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 671,
							"linearizedBaseContracts": [
								671
							],
							"name": "IERC165",
							"nameLocation": "429:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "444:347:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 670,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "806:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "831:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "824:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 664,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:20:2"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "867:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 667,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "867:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:6:2"
									},
									"scope": 671,
									"src": "797:76:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 672,
							"src": "419:457:2",
							"usedErrors": []
						}
					],
					"src": "103:773:2"
				},
				"id": 2
			},
			"src/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							749
						]
					},
					"id": 750,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 673,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 674,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 749,
							"linearizedBaseContracts": [
								749
							],
							"name": "IERC20",
							"nameLocation": "220:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 683,
									"name": "Transfer",
									"nameLocation": "409:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "418:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "440:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "460:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:3"
									},
									"src": "403:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 692,
									"name": "Approval",
									"nameLocation": "646:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "655:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "678:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "703:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:3"
									},
									"src": "640:78:3"
								},
								{
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 698,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:3"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "846:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:3"
									},
									"scope": 749,
									"src": "800:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "962:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:3"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1002:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:3"
									},
									"scope": 749,
									"src": "943:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1242:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1259:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1251:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1271:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1263:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:3"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1297:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:3"
									},
									"scope": 749,
									"src": "1233:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1596:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1614:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1606:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1629:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1621:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:3"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1661:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:3"
									},
									"scope": 749,
									"src": "1587:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 736,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2348:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "2356:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2381:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "2373:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:3"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "2407:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 733,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:3"
									},
									"scope": 749,
									"src": "2339:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2731:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2752:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2744:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2766:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2758:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2778:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2770:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:42:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "2804:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2804:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2803:6:3"
									},
									"scope": 749,
									"src": "2722:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 750,
							"src": "210:2603:3",
							"usedErrors": []
						}
					],
					"src": "109:2704:3"
				},
				"id": 3
			},
			"src/interfaces/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							749
						],
						"IERC20Metadata": [
							774
						]
					},
					"id": 775,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 751,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:4"
						},
						{
							"absolutePath": "src/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 752,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 775,
							"sourceUnit": 750,
							"src": "140:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 754,
										"name": "IERC20",
										"nameLocations": [
											"316:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 749,
										"src": "316:6:4"
									},
									"id": 755,
									"nodeType": "InheritanceSpecifier",
									"src": "316:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 753,
								"nodeType": "StructuredDocumentation",
								"src": "166:120:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 774,
							"linearizedBaseContracts": [
								774,
								749
							],
							"name": "IERC20Metadata",
							"nameLocation": "298:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "330:56:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "401:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:4"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "431:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 758,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "431:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:15:4"
									},
									"scope": 774,
									"src": "392:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "454:58:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "527:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:2:4"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "559:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 764,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:15:4"
									},
									"scope": 774,
									"src": "518:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "582:67:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "664:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:2:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "698:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 770,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "698:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:7:4"
									},
									"scope": 774,
									"src": "655:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 775,
							"src": "288:420:4",
							"usedErrors": []
						}
					],
					"src": "113:595:4"
				},
				"id": 4
			},
			"src/interfaces/IsHYDT.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IsHYDT.sol",
					"exportedSymbols": {
						"IERC20": [
							749
						],
						"IsHYDT": [
							805
						]
					},
					"id": 806,
					"license": "GNU GPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 776,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:5"
						},
						{
							"absolutePath": "src/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 777,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 806,
							"sourceUnit": 750,
							"src": "68:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 778,
										"name": "IERC20",
										"nameLocations": [
											"114:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 749,
										"src": "114:6:5"
									},
									"id": 779,
									"nodeType": "InheritanceSpecifier",
									"src": "114:6:5"
								}
							],
							"canonicalName": "IsHYDT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 805,
							"linearizedBaseContracts": [
								805,
								749
							],
							"name": "IsHYDT",
							"nameLocation": "104:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 788,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "139:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "152:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "144:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "164:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "156:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "143:28:5"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "190:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 785,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "190:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "189:6:5"
									},
									"scope": 805,
									"src": "130:66:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "213:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "226:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "218:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "217:16:5"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "252:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 792,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "252:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:6:5"
									},
									"scope": 805,
									"src": "204:54:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79cc6790",
									"id": 804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "275:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "292:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "284:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "306:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "298:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "283:30:5"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "332:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 801,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "332:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:6:5"
									},
									"scope": 805,
									"src": "266:72:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 806,
							"src": "94:247:5",
							"usedErrors": []
						}
					],
					"src": "41:300:5"
				},
				"id": 5
			},
			"src/libraries/Math.sol": {
				"ast": {
					"absolutePath": "src/libraries/Math.sol",
					"exportedSymbols": {
						"Math": [
							1671
						]
					},
					"id": 1672,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 807,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 808,
								"nodeType": "StructuredDocumentation",
								"src": "133:75:6",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1671,
							"linearizedBaseContracts": [
								1671
							],
							"name": "Math",
							"nameLocation": "218:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 812,
									"members": [
										{
											"id": 809,
											"name": "Down",
											"nameLocation": "255:4:6",
											"nodeType": "EnumValue",
											"src": "255:4:6"
										},
										{
											"id": 810,
											"name": "Up",
											"nameLocation": "298:2:6",
											"nodeType": "EnumValue",
											"src": "298:2:6"
										},
										{
											"id": 811,
											"name": "Zero",
											"nameLocation": "330:4:6",
											"nodeType": "EnumValue",
											"src": "330:4:6"
										}
									],
									"name": "Rounding",
									"nameLocation": "235:8:6",
									"nodeType": "EnumDefinition",
									"src": "230:126:6"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "498:39:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 822,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "516:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 823,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "520:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "516:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 826,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "528:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "516:13:6",
													"trueExpression": {
														"id": 825,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "524:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 821,
												"id": 828,
												"nodeType": "Return",
												"src": "509:20:6"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "364:61:6",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "440:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "452:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "444:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "463:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "455:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:22:6"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "489:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:9:6"
									},
									"scope": 1671,
									"src": "431:106:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "680:39:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 840,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "698:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 841,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "702:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "698:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 844,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "710:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "698:13:6",
													"trueExpression": {
														"id": 843,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "706:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 839,
												"id": 846,
												"nodeType": "Return",
												"src": "691:20:6"
											}
										]
									},
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "545:62:6",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "622:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "634:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "626:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "626:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "645:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "637:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:22:6"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "671:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "670:9:6"
									},
									"scope": 1671,
									"src": "613:106:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "909:85:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 858,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "966:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 859,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "970:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "966:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 861,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "965:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 862,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 851,
																		"src": "976:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 863,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 853,
																		"src": "980:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "976:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 865,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "975:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "985:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "975:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "965:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 857,
												"id": 869,
												"nodeType": "Return",
												"src": "958:28:6"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "727:105:6",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "847:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "863:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "855:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "874:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "866:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:22:6"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "900:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "899:9:6"
									},
									"scope": 1671,
									"src": "838:156:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "1272:126:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 881,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "1362:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1367:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1362:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 885,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 874,
																			"src": "1376:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1380:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1376:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 888,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1375:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 889,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "1385:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1375:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1389:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1375:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1362:28:6",
													"trueExpression": {
														"hexValue": "30",
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1371:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 880,
												"id": 894,
												"nodeType": "Return",
												"src": "1355:35:6"
											}
										]
									},
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "1002:193:6",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1210:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1226:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1218:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1218:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1237:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1229:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1217:22:6"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1263:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:9:6"
									},
									"scope": 1671,
									"src": "1201:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "1819:3898:6",
										"statements": [
											{
												"id": 1017,
												"nodeType": "UncheckedBlock",
												"src": "1830:3880:6",
												"statements": [
													{
														"assignments": [
															909
														],
														"declarations": [
															{
																"constant": false,
																"id": 909,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2163:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1017,
																"src": "2155:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 908,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2155:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 910,
														"nodeType": "VariableDeclarationStatement",
														"src": "2155:13:6"
													},
													{
														"assignments": [
															912
														],
														"declarations": [
															{
																"constant": false,
																"id": 912,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2236:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 1017,
																"src": "2228:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 911,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2228:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 913,
														"nodeType": "VariableDeclarationStatement",
														"src": "2228:13:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2309:161:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2328:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2345:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2348:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2355:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2351:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2351:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2338:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2338:20:6"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2332:2:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2376:18:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2389:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2392:1:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2385:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2385:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2376:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2412:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2429:2:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2433:5:6"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2425:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2425:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2444:2:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2448:5:6"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2441:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2441:13:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2421:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2421:34:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2412:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 909,
																"isOffset": false,
																"isSlot": false,
																"src": "2376:5:6",
																"valueSize": 1
															},
															{
																"declaration": 909,
																"isOffset": false,
																"isSlot": false,
																"src": "2433:5:6",
																"valueSize": 1
															},
															{
																"declaration": 909,
																"isOffset": false,
																"isSlot": false,
																"src": "2448:5:6",
																"valueSize": 1
															},
															{
																"declaration": 912,
																"isOffset": false,
																"isSlot": false,
																"src": "2412:5:6",
																"valueSize": 1
															},
															{
																"declaration": 899,
																"isOffset": false,
																"isSlot": false,
																"src": "2345:1:6",
																"valueSize": 1
															},
															{
																"declaration": 899,
																"isOffset": false,
																"isSlot": false,
																"src": "2389:1:6",
																"valueSize": 1
															},
															{
																"declaration": 901,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:1:6",
																"valueSize": 1
															},
															{
																"declaration": 901,
																"isOffset": false,
																"isSlot": false,
																"src": "2392:1:6",
																"valueSize": 1
															}
														],
														"id": 914,
														"nodeType": "InlineAssembly",
														"src": "2300:170:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 915,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "2554:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2563:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2554:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 923,
														"nodeType": "IfStatement",
														"src": "2550:77:6",
														"trueBody": {
															"id": 922,
															"nodeType": "Block",
															"src": "2566:61:6",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 918,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "2592:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 919,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 903,
																			"src": "2600:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2592:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 907,
																	"id": 921,
																	"nodeType": "Return",
																	"src": "2585:26:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 925,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "2740:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 926,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "2754:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2740:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2761:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 924,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2732:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2732:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 930,
														"nodeType": "ExpressionStatement",
														"src": "2732:53:6"
													},
													{
														"assignments": [
															932
														],
														"declarations": [
															{
																"constant": false,
																"id": 932,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3056:9:6",
																"nodeType": "VariableDeclaration",
																"scope": 1017,
																"src": "3048:17:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 931,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3048:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 933,
														"nodeType": "VariableDeclarationStatement",
														"src": "3048:17:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3089:298:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3160:38:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3180:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3183:1:6"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3186:11:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3173:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3173:25:6"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3160:9:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3283:41:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3296:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3306:9:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3317:5:6"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3303:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3303:20:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3292:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3292:32:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3283:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3342:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3355:5:6"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3362:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3342:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 903,
																"isOffset": false,
																"isSlot": false,
																"src": "3186:11:6",
																"valueSize": 1
															},
															{
																"declaration": 909,
																"isOffset": false,
																"isSlot": false,
																"src": "3317:5:6",
																"valueSize": 1
															},
															{
																"declaration": 909,
																"isOffset": false,
																"isSlot": false,
																"src": "3342:5:6",
																"valueSize": 1
															},
															{
																"declaration": 909,
																"isOffset": false,
																"isSlot": false,
																"src": "3355:5:6",
																"valueSize": 1
															},
															{
																"declaration": 912,
																"isOffset": false,
																"isSlot": false,
																"src": "3283:5:6",
																"valueSize": 1
															},
															{
																"declaration": 912,
																"isOffset": false,
																"isSlot": false,
																"src": "3296:5:6",
																"valueSize": 1
															},
															{
																"declaration": 932,
																"isOffset": false,
																"isSlot": false,
																"src": "3160:9:6",
																"valueSize": 1
															},
															{
																"declaration": 932,
																"isOffset": false,
																"isSlot": false,
																"src": "3306:9:6",
																"valueSize": 1
															},
															{
																"declaration": 932,
																"isOffset": false,
																"isSlot": false,
																"src": "3362:9:6",
																"valueSize": 1
															},
															{
																"declaration": 899,
																"isOffset": false,
																"isSlot": false,
																"src": "3180:1:6",
																"valueSize": 1
															},
															{
																"declaration": 901,
																"isOffset": false,
																"isSlot": false,
																"src": "3183:1:6",
																"valueSize": 1
															}
														],
														"id": 934,
														"nodeType": "InlineAssembly",
														"src": "3080:307:6"
													},
													{
														"assignments": [
															936
														],
														"declarations": [
															{
																"constant": false,
																"id": 936,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3708:4:6",
																"nodeType": "VariableDeclaration",
																"scope": 1017,
																"src": "3700:12:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 935,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3700:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 944,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 937,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 903,
																"src": "3715:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3730:12:6",
																			"subExpression": {
																				"id": 938,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 903,
																				"src": "3731:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3745:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3730:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 942,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3729:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3715:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3700:47:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3771:371:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3838:37:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3857:11:6"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3853:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3853:22:6"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3838:11:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3945:25:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3958:5:6"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3965:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3954:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3954:16:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3945:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4088:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4108:1:6",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4111:4:6"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4104:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4104:12:6"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4118:4:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4100:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4100:23:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4096:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4096:31:6"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4088:4:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 903,
																"isOffset": false,
																"isSlot": false,
																"src": "3838:11:6",
																"valueSize": 1
															},
															{
																"declaration": 903,
																"isOffset": false,
																"isSlot": false,
																"src": "3857:11:6",
																"valueSize": 1
															},
															{
																"declaration": 909,
																"isOffset": false,
																"isSlot": false,
																"src": "3945:5:6",
																"valueSize": 1
															},
															{
																"declaration": 909,
																"isOffset": false,
																"isSlot": false,
																"src": "3958:5:6",
																"valueSize": 1
															},
															{
																"declaration": 936,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:6",
																"valueSize": 1
															},
															{
																"declaration": 936,
																"isOffset": false,
																"isSlot": false,
																"src": "3965:4:6",
																"valueSize": 1
															},
															{
																"declaration": 936,
																"isOffset": false,
																"isSlot": false,
																"src": "4088:4:6",
																"valueSize": 1
															},
															{
																"declaration": 936,
																"isOffset": false,
																"isSlot": false,
																"src": "4111:4:6",
																"valueSize": 1
															},
															{
																"declaration": 936,
																"isOffset": false,
																"isSlot": false,
																"src": "4118:4:6",
																"valueSize": 1
															}
														],
														"id": 945,
														"nodeType": "InlineAssembly",
														"src": "3762:380:6"
													},
													{
														"expression": {
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 946,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "4211:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 947,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "4220:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 948,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "4228:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4220:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4211:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 951,
														"nodeType": "ExpressionStatement",
														"src": "4211:21:6"
													},
													{
														"assignments": [
															953
														],
														"declarations": [
															{
																"constant": false,
																"id": 953,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4563:7:6",
																"nodeType": "VariableDeclaration",
																"scope": 1017,
																"src": "4555:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 952,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4555:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 960,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4574:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 955,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 903,
																			"src": "4578:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4574:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 957,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4573:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4593:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4573:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4555:39:6"
													},
													{
														"expression": {
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 961,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "4815:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4826:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 963,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "4830:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 964,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "4844:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4830:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4826:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4815:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 968,
														"nodeType": "ExpressionStatement",
														"src": "4815:36:6"
													},
													{
														"expression": {
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 969,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "4885:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4896:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 971,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "4900:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 972,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "4914:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4900:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4896:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4885:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 976,
														"nodeType": "ExpressionStatement",
														"src": "4885:36:6"
													},
													{
														"expression": {
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 977,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "4956:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4967:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 979,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "4971:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 980,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "4985:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4971:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4967:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4956:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 984,
														"nodeType": "ExpressionStatement",
														"src": "4956:36:6"
													},
													{
														"expression": {
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 985,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "5027:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5038:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 987,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "5042:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 988,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "5056:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5042:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5038:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5027:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 992,
														"nodeType": "ExpressionStatement",
														"src": "5027:36:6"
													},
													{
														"expression": {
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 993,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "5098:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5109:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 995,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "5113:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 996,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "5127:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5113:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5109:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5098:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1000,
														"nodeType": "ExpressionStatement",
														"src": "5098:36:6"
													},
													{
														"expression": {
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1001,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "5170:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5181:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1003,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "5185:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1004,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "5199:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5185:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5181:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5170:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1008,
														"nodeType": "ExpressionStatement",
														"src": "5170:36:6"
													},
													{
														"expression": {
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1009,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "5646:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1010,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "5655:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1011,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "5663:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5655:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5646:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1014,
														"nodeType": "ExpressionStatement",
														"src": "5646:24:6"
													},
													{
														"expression": {
															"id": 1015,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "5692:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 907,
														"id": 1016,
														"nodeType": "Return",
														"src": "5685:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "1406:309:6",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1730:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1745:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1737:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1756:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1748:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1767:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1759:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1736:43:6"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1811:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1803:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1802:16:6"
									},
									"scope": 1671,
									"src": "1721:3996:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "5964:195:6",
										"statements": [
											{
												"assignments": [
													1035
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5983:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1062,
														"src": "5975:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1034,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5975:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "5999:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1038,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "6002:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1039,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "6005:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1036,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1019,
															1063
														],
														"referencedDeclaration": 1019,
														"src": "5992:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5992:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5975:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$812",
															"typeString": "enum Math.Rounding"
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1042,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "6032:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$812",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1043,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 812,
																"src": "6044:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$812_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6053:2:6",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 810,
															"src": "6044:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$812",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6032:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1047,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "6066:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1048,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "6069:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1049,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "6072:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1046,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6059:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6059:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6087:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6059:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6032:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1059,
												"nodeType": "IfStatement",
												"src": "6028:100:6",
												"trueBody": {
													"id": 1058,
													"nodeType": "Block",
													"src": "6090:38:6",
													"statements": [
														{
															"expression": {
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1054,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "6105:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6115:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6105:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1057,
															"nodeType": "ExpressionStatement",
															"src": "6105:11:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1060,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1035,
													"src": "6145:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1033,
												"id": 1061,
												"nodeType": "Return",
												"src": "6138:13:6"
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "5725:123:6",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5863:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5878:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "5870:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5870:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5889:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "5881:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5900:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "5892:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5922:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "5913:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$812",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1028,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1027,
														"name": "Rounding",
														"nameLocations": [
															"5913:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 812,
														"src": "5913:8:6"
													},
													"referencedDeclaration": 812,
													"src": "5913:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$812",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5869:62:6"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "5955:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5954:9:6"
									},
									"scope": 1671,
									"src": "5854:305:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "6442:1616:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1071,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "6457:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6462:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6457:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1077,
												"nodeType": "IfStatement",
												"src": "6453:47:6",
												"trueBody": {
													"id": 1076,
													"nodeType": "Block",
													"src": "6465:35:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6487:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1070,
															"id": 1075,
															"nodeType": "Return",
															"src": "6480:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													1079
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7199:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1174,
														"src": "7191:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1078,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7191:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7208:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1082,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "7219:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1081,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1343,
																			1379
																		],
																		"referencedDeclaration": 1343,
																		"src": "7214:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7214:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7225:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7214:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1086,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7213:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7208:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7191:36:6"
											},
											{
												"id": 1173,
												"nodeType": "UncheckedBlock",
												"src": "7634:417:6",
												"statements": [
													{
														"expression": {
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1089,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "7659:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1090,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "7669:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1093,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1091,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1066,
																					"src": "7678:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1092,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "7682:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7678:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7669:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1095,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7668:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7693:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7668:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7659:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1099,
														"nodeType": "ExpressionStatement",
														"src": "7659:35:6"
													},
													{
														"expression": {
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1100,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "7709:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1101,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "7719:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1104,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1102,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1066,
																					"src": "7728:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1103,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "7732:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7728:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7719:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1106,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7718:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7743:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7718:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7709:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1110,
														"nodeType": "ExpressionStatement",
														"src": "7709:35:6"
													},
													{
														"expression": {
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1111,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "7759:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1112,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "7769:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1113,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1066,
																					"src": "7778:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1114,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "7782:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7778:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7769:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1117,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7768:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7793:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7768:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7759:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1121,
														"nodeType": "ExpressionStatement",
														"src": "7759:35:6"
													},
													{
														"expression": {
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1122,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "7809:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1123,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "7819:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1124,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1066,
																					"src": "7828:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1125,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "7832:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7828:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7819:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1128,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7818:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7843:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7818:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7809:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1132,
														"nodeType": "ExpressionStatement",
														"src": "7809:35:6"
													},
													{
														"expression": {
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1133,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "7859:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1134,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "7869:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1135,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1066,
																					"src": "7878:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1136,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "7882:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7878:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7869:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1139,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7868:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7893:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7868:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7859:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1143,
														"nodeType": "ExpressionStatement",
														"src": "7859:35:6"
													},
													{
														"expression": {
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1144,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "7909:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1145,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "7919:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1146,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1066,
																					"src": "7928:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1147,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "7932:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7928:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7919:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1150,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7918:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7943:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7918:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7909:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1154,
														"nodeType": "ExpressionStatement",
														"src": "7909:35:6"
													},
													{
														"expression": {
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1155,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "7959:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1156,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "7969:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1157,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1066,
																					"src": "7978:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1158,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "7982:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7978:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7969:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1161,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7968:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7993:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7968:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7959:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1165,
														"nodeType": "ExpressionStatement",
														"src": "7959:35:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1167,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "8020:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1168,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1066,
																		"src": "8028:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1169,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "8032:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8028:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1166,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "8016:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8016:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1070,
														"id": 1172,
														"nodeType": "Return",
														"src": "8009:30:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "6167:212:6",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6394:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6407:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "6399:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:11:6"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "6433:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6433:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6432:9:6"
									},
									"scope": 1671,
									"src": "6385:1673:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "8239:166:6",
										"statements": [
											{
												"id": 1209,
												"nodeType": "UncheckedBlock",
												"src": "8250:148:6",
												"statements": [
													{
														"assignments": [
															1187
														],
														"declarations": [
															{
																"constant": false,
																"id": 1187,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8283:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1209,
																"src": "8275:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1186,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8275:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1191,
														"initialValue": {
															"arguments": [
																{
																	"id": 1189,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "8297:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1188,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1175,
																	1211
																],
																"referencedDeclaration": 1175,
																"src": "8292:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8292:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8275:24:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1192,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "8321:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$812",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1193,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1181,
																					"src": "8331:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$812",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1194,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 812,
																						"src": "8343:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$812_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1195,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8352:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 810,
																					"src": "8343:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$812",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8331:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1199,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1197,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1187,
																						"src": "8358:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1198,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1187,
																						"src": "8367:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8358:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1200,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1178,
																					"src": "8376:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8358:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8331:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8384:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8331:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8380:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1206,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8330:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8321:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1185,
														"id": 1208,
														"nodeType": "Return",
														"src": "8314:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "8066:91:6",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8172:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8185:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "8177:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8177:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8197:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "8188:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$812",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1180,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1179,
														"name": "Rounding",
														"nameLocations": [
															"8188:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 812,
														"src": "8188:8:6"
													},
													"referencedDeclaration": 812,
													"src": "8188:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$812",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8176:30:6"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "8230:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8230:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8229:9:6"
									},
									"scope": 1671,
									"src": "8163:242:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "8596:958:6",
										"statements": [
											{
												"assignments": [
													1220
												],
												"declarations": [
													{
														"constant": false,
														"id": 1220,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8615:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1342,
														"src": "8607:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1219,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8607:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1222,
												"initialValue": {
													"hexValue": "30",
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8624:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8607:18:6"
											},
											{
												"id": 1339,
												"nodeType": "UncheckedBlock",
												"src": "8636:887:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1223,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "8665:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8674:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8665:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8680:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8665:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1237,
														"nodeType": "IfStatement",
														"src": "8661:102:6",
														"trueBody": {
															"id": 1236,
															"nodeType": "Block",
															"src": "8683:80:6",
															"statements": [
																{
																	"expression": {
																		"id": 1230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1228,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1214,
																			"src": "8702:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8712:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8702:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1231,
																	"nodeType": "ExpressionStatement",
																	"src": "8702:13:6"
																},
																{
																	"expression": {
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1232,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1220,
																			"src": "8734:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8744:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8734:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1235,
																	"nodeType": "ExpressionStatement",
																	"src": "8734:13:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1238,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "8781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8790:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8781:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8795:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8781:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1252,
														"nodeType": "IfStatement",
														"src": "8777:99:6",
														"trueBody": {
															"id": 1251,
															"nodeType": "Block",
															"src": "8798:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1243,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1214,
																			"src": "8817:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8827:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8817:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1246,
																	"nodeType": "ExpressionStatement",
																	"src": "8817:12:6"
																},
																{
																	"expression": {
																		"id": 1249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1247,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1220,
																			"src": "8848:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8858:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8848:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1250,
																	"nodeType": "ExpressionStatement",
																	"src": "8848:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1253,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "8894:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8903:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8894:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8908:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8894:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1267,
														"nodeType": "IfStatement",
														"src": "8890:99:6",
														"trueBody": {
															"id": 1266,
															"nodeType": "Block",
															"src": "8911:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1258,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1214,
																			"src": "8930:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8940:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8930:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1261,
																	"nodeType": "ExpressionStatement",
																	"src": "8930:12:6"
																},
																{
																	"expression": {
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1262,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1220,
																			"src": "8961:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8971:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8961:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1265,
																	"nodeType": "ExpressionStatement",
																	"src": "8961:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1268,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "9007:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9016:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9007:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9021:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9007:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1282,
														"nodeType": "IfStatement",
														"src": "9003:99:6",
														"trueBody": {
															"id": 1281,
															"nodeType": "Block",
															"src": "9024:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1273,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1214,
																			"src": "9043:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9053:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9043:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1276,
																	"nodeType": "ExpressionStatement",
																	"src": "9043:12:6"
																},
																{
																	"expression": {
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1277,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1220,
																			"src": "9074:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9084:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9074:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1280,
																	"nodeType": "ExpressionStatement",
																	"src": "9074:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1283,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "9120:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9129:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9120:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9133:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9120:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1297,
														"nodeType": "IfStatement",
														"src": "9116:96:6",
														"trueBody": {
															"id": 1296,
															"nodeType": "Block",
															"src": "9136:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1288,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1214,
																			"src": "9155:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9155:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1291,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:11:6"
																},
																{
																	"expression": {
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1292,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1220,
																			"src": "9185:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9195:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9185:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1295,
																	"nodeType": "ExpressionStatement",
																	"src": "9185:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1298,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "9230:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9239:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9230:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9243:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9230:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1312,
														"nodeType": "IfStatement",
														"src": "9226:96:6",
														"trueBody": {
															"id": 1311,
															"nodeType": "Block",
															"src": "9246:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1303,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1214,
																			"src": "9265:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9275:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9265:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1306,
																	"nodeType": "ExpressionStatement",
																	"src": "9265:11:6"
																},
																{
																	"expression": {
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1307,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1220,
																			"src": "9295:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9305:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9295:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1310,
																	"nodeType": "ExpressionStatement",
																	"src": "9295:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1313,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "9340:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9349:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9340:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9353:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9340:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1327,
														"nodeType": "IfStatement",
														"src": "9336:96:6",
														"trueBody": {
															"id": 1326,
															"nodeType": "Block",
															"src": "9356:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1318,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1214,
																			"src": "9375:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9385:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9375:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1321,
																	"nodeType": "ExpressionStatement",
																	"src": "9375:11:6"
																},
																{
																	"expression": {
																		"id": 1324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1322,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1220,
																			"src": "9405:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9415:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9405:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1325,
																	"nodeType": "ExpressionStatement",
																	"src": "9405:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1328,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "9450:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9459:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9450:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9463:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9450:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1338,
														"nodeType": "IfStatement",
														"src": "9446:66:6",
														"trueBody": {
															"id": 1337,
															"nodeType": "Block",
															"src": "9466:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1333,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1220,
																			"src": "9485:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9495:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9485:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1336,
																	"nodeType": "ExpressionStatement",
																	"src": "9485:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1340,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1220,
													"src": "9540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1218,
												"id": 1341,
												"nodeType": "Return",
												"src": "9533:13:6"
											}
										]
									},
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "8413:116:6",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8544:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8557:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "8549:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8549:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8548:15:6"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "8587:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8587:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8586:9:6"
									},
									"scope": 1671,
									"src": "8535:1019:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "9793:170:6",
										"statements": [
											{
												"id": 1377,
												"nodeType": "UncheckedBlock",
												"src": "9804:152:6",
												"statements": [
													{
														"assignments": [
															1355
														],
														"declarations": [
															{
																"constant": false,
																"id": 1355,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9837:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1377,
																"src": "9829:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1354,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9829:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1359,
														"initialValue": {
															"arguments": [
																{
																	"id": 1357,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "9851:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1356,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1343,
																	1379
																],
																"referencedDeclaration": 1343,
																"src": "9846:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9846:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9829:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1360,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "9879:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$812",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1361,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1349,
																					"src": "9889:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$812",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1362,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 812,
																						"src": "9901:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$812_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1363,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9910:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 810,
																					"src": "9901:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$812",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9889:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1367,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1365,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9916:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1366,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1355,
																						"src": "9921:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9916:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1368,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1346,
																					"src": "9930:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9916:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9889:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9942:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9889:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9938:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1374,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9888:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9879:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1353,
														"id": 1376,
														"nodeType": "Return",
														"src": "9872:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "9562:145:6",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9722:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9735:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "9727:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9727:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9751:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "9742:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$812",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1348,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1347,
														"name": "Rounding",
														"nameLocations": [
															"9742:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 812,
														"src": "9742:8:6"
													},
													"referencedDeclaration": 812,
													"src": "9742:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$812",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9726:34:6"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "9784:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9784:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9783:9:6"
									},
									"scope": 1671,
									"src": "9713:250:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "10156:886:6",
										"statements": [
											{
												"assignments": [
													1388
												],
												"declarations": [
													{
														"constant": false,
														"id": 1388,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10175:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1507,
														"src": "10167:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1387,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10167:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1390,
												"initialValue": {
													"hexValue": "30",
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10184:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10167:18:6"
											},
											{
												"id": 1504,
												"nodeType": "UncheckedBlock",
												"src": "10196:815:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1391,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10225:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10234:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10240:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10234:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10225:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1407,
														"nodeType": "IfStatement",
														"src": "10221:106:6",
														"trueBody": {
															"id": 1406,
															"nodeType": "Block",
															"src": "10244:83:6",
															"statements": [
																{
																	"expression": {
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1396,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1382,
																			"src": "10263:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10272:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1398,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10278:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10272:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10263:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1401,
																	"nodeType": "ExpressionStatement",
																	"src": "10263:17:6"
																},
																{
																	"expression": {
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1402,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1388,
																			"src": "10299:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10309:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10299:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1405,
																	"nodeType": "ExpressionStatement",
																	"src": "10299:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1408,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10345:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10354:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10360:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10354:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10345:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1424,
														"nodeType": "IfStatement",
														"src": "10341:106:6",
														"trueBody": {
															"id": 1423,
															"nodeType": "Block",
															"src": "10364:83:6",
															"statements": [
																{
																	"expression": {
																		"id": 1417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1413,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1382,
																			"src": "10383:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10392:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1415,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10398:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10392:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10383:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1418,
																	"nodeType": "ExpressionStatement",
																	"src": "10383:17:6"
																},
																{
																	"expression": {
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1419,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1388,
																			"src": "10419:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10419:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1422,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1425,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10465:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10474:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10480:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10474:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10465:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1441,
														"nodeType": "IfStatement",
														"src": "10461:106:6",
														"trueBody": {
															"id": 1440,
															"nodeType": "Block",
															"src": "10484:83:6",
															"statements": [
																{
																	"expression": {
																		"id": 1434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1430,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1382,
																			"src": "10503:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10512:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1432,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10518:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10512:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10503:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1435,
																	"nodeType": "ExpressionStatement",
																	"src": "10503:17:6"
																},
																{
																	"expression": {
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1436,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1388,
																			"src": "10539:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10549:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10539:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1439,
																	"nodeType": "ExpressionStatement",
																	"src": "10539:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1442,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10585:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10594:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10600:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10594:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10585:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1458,
														"nodeType": "IfStatement",
														"src": "10581:103:6",
														"trueBody": {
															"id": 1457,
															"nodeType": "Block",
															"src": "10603:81:6",
															"statements": [
																{
																	"expression": {
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1447,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1382,
																			"src": "10622:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10631:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10637:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10631:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10622:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1452,
																	"nodeType": "ExpressionStatement",
																	"src": "10622:16:6"
																},
																{
																	"expression": {
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1453,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1388,
																			"src": "10657:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10667:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10657:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1456,
																	"nodeType": "ExpressionStatement",
																	"src": "10657:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1459,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10702:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10711:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10717:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10711:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10702:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1475,
														"nodeType": "IfStatement",
														"src": "10698:103:6",
														"trueBody": {
															"id": 1474,
															"nodeType": "Block",
															"src": "10720:81:6",
															"statements": [
																{
																	"expression": {
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1464,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1382,
																			"src": "10739:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10748:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10754:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10748:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10739:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1469,
																	"nodeType": "ExpressionStatement",
																	"src": "10739:16:6"
																},
																{
																	"expression": {
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1470,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1388,
																			"src": "10774:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10784:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10774:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1473,
																	"nodeType": "ExpressionStatement",
																	"src": "10774:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1476,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10819:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10828:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10834:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10828:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10819:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1492,
														"nodeType": "IfStatement",
														"src": "10815:103:6",
														"trueBody": {
															"id": 1491,
															"nodeType": "Block",
															"src": "10837:81:6",
															"statements": [
																{
																	"expression": {
																		"id": 1485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1481,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1382,
																			"src": "10856:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1482,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10865:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10871:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10865:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10856:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1486,
																	"nodeType": "ExpressionStatement",
																	"src": "10856:16:6"
																},
																{
																	"expression": {
																		"id": 1489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1487,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1388,
																			"src": "10891:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10901:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10891:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1490,
																	"nodeType": "ExpressionStatement",
																	"src": "10891:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1493,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "10936:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10945:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10951:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10945:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10936:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1503,
														"nodeType": "IfStatement",
														"src": "10932:68:6",
														"trueBody": {
															"id": 1502,
															"nodeType": "Block",
															"src": "10954:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 1500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1498,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1388,
																			"src": "10973:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10973:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1501,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1505,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1388,
													"src": "11028:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1386,
												"id": 1506,
												"nodeType": "Return",
												"src": "11021:13:6"
											}
										]
									},
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "9971:117:6",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10103:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10117:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "10109:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10109:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10108:15:6"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "10147:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10147:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10146:9:6"
									},
									"scope": 1671,
									"src": "10094:948:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1543,
										"nodeType": "Block",
										"src": "11283:172:6",
										"statements": [
											{
												"id": 1542,
												"nodeType": "UncheckedBlock",
												"src": "11294:154:6",
												"statements": [
													{
														"assignments": [
															1520
														],
														"declarations": [
															{
																"constant": false,
																"id": 1520,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11327:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1542,
																"src": "11319:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1519,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11319:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1524,
														"initialValue": {
															"arguments": [
																{
																	"id": 1522,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1511,
																	"src": "11342:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1521,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1508,
																	1544
																],
																"referencedDeclaration": 1508,
																"src": "11336:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11336:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11319:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1525,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1520,
																"src": "11370:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$812",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1529,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1526,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1514,
																					"src": "11380:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$812",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1527,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 812,
																						"src": "11392:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$812_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1528,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11401:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 810,
																					"src": "11392:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$812",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11380:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1532,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1530,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11407:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1531,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1520,
																						"src": "11413:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11407:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1533,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1511,
																					"src": "11422:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11407:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11380:47:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11380:55:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11430:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1539,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11379:57:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11370:66:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1518,
														"id": 1541,
														"nodeType": "Return",
														"src": "11363:73:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "11050:146:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11211:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11225:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "11217:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11217:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11241:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "11232:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$812",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1513,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1512,
														"name": "Rounding",
														"nameLocations": [
															"11232:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 812,
														"src": "11232:8:6"
													},
													"referencedDeclaration": 812,
													"src": "11232:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$812",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11216:34:6"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "11274:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11274:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11273:9:6"
									},
									"scope": 1671,
									"src": "11202:253:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "11777:624:6",
										"statements": [
											{
												"assignments": [
													1553
												],
												"declarations": [
													{
														"constant": false,
														"id": 1553,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11796:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1630,
														"src": "11788:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1552,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11788:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1555,
												"initialValue": {
													"hexValue": "30",
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11805:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11788:18:6"
											},
											{
												"id": 1627,
												"nodeType": "UncheckedBlock",
												"src": "11817:553:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1556,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "11846:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11855:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11846:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11861:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11846:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1570,
														"nodeType": "IfStatement",
														"src": "11842:101:6",
														"trueBody": {
															"id": 1569,
															"nodeType": "Block",
															"src": "11864:79:6",
															"statements": [
																{
																	"expression": {
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1561,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1547,
																			"src": "11883:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11893:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11883:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1564,
																	"nodeType": "ExpressionStatement",
																	"src": "11883:13:6"
																},
																{
																	"expression": {
																		"id": 1567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1565,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1553,
																			"src": "11915:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11925:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11915:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1568,
																	"nodeType": "ExpressionStatement",
																	"src": "11915:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1571,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "11961:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11970:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11961:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11975:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11961:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1585,
														"nodeType": "IfStatement",
														"src": "11957:98:6",
														"trueBody": {
															"id": 1584,
															"nodeType": "Block",
															"src": "11978:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1576,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1547,
																			"src": "11997:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12007:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11997:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1579,
																	"nodeType": "ExpressionStatement",
																	"src": "11997:12:6"
																},
																{
																	"expression": {
																		"id": 1582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1580,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1553,
																			"src": "12028:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12028:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1583,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1586,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "12073:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12082:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12073:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12087:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12073:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1600,
														"nodeType": "IfStatement",
														"src": "12069:98:6",
														"trueBody": {
															"id": 1599,
															"nodeType": "Block",
															"src": "12090:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1591,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1547,
																			"src": "12109:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12119:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12109:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1594,
																	"nodeType": "ExpressionStatement",
																	"src": "12109:12:6"
																},
																{
																	"expression": {
																		"id": 1597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1595,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1553,
																			"src": "12140:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12150:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12140:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1598,
																	"nodeType": "ExpressionStatement",
																	"src": "12140:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1601,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "12185:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12194:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12185:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12199:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12185:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1615,
														"nodeType": "IfStatement",
														"src": "12181:98:6",
														"trueBody": {
															"id": 1614,
															"nodeType": "Block",
															"src": "12202:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1606,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1547,
																			"src": "12221:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12231:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12221:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1609,
																	"nodeType": "ExpressionStatement",
																	"src": "12221:12:6"
																},
																{
																	"expression": {
																		"id": 1612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1610,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1553,
																			"src": "12252:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12262:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12252:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1613,
																	"nodeType": "ExpressionStatement",
																	"src": "12252:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1616,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "12297:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12306:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12297:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12310:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12297:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1626,
														"nodeType": "IfStatement",
														"src": "12293:66:6",
														"trueBody": {
															"id": 1625,
															"nodeType": "Block",
															"src": "12313:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 1623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1621,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1553,
																			"src": "12332:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12342:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12332:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1624,
																	"nodeType": "ExpressionStatement",
																	"src": "12332:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1628,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1553,
													"src": "12387:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1551,
												"id": 1629,
												"nodeType": "Return",
												"src": "12380:13:6"
											}
										]
									},
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "11463:245:6",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11723:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11738:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "11730:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11729:15:6"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "11768:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11767:9:6"
									},
									"scope": 1671,
									"src": "11714:687:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "12644:179:6",
										"statements": [
											{
												"id": 1668,
												"nodeType": "UncheckedBlock",
												"src": "12655:161:6",
												"statements": [
													{
														"assignments": [
															1643
														],
														"declarations": [
															{
																"constant": false,
																"id": 1643,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12688:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1668,
																"src": "12680:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1642,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12680:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1647,
														"initialValue": {
															"arguments": [
																{
																	"id": 1645,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1634,
																	"src": "12704:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1644,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1631,
																	1670
																],
																"referencedDeclaration": 1631,
																"src": "12697:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12697:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12680:30:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1648,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "12732:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$812",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1649,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1637,
																					"src": "12742:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$812",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1650,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 812,
																						"src": "12754:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$812_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12763:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 810,
																					"src": "12754:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$812",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12742:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1660,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1658,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1653,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12769:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1656,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1654,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1643,
																									"src": "12775:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1655,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12785:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12775:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1657,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12774:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12769:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1659,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1634,
																					"src": "12790:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12769:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12742:53:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12802:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12742:61:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12798:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1665,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12741:63:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12732:72:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1641,
														"id": 1667,
														"nodeType": "Return",
														"src": "12725:79:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1632,
										"nodeType": "StructuredDocumentation",
										"src": "12409:147:6",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12571:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12586:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "12578:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12578:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12602:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "12593:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$812",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1636,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1635,
														"name": "Rounding",
														"nameLocations": [
															"12593:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 812,
														"src": "12593:8:6"
													},
													"referencedDeclaration": 812,
													"src": "12593:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$812",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12577:34:6"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "12635:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12635:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12634:9:6"
									},
									"scope": 1671,
									"src": "12562:261:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1672,
							"src": "210:12616:6",
							"usedErrors": []
						}
					],
					"src": "106:12720:6"
				},
				"id": 6
			},
			"src/libraries/SignedMath.sol": {
				"ast": {
					"absolutePath": "src/libraries/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1776
						]
					},
					"id": 1777,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1673,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1674,
								"nodeType": "StructuredDocumentation",
								"src": "139:82:7",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1776,
							"linearizedBaseContracts": [
								1776
							],
							"name": "SignedMath",
							"nameLocation": "231:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "387:39:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1684,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "405:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1685,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1679,
															"src": "409:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "405:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1688,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "417:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "405:13:7",
													"trueExpression": {
														"id": 1687,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1677,
														"src": "413:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1683,
												"id": 1690,
												"nodeType": "Return",
												"src": "398:20:7"
											}
										]
									},
									"documentation": {
										"id": 1675,
										"nodeType": "StructuredDocumentation",
										"src": "249:68:7",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "332:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "343:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "336:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1676,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "336:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "353:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "346:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1678,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "346:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "335:20:7"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "379:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1681,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "379:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:8:7"
									},
									"scope": 1776,
									"src": "323:103:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "573:39:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1702,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "591:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1703,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "595:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "591:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1706,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "603:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "591:13:7",
													"trueExpression": {
														"id": 1705,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1695,
														"src": "599:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1701,
												"id": 1708,
												"nodeType": "Return",
												"src": "584:20:7"
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "434:69:7",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "518:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "529:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "522:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1694,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "522:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "539:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "532:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1696,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "532:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:20:7"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "565:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1699,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:8:7"
									},
									"scope": 1776,
									"src": "509:103:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "823:166:7",
										"statements": [
											{
												"assignments": [
													1721
												],
												"declarations": [
													{
														"constant": false,
														"id": 1721,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "894:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 1753,
														"src": "887:8:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1720,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "887:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1734,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1722,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "899:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1723,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "903:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "899:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1725,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "898:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1726,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1713,
																				"src": "910:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1727,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1715,
																				"src": "914:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "910:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1729,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "909:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "920:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "909:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1732,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "908:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "898:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "887:35:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1735,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "940:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1740,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1721,
																						"src": "960:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1739,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "952:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1738,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "952:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1741,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "952:10:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1742,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "966:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "952:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "945:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1736,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "945:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "945:25:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1745,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1713,
																				"src": "974:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1746,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1715,
																				"src": "978:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "974:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1748,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "973:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "945:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1750,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "944:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "940:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1719,
												"id": 1752,
												"nodeType": "Return",
												"src": "933:48:7"
											}
										]
									},
									"documentation": {
										"id": 1711,
										"nodeType": "StructuredDocumentation",
										"src": "620:129:7",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "764:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "779:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "772:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1712,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "772:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "789:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "782:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1714,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "782:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:20:7"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "815:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1717,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "815:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:8:7"
									},
									"scope": 1776,
									"src": "755:234:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1774,
										"nodeType": "Block",
										"src": "1138:163:7",
										"statements": [
											{
												"id": 1773,
												"nodeType": "UncheckedBlock",
												"src": "1149:145:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1764,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1757,
																			"src": "1266:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1271:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1266:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1279:2:7",
																		"subExpression": {
																			"id": 1768,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1757,
																			"src": "1280:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1266:15:7",
																	"trueExpression": {
																		"id": 1767,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1757,
																		"src": "1275:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1258:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1762,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1258:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1258:24:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1761,
														"id": 1772,
														"nodeType": "Return",
														"src": "1251:31:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "997:80:7",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1092:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1103:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "1096:8:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1756,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1096:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:10:7"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "1129:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:9:7"
									},
									"scope": 1776,
									"src": "1083:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1777,
							"src": "223:1081:7",
							"usedErrors": []
						}
					],
					"src": "112:1192:7"
				},
				"id": 7
			},
			"src/libraries/Strings.sol": {
				"ast": {
					"absolutePath": "src/libraries/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1671
						],
						"SignedMath": [
							1776
						],
						"Strings": [
							2005
						]
					},
					"id": 2006,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1778,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:8"
						},
						{
							"absolutePath": "src/libraries/Math.sol",
							"file": "./Math.sol",
							"id": 1779,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2006,
							"sourceUnit": 1672,
							"src": "131:20:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/libraries/SignedMath.sol",
							"file": "./SignedMath.sol",
							"id": 1780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2006,
							"sourceUnit": 1777,
							"src": "153:26:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1781,
								"nodeType": "StructuredDocumentation",
								"src": "183:36:8",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2005,
							"linearizedBaseContracts": [
								2005
							],
							"name": "Strings",
							"nameLocation": "229:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1784,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "269:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 2005,
									"src": "244:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1782,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "244:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1783,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "280:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1787,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "328:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2005,
									"src": "305:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1785,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "305:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1786,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "346:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1834,
										"nodeType": "Block",
										"src": "526:645:8",
										"statements": [
											{
												"id": 1833,
												"nodeType": "UncheckedBlock",
												"src": "537:627:8",
												"statements": [
													{
														"assignments": [
															1796
														],
														"declarations": [
															{
																"constant": false,
																"id": 1796,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "570:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1833,
																"src": "562:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1795,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "562:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1803,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1799,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "590:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1797,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1671,
																		"src": "579:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1671_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "584:5:8",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1508,
																	"src": "579:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "579:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "599:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "579:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "562:38:8"
													},
													{
														"assignments": [
															1805
														],
														"declarations": [
															{
																"constant": false,
																"id": 1805,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "629:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1833,
																"src": "615:20:8",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1804,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "615:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1810,
														"initialValue": {
															"arguments": [
																{
																	"id": 1808,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1796,
																	"src": "649:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "638:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1806,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "642:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "638:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "615:41:8"
													},
													{
														"assignments": [
															1812
														],
														"declarations": [
															{
																"constant": false,
																"id": 1812,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "679:3:8",
																"nodeType": "VariableDeclaration",
																"scope": 1833,
																"src": "671:11:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1811,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "671:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1813,
														"nodeType": "VariableDeclarationStatement",
														"src": "671:11:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "754:69:8",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "773:35:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "784:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "796:2:8",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "800:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "792:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "792:15:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "780:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "780:28:8"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:8"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1805,
																"isOffset": false,
																"isSlot": false,
																"src": "784:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1796,
																"isOffset": false,
																"isSlot": false,
																"src": "800:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1812,
																"isOffset": false,
																"isSlot": false,
																"src": "773:3:8",
																"valueSize": 1
															}
														],
														"id": 1814,
														"nodeType": "InlineAssembly",
														"src": "745:78:8"
													},
													{
														"body": {
															"id": 1829,
															"nodeType": "Block",
															"src": "850:275:8",
															"statements": [
																{
																	"expression": {
																		"id": 1817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "869:5:8",
																		"subExpression": {
																			"id": 1816,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1812,
																			"src": "869:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1818,
																	"nodeType": "ExpressionStatement",
																	"src": "869:5:8"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "954:86:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "985:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "999:5:8"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1006:2:8",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "995:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "995:14:8"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "1011:8:8"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "990:4:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "990:30:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "977:7:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "977:44:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "977:44:8"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 1784,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1011:8:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1812,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "985:3:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1790,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "999:5:8",
																			"valueSize": 1
																		}
																	],
																	"id": 1819,
																	"nodeType": "InlineAssembly",
																	"src": "945:95:8"
																},
																{
																	"expression": {
																		"id": 1822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1820,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "1058:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1067:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1058:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1823,
																	"nodeType": "ExpressionStatement",
																	"src": "1058:11:8"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1824,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "1092:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1101:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1092:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1828,
																	"nodeType": "IfStatement",
																	"src": "1088:21:8",
																	"trueBody": {
																		"id": 1827,
																		"nodeType": "Break",
																		"src": "1104:5:8"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "844:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1830,
														"nodeType": "WhileStatement",
														"src": "837:288:8"
													},
													{
														"expression": {
															"id": 1831,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "1146:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1794,
														"id": 1832,
														"nodeType": "Return",
														"src": "1139:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "357:92:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "464:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "481:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "473:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:8"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "511:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1792,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "511:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:15:8"
									},
									"scope": 2005,
									"src": "455:716:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1862,
										"nodeType": "Block",
										"src": "1346:105:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1847,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1838,
																			"src": "1388:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1396:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1388:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1406:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1388:20:8",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1400:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1856,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1838,
																					"src": "1434:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1854,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1776,
																					"src": "1419:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$1776_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1430:3:8",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1775,
																				"src": "1419:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1419:21:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1853,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1835,
																			1863
																		],
																		"referencedDeclaration": 1835,
																		"src": "1410:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1410:31:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1845,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:12:8",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1371:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:71:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1364:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1843,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1364:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1364:79:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1842,
												"id": 1861,
												"nodeType": "Return",
												"src": "1357:86:8"
											}
										]
									},
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "1179:91:8",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1285:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1301:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "1294:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1837,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1294:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:14:8"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "1331:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1840,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1331:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1330:15:8"
									},
									"scope": 2005,
									"src": "1276:175:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1882,
										"nodeType": "Block",
										"src": "1635:104:8",
										"statements": [
											{
												"id": 1881,
												"nodeType": "UncheckedBlock",
												"src": "1646:86:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1872,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1866,
																	"src": "1690:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1875,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1866,
																				"src": "1709:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1873,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1671,
																				"src": "1697:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1671_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1702:6:8",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1631,
																			"src": "1697:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1697:18:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1718:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1697:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1871,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1883,
																	1959,
																	1979
																],
																"referencedDeclaration": 1959,
																"src": "1678:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1678:42:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1870,
														"id": 1880,
														"nodeType": "Return",
														"src": "1671:49:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1864,
										"nodeType": "StructuredDocumentation",
										"src": "1459:96:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1570:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1590:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "1582:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1581:15:8"
									},
									"returnParameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "1620:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1868,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1620:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1619:15:8"
									},
									"scope": 2005,
									"src": "1561:178:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "1957:357:8",
										"statements": [
											{
												"assignments": [
													1894
												],
												"declarations": [
													{
														"constant": false,
														"id": 1894,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1981:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1958,
														"src": "1968:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1893,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1968:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1903,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2000:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1898,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1888,
																	"src": "2004:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2000:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2013:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2000:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1990:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1895,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1994:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1990:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1968:47:8"
											},
											{
												"expression": {
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1904,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "2026:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1906,
														"indexExpression": {
															"hexValue": "30",
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2033:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2026:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1907,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2038:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2026:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "2026:15:8"
											},
											{
												"expression": {
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1910,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "2052:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1912,
														"indexExpression": {
															"hexValue": "31",
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2059:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2052:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2064:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2052:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1915,
												"nodeType": "ExpressionStatement",
												"src": "2052:15:8"
											},
											{
												"body": {
													"id": 1944,
													"nodeType": "Block",
													"src": "2123:86:8",
													"statements": [
														{
															"expression": {
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1930,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1894,
																		"src": "2138:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1932,
																	"indexExpression": {
																		"id": 1931,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1917,
																		"src": "2145:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2138:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1933,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1784,
																		"src": "2150:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1937,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1934,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1886,
																			"src": "2159:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2167:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2159:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2150:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2138:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1939,
															"nodeType": "ExpressionStatement",
															"src": "2138:33:8"
														},
														{
															"expression": {
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1940,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1886,
																	"src": "2186:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2196:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2186:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1943,
															"nodeType": "ExpressionStatement",
															"src": "2186:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1924,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1917,
														"src": "2111:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2115:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2111:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1945,
												"initializationExpression": {
													"assignments": [
														1917
													],
													"declarations": [
														{
															"constant": false,
															"id": 1917,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2091:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1945,
															"src": "2083:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1916,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2083:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1923,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2095:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1919,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1888,
																"src": "2099:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2095:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2108:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2095:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2083:26:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2118:3:8",
														"subExpression": {
															"id": 1927,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "2120:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1929,
													"nodeType": "ExpressionStatement",
													"src": "2118:3:8"
												},
												"nodeType": "ForStatement",
												"src": "2078:131:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1947,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1886,
																"src": "2227:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2236:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2227:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2239:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1946,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2219:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2219:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1952,
												"nodeType": "ExpressionStatement",
												"src": "2219:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1955,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "2299:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1954,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2292:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1953,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2292:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1892,
												"id": 1957,
												"nodeType": "Return",
												"src": "2285:21:8"
											}
										]
									},
									"documentation": {
										"id": 1884,
										"nodeType": "StructuredDocumentation",
										"src": "1747:114:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1876:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1896:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "1888:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1911:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "1903:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:31:8"
									},
									"returnParameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "1942:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1890,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1942:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1941:15:8"
									},
									"scope": 2005,
									"src": "1867:447:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1978,
										"nodeType": "Block",
										"src": "2544:78:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1972,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1962,
																			"src": "2590:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2582:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1970,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2582:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2582:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2574:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1968,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2574:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2574:22:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1975,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "2598:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1967,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1883,
															1959,
															1979
														],
														"referencedDeclaration": 1959,
														"src": "2562:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2562:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1966,
												"id": 1977,
												"nodeType": "Return",
												"src": "2555:59:8"
											}
										]
									},
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "2322:143:8",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2480:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2500:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "2492:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2491:14:8"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "2529:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1964,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2529:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2528:15:8"
									},
									"scope": 2005,
									"src": "2471:151:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2003,
										"nodeType": "Block",
										"src": "2782:68:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1992,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1982,
																		"src": "2816:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2810:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1990,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2810:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2810:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1989,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2800:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2800:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1998,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1984,
																		"src": "2839:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2833:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1996,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2833:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2833:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1995,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2823:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2823:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2800:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1988,
												"id": 2002,
												"nodeType": "Return",
												"src": "2793:49:8"
											}
										]
									},
									"documentation": {
										"id": 1980,
										"nodeType": "StructuredDocumentation",
										"src": "2630:68:8",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2713:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2733:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "2719:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1981,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2719:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2750:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "2736:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1983,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2736:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:34:8"
									},
									"returnParameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "2776:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2776:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2775:6:8"
									},
									"scope": 2005,
									"src": "2704:146:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2006,
							"src": "221:2632:8",
							"usedErrors": []
						}
					],
					"src": "104:2749:8"
				},
				"id": 8
			},
			"src/sHYDT.sol": {
				"ast": {
					"absolutePath": "src/sHYDT.sol",
					"exportedSymbols": {
						"AccessControl": [
							2476
						],
						"Context": [
							2498
						],
						"ERC165": [
							2522
						],
						"ERC20": [
							586
						],
						"IAccessControl": [
							659
						],
						"IERC165": [
							671
						],
						"IERC20": [
							749
						],
						"IERC20Metadata": [
							774
						],
						"IsHYDT": [
							805
						],
						"Math": [
							1671
						],
						"SignedMath": [
							1776
						],
						"Strings": [
							2005
						],
						"sHYDT": [
							2160
						]
					},
					"id": 2161,
					"license": "GNU GPLv3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2007,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:9"
						},
						{
							"absolutePath": "src/extensions/ERC20.sol",
							"file": "./extensions/ERC20.sol",
							"id": 2008,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 587,
							"src": "68:32:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/IsHYDT.sol",
							"file": "./interfaces/IsHYDT.sol",
							"id": 2009,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 806,
							"src": "104:33:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/utils/AccessControl.sol",
							"file": "./utils/AccessControl.sol",
							"id": 2010,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2161,
							"sourceUnit": 2477,
							"src": "141:35:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2011,
										"name": "AccessControl",
										"nameLocations": [
											"198:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2476,
										"src": "198:13:9"
									},
									"id": 2012,
									"nodeType": "InheritanceSpecifier",
									"src": "198:13:9"
								},
								{
									"baseName": {
										"id": 2013,
										"name": "ERC20",
										"nameLocations": [
											"213:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 586,
										"src": "213:5:9"
									},
									"id": 2014,
									"nodeType": "InheritanceSpecifier",
									"src": "213:5:9"
								},
								{
									"baseName": {
										"id": 2015,
										"name": "IsHYDT",
										"nameLocations": [
											"220:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 805,
										"src": "220:6:9"
									},
									"id": 2016,
									"nodeType": "InheritanceSpecifier",
									"src": "220:6:9"
								}
							],
							"canonicalName": "sHYDT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2160,
							"linearizedBaseContracts": [
								2160,
								805,
								586,
								774,
								749,
								2476,
								2522,
								671,
								659,
								2498
							],
							"name": "sHYDT",
							"nameLocation": "189:5:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "774237fc",
									"id": 2024,
									"mutability": "constant",
									"name": "CALLER_ROLE",
									"nameLocation": "311:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "287:75:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2017,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "287:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "43616c6c6572",
														"id": 2021,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "352:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c",
															"typeString": "literal_string \"Caller\""
														},
														"value": "Caller"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_stringliteral_19efed7511dad497f336fbaa05740ad432d42bb8e64228479f57ef6936bb2a9c",
															"typeString": "literal_string \"Caller\""
														}
													],
													"expression": {
														"id": 2019,
														"name": "abi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967295,
														"src": "335:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_abi",
															"typeString": "abi"
														}
													},
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "339:12:9",
													"memberName": "encodePacked",
													"nodeType": "MemberAccess",
													"src": "335:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
														"typeString": "function () pure returns (bytes memory)"
													}
												},
												"id": 2022,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "335:26:9",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											],
											"id": 2018,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "325:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2023,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "325:37:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2025,
										"nodeType": "StructuredDocumentation",
										"src": "371:34:9",
										"text": "@dev Initialization variables."
									},
									"id": 2027,
									"mutability": "immutable",
									"name": "_initializer",
									"nameLocation": "437:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "411:38:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2026,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "411:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2029,
									"mutability": "mutable",
									"name": "_isInitialized",
									"nameLocation": "469:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2160,
									"src": "456:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2028,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "456:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "623:46:9",
										"statements": [
											{
												"expression": {
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2036,
														"name": "_initializer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2027,
														"src": "634:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2037,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2488,
															"src": "649:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "649:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "634:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2040,
												"nodeType": "ExpressionStatement",
												"src": "634:27:9"
											}
										]
									},
									"id": 2042,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5374616b65642048696768205969656c6420446f6c6c617220537461626c6520546f6b656e",
													"id": 2032,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "568:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4be56b54bb0483f8c7decbfd8ea4b51bf9eda8402236441b22287bf2eafd554e",
														"typeString": "literal_string \"Staked High Yield Dollar Stable Token\""
													},
													"value": "Staked High Yield Dollar Stable Token"
												},
												{
													"hexValue": "7348594454",
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "609:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_958fbd4e363c16c1fd3e12fe9d14a639e124908a336d71558763f9c093175cdf",
														"typeString": "literal_string \"sHYDT\""
													},
													"value": "sHYDT"
												}
											],
											"id": 2034,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2031,
												"name": "ERC20",
												"nameLocations": [
													"562:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 586,
												"src": "562:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "562:55:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "550:2:9"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:9"
									},
									"scope": 2160,
									"src": "539:130:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2081,
										"nodeType": "Block",
										"src": "965:430:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2049,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2488,
																	"src": "984:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "984:12:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2051,
																"name": "_initializer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2027,
																"src": "1000:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "984:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73485944543a2063616c6c6572206973206e6f742074686520696e697469616c697a6572",
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1014:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ec930119754818241d6742436d8ca96aa0ca9397c9e8f30883c216517373182",
																"typeString": "literal_string \"sHYDT: caller is not the initializer\""
															},
															"value": "sHYDT: caller is not the initializer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ec930119754818241d6742436d8ca96aa0ca9397c9e8f30883c216517373182",
																"typeString": "literal_string \"sHYDT: caller is not the initializer\""
															}
														],
														"id": 2048,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "976:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "976:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2055,
												"nodeType": "ExpressionStatement",
												"src": "976:77:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2057,
																"name": "earn_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "1167:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1184:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1176:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2058,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1176:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1176:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1167:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73485944543a20696e76616c6964204561726e2061646472657373",
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1188:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55bfebf6ab60b506ad11a3d414e85d38f1468769403f48d0b0f18406d1526efd",
																"typeString": "literal_string \"sHYDT: invalid Earn address\""
															},
															"value": "sHYDT: invalid Earn address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55bfebf6ab60b506ad11a3d414e85d38f1468769403f48d0b0f18406d1526efd",
																"typeString": "literal_string \"sHYDT: invalid Earn address\""
															}
														],
														"id": 2056,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1159:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1159:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2065,
												"nodeType": "ExpressionStatement",
												"src": "1159:59:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2067,
															"name": "CALLER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "1240:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2068,
															"name": "earn_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2045,
															"src": "1253:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2066,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2444,
														"src": "1229:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1229:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2070,
												"nodeType": "ExpressionStatement",
												"src": "1229:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2072,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2188,
															"src": "1322:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2073,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2488,
																"src": "1342:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1342:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2071,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2444,
														"src": "1311:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1311:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2076,
												"nodeType": "ExpressionStatement",
												"src": "1311:44:9"
											},
											{
												"expression": {
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2077,
														"name": "_isInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2029,
														"src": "1366:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2078,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1383:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1366:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2080,
												"nodeType": "ExpressionStatement",
												"src": "1366:21:9"
											}
										]
									},
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "723:192:9",
										"text": " @notice Initializes external dependencies and state variables.\n @dev This function can only be called once.\n @param earn_ The address of the `Earn` contract."
									},
									"functionSelector": "c4d66de8",
									"id": 2082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "930:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "earn_",
												"nameLocation": "949:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "941:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:15:9"
									},
									"returnParameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "965:0:9"
									},
									"scope": 2160,
									"src": "921:474:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										788
									],
									"body": {
										"id": 2103,
										"nodeType": "Block",
										"src": "1683:58:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2097,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "1700:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2098,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "1704:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2096,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1694:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1694:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2100,
												"nodeType": "ExpressionStatement",
												"src": "1694:17:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1729:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2095,
												"id": 2102,
												"nodeType": "Return",
												"src": "1722:11:9"
											}
										]
									},
									"documentation": {
										"id": 2083,
										"nodeType": "StructuredDocumentation",
										"src": "1448:132:9",
										"text": " @dev See {ERC20-_mint}.\n Requirements:\n - the caller must have the `Caller` role."
									},
									"functionSelector": "40c10f19",
									"id": 2104,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2091,
													"name": "CALLER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2024,
													"src": "1655:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2092,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2090,
												"name": "onlyRole",
												"nameLocations": [
													"1646:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2199,
												"src": "1646:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1646:21:9"
										}
									],
									"name": "mint",
									"nameLocation": "1595:4:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2089,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1637:8:9"
									},
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1608:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "1600:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1600:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1620:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "1612:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1599:28:9"
									},
									"returnParameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "1677:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2093,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1677:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1676:6:9"
									},
									"scope": 2160,
									"src": "1586:155:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										795
									],
									"body": {
										"id": 2125,
										"nodeType": "Block",
										"src": "1950:100:9",
										"statements": [
											{
												"assignments": [
													2114
												],
												"declarations": [
													{
														"constant": false,
														"id": 2114,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "1969:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 2125,
														"src": "1961:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2113,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1961:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2117,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2115,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2488,
														"src": "1977:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1977:12:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1961:28:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2119,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2114,
															"src": "2006:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2120,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "2013:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2118,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "2000:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2122,
												"nodeType": "ExpressionStatement",
												"src": "2000:20:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2038:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2112,
												"id": 2124,
												"nodeType": "Return",
												"src": "2031:11:9"
											}
										]
									},
									"documentation": {
										"id": 2105,
										"nodeType": "StructuredDocumentation",
										"src": "1749:132:9",
										"text": " @dev See {ERC20-_burn}.\n Requirements:\n - the caller must have the `Caller` role."
									},
									"functionSelector": "42966c68",
									"id": 2126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1896:4:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2109,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1926:8:9"
									},
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1909:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "1901:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1901:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:16:9"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "1944:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1944:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:6:9"
									},
									"scope": 2160,
									"src": "1887:163:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										804
									],
									"body": {
										"id": 2158,
										"nodeType": "Block",
										"src": "2946:150:9",
										"statements": [
											{
												"assignments": [
													2141
												],
												"declarations": [
													{
														"constant": false,
														"id": 2141,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "2965:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2158,
														"src": "2957:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2140,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2957:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2144,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2142,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2488,
														"src": "2975:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2975:12:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2957:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2146,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "3014:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2147,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2141,
															"src": "3020:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2148,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2131,
															"src": "3029:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2145,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "2998:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2998:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2150,
												"nodeType": "ExpressionStatement",
												"src": "2998:38:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2152,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "3053:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2153,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2131,
															"src": "3059:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2151,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "3047:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3047:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2155,
												"nodeType": "ExpressionStatement",
												"src": "3047:19:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3084:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2139,
												"id": 2157,
												"nodeType": "Return",
												"src": "3077:11:9"
											}
										]
									},
									"documentation": {
										"id": 2127,
										"nodeType": "StructuredDocumentation",
										"src": "2058:779:9",
										"text": " @dev Destorys `amount` tokens from `from` using the allowance\n mechanism. `amount` is then deducted from the caller's allowance.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - the caller must have the `Caller` role.\n - `from` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 2159,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2135,
													"name": "CALLER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2024,
													"src": "2918:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2136,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2134,
												"name": "onlyRole",
												"nameLocations": [
													"2909:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2199,
												"src": "2909:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2909:21:9"
										}
									],
									"name": "burnFrom",
									"nameLocation": "2852:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2133,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2900:8:9"
									},
									"parameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2869:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "2861:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2883:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "2875:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2875:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2860:30:9"
									},
									"returnParameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "2940:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2940:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:6:9"
									},
									"scope": 2160,
									"src": "2843:253:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2161,
							"src": "180:2919:9",
							"usedErrors": []
						}
					],
					"src": "41:3058:9"
				},
				"id": 9
			},
			"src/utils/AccessControl.sol": {
				"ast": {
					"absolutePath": "src/utils/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							2476
						],
						"Context": [
							2498
						],
						"ERC165": [
							2522
						],
						"IAccessControl": [
							659
						],
						"IERC165": [
							671
						],
						"Math": [
							1671
						],
						"SignedMath": [
							1776
						],
						"Strings": [
							2005
						]
					},
					"id": 2477,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "111:23:10"
						},
						{
							"absolutePath": "src/interfaces/IAccessControl.sol",
							"file": "../interfaces/IAccessControl.sol",
							"id": 2163,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2477,
							"sourceUnit": 660,
							"src": "138:42:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/utils/Context.sol",
							"file": "./Context.sol",
							"id": 2164,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2477,
							"sourceUnit": 2499,
							"src": "182:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/libraries/Strings.sol",
							"file": "../libraries/Strings.sol",
							"id": 2165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2477,
							"sourceUnit": 2006,
							"src": "207:34:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/utils/ERC165.sol",
							"file": "./ERC165.sol",
							"id": 2166,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2477,
							"sourceUnit": 2523,
							"src": "243:22:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2168,
										"name": "Context",
										"nameLocations": [
											"1893:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2498,
										"src": "1893:7:10"
									},
									"id": 2169,
									"nodeType": "InheritanceSpecifier",
									"src": "1893:7:10"
								},
								{
									"baseName": {
										"id": 2170,
										"name": "IAccessControl",
										"nameLocations": [
											"1902:14:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 659,
										"src": "1902:14:10"
									},
									"id": 2171,
									"nodeType": "InheritanceSpecifier",
									"src": "1902:14:10"
								},
								{
									"baseName": {
										"id": 2172,
										"name": "ERC165",
										"nameLocations": [
											"1918:6:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2522,
										"src": "1918:6:10"
									},
									"id": 2173,
									"nodeType": "InheritanceSpecifier",
									"src": "1918:6:10"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2167,
								"nodeType": "StructuredDocumentation",
								"src": "269:1587:10",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 2476,
							"linearizedBaseContracts": [
								2476,
								2522,
								671,
								659,
								2498
							],
							"name": "AccessControl",
							"nameLocation": "1876:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 2180,
									"members": [
										{
											"constant": false,
											"id": 2177,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1984:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 2180,
											"src": "1959:32:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 2176,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 2174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1967:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1959:24:10",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2179,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2010:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 2180,
											"src": "2002:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2178,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2002:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1939:8:10",
									"nodeType": "StructDefinition",
									"scope": 2476,
									"src": "1932:95:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2185,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2072:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 2476,
									"src": "2035:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2180_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 2184,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2181,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2043:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2035:28:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2180_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2183,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2182,
												"name": "RoleData",
												"nameLocations": [
													"2054:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2180,
												"src": "2054:8:10"
											},
											"referencedDeclaration": 2180,
											"src": "2054:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$2180_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 2188,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2111:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 2476,
									"src": "2087:49:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2186,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2087:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 2187,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2132:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2198,
										"nodeType": "Block",
										"src": "2567:47:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2194,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "2589:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2193,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2253,
															2292
														],
														"referencedDeclaration": 2253,
														"src": "2578:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2578:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2196,
												"nodeType": "ExpressionStatement",
												"src": "2578:16:10"
											},
											{
												"id": 2197,
												"nodeType": "PlaceholderStatement",
												"src": "2605:1:10"
											}
										]
									},
									"documentation": {
										"id": 2189,
										"nodeType": "StructuredDocumentation",
										"src": "2145:384:10",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 2199,
									"name": "onlyRole",
									"nameLocation": "2544:8:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2561:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "2553:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2190,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2553:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2552:14:10"
									},
									"src": "2535:79:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2521
									],
									"body": {
										"id": 2220,
										"nodeType": "Block",
										"src": "2777:113:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2208,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2202,
															"src": "2795:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2210,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "2815:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$659_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$659_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 2209,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2810:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2810:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$659",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2831:11:10",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2810:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2795:47:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 2216,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2202,
																"src": "2870:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2214,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2846:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$2476_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:17:10",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2521,
															"src": "2846:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2846:36:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2795:87:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2207,
												"id": 2219,
												"nodeType": "Return",
												"src": "2788:94:10"
											}
										]
									},
									"documentation": {
										"id": 2200,
										"nodeType": "StructuredDocumentation",
										"src": "2622:58:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2695:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2204,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2753:8:10"
									},
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2720:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "2713:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2201,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2713:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:20:10"
									},
									"returnParameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "2771:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:10"
									},
									"scope": 2476,
									"src": "2686:204:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										626
									],
									"body": {
										"id": 2239,
										"nodeType": "Block",
										"src": "3074:55:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 2232,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2185,
																"src": "3092:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2180_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 2234,
															"indexExpression": {
																"id": 2233,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "3099:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3092:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$2180_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 2235,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3105:7:10",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2177,
														"src": "3092:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2237,
													"indexExpression": {
														"id": 2236,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2226,
														"src": "3113:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3092:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2231,
												"id": 2238,
												"nodeType": "Return",
												"src": "3085:36:10"
											}
										]
									},
									"documentation": {
										"id": 2222,
										"nodeType": "StructuredDocumentation",
										"src": "2898:78:10",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 2240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2991:7:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2228,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3050:8:10"
									},
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3007:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "2999:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2223,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2999:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3021:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "3013:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3013:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2998:31:10"
									},
									"returnParameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "3068:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3068:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3067:6:10"
									},
									"scope": 2476,
									"src": "2982:147:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2252,
										"nodeType": "Block",
										"src": "3489:49:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2247,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "3511:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2248,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2488,
																"src": "3517:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3517:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2246,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2253,
															2292
														],
														"referencedDeclaration": 2292,
														"src": "3500:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 2250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3500:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2251,
												"nodeType": "ExpressionStatement",
												"src": "3500:30:10"
											}
										]
									},
									"documentation": {
										"id": 2241,
										"nodeType": "StructuredDocumentation",
										"src": "3137:290:10",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 2253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3442:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3461:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2253,
												"src": "3453:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3452:14:10"
									},
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3489:0:10"
									},
									"scope": 2476,
									"src": "3433:105:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2291,
										"nodeType": "Block",
										"src": "3901:419:10",
										"statements": [
											{
												"condition": {
													"id": 2265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3916:23:10",
													"subExpression": {
														"arguments": [
															{
																"id": 2262,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2256,
																"src": "3925:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 2263,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2258,
																"src": "3931:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2261,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2240,
															"src": "3917:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 2264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3917:22:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2290,
												"nodeType": "IfStatement",
												"src": "3912:401:10",
												"trueBody": {
													"id": 2289,
													"nodeType": "Block",
													"src": "3941:372:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 2271,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4053:25:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 2274,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2258,
																								"src": "4125:7:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 2272,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2005,
																								"src": "4105:7:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$2005_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 2273,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4113:11:10",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1979,
																							"src": "4105:19:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 2275,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4105:28:10",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 2276,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4160:19:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 2281,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2256,
																										"src": "4234:4:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 2280,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4226:7:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 2279,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4226:7:10",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2282,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4226:13:10",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 2283,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4241:2:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 2277,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2005,
																								"src": "4206:7:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$2005_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 2278,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4214:11:10",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1959,
																							"src": "4206:19:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 2284,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4206:38:10",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 2269,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4010:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 2270,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4014:12:10",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4010:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 2285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4010:257:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 2268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3981:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 2267,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3981:6:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3981:305:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2266,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3956:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3956:345:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2288,
															"nodeType": "ExpressionStatement",
															"src": "3956:345:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2254,
										"nodeType": "StructuredDocumentation",
										"src": "3546:276:10",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 2292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3837:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3856:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "3848:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2255,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3870:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "3862:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3862:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:31:10"
									},
									"returnParameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3901:0:10"
									},
									"scope": 2476,
									"src": "3828:492:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										634
									],
									"body": {
										"id": 2306,
										"nodeType": "Block",
										"src": "4592:48:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 2301,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2185,
															"src": "4610:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2180_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 2303,
														"indexExpression": {
															"id": 2302,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2295,
															"src": "4617:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4610:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$2180_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 2304,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4623:9:10",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2179,
													"src": "4610:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2300,
												"id": 2305,
												"nodeType": "Return",
												"src": "4603:29:10"
											}
										]
									},
									"documentation": {
										"id": 2293,
										"nodeType": "StructuredDocumentation",
										"src": "4328:175:10",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 2307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4518:12:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2297,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4565:8:10"
									},
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4539:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "4531:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2294,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4531:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4530:14:10"
									},
									"returnParameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "4583:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2298,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4583:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4582:9:10"
									},
									"scope": 2476,
									"src": "4509:131:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										642
									],
									"body": {
										"id": 2326,
										"nodeType": "Block",
										"src": "5053:44:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2322,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "5075:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2323,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2312,
															"src": "5081:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2321,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2444,
														"src": "5064:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5064:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2325,
												"nodeType": "ExpressionStatement",
												"src": "5064:25:10"
											}
										]
									},
									"documentation": {
										"id": 2308,
										"nodeType": "StructuredDocumentation",
										"src": "4648:296:10",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 2327,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 2317,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "5046:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2316,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "5033:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 2318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5033:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2315,
												"name": "onlyRole",
												"nameLocations": [
													"5024:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2199,
												"src": "5024:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5024:28:10"
										}
									],
									"name": "grantRole",
									"nameLocation": "4959:9:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2314,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5015:8:10"
									},
									"parameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4977:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "4969:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2309,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4969:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4991:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "4983:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:31:10"
									},
									"returnParameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5053:0:10"
									},
									"scope": 2476,
									"src": "4950:147:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										650
									],
									"body": {
										"id": 2346,
										"nodeType": "Block",
										"src": "5494:45:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2342,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2330,
															"src": "5517:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2343,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2332,
															"src": "5523:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2341,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2475,
														"src": "5505:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2345,
												"nodeType": "ExpressionStatement",
												"src": "5505:26:10"
											}
										]
									},
									"documentation": {
										"id": 2328,
										"nodeType": "StructuredDocumentation",
										"src": "5105:279:10",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 2347,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 2337,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2330,
															"src": "5487:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2336,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "5474:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 2338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5474:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2339,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2335,
												"name": "onlyRole",
												"nameLocations": [
													"5465:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2199,
												"src": "5465:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5465:28:10"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5399:10:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2334,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5456:8:10"
									},
									"parameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5418:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "5410:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5410:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5432:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "5424:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5424:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5409:31:10"
									},
									"returnParameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5494:0:10"
									},
									"scope": 2476,
									"src": "5390:149:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										658
									],
									"body": {
										"id": 2369,
										"nodeType": "Block",
										"src": "6171:141:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2357,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2352,
																"src": "6190:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2358,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2488,
																	"src": "6201:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6201:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6190:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6215:49:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 2356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6182:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6182:83:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2363,
												"nodeType": "ExpressionStatement",
												"src": "6182:83:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2365,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2350,
															"src": "6290:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2366,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "6296:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2364,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2475,
														"src": "6278:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6278:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2368,
												"nodeType": "ExpressionStatement",
												"src": "6278:26:10"
											}
										]
									},
									"documentation": {
										"id": 2348,
										"nodeType": "StructuredDocumentation",
										"src": "5547:541:10",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 2370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6103:12:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2354,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6162:8:10"
									},
									"parameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6124:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "6116:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2349,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6116:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6138:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "6130:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6130:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6115:31:10"
									},
									"returnParameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6171:0:10"
									},
									"scope": 2476,
									"src": "6094:218:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2383,
										"nodeType": "Block",
										"src": "7087:44:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2379,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "7109:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2380,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2375,
															"src": "7115:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2378,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2444,
														"src": "7098:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7098:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2382,
												"nodeType": "ExpressionStatement",
												"src": "7098:25:10"
											}
										]
									},
									"documentation": {
										"id": 2371,
										"nodeType": "StructuredDocumentation",
										"src": "6320:693:10",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 2384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "7028:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7047:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "7039:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7039:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7061:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "7053:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7053:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7038:31:10"
									},
									"returnParameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7087:0:10"
									},
									"scope": 2476,
									"src": "7019:112:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2411,
										"nodeType": "Block",
										"src": "7336:178:10",
										"statements": [
											{
												"assignments": [
													2393
												],
												"declarations": [
													{
														"constant": false,
														"id": 2393,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7355:17:10",
														"nodeType": "VariableDeclaration",
														"scope": 2411,
														"src": "7347:25:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2392,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7347:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2397,
												"initialValue": {
													"arguments": [
														{
															"id": 2395,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2387,
															"src": "7388:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2394,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "7375:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7375:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7347:46:10"
											},
											{
												"expression": {
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2398,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2185,
																"src": "7404:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2180_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 2400,
															"indexExpression": {
																"id": 2399,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2387,
																"src": "7411:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7404:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$2180_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 2401,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7417:9:10",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2179,
														"src": "7404:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2402,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2389,
														"src": "7429:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7404:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2404,
												"nodeType": "ExpressionStatement",
												"src": "7404:34:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2406,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2387,
															"src": "7471:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2407,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2393,
															"src": "7477:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2408,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2389,
															"src": "7496:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2405,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "7454:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 2409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7454:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2410,
												"nodeType": "EmitStatement",
												"src": "7449:57:10"
											}
										]
									},
									"documentation": {
										"id": 2385,
										"nodeType": "StructuredDocumentation",
										"src": "7139:118:10",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 2412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7272:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7294:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "7286:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2386,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7286:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7308:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "7300:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2388,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7300:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7285:33:10"
									},
									"returnParameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7336:0:10"
									},
									"scope": 2476,
									"src": "7263:251:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2443,
										"nodeType": "Block",
										"src": "7759:170:10",
										"statements": [
											{
												"condition": {
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7774:23:10",
													"subExpression": {
														"arguments": [
															{
																"id": 2421,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2415,
																"src": "7783:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 2422,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2417,
																"src": "7789:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2420,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2240,
															"src": "7775:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 2423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7775:22:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2442,
												"nodeType": "IfStatement",
												"src": "7770:152:10",
												"trueBody": {
													"id": 2441,
													"nodeType": "Block",
													"src": "7799:123:10",
													"statements": [
														{
															"expression": {
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2425,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2185,
																				"src": "7814:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2180_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 2427,
																			"indexExpression": {
																				"id": 2426,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2415,
																				"src": "7821:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7814:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$2180_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 2428,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7827:7:10",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2177,
																		"src": "7814:20:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2430,
																	"indexExpression": {
																		"id": 2429,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2417,
																		"src": "7835:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7814:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7846:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7814:36:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2433,
															"nodeType": "ExpressionStatement",
															"src": "7814:36:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2435,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2415,
																		"src": "7882:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2436,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2417,
																		"src": "7888:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2437,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2488,
																			"src": "7897:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7897:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2434,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "7870:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7870:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2440,
															"nodeType": "EmitStatement",
															"src": "7865:45:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2413,
										"nodeType": "StructuredDocumentation",
										"src": "7522:163:10",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 2444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7700:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7719:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "7711:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2414,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7711:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7733:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "7725:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7725:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7710:31:10"
									},
									"returnParameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7759:0:10"
									},
									"scope": 2476,
									"src": "7691:238:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2474,
										"nodeType": "Block",
										"src": "8178:170:10",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 2453,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2447,
															"src": "8201:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2454,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2449,
															"src": "8207:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2452,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2240,
														"src": "8193:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 2455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8193:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2473,
												"nodeType": "IfStatement",
												"src": "8189:152:10",
												"trueBody": {
													"id": 2472,
													"nodeType": "Block",
													"src": "8217:124:10",
													"statements": [
														{
															"expression": {
																"id": 2463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2456,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2185,
																				"src": "8232:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$2180_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 2458,
																			"indexExpression": {
																				"id": 2457,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2447,
																				"src": "8239:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8232:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$2180_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 2459,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8245:7:10",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2177,
																		"src": "8232:20:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2461,
																	"indexExpression": {
																		"id": 2460,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2449,
																		"src": "8253:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8232:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 2462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8264:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8232:37:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2464,
															"nodeType": "ExpressionStatement",
															"src": "8232:37:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2466,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2447,
																		"src": "8301:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2467,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2449,
																		"src": "8307:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2468,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2488,
																			"src": "8316:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8316:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2465,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "8289:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 2470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8289:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2471,
															"nodeType": "EmitStatement",
															"src": "8284:45:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2445,
										"nodeType": "StructuredDocumentation",
										"src": "7937:166:10",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 2475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "8118:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8138:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "8130:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2446,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8130:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8152:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "8144:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8144:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8129:31:10"
									},
									"returnParameters": {
										"id": 2451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8178:0:10"
									},
									"scope": 2476,
									"src": "8109:239:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2477,
							"src": "1858:6493:10",
							"usedErrors": []
						}
					],
					"src": "111:8240:10"
				},
				"id": 10
			},
			"src/utils/Context.sol": {
				"ast": {
					"absolutePath": "src/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2498
						]
					},
					"id": 2499,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2478,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2479,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2498,
							"linearizedBaseContracts": [
								2498
							],
							"name": "Context",
							"nameLocation": "641:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2487,
										"nodeType": "Block",
										"src": "718:36:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2484,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "740:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2483,
												"id": 2486,
												"nodeType": "Return",
												"src": "729:17:11"
											}
										]
									},
									"id": 2488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:11"
									},
									"returnParameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "709:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:11"
									},
									"scope": 2498,
									"src": "656:98:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2496,
										"nodeType": "Block",
										"src": "829:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2493,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "851:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2492,
												"id": 2495,
												"nodeType": "Return",
												"src": "840:15:11"
											}
										]
									},
									"id": 2497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:11"
									},
									"returnParameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "813:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:11"
									},
									"scope": 2498,
									"src": "762:101:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2499,
							"src": "623:243:11",
							"usedErrors": []
						}
					],
					"src": "89:777:11"
				},
				"id": 11
			},
			"src/utils/ERC165.sol": {
				"ast": {
					"absolutePath": "src/utils/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2522
						],
						"IERC165": [
							671
						]
					},
					"id": 2523,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2500,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:12"
						},
						{
							"absolutePath": "src/interfaces/IERC165.sol",
							"file": "../interfaces/IERC165.sol",
							"id": 2501,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2523,
							"sourceUnit": 672,
							"src": "129:35:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2503,
										"name": "IERC165",
										"nameLocations": [
											"787:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 671,
										"src": "787:7:12"
									},
									"id": 2504,
									"nodeType": "InheritanceSpecifier",
									"src": "787:7:12"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2502,
								"nodeType": "StructuredDocumentation",
								"src": "168:589:12",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2522,
							"linearizedBaseContracts": [
								2522,
								671
							],
							"name": "ERC165",
							"nameLocation": "777:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										670
									],
									"body": {
										"id": 2520,
										"nodeType": "Block",
										"src": "957:66:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2513,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2507,
														"src": "975:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2515,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "995:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$671_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$671_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2514,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "990:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "990:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$671",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2517,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1004:11:12",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "990:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "975:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2512,
												"id": 2519,
												"nodeType": "Return",
												"src": "968:47:12"
											}
										]
									},
									"documentation": {
										"id": 2505,
										"nodeType": "StructuredDocumentation",
										"src": "802:58:12",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "875:17:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2509,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "933:8:12"
									},
									"parameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "900:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2521,
												"src": "893:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2506,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "893:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "892:20:12"
									},
									"returnParameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2521,
												"src": "951:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2510,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "951:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:6:12"
									},
									"scope": 2522,
									"src": "866:157:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2523,
							"src": "759:267:12",
							"usedErrors": []
						}
					],
					"src": "102:924:12"
				},
				"id": 12
			}
		}
	}
}